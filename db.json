{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1},{"_id":"themes/next/source/js/ua-parser.min.js","path":"js/ua-parser.min.js","modified":1},{"_id":"themes/next/source/js/search-toggle.js","path":"js/search-toggle.js","modified":1},{"_id":"themes/next/source/js/motion_global.js","path":"js/motion_global.js","modified":1},{"_id":"themes/next/source/js/motion_fallback.js","path":"js/motion_fallback.js","modified":1},{"_id":"themes/next/source/js/lazyload.js","path":"js/lazyload.js","modified":1},{"_id":"themes/next/source/js/hook-duoshuo.js","path":"js/hook-duoshuo.js","modified":1},{"_id":"themes/next/source/js/helpers.js","path":"js/helpers.js","modified":1},{"_id":"themes/next/source/js/fancy-box.js","path":"js/fancy-box.js","modified":1},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","path":"images/bkdefault_avatar.jpg","modified":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","path":"fonts/icon-linecons/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","path":"fonts/icon-linecons/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","path":"fonts/icon-linecons/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","path":"fonts/icon-linecons/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","path":"fonts/icon-icomoon/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","path":"fonts/icon-icomoon/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","path":"fonts/icon-icomoon/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","path":"fonts/icon-icomoon/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","path":"fonts/icon-fifty-shades/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","path":"fonts/icon-fifty-shades/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","path":"fonts/icon-fifty-shades/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","path":"fonts/icon-fifty-shades/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","path":"fonts/icon-feather/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","path":"fonts/icon-feather/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","path":"fonts/icon-feather/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","path":"fonts/icon-feather/icomoon.eot","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","path":"fonts/icon-default/icomoon.woff","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","path":"fonts/icon-default/icomoon.ttf","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","path":"fonts/icon-default/icomoon.svg","modified":1},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","path":"fonts/icon-default/icomoon.eot","modified":1},{"_id":"themes/next/source/favicon.ico","path":"favicon.ico","modified":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1},{"_id":"themes/next/source/404.html","path":"404.html","modified":1}],"Cache":[{"_id":"source/CNAME","shasum":"60eae165881188b967de288d8d98b05420883e49","modified":1438522335000},{"_id":"source/_posts/AdFund.md","shasum":"f45ff56f5716f6ddf4b01f227d9d7afb5c045f8c","modified":1438691996000},{"_id":"source/_posts/Android-Iconics.md","shasum":"e7e17d45b95ae619bd6f68b6e7ffd429b4ffe5ff","modified":1438402397000},{"_id":"source/_posts/Android-Photograph_Album.md","shasum":"4933f33f8cbfab0bf0fd6d48c3a46f872cd596ee","modified":1438402397000},{"_id":"source/_posts/Android-Studio-Genymotion.md","shasum":"a284a461874c7dfe9ef4caf82f38aabf9cb032ea","modified":1438402397000},{"_id":"source/_posts/Android-Studio-shortcut-keys-arranged-like-Eclipse.md","shasum":"c566725d14ef0419ddd27afccedb2cb1435ac5d4","modified":1438402397000},{"_id":"source/_posts/AndroidSamples.md","shasum":"f4af1cabce94938f179fc4051294132f97a395f8","modified":1438402397000},{"_id":"source/_posts/AndroidDeveloperSurvey.md","shasum":"4972c365f9b89b8671865e9332c1a7ecf02f0fd7","modified":1438402397000},{"_id":"source/_posts/AppInfo.md","shasum":"2deaeef50a08debcd4a6244e68cc71dd33f16341","modified":1438402397000},{"_id":"source/_posts/CanvasToPhoto.md","shasum":"e8cbe84d000a7577d205ad38b3586a9a30187b6b","modified":1438402397000},{"_id":"source/_posts/Context-Activity.md","shasum":"28fcd1836c13275d1a619f18acbb4e3a7623831d","modified":1438402397000},{"_id":"source/_posts/CreatingCustomViews.md","shasum":"bc8e7dd0d920297f3d0302d217a3b911bb8902ee","modified":1438402397000},{"_id":"source/_posts/CustomToast.md","shasum":"bc8b087e900918c17d07b7f61fd596d7df8beb61","modified":1438402397000},{"_id":"source/_posts/Defining_Custom_Animations.md","shasum":"f4586a9ca7e3e38cd2436297fe46a4ba40d7bbd9","modified":1438402397000},{"_id":"source/_posts/Export-aborted-because-fatal-lint-errors-were-found.md","shasum":"9c1abc006b7135fa3abff7039de6934b55c50c09","modified":1438402397000},{"_id":"source/_posts/LayoutParams.md","shasum":"c7773bc605912b587541644f1bfc9902a9ba0e1a","modified":1438402397000},{"_id":"source/_posts/LayoutInflater.md","shasum":"f1ed8bb6e700d43ebcc78405356df7e5eb9d6c91","modified":1438402397000},{"_id":"source/_posts/LoadMoreListView.md","shasum":"518fe93e12fb6a54097b9a4e300b749e1aa9c4b3","modified":1438402397000},{"_id":"source/_posts/PullLoadMoreRecyclerView.md","shasum":"081d527333db47c9f772a3844929d744d8bfc0ec","modified":1438402397000},{"_id":"source/_posts/Palette.md","shasum":"d5f665ec312bd875a5f20ec064f31c7c4b0af9e2","modified":1438691996000},{"_id":"source/_posts/ResResources.md","shasum":"ab093861ceed4c0c2899074defa3b934f05bbd76","modified":1438402397000},{"_id":"source/_posts/SaveImageToGallery.md","shasum":"73eaf18b317c24017da478e3ae459e0991eb9a2c","modified":1438402397000},{"_id":"source/_posts/SavingFiles.md","shasum":"d8c9ebcc97a84d36f66be5bdc33d518756cea12e","modified":1438402397000},{"_id":"source/_posts/Split.md","shasum":"ca6f6a53569f59502292593bdbddcddec747ffb0","modified":1438402397000},{"_id":"source/_posts/SearchView.md","shasum":"3e54ebc3b3bbdc6015969afa9d3f20cd341d7c2d","modified":1438402397000},{"_id":"source/_posts/SqliteSample.md","shasum":"3846ad7e129ab15d9be69796e55ed6514c1b6b21","modified":1438402397000},{"_id":"source/_posts/TabLayout.md","shasum":"650ac4d01731cda77a166dea3da45f958bfa9424","modified":1438696077000},{"_id":"source/_posts/TimeUtil.md","shasum":"8aa48f1ca233a70cb27246ded50bb28cc164f799","modified":1438402397000},{"_id":"source/_posts/TodayEmotion.md","shasum":"611ae2c59212129d8a18cefcdb157f8f594dc2ed","modified":1438691996000},{"_id":"source/_posts/android-developers-should-keep-the-following-characteristics.md","shasum":"eb3d9a88e0994ee4aab729e2b237459094a98140","modified":1438402397000},{"_id":"source/_posts/android-samples-download.md","shasum":"2438d94b88a81cf90f70a45907ab1da183d37ee0","modified":1438402397000},{"_id":"source/_posts/android-studio-share-to-svn.md","shasum":"de515ba7b37c96b5099f025d8f011f451ce0f58a","modified":1438402397000},{"_id":"source/_posts/build-blog-by-hexo.md","shasum":"7ae6994b9deb4b0e14a1492bed2072ce07ba0e44","modified":1438522223000},{"_id":"source/_posts/build-blog.md","shasum":"4f9f475d03098c19deb48b2197bb6d17ec6ff8f4","modified":1438697115000},{"_id":"source/_posts/change-sdk-path.md","shasum":"726fade2b533a9e9e060cc004bdadaa21c974598","modified":1438402397000},{"_id":"source/_posts/checkPermission.md","shasum":"c03e5b71d27c5fafcf145f999366bc3428649711","modified":1438402397000},{"_id":"source/_posts/company.md","shasum":"1d7ad767be776cd7cb61910dca617aaa3929433f","modified":1438402397000},{"_id":"source/_posts/custom-debug-keystore.md","shasum":"7e0914c2eda8d4768eea230de86812ae17df4efa","modified":1438402397000},{"_id":"source/_posts/fragmentMenu.md","shasum":"bbb5c39a18affec5d80bc5013ff4cbb72161fb81","modified":1438402397000},{"_id":"source/_posts/eclipse-git.md","shasum":"2ea6b96dcfb2e1044f2b48cdac90d6542077a376","modified":1438402397000},{"_id":"source/_posts/hello-hexo.md","shasum":"86dd46bc17f4c9f0b7be3dc9447139b29b861dc9","modified":1438402397000},{"_id":"source/_posts/how-to-prevent-the-APK-program-by-decompile.md","shasum":"bbc6b82859ffffd74f5b75cdc6f0b7fc1c7d6cf8","modified":1438402397000},{"_id":"source/_posts/google.md","shasum":"f2b7e7a0d936dbcbf8b0c8beaccc73085b5d16c6","modified":1438402397000},{"_id":"source/_posts/jarsigner.md","shasum":"b0de795dd360ef3942cd576167383ef0429635fa","modified":1438402397000},{"_id":"source/_posts/listView_item_state.md","shasum":"a577aad1e4a5f8441ca2e367a1eeb0d88a5e8253","modified":1438402397000},{"_id":"source/_posts/java-lang-IllegalStateException-Fragment-not-attached-to-Activity.md","shasum":"160ebf6958f0df63077cd0ff9ff972ae40716f3d","modified":1438402397000},{"_id":"source/_posts/listView.md","shasum":"5558db72647f78f20a3ae81c030089c5d5edd7c9","modified":1438402397000},{"_id":"source/_posts/lock-screen-video.md","shasum":"a38c6fbe8194298e2d913c21491a808844451d3d","modified":1438402397000},{"_id":"source/_posts/methods-SQLite-were-randomly-selected-for-the-N.md","shasum":"4c89be7cc884bf85cd7ec29888f238d8dabcf9dc","modified":1438402397000},{"_id":"source/_posts/mobile-phone-information-acquisition.md","shasum":"9140889530acc094f629656effd98ad433aa1089","modified":1438402397000},{"_id":"source/_posts/mobile.md","shasum":"06e19e6e7d5a000857369324c886a2090e87086a","modified":1438402397000},{"_id":"source/_posts/phone_space.md","shasum":"2dfd4e4aa4b886b137a7152905b4094c8e5abfbd","modified":1438402397000},{"_id":"source/_posts/qiniu-photo-bed.md","shasum":"dfb778dc5ecaf121c11da4bb2b30fcbf47bcdc41","modified":1438402397000},{"_id":"source/_posts/screen-adaptation.md","shasum":"2131b52352d42caa4947e53e0ea7f182b587cb1c","modified":1438402397000},{"_id":"source/_posts/sdk-update.md","shasum":"2450a0493492b3b5b6f9c6b35ebe2b0ccb051993","modified":1438402397000},{"_id":"source/_posts/shape.md","shasum":"63b8ef93bd1f650129a1a2e8f271aea4cb25b3f1","modified":1438402397000},{"_id":"source/_posts/wochat.md","shasum":"61ba8e669677c5dceec03dfaeb673ba48ffb5d23","modified":1438402397000},{"_id":"source/_posts/weiyan.md","shasum":"5da442ed7cdcc14d203c458e0951d15ee4da51dd","modified":1438402397000},{"_id":"source/categories/index.md","shasum":"499cf30f1d2ef9de8001a8d51730215fa4e48699","modified":1438402397000},{"_id":"source/favicon.ico","shasum":"5609a09bdd9a77fc396e2b70ec8b7156fdda9500","modified":1438402397000},{"_id":"source/about/index.md","shasum":"4ec22385de72e671cee7b5108aedece303dbbe55","modified":1438697190000},{"_id":"source/qq/index.md","shasum":"1d749f478597622a4f3fbd294c4a0da19edc8d50","modified":1438691996000},{"_id":"source/tags/index.md","shasum":"18eed98b1ab27bf0f7306bb08ecbbef2be9cbff4","modified":1438402397000},{"_id":"themes/next/source/css/_common/_page/home.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/source/css/_mixins/Mist.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/source/css/_mixins/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/source/css/_mixins/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/source/css/_variables/default.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/source/css/_variables/custom.styl","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1438402397000},{"_id":"themes/next/README.en.md","shasum":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1438402397000},{"_id":"themes/next/README.md","shasum":"6cfb458e3965c0e15db17662884ff1baf33be29f","modified":1438402397000},{"_id":"themes/next/_config.yml","shasum":"fd75ec7ab8da683b5c8ce20ec5b3d1a813e79812","modified":1438694097000},{"_id":"themes/next/bower.json","shasum":"2114bedc25b2c184410ca7f934057eb9698415a3","modified":1438402397000},{"_id":"themes/next/languages/de.yml","shasum":"919e3037a1f43d365fe4912c312001bab5a86352","modified":1438402397000},{"_id":"themes/next/languages/default.yml","shasum":"c458b4fac917eae91583e6fce68b17a762afc270","modified":1438402397000},{"_id":"themes/next/languages/en.yml","shasum":"c458b4fac917eae91583e6fce68b17a762afc270","modified":1438402397000},{"_id":"themes/next/languages/ru.yml","shasum":"a967c96cfa330f888444dfe25d214a3aea7493a8","modified":1438402397000},{"_id":"themes/next/languages/fr-FR.yml","shasum":"0cab37ad006b7f45e90f4cb1944e30661b7e707f","modified":1438402397000},{"_id":"themes/next/languages/zh-hk.yml","shasum":"4a2c28e59c94668df02832562e69126252af6d94","modified":1438402397000},{"_id":"themes/next/languages/zh-Hans.yml","shasum":"9f770faa652da1a704f3b0718df3b28c5a8e391e","modified":1438402397000},{"_id":"themes/next/languages/zh-tw.yml","shasum":"8f1bcb900d838050f00a8ca1a848b44f2c3a2251","modified":1438402397000},{"_id":"themes/next/layout/_layout.swig","shasum":"fd44f7cfaf8318cbcfba115e61070c8d70ad81a6","modified":1438402397000},{"_id":"themes/next/layout/_macro/post-collapse.swig","shasum":"69500673c892ef3645469774777741a9ec1c4a46","modified":1438402397000},{"_id":"themes/next/layout/_macro/post.swig","shasum":"cbbc86787d58db7c201d22b21c1f2eb4058ae394","modified":1438402397000},{"_id":"themes/next/layout/_macro/sidebar.swig","shasum":"30b2338d4d95c65147d46074c6863bdc24343eeb","modified":1438402397000},{"_id":"themes/next/layout/_partials/footer.swig","shasum":"2b8ce152463ee53d981a3f90903dd281326d2dbb","modified":1438411332000},{"_id":"themes/next/layout/_partials/head.swig","shasum":"1af55abf5edce9dded9a3d0c4d6edb719e639e5f","modified":1438402397000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","shasum":"dc4625c6b4248def38fb5ea2590761647f827dd5","modified":1438402397000},{"_id":"themes/next/layout/_partials/pagination.swig","shasum":"591ed052c83d0091e299134c496818a9cdc85726","modified":1438402397000},{"_id":"themes/next/layout/_partials/header.swig","shasum":"50c0079e577c289f15befbd151023f9366f5ee6a","modified":1438402397000},{"_id":"themes/next/layout/_partials/old-browsers.swig","shasum":"3c4d930d34c234725065173780a23673e1c574f5","modified":1438402397000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","shasum":"d0c2ae3caecd69150fb162f0602eac3b877fdc2f","modified":1438402397000},{"_id":"themes/next/layout/_partials/search.swig","shasum":"02187af7cb038c6b83f119366da74dd4ff3b6d7f","modified":1438402397000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","shasum":"a61a7ce13400207a2fa62ed8ee54d8c9a760607a","modified":1438404465000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","shasum":"12684840de632eb16e53ffa863166306a756fd4f","modified":1438402397000},{"_id":"themes/next/layout/_scripts/analytics/baidu-analytics.swig","shasum":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1438402397000},{"_id":"themes/next/layout/_scripts/analytics/google-analytics.swig","shasum":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1438402397000},{"_id":"themes/next/layout/_scripts/analytics.swig","shasum":"dfe81af3057cfe934e6f81ee386e5867853ac0aa","modified":1438402397000},{"_id":"themes/next/layout/_scripts/baidushare.swig","shasum":"640d4dda003f54a0dffa4508fba4d91ac0dcfa6e","modified":1438402397000},{"_id":"themes/next/layout/_scripts/comments/disqus.swig","shasum":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1438402397000},{"_id":"themes/next/layout/_scripts/bootstrap.scrollspy.swig","shasum":"0aad8d447567b683108b274c841c536b2daa176d","modified":1438402397000},{"_id":"themes/next/layout/_scripts/comments/duoshuo.swig","shasum":"e880dce125aba0893a56d49a4d6f923674685dd2","modified":1438402397000},{"_id":"themes/next/layout/_scripts/fancy-box.swig","shasum":"701dfc53d750635de2f08f08d072d6ceb83b636c","modified":1438402397000},{"_id":"themes/next/layout/_scripts/helpers.swig","shasum":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1438402397000},{"_id":"themes/next/layout/_scripts/mathjax.swig","shasum":"e113e497075ac8681c665a7831657901cfa4fb68","modified":1438402397000},{"_id":"themes/next/layout/_scripts/motion.swig","shasum":"40439a4d4c8e8c2218da84ee1e586e11db9837be","modified":1438402397000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","shasum":"3ac70198258ab3c2bceca452864b68cc14a9debf","modified":1438402397000},{"_id":"themes/next/layout/category.swig","shasum":"c386f6ee1cb65bb556be8b0e3d21f40495177f1a","modified":1438402397000},{"_id":"themes/next/layout/archive.swig","shasum":"4fd1959cb47fd5506ca325ffe74247a2b8145d9d","modified":1438402397000},{"_id":"themes/next/layout/index.swig","shasum":"ce54102e8a608f63bb7a2309c0f78ad1c3f66a76","modified":1438402397000},{"_id":"themes/next/layout/post.swig","shasum":"fc7987f60d3c5c1444cd66de3c583bc919e6a0ef","modified":1438402397000},{"_id":"themes/next/layout/page.swig","shasum":"e94f038a85f40b14773023a0cc3635e3fc72a47b","modified":1438402397000},{"_id":"themes/next/layout/tag.swig","shasum":"315b364bfe86ef8497e8d7ea026b0ac978a15deb","modified":1438402397000},{"_id":"themes/next/source/404.html","shasum":"d084c84fd9b5f0c9c677d4c26dd0bfa87643a79a","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/back-to-top.styl","shasum":"dac21141c7893ab9de697a8183d3b3f4eb7f0a5a","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/comments.styl","shasum":"646b512b3b17f346cfcf70d56b49dc466dfb3501","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/buttons.styl","shasum":"0a1730773478d843e123404ab4dae24d7cb0f2b7","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/duoshuo.styl","shasum":"76e8e6f5200e5e6063be6643c1cf340a51af6619","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/gallery.styl","shasum":"6c71d842697155e5eb1cb5da0c17da91d6b0071f","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/pagination.styl","shasum":"88559b13ce94311405b170a0506ded91273beceb","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/jiathis.styl","shasum":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/posts-collapse.styl","shasum":"1d805b9ea9c7adc1ed3da9783d8af9b1c632134d","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/posts-expand.styl","shasum":"3b78be3d1b5f8198a3e4848e8624af650b64b801","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/posts-type.styl","shasum":"f28f00b2acb0df0343e77400bcc8246b40ac046c","modified":1438402397000},{"_id":"themes/next/source/css/_common/_core/base.styl","shasum":"c575ac7f4d20e10d42cc5a106ad3fb060a5d58d4","modified":1438402397000},{"_id":"themes/next/source/css/_common/_component/tag-cloud.styl","shasum":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1438402397000},{"_id":"themes/next/source/css/_common/_core/helpers.styl","shasum":"05150387d08fdbd1b39be35f25afc23a72030a5a","modified":1438402397000},{"_id":"themes/next/source/css/_common/_core/normalize.styl","shasum":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1438402397000},{"_id":"themes/next/source/css/_common/_core/scaffolding.styl","shasum":"7b2af9926abd2a6b7cf2a27c3fd976da9feb5ee1","modified":1438402397000},{"_id":"themes/next/source/css/_common/_fonts/icon-default.styl","shasum":"7251ee3fdca199d8e67a7c17c11c1e93cbfc9f6d","modified":1438402397000},{"_id":"themes/next/source/css/_common/_core/tables.styl","shasum":"00bdeb03cf2c7381bbd9adbb1dd325d47ffe63db","modified":1438402397000},{"_id":"themes/next/source/css/_common/_fonts/icon-feather.styl","shasum":"2fc51921e37f1283294123e9bf65ddeb0f102dc1","modified":1438402397000},{"_id":"themes/next/source/css/_common/_fonts/icon-fifty-shades.styl","shasum":"b6d811cae9e614ca24f6626c0a4908cab0615e41","modified":1438402397000},{"_id":"themes/next/source/css/_common/_fonts/icon-font.styl","shasum":"a1da6ce3d1a1c751b2cc97a87fe22a8d437ba4a4","modified":1438402397000},{"_id":"themes/next/source/css/_common/_fonts/icon-linecons.styl","shasum":"71c999863c04864caa7f86615f769bb413f228dc","modified":1438402397000},{"_id":"themes/next/source/css/_common/_page/archive.styl","shasum":"df9e5a418f6e54abe69c1ab84649be46fb0c51a6","modified":1438402397000},{"_id":"themes/next/source/css/_common/_page/categories.styl","shasum":"6c34f2cf9ad9b9b787007cfca522deeb6b1ae3b7","modified":1438402397000},{"_id":"themes/next/source/css/_common/_page/post-detail.styl","shasum":"70464ceb64c4239af590f99ef319747d3d1f100b","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/body.styl","shasum":"6eaa5d9cb08ecfb2d377a475e541e41fbfe4c1b6","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/footer.styl","shasum":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/header.styl","shasum":"3df7b27f7dab4d4c07852dfd59ed0d06b1ac845c","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/layout.styl","shasum":"57ed294f100d94ebc05f48145e5060a78edb405f","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/media.styl","shasum":"482784c04c0cd15a3f0d86444966fe306af7d13a","modified":1438402397000},{"_id":"themes/next/source/css/_common/_section/sidebar.styl","shasum":"0fba5556e46a9f85d5dc270e6b17c0669e8cbdca","modified":1438402397000},{"_id":"themes/next/source/css/_common/_vendor/highlight/highlight.styl","shasum":"42cad9d6ae956ff0d545b601916dcdee68d85ee5","modified":1438402397000},{"_id":"themes/next/source/css/_common/_vendor/highlight/theme.styl","shasum":"9f0606d4d94ffa6bd77f91628507bba19133cf36","modified":1438402397000},{"_id":"themes/next/source/css/_custom/custom.styl","shasum":"68b6859fb48fe8358e567fc324f218cecfc3a533","modified":1438402397000},{"_id":"themes/next/source/css/_mixins/base.styl","shasum":"c76b9e3ff7dec124ac1370ad185dce0e75dc1e03","modified":1438402397000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","shasum":"4a3a42602de866ee9caf53a78b0f636c3592e4ce","modified":1438402397000},{"_id":"themes/next/source/css/_schemes/default/_menu.styl","shasum":"dd667be3f5f24cebdc15d0262c7d397f23d751c5","modified":1438402397000},{"_id":"themes/next/source/css/_schemes/default/_search.styl","shasum":"f4b930ca651fdd96e8caea865b6b90dc32139f41","modified":1438402397000},{"_id":"themes/next/source/css/_schemes/default/index.styl","shasum":"e1dcc89ecbd93f46aacd5d0da39f74c22eb52916","modified":1438402397000},{"_id":"themes/next/source/css/_variables/Mist.styl","shasum":"306149f2f2afe2a7c0277ee3f5116603c6eb8863","modified":1438402397000},{"_id":"themes/next/source/css/_variables/base.styl","shasum":"8870e33146c1cc2d079024f60001d053c059d0b2","modified":1438402397000},{"_id":"themes/next/source/favicon.ico","shasum":"ba1c0e5a8912f8fdedd8e3709ae7cb7aa0f38572","modified":1438695645000},{"_id":"themes/next/source/css/main.styl","shasum":"272e494e179bd02c12d777daf71a5db59681a36f","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-default/icomoon.eot","shasum":"a58d5e893c6faefc90d5c2589cc314dff8ffca7a","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-default/icomoon.svg","shasum":"c6d998be8fc66fedb4d3c06329f457615ca47190","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-default/icomoon.ttf","shasum":"e6452f07b050ee0ff265b3b99a1e7ef82eb561b2","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-default/icomoon.woff","shasum":"4d0adc55240f331c6de225e23afd76ea5318da9c","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.eot","shasum":"6d0eb1a5bfef4f2bf77089bd090e88c5b2f7944d","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.svg","shasum":"7644914ce9e46e31840d30e289cd5f3d21227822","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.ttf","shasum":"8c865cffa3845be32406737fcc0466cf9cd965b3","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.eot","shasum":"f27c3643af6ed6f3d29a0be0c8dbea9b157857db","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.svg","shasum":"3be905b577a578b5a5d90708efb702c84acfc50c","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-feather/icomoon.woff","shasum":"9159eea8641b840e0f7aa6e087dae414044ecdd3","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.ttf","shasum":"e0b5e4a23a949bac499908bcef2fae56430e230e","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-fifty-shades/icomoon.woff","shasum":"088a16303b0700e1c9e2c6962240b4c2f0fc3aa4","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.svg","shasum":"51ca86690d0294529bb9a736984e7fa718d15933","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.eot","shasum":"301fcf00c24750dddf1c529f944ca62c7f1a217d","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.ttf","shasum":"f399713d1c9400d4d3373e38991a7e362a754a94","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.eot","shasum":"176695cc0dc12daba049b2bb889397a7bf2e553c","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-icomoon/icomoon.woff","shasum":"05f1ec0bd307da5e731a86eb4961589a6042aebb","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.woff","shasum":"d1ed08a17670fa259df02c1d52dc9ce754343775","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.ttf","shasum":"c8ec218adabc788b17f976f60dd1c5fa872d9fc4","modified":1438402397000},{"_id":"themes/next/source/images/avatar.jpg","shasum":"88a2c2d1b9c3d06a5e4df2b02609b53002ffd860","modified":1438696457000},{"_id":"themes/next/source/images/bkdefault_avatar.jpg","shasum":"b687bb4bfbe35a32b592c24d652ba80cfdc770fc","modified":1438402397000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","shasum":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1438402397000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","shasum":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1438402397000},{"_id":"themes/next/source/images/cc-by-nc.svg","shasum":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1438402397000},{"_id":"themes/next/source/images/cc-by-sa.svg","shasum":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1438402397000},{"_id":"themes/next/source/images/cc-by-nd.svg","shasum":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1438402397000},{"_id":"themes/next/source/images/cc-zero.svg","shasum":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1438402397000},{"_id":"themes/next/source/images/cc-by.svg","shasum":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1438402397000},{"_id":"themes/next/source/images/loading.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1438402397000},{"_id":"themes/next/source/images/placeholder.gif","shasum":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1438402397000},{"_id":"themes/next/source/images/searchicon.png","shasum":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1438402397000},{"_id":"themes/next/source/js/bootstrap.scrollspy.js","shasum":"97640be11a524b203781c1a03f623ef0b9195a02","modified":1438402397000},{"_id":"themes/next/source/js/fancy-box.js","shasum":"e978731b1d9a0ac1d9f026f97706a24fb99122f1","modified":1438402397000},{"_id":"themes/next/source/js/helpers.js","shasum":"092d54b791af7c4a11b1496294dd3259259058b6","modified":1438402397000},{"_id":"themes/next/source/js/hook-duoshuo.js","shasum":"a7a618126d6853d52f4e32be116d3985325ad17d","modified":1438402397000},{"_id":"themes/next/source/js/lazyload.js","shasum":"dd94f7e88df11a1d760ca9994e21a58c07974fb2","modified":1438402397000},{"_id":"themes/next/source/js/motion_fallback.js","shasum":"bff3d62933345bb9bba962332b8c3d31f7b01579","modified":1438402397000},{"_id":"themes/next/source/js/motion_global.js","shasum":"93eeeb1e9c0b42224e6ddb8ae4605c4ee0f18032","modified":1438402397000},{"_id":"themes/next/source/js/search-toggle.js","shasum":"e62bb0cff0c2e9d7c6944c4b88533b63f2259170","modified":1438402397000},{"_id":"themes/next/source/js/ua-parser.min.js","shasum":"acf0ee6a47ffb7231472b56e43996e3f947c258a","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","shasum":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","shasum":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","shasum":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","shasum":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","shasum":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1438402397000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","shasum":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1438402397000},{"_id":"themes/next/source/vendors/velocity/bower.json","shasum":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1438402397000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","shasum":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1438402397000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","shasum":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1438402397000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","shasum":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1438402397000},{"_id":"themes/next/tests/helpers.js","shasum":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1438402397000},{"_id":"themes/next/tests/intern.js","shasum":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1438402397000},{"_id":"themes/next/source/fonts/icon-linecons/icomoon.svg","shasum":"e4eadbae96a0419a269e1188d5b624710a29a65d","modified":1438402397000},{"_id":"themes/next/source/vendors/jquery/index.js","shasum":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1438402397000},{"_id":"themes/next/source/vendors/velocity/velocity.js","shasum":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1438402397000}],"Category":[{"name":"Android","_id":"cicxfzsyz0005v0zibvp1rf2q"},{"name":"Life","_id":"cicxfzsz3000ev0zij2n5v4me"},{"name":"github","_id":"cicxfzsza000wv0zi6wg0zm5j"},{"name":"hexo","_id":"cicxfzt020028v0ziwdzmnqpy"},{"name":"Android Studio","_id":"cicxfzt0h0030v0zicegs6t5l"},{"name":"jekyll","_id":"cicxfzt0i0034v0ziz563xtdi"},{"name":"App","_id":"cicxfzt0t003nv0zic1bd8gnv"}],"Data":[],"Page":[{"title":"All tags","date":"2015-07-30T09:24:44.000Z","type":"tags","comments":1,"_content":"","source":"tags/index.md","raw":"title: All tags\ndate: 2015-07-30 17:24:44\ntype: \"tags\"\ncomments: true #如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false\n---\n","updated":"2015-08-01T04:13:17.000Z","path":"tags/index.html","layout":"page","_id":"cicxfzsvz0000v0zivkww7mjz"},{"title":"qq","date":"2015-07-31T01:31:26.000Z","_content":"<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n**请勿重复加群，谢谢。**","source":"qq/index.md","raw":"title: qq\ndate: 2015-07-31 09:31:26\n---\n<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n**请勿重复加群，谢谢。**","updated":"2015-08-04T12:39:56.000Z","path":"qq/index.html","comments":1,"layout":"page","_id":"cicxfzsxl0001v0zij1cls4rx"},{"title":"categories","date":"2015-07-30T09:29:17.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-07-30 17:29:17\ntype: \"categories\"\n---\n","updated":"2015-08-01T04:13:17.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cicxfzsyk0002v0zidv7trdxh"},{"title":"about","date":"2015-07-31T01:28:39.000Z","_content":"\n你必须只够的努力，才能看起来毫不费力！专注！精致！\n\n<h1> 关于自己</h1>\n\nAndroid应用攻城狮，后知后觉，学生时代，还不知何为程序猿，2012年2月1日开始参加工作，至今还一直从事Android应用开发。\n\n<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n**请勿重复加群，谢谢。**\n\n<h1> 小额赞助</h1>\n<font color=\"#000000\">如果您喜欢此博客，读后受益匪浅，感觉对您的日后的工作有一定的帮助，不妨支付宝扫描以下二维码，小额赞助一下作者一杯咖啡费 #^_^#</font><br> \n<img src=\"http://7q5c2h.com1.z0.glb.clouddn.com/taobao_qrcode.jpg\" /> \n\n","source":"about/index.md","raw":"title: about\ndate: 2015-07-31 09:28:39\n---\n\n你必须只够的努力，才能看起来毫不费力！专注！精致！\n\n<h1> 关于自己</h1>\n\nAndroid应用攻城狮，后知后觉，学生时代，还不知何为程序猿，2012年2月1日开始参加工作，至今还一直从事Android应用开发。\n\n<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n**请勿重复加群，谢谢。**\n\n<h1> 小额赞助</h1>\n<font color=\"#000000\">如果您喜欢此博客，读后受益匪浅，感觉对您的日后的工作有一定的帮助，不妨支付宝扫描以下二维码，小额赞助一下作者一杯咖啡费 #^_^#</font><br> \n<img src=\"http://7q5c2h.com1.z0.glb.clouddn.com/taobao_qrcode.jpg\" /> \n\n","updated":"2015-08-04T14:06:30.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cicxfzsyv0003v0zibvc8y92z"}],"Post":[{"title":"Android基于XMPP即时通讯应用（一）【openfire服务器配置】","date":"2015-01-13T16:00:00.000Z","_content":"\nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\n\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\n\nOpenFire ——服务器端\nSpark——客户端\n\nSmack——XMPP 传输协议的实现\n\n<!-- more -->\n\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\n\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\n\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\n\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能\n \n三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n\n\n## 准备\nopenfire下载：[http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe](http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n\n\n","source":"_posts/wochat.md","raw":"title: Android基于XMPP即时通讯应用（一）【openfire服务器配置】\ndate: 2015-01-14 \ncategories: [Android]\ntags: [Android,XMPP,openfire]\n---\n\nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\n\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\n\nOpenFire ——服务器端\nSpark——客户端\n\nSmack——XMPP 传输协议的实现\n\n<!-- more -->\n\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\n\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\n\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\n\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能\n \n三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n\n\n## 准备\nopenfire下载：[http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe](http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n\n\n","slug":"wochat","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsyx0004v0zi1yytuk1v"},{"title":"勇往直前","date":"2015-04-22T16:00:00.000Z","_content":"\n微言算我第一个个人App，当初的初衷，想通过这个App达到练手，\n\n并熟悉Android项目的创建到发布上线的整个流程。\n\n现在我想达到了预期甚至超过了，至今我还在维护这个项目。\n\n至于做成什么样子的应用，一开始根本不知道，更不知道“产品”，主观意识做一款励志的，\n\n后来认知到产品概念，想把微言做的更好，而不是纯粹地练手，于是形成了现在这个样子的APP([效果预览](http://app.mi.com/detail/25323))。\n\n其实其中好多功能不是我凭空想出来的，是用户反馈的。\n\nPS:万事开头难，没有行动之前，什么都觉得难！其实没想象的那么难，选准方向，勇往直前吧。\n","source":"_posts/weiyan.md","raw":"title: 勇往直前\ndate: 2015-04-23\ncategories: [Life]\ntags: [Life]\n---\n\n微言算我第一个个人App，当初的初衷，想通过这个App达到练手，\n\n并熟悉Android项目的创建到发布上线的整个流程。\n\n现在我想达到了预期甚至超过了，至今我还在维护这个项目。\n\n至于做成什么样子的应用，一开始根本不知道，更不知道“产品”，主观意识做一款励志的，\n\n后来认知到产品概念，想把微言做的更好，而不是纯粹地练手，于是形成了现在这个样子的APP([效果预览](http://app.mi.com/detail/25323))。\n\n其实其中好多功能不是我凭空想出来的，是用户反馈的。\n\nPS:万事开头难，没有行动之前，什么都觉得难！其实没想象的那么难，选准方向，勇往直前吧。\n","slug":"weiyan","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsz2000dv0zi3rvpbex8"},{"title":"Android之美化控件Shape","date":"2013-07-08T16:00:00.000Z","_content":"\n除了使用drawable这样的图片外，随着图片资源增多，程序也越来越大，今天我们自定义图形shape的方法。\n\n```java\n\t<shape>\n            <!-- 实心 -->\n            <solid android:color=\"#ff9d77\"/>\n            <!-- 渐变 -->\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <!-- 描边 -->\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <!-- 圆角 -->\n            <corners\n                android:radius=\"2dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n```\n\n* solid：实心，就是填充的意思\n\n\tandroid:color指定填充的颜色\n\n* gradient：渐变\n\n\tandroid:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。\n\n\t另外渐变默认的模式为android:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"。\n\n* stroke：描边\n\n\tandroid:width=\"2dp\" 描边的宽度，android:color 描边的颜色。\n\t我们还可以把描边弄成虚线的形式，设置方式为：\n\tandroid:dashWidth=\"5dp\" \n\tandroid:dashGap=\"3dp\"\n\t其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离。\n\n* corners：圆角\n\tandroid:radius为角的弧度，值越大角越圆。\n\t我们还可以把四个角设定成不同的角度，方法为：\n\n```java\n\t<corners \n        android:topRightRadius=\"20dp\"    右上角\n        android:bottomLeftRadius=\"20dp\"    右下角\n        android:topLeftRadius=\"1dp\"    左上角\n        android:bottomRightRadius=\"0dp\"    左下角\n\t/>\n```\n\t这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。\n\n* padding：间隔\n\t这个就不用多说了，XML布局文件中经常用到。\n\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item android:state_focused=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ffc2b7\"\n                android:endColor=\"#ffc2b7\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item>       \n        <shape>\n            <gradient\n                android:startColor=\"#ff9d77\"\n                android:endColor=\"#ff9d77\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#fad3cf\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n</selector>\n```\n以上几个item的区别主要是体现在state_pressed按下或state_focused获得焦点时，当当来判断显示什么类型，而没有state_xxx属性的item可以看作是常规状态下。\n\n常规状态效果图：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-1.png)\nstate_pressed按下或state_focused获得焦点：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-2.png)\n","source":"_posts/shape.md","raw":"title: Android之美化控件Shape\ncategories: [Android]\ntags: [Android,Shape]\ndate: 2013-07-09\n---\n\n除了使用drawable这样的图片外，随着图片资源增多，程序也越来越大，今天我们自定义图形shape的方法。\n\n```java\n\t<shape>\n            <!-- 实心 -->\n            <solid android:color=\"#ff9d77\"/>\n            <!-- 渐变 -->\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <!-- 描边 -->\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <!-- 圆角 -->\n            <corners\n                android:radius=\"2dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n```\n\n* solid：实心，就是填充的意思\n\n\tandroid:color指定填充的颜色\n\n* gradient：渐变\n\n\tandroid:startColor和android:endColor分别为起始和结束颜色，ndroid:angle是渐变角度，必须为45的整数倍。\n\n\t另外渐变默认的模式为android:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"。\n\n* stroke：描边\n\n\tandroid:width=\"2dp\" 描边的宽度，android:color 描边的颜色。\n\t我们还可以把描边弄成虚线的形式，设置方式为：\n\tandroid:dashWidth=\"5dp\" \n\tandroid:dashGap=\"3dp\"\n\t其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离。\n\n* corners：圆角\n\tandroid:radius为角的弧度，值越大角越圆。\n\t我们还可以把四个角设定成不同的角度，方法为：\n\n```java\n\t<corners \n        android:topRightRadius=\"20dp\"    右上角\n        android:bottomLeftRadius=\"20dp\"    右下角\n        android:topLeftRadius=\"1dp\"    左上角\n        android:bottomRightRadius=\"0dp\"    左下角\n\t/>\n```\n\t这里有个地方需要注意，bottomLeftRadius是右下角，而不是左下角，这个有点郁闷，不过不影响使用，记得别搞错了就行。\n\n* padding：间隔\n\t这个就不用多说了，XML布局文件中经常用到。\n\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item android:state_focused=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ffc2b7\"\n                android:endColor=\"#ffc2b7\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item>       \n        <shape>\n            <gradient\n                android:startColor=\"#ff9d77\"\n                android:endColor=\"#ff9d77\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#fad3cf\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n</selector>\n```\n以上几个item的区别主要是体现在state_pressed按下或state_focused获得焦点时，当当来判断显示什么类型，而没有state_xxx属性的item可以看作是常规状态下。\n\n常规状态效果图：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-1.png)\nstate_pressed按下或state_focused获得焦点：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-2.png)\n","slug":"shape","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsz4000iv0zi3ce4aykj"},{"title":"解决Android Studio和Android SDK Manager无法在线更新","date":"2015-01-20T16:00:00.000Z","_content":"##Android Studio\n\n升级时提示 Connection failed. Please check your network connection and try again\n\n修改安装目录下bin\\studio.exe.vmoptions文件,如E:\\Android\\android-studio\\bin\\studio.exe.vmoptions\n\n<!-- more -->\n\n添加内容:\n\n```js\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml\n-Didea.patches.url=http://dl.google.com/android/studio/patches/\n```\n\n重新启动..就可以在线更新了.\n\n备注：如果是64位系统,那就应该修改bin\\studio64.exe.vmoptions文件,大家别改错了,不然没用!\n\n##Android SDK Manager\n\n解决Android SDK Manager列表错误,或者无法更新下载的问题:\n\nhosts文件添加内容:\n\nC:\\Windows\\System32\\drivers\\etc\n\nhosts文件windows系统目录中的\\system32\\drivers\\etc下面，win98在windows系统目录中下面。\n\n```js\n203.208.46.146  www.google.com\n74.125.113.121  developer.android.com\n203.208.46.146 \tdl.google.com\n203.208.46.146 \tdl-ssl.google.com\n\n或者以下\n\n#更新的内容从以下地址下载\n74.125.113.121  developer.android.com\n203.208.46.200 dl.google.com\n203.208.46.200 dl-ssl.google.com\n```\n","source":"_posts/sdk-update.md","raw":"title: 解决Android Studio和Android SDK Manager无法在线更新\ndate: 2015-01-21\ncategories: [Android]\ntags: [Android,Android Studio]\n---\n##Android Studio\n\n升级时提示 Connection failed. Please check your network connection and try again\n\n修改安装目录下bin\\studio.exe.vmoptions文件,如E:\\Android\\android-studio\\bin\\studio.exe.vmoptions\n\n<!-- more -->\n\n添加内容:\n\n```js\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml\n-Didea.patches.url=http://dl.google.com/android/studio/patches/\n```\n\n重新启动..就可以在线更新了.\n\n备注：如果是64位系统,那就应该修改bin\\studio64.exe.vmoptions文件,大家别改错了,不然没用!\n\n##Android SDK Manager\n\n解决Android SDK Manager列表错误,或者无法更新下载的问题:\n\nhosts文件添加内容:\n\nC:\\Windows\\System32\\drivers\\etc\n\nhosts文件windows系统目录中的\\system32\\drivers\\etc下面，win98在windows系统目录中下面。\n\n```js\n203.208.46.146  www.google.com\n74.125.113.121  developer.android.com\n203.208.46.146 \tdl.google.com\n203.208.46.146 \tdl-ssl.google.com\n\n或者以下\n\n#更新的内容从以下地址下载\n74.125.113.121  developer.android.com\n203.208.46.200 dl.google.com\n203.208.46.200 dl-ssl.google.com\n```\n","slug":"sdk-update","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsz6000nv0zids1t51nu"},{"title":"Android屏幕适配不同的资源图片、布局","date":"2013-07-22T16:00:00.000Z","_content":"在Android 2.1版本之前，存放资源图片的文件夹名称为drawable，应用程序用到的所有的资源图片都放在其中，所以很难解决不同屏幕大小的图片适配问题。\n\n1、资源图片\n\n自android 2.1版本开始，存放资源图片的文件夹由原来的一个drawable文件夹变成了drawable-hdpi、drawable-mdpi和drawable-ldpi，这是为了支持不同终端设备的不同分辨率。\n\ndrawable-hdpi、drawable-mdpi、drawable-ldpi的区别：\n\n（1）drawable-hdpi里面存放高分辨率的图片，如WVGA(480x800)，FWVGA(480x854)\n\n（2）drawable-mdpi里面存放中等分辨率的图片，如(320x480)\n\n（3）drawable-ldpi里面存放低分辨率的图片，如QVGA(240x320)\n\n<!-- more -->\n\n系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的图片，同一资源的不同分辨率的图片应该命以相同的名称存放在不同的资源图片文件夹中。\n\n2、布局的适配：\n\n在第1点中我们已经解决了资源图片的适配问题，但是图片的大小不同势必会造成布局的差异，如果使用一个统一的布局文件，\n可能会造成资源图片无法完整显示在屏幕内，所以对于这种问题，解决方法是建立不同的layout文件夹，对于不同屏幕的分辨率，书写其专用的.xml文件。\n\n多个layout文件夹在命名上有相应规则，以分辨率480x854为例，需要建立480x854像素的layout文件夹，命名：layout-854x480，\n\n有两点需要`注意`：①大数（854）必须在前，否则会报错；②两个数字之间的符号是小写英文字母“x”，不是乘号。系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的布局文件。如下：\n![布局文件](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-1.jpg)\n\n如果你建立的layout文件夹的分辨率是你的eclipse加载的android工具所支持的分辨率，那么在可视化的布局界面中会自动给出屏幕分辨率、屏幕尺寸（红色箭头处）等参数，值得注意的是，如果红色箭头处是“Custom…”，那么你就要人为对其进行修改，选择合适的屏幕尺寸。\n![选择合适的屏幕尺寸](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-2.jpg)\n\n3、设置屏幕的横竖屏显示：\n如果不做特殊说明，开发的应用是横竖屏重力敏感的，如果禁止横竖屏切换，需要在AndroidManifest.xml文件中做相应的修改：\n\n```java\n\t<activity android:name=\".MenuView\"\n\tandroid:label=\"@string/app_name\"\n\tandroid:screenOrientation=\"portrait\">\n```\n在activity的属性中添“android:screenOrientation=\"portrait\"”，portrait表示竖屏，横屏则用landscape表示。\n\n4、dip和px的问题：\n\n在网上找了好多关于“dip和px的区别”的资料，但是解释的都不是很清楚。\n我很肤浅的理解：dip是相对的，px是绝对的，所以dip能够有效解决不同型号手机不同分辨率的布局适配问题。\n\n但是由于在第2点中已经用不同layout文件夹解决了布局适配的问题，所以在其中使用dip就是没有意义的，甚至更加麻烦。\n既然已经分了不同的布局文件，所以在各个布局文件中直接使用px单位就可以了。\n","source":"_posts/screen-adaptation.md","raw":"title: Android屏幕适配不同的资源图片、布局\ndate: 2013-07-23 \ncategories: [Android]\ntags: [Android]\n---\n在Android 2.1版本之前，存放资源图片的文件夹名称为drawable，应用程序用到的所有的资源图片都放在其中，所以很难解决不同屏幕大小的图片适配问题。\n\n1、资源图片\n\n自android 2.1版本开始，存放资源图片的文件夹由原来的一个drawable文件夹变成了drawable-hdpi、drawable-mdpi和drawable-ldpi，这是为了支持不同终端设备的不同分辨率。\n\ndrawable-hdpi、drawable-mdpi、drawable-ldpi的区别：\n\n（1）drawable-hdpi里面存放高分辨率的图片，如WVGA(480x800)，FWVGA(480x854)\n\n（2）drawable-mdpi里面存放中等分辨率的图片，如(320x480)\n\n（3）drawable-ldpi里面存放低分辨率的图片，如QVGA(240x320)\n\n<!-- more -->\n\n系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的图片，同一资源的不同分辨率的图片应该命以相同的名称存放在不同的资源图片文件夹中。\n\n2、布局的适配：\n\n在第1点中我们已经解决了资源图片的适配问题，但是图片的大小不同势必会造成布局的差异，如果使用一个统一的布局文件，\n可能会造成资源图片无法完整显示在屏幕内，所以对于这种问题，解决方法是建立不同的layout文件夹，对于不同屏幕的分辨率，书写其专用的.xml文件。\n\n多个layout文件夹在命名上有相应规则，以分辨率480x854为例，需要建立480x854像素的layout文件夹，命名：layout-854x480，\n\n有两点需要`注意`：①大数（854）必须在前，否则会报错；②两个数字之间的符号是小写英文字母“x”，不是乘号。系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的布局文件。如下：\n![布局文件](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-1.jpg)\n\n如果你建立的layout文件夹的分辨率是你的eclipse加载的android工具所支持的分辨率，那么在可视化的布局界面中会自动给出屏幕分辨率、屏幕尺寸（红色箭头处）等参数，值得注意的是，如果红色箭头处是“Custom…”，那么你就要人为对其进行修改，选择合适的屏幕尺寸。\n![选择合适的屏幕尺寸](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-2.jpg)\n\n3、设置屏幕的横竖屏显示：\n如果不做特殊说明，开发的应用是横竖屏重力敏感的，如果禁止横竖屏切换，需要在AndroidManifest.xml文件中做相应的修改：\n\n```java\n\t<activity android:name=\".MenuView\"\n\tandroid:label=\"@string/app_name\"\n\tandroid:screenOrientation=\"portrait\">\n```\n在activity的属性中添“android:screenOrientation=\"portrait\"”，portrait表示竖屏，横屏则用landscape表示。\n\n4、dip和px的问题：\n\n在网上找了好多关于“dip和px的区别”的资料，但是解释的都不是很清楚。\n我很肤浅的理解：dip是相对的，px是绝对的，所以dip能够有效解决不同型号手机不同分辨率的布局适配问题。\n\n但是由于在第2点中已经用不同layout文件夹解决了布局适配的问题，所以在其中使用dip就是没有意义的，甚至更加麻烦。\n既然已经分了不同的布局文件，所以在各个布局文件中直接使用px单位就可以了。\n","slug":"screen-adaptation","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsz8000sv0zi9sk65nyk"},{"title":"使用七牛作为github博客的图床","date":"2014-10-29T16:00:00.000Z","_content":"\n文章的图片存放:\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n<!-- more -->\n\n首先要有个七牛账号，然后建立一个空间，我这里随便起名为WuXiaolong。空间建立好以后，进入空间设置界面：\n![1](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-1.png)\n进入`基本设置`->`镜像存储`，写上你要镜像加速的域名，这里是我的github路径：\n![2](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-2.png)\n点击确定就ok了。\n\n然后在写博客的时候，注意图片的域名不要写相对路径了，要写类似于\n![3](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-3.png)\n这样的指向七牛镜像服务的url，其中/images开始的url和之前使用的相对路径一致。\n\n七牛镜像加速基本原理是当有指向七牛的图片请求时，七牛会先看自己的空间下是否有该图片，如果不存在，则去上面设置的原始地址去取，同时在七牛下面保留一份，后续再有同样的请求时则直接由七牛返数据。\n\n\n\n\n\n\n\n\n","source":"_posts/qiniu-photo-bed.md","raw":"title: 使用七牛作为github博客的图床\ndate: 2014-10-30 \ncategories: [github]\ntags: [github]\n---\n\n文章的图片存放:\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n<!-- more -->\n\n首先要有个七牛账号，然后建立一个空间，我这里随便起名为WuXiaolong。空间建立好以后，进入空间设置界面：\n![1](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-1.png)\n进入`基本设置`->`镜像存储`，写上你要镜像加速的域名，这里是我的github路径：\n![2](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-2.png)\n点击确定就ok了。\n\n然后在写博客的时候，注意图片的域名不要写相对路径了，要写类似于\n![3](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-3.png)\n这样的指向七牛镜像服务的url，其中/images开始的url和之前使用的相对路径一致。\n\n七牛镜像加速基本原理是当有指向七牛的图片请求时，七牛会先看自己的空间下是否有该图片，如果不存在，则去上面设置的原始地址去取，同时在七牛下面保留一份，后续再有同样的请求时则直接由七牛返数据。\n\n\n\n\n\n\n\n\n","slug":"qiniu-photo-bed","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzsz9000vv0zius0wv1ys"},{"title":"EditText输入手机号自动带空格","date":"2015-07-08T16:00:00.000Z","_content":"\n转载：http://www.jcodecraeer.com/plus/view.php?aid=3163\n\n在android开发过程中，经常会要求用户输入手机号，为了便于观看，我们都会已135 xxxx xxxx这种格式展示。\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/20150709_phone_space.png)\n\n<!-- more -->\n\n```js\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:maxLength=\"13\"\n        android:inputType=\"numberSigned\" />\n\n```\n\n```java\nfinal EditText editText = (EditText) findViewById(R.id.editText);\n        editText.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence charSequence, int start, int before, int count) {\n                if (charSequence == null || charSequence.length() == 0)\n                    return;\n                StringBuilder stringBuilder = new StringBuilder();\n                for (int i = 0; i < charSequence.length(); i++) {\n                    if (i != 3 && i != 8 && charSequence.charAt(i) == ' ') {\n                        continue;\n                    } else {\n                        stringBuilder.append(charSequence.charAt(i));\n                        if ((stringBuilder.length() == 4 || stringBuilder.length() == 9)\n                                && stringBuilder.charAt(stringBuilder.length() - 1) != ' ') {\n                            stringBuilder.insert(stringBuilder.length() - 1, ' ');\n                        }\n                    }\n                }\n                if (!stringBuilder.toString().equals(charSequence.toString())) {\n                    int index = start + 1;\n                    if (stringBuilder.charAt(start) == ' ') {\n                        if (before == 0) {\n                            index++;\n                        } else {\n                            index--;\n                        }\n                    } else {\n                        if (before == 1) {\n                            index--;\n                        }\n                    }\n                    editText.setText(stringBuilder.toString());\n                    editText.setSelection(index);\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n    }\n```\n","source":"_posts/phone_space.md","raw":"title: EditText输入手机号自动带空格\ndate: 2015-07-09\ncategories: [Android]\ntags: [Android,SQLite]\n---\n\n转载：http://www.jcodecraeer.com/plus/view.php?aid=3163\n\n在android开发过程中，经常会要求用户输入手机号，为了便于观看，我们都会已135 xxxx xxxx这种格式展示。\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/20150709_phone_space.png)\n\n<!-- more -->\n\n```js\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:maxLength=\"13\"\n        android:inputType=\"numberSigned\" />\n\n```\n\n```java\nfinal EditText editText = (EditText) findViewById(R.id.editText);\n        editText.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence charSequence, int start, int before, int count) {\n                if (charSequence == null || charSequence.length() == 0)\n                    return;\n                StringBuilder stringBuilder = new StringBuilder();\n                for (int i = 0; i < charSequence.length(); i++) {\n                    if (i != 3 && i != 8 && charSequence.charAt(i) == ' ') {\n                        continue;\n                    } else {\n                        stringBuilder.append(charSequence.charAt(i));\n                        if ((stringBuilder.length() == 4 || stringBuilder.length() == 9)\n                                && stringBuilder.charAt(stringBuilder.length() - 1) != ' ') {\n                            stringBuilder.insert(stringBuilder.length() - 1, ' ');\n                        }\n                    }\n                }\n                if (!stringBuilder.toString().equals(charSequence.toString())) {\n                    int index = start + 1;\n                    if (stringBuilder.charAt(start) == ' ') {\n                        if (before == 0) {\n                            index++;\n                        } else {\n                            index--;\n                        }\n                    } else {\n                        if (before == 1) {\n                            index--;\n                        }\n                    }\n                    editText.setText(stringBuilder.toString());\n                    editText.setSelection(index);\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n    }\n```\n","slug":"phone_space","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszb0010v0zirkuvzalz"},{"title":"吴小龙同學-客戶端","date":"2014-12-24T16:00:00.000Z","_content":"\n>好记忆不如烂笔头，随时记录自己所遇到的问题及疑惑。\n\n* 安卓客戶端\n\n![](http://wuxiaolong.qiniudn.com/WuXiaolong_qrcode.png)\n","source":"_posts/mobile.md","raw":"title: 吴小龙同學-客戶端\ndate: 2014-12-25 \ncategories: [Life]\ntags: [Life,Android]\n---\n\n>好记忆不如烂笔头，随时记录自己所遇到的问题及疑惑。\n\n* 安卓客戶端\n\n![](http://wuxiaolong.qiniudn.com/WuXiaolong_qrcode.png)\n","slug":"mobile","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszd0015v0zib1pf9hmn"},{"title":"android之获取手机信息","date":"2013-07-17T16:00:00.000Z","_content":"android获取手机信息（号码，内存，CPU，分辨率，MAC，IP，SD卡，IMEI,经纬度，信号强度等等）\n\n<!-- more -->\n\n```java\n\tpackage com.android.xiaomolong.example.apkdemo;\t\n\timport java.io.BufferedReader;\n\timport java.io.File;\n\timport java.io.FileReader;\n\timport java.io.IOException;\n\timport java.io.InputStream;\n\timport java.io.InputStreamReader;\n\timport java.net.HttpURLConnection;\n\timport java.net.InetAddress;\n\timport java.net.MalformedURLException;\n\timport java.net.NetworkInterface;\n\timport java.net.SocketException;\n\timport java.net.URL;\n\timport java.net.URLConnection;\n\timport java.util.Enumeration;\n\timport java.util.List;\n\t\n\timport android.app.Activity;\n\timport android.app.ActivityManager;\n\timport android.app.ActivityManager.MemoryInfo;\n\timport android.app.AlertDialog;\n\timport android.content.Context;\n\timport android.content.DialogInterface;\n\timport android.location.Criteria;\n\timport android.location.Location;\n\timport android.location.LocationListener;\n\timport android.location.LocationManager;\n\timport android.net.ConnectivityManager;\n\timport android.net.NetworkInfo;\n\timport android.net.wifi.WifiInfo;\n\timport android.net.wifi.WifiManager;\n\timport android.os.Bundle;\n\timport android.os.Environment;\n\timport android.os.StatFs;\n\timport android.telephony.CellLocation;\n\timport android.telephony.NeighboringCellInfo;\n\timport android.telephony.PhoneStateListener;\n\timport android.telephony.ServiceState;\n\timport android.telephony.SignalStrength;\n\timport android.telephony.TelephonyManager;\n\timport android.telephony.cdma.CdmaCellLocation;\n\timport android.telephony.gsm.GsmCellLocation;\n\timport android.text.format.Formatter;\n\timport android.util.DisplayMetrics;\n\timport android.util.Log;\n\timport android.view.Gravity;\n\timport android.view.WindowManager;\n\timport android.widget.Toast;\n\t\n\t/**\n\t * \n\t * @author 小尛龙\n\t * \n\t */\n\tpublic class MainActivity extends Activity {\n\t\n\t        @Override\n\t        protected void onCreate(Bundle savedInstanceState) {\n\t                super.onCreate(savedInstanceState);\n\t                setContentView(R.layout.activity_main);\n\t\n\t                Log.d(\"wxl\", getSystemMemory());\n\t\n\t        }\n\t\n\t        // 获取Android手机中SD卡存储信息 获取剩余空间\n\t        public void getSDCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                /*\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\">\n\t                 * </uses-permission>\n\t                 */\n\t                // 需要判断手机上面SD卡是否插好，如果有SD卡的情况下，我们才可以访问得到并获取到它的相关信息，当然以下这个语句需要用if做判断\n\t                if (Environment.getExternalStorageState().equals(\n\t                                Environment.MEDIA_MOUNTED)) {\n\t                        // 取得sdcard文件路径\n\t                        File path = Environment.getExternalStorageDirectory();\n\t                        StatFs statfs = new StatFs(path.getPath());\n\t                        // 获取block的SIZE\n\t                        long blocSize = statfs.getBlockSize();\n\t                        // 获取BLOCK数量\n\t                        long totalBlocks = statfs.getBlockCount();\n\t                        // 空闲的Block的数量\n\t                        long availaBlock = statfs.getAvailableBlocks();\n\t                        // 计算总空间大小和空闲的空间大小\n\t                        // 存储空间大小跟空闲的存储空间大小就被计算出来了。\n\t                        long availableSize = blocSize * availaBlock;\n\t                        // (availableBlocks * blockSize)/1024 KIB 单位\n\t                        // (availableBlocks * blockSize)/1024 /1024 MIB单位\n\t                        long allSize = blocSize * totalBlocks;\n\t                }\n\t\n\t        }\n\t\n\t        // 获取手机ip method-1\n\t        public String getLocalIpAddress() {\n\t                try {\n\t                        for (Enumeration<NetworkInterface> en = NetworkInterface\n\t                                        .getNetworkInterfaces(); en.hasMoreElements();) {\n\t                                NetworkInterface intf = en.nextElement();\n\t                                for (Enumeration<InetAddress> enumIpAddr = intf\n\t                                                .getInetAddresses(); enumIpAddr.hasMoreElements();) {\n\t                                        InetAddress inetAddress = enumIpAddr.nextElement();\n\t                                        if (!inetAddress.isLoopbackAddress()) {\n\t                                                Toast.makeText(this,\n\t                                                                inetAddress.getHostAddress().toString(), 3000)\n\t                                                                .show();\n\t                                                return inetAddress.getHostAddress().toString();\n\t                                        }\n\t                                }\n\t                        }\n\t                } catch (SocketException ex) {\n\t                        ex.printStackTrace();\n\t                        // Log.e(\"ifo\", ex.toString());\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 需要权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.INTERNET\"></uses-permission>\n\t\n\t        // 获取手机ip method-2\n\t        // 首先设置用户权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.CHANGE_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t        public String getLocalIpAddress2() {\n\t                // 获取wifi服务\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                // 判断wifi是否开启\n\t                if (!wifiManager.isWifiEnabled()) {\n\t                        wifiManager.setWifiEnabled(true);\n\t                }\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                int ipAddress = wifiInfo.getIpAddress();\n\t                String ip = intToIp(ipAddress);\n\t                return ip;\n\t        }\n\t\n\t        private String intToIp(int i) {\n\t                return (i & 0xFF) + \".\" + ((i >> 8) & 0xFF) + \".\" + ((i >> 16) & 0xFF)\n\t                                + \".\" + (i >> 24 & 0xFF);\n\t        }\n\t\n\t        // 查看本机外网IP\n\t        /*\n\t         * 该方法需要设备支持上网 查看\n\t         * System.out.println((GetNetIp(\"http://fw.qq.com/ipaddress\"))); 加权限\n\t         * <uses-permission\n\t         * android:name=\"android.permission.INTERNET\"></uses-permission>\n\t         * 通过获取http://fw.qq.com/ipaddress网页取得外网IP 这里有几个查看IP的网址然后提取IP试试。\n\t         * http://ip168.com/ http://www.cmyip.com/ http://city.ip138.com/ip2city.asp\n\t         */\n\t        public String GetNetIp(String ipaddr) {\n\t                URL infoUrl = null;\n\t                InputStream inStream = null;\n\t                try {\n\t                        infoUrl = new URL(ipaddr);\n\t                        URLConnection connection = infoUrl.openConnection();\n\t                        HttpURLConnection httpConnection = (HttpURLConnection) connection;\n\t                        int responseCode = httpConnection.getResponseCode();\n\t                        if (responseCode == HttpURLConnection.HTTP_OK) {\n\t                                inStream = httpConnection.getInputStream();\n\t                                BufferedReader reader = new BufferedReader(\n\t                                                new InputStreamReader(inStream, \"utf-8\"));\n\t                                StringBuilder strber = new StringBuilder();\n\t                                String line = null;\n\t                                while ((line = reader.readLine()) != null)\n\t                                        strber.append(line + \"\\n\");\n\t                                inStream.close();\n\t                                return strber.toString();\n\t                        }\n\t                } catch (MalformedURLException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                } catch (IOException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 获取手机MAC地址\n\t        private String getMacAddress() {\n\t                String result = \"\";\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                result = wifiInfo.getMacAddress();\n\t                // Log.i(TAG, \"macAdd:\" + result);\n\t                return result;\n\t        }\n\t\n\t        // 获取手机屏幕高度\n\t        private String getWeithAndHeight() {\n\t                // 这种方式在service中无法使用，\n\t                DisplayMetrics dm = new DisplayMetrics();\n\t                getWindowManager().getDefaultDisplay().getMetrics(dm);\n\t                int width = dm.widthPixels; // 宽\n\t                int height = dm.heightPixels; // 高\n\t                float density = dm.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                int densityDpi = dm.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                // 在service中也能得到高和宽\n\t                WindowManager mWindowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);\n\t                width = mWindowManager.getDefaultDisplay().getWidth();\n\t                height = mWindowManager.getDefaultDisplay().getHeight();\n\t\n\t                // 居中显示Toast\n\t                Toast msg = Toast.makeText(this, \"宽=\" + width + \"   高=\" + height,\n\t                                Toast.LENGTH_LONG);\n\t                msg.setGravity(Gravity.CENTER, msg.getXOffset() / 2,\n\t                                msg.getYOffset() / 2);\n\t                msg.show();\n\t                return \"(像素)宽:\" + width + \"\\n\" + \"(像素)高:\" + height + \"\\n\"\n\t                                + \"屏幕密度（0.75 / 1.0 / 1.5）:\" + density + \"\\n\"\n\t                                + \"屏幕密度DPI（120 / 160 / 240）:\" + densityDpi + \"\\n\";\n\t                /*\n\t                 * 下面的代码即可获取屏幕的尺寸。 在一个Activity的onCreate方法中，写入如下代码： DisplayMetrics metric\n\t                 * = new DisplayMetrics();\n\t                 * getWindowManager().getDefaultDisplay().getMetrics(metric); int width\n\t                 * = metric.widthPixels; // 屏幕宽度（像素） int height = metric.heightPixels;\n\t                 * // 屏幕高度（像素） float density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                 * int densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                 * \n\t                 * 但是，需要注意的是，在一个低密度的小屏手机上，仅靠上面的代码是不能获取正确的尺寸的。\n\t                 * 比如说，一部240x320像素的低密度手机，如果运行上述代码，获取到的屏幕尺寸是320x427。\n\t                 * 因此，研究之后发现，若没有设定多分辨率支持的话\n\t                 * ，Android系统会将240x320的低密度（120）尺寸转换为中等密度（160）对应的尺寸，\n\t                 * 这样的话就大大影响了程序的编码。所以，需要在工程的AndroidManifest\n\t                 * .xml文件中，加入supports-screens节点，具体的内容如下： <supports-screens\n\t                 * android:smallScreens=\"true\" android:normalScreens=\"true\"\n\t                 * android:largeScreens=\"true\" android:resizeable=\"true\"\n\t                 * android:anyDensity=\"true\" />\n\t                 * 这样的话，当前的Android程序就支持了多种分辨率，那么就可以得到正确的物理尺寸了。\n\t                 */\n\t        }\n\t\n\t        // 获取手机经纬度\n\t        public void getLocation() {\n\t                // 1. 创建一个 LocationManager对象。\n\t                LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\n\t                // 2. 创建一个 LocationListener对象。\n\t                LocationListener myGPSListener = new LocationListener() {\n\t                        // 一旦Location发生改变就会调用这个方法\n\t                        public void onLocationChanged(Location location) {\n\t                                double latitude = location.getLatitude();\n\t                                double longitude = location.getLongitude();\n\t                        }\n\t\n\t                        public void onStatusChanged(String provider, int status,\n\t                                        Bundle extras) {\n\t                        }\n\t\n\t                        public void onProviderEnabled(String provider) {\n\t                        }\n\t\n\t                        public void onProviderDisabled(String provider) {\n\t                        }\n\t                };\n\t                // 3.向LocationManager 注册一个LocationListener。\n\t                Criteria criteria = new Criteria();\n\t                criteria.setAccuracy(Criteria.ACCURACY_COARSE);\n\t                criteria.setAltitudeRequired(false);\n\t                criteria.setCostAllowed(true);\n\t                criteria.setPowerRequirement(Criteria.POWER_LOW);\n\t                String provider = locationManager.getBestProvider(criteria, true); // 根据Criteria\n\t                                                                                                                                                        // 的设置获取一个最佳的Provider\n\t                locationManager\n\t                                .requestLocationUpdates(provider, 5000, 0, myGPSListener);\n\t                // 4.移除LocationManager 注册的 LocationListener。\n\t                locationManager.removeUpdates(myGPSListener);\n\t\n\t        }\n\t\n\t        // 当前网络是否连接\n\t        public boolean isNetConnecting() {\n\t                ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t                NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t                if (networkInfo == null || !networkInfo.isConnected()) {\n\t                        // info.setConnected(false);\n\t                        return false;\n\t                } else {\n\t                        // info.setConnected(true);\n\t                        return true;\n\t                }\n\t        }\n\t\n\t        // 获取信号强度\n\t        public void getPhoneState() {\n\t                // 1. 创建telephonyManager 对象。\n\t                TelephonyManager telephonyManager = (TelephonyManager) /* context. */getSystemService(Context.TELEPHONY_SERVICE);\n\t                // 2. 创建PhoneStateListener 对象\n\t                PhoneStateListener MyPhoneListener = new PhoneStateListener() {\n\t                        @Override\n\t                        public void onCellLocationChanged(CellLocation location) {\n\t                                if (location instanceof GsmCellLocation) {// gsm网络\n\t                                        int CID = ((GsmCellLocation) location).getCid();\n\t                                } else if (location instanceof CdmaCellLocation) {// 其他CDMA等网络\n\t                                        int ID = ((CdmaCellLocation) location).getBaseStationId();\n\t                                }\n\t                        }\n\t\n\t                        @Override\n\t                        public void onServiceStateChanged(ServiceState serviceState) {\n\t                                super.onServiceStateChanged(serviceState);\n\t                        }\n\t\n\t                        @Override\n\t                        public void onSignalStrengthsChanged(SignalStrength signalStrength) {\n\t                                int asu = signalStrength.getGsmSignalStrength();\n\t                                int dbm = -113 + 2 * asu; // 信号强度\n\t                                super.onSignalStrengthsChanged(signalStrength);\n\t                        }\n\t                };\n\t                // 3. 监听信号改变\n\t                telephonyManager.listen(MyPhoneListener,\n\t                                PhoneStateListener.LISTEN_SIGNAL_STRENGTHS);\n\t\n\t                /*\n\t                 * 可能需要的权限 <uses-permission\n\t                 * android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n\t                 * <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"\n\t                 * /> <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\t                 */\n\t        }\n\t\n\t        // 获取手机可用内存和总内存\n\t        private String getSystemMemory() {\n\t                /*\n\t                 * 在Android开发中，有时候我们想获取手机的一些硬件信息，比如android手机的总内存和可用内存大小。这个该如何实现呢？\n\t                 * 通过读取文件\"/proc/meminfo\"\n\t                 * 的信息能够获取手机Memory的总量，而通过ActivityManager.getMemoryInfo\n\t                 * (ActivityManager.MemoryInfo)方法可以获取当前的可用Memory量。\n\t                 * \"/proc/meminfo\"文件记录了android手机的一些内存信息\n\t                 * ，在命令行窗口里输入\"adb shell\"，进入shell环境，输入\n\t                 * \"cat /proc/meminfo\"即可在命令行里显示meminfo文件的内容，具体如下所示。\n\t                 * \n\t                 * C:\\Users\\Figo>adb shell # cat /proc/meminfo cat /proc/meminfo\n\t                 * MemTotal: 94096 kB MemFree: 1684 kB Buffers: 16 kB Cached: 27160 kB\n\t                 * SwapCached: 0 kB Active: 35392 kB Inactive: 44180 kB Active(anon):\n\t                 * 26540 kB Inactive(anon): 28244 kB Active(file): 8852 kB\n\t                 * Inactive(file): 15936 kB Unevictable: 280 kB Mlocked: 0 kB *\n\t                 * SwapTotal: 0 kB SwapFree: 0 kB Dirty: 0 kB Writeback: 0 kB AnonPages:\n\t                 * 52688 kB Mapped: 17960 kB Slab: 3816 kB SReclaimable: 936 kB\n\t                 * SUnreclaim: 2880 kB PageTables: 5260 kB NFS_Unstable: 0 kB Bounce: 0\n\t                 * kB WritebackTmp: 0 kB CommitLimit: 47048 kB Committed_AS: 1483784 kB\n\t                 * VmallocTotal: 876544 kB VmallocUsed: 15456 kB VmallocChunk: 829444 kB\n\t                 * #\n\t                 * \n\t                 * 下面先对\"/proc/meminfo\"文件里列出的字段进行粗略解释： MemTotal: 所有可用RAM大小。 MemFree:\n\t                 * LowFree与HighFree的总和，被系统留着未使用的内存。 Buffers: 用来给文件做缓冲大小。 Cached:\n\t                 * 被高速缓冲存储器（cache memory）用的内存的大小（等于diskcache minus SwapCache）。\n\t                 * SwapCached:被高速缓冲存储器（cache\n\t                 * memory）用的交换空间的大小。已经被交换出来的内存，仍然被存放在swapfile中，\n\t                 * 用来在需要的时候很快的被替换而不需要再次打开I/O端口。 Active:\n\t                 * 在活跃使用中的缓冲或高速缓冲存储器页面文件的大小，除非非常必要，否则不会被移作他用。 Inactive:\n\t                 * 在不经常使用中的缓冲或高速缓冲存储器页面文件的大小，可能被用于其他途径。 SwapTotal: 交换空间的总大小。 SwapFree:\n\t                 * 未被使用交换空间的大小。 Dirty: 等待被写回到磁盘的内存大小。 Writeback: 正在被写回到磁盘的内存大小。\n\t                 * AnonPages：未映射页的内存大小。 Mapped: 设备和文件等映射的大小。 Slab:\n\t                 * 内核数据结构缓存的大小，可以减少申请和释放内存带来的消耗。 SReclaimable:可收回Slab的大小。\n\t                 * SUnreclaim：不可收回Slab的大小（SUnreclaim+SReclaimable＝Slab）。\n\t                 * PageTables：管理内存分页页面的索引表的大小。 NFS_Unstable:不稳定页表的大小。\n\t                 * 要获取android手机总内存大小，只需读取\"/proc/meminfo\"文件的第1行，并进行简单的字符串处理即可。\n\t                 */\n\t                String availMemory = getAvailMemory();\n\t                String totalMemory = getTotalMemory();\n\t                return \"可用内存=\" + availMemory + \"\\n\" + \"总内存=\" + totalMemory;\n\t\n\t        }// 手机的内存信息主要在/proc/meminfo文件中，其中第一行是总内存，而剩余内存可通过ActivityManager.MemoryInfo得到。\n\t\n\t        private String getAvailMemory() {// 获取android当前可用内存大小\n\t                ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\n\t                MemoryInfo mi = new MemoryInfo();\n\t                am.getMemoryInfo(mi);\n\t                // mi.availMem; 当前系统的可用内存\n\t                return Formatter.formatFileSize(getBaseContext(), mi.availMem);// 将获取的内存大小规格化\n\t        }\n\t\n\t        private String getTotalMemory() {\n\t                String str1 = \"/proc/meminfo\";// 系统内存信息文件\n\t                String str2;\n\t                String[] arrayOfString;\n\t                long initial_memory = 0;\n\t                try {\n\t                        FileReader localFileReader = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(\n\t                                        localFileReader, 8192);\n\t                        str2 = localBufferedReader.readLine();// 读取meminfo第一行，系统总内存大小\n\t\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (String num : arrayOfString) {\n\t                                Log.i(str2, num + \"\\t\");\n\t                        }\n\t\n\t                        initial_memory = Integer.valueOf(arrayOfString[1]).intValue() * 1024;// 获得系统总内存，单位是KB，乘以1024转换为Byte\n\t                        localBufferedReader.close();\n\t\n\t                } catch (IOException e) {\n\t                }\n\t                return Formatter.formatFileSize(getBaseContext(), initial_memory);// Byte转换为KB或者MB，内存大小规格化\n\t        }\n\t\n\t        // 获取手机CPU信息\n\t        private String getCpuInfo() {\n\t                String str1 = \"/proc/cpuinfo\";\n\t                String str2 = \"\";\n\t                String[] cpuInfo = { \"\", \"\" }; // 1-cpu型号 //2-cpu频率\n\t                String[] arrayOfString;\n\t                try {\n\t                        FileReader fr = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(fr, 8192);\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (int i = 2; i < arrayOfString.length; i++) {\n\t                                cpuInfo[0] = cpuInfo[0] + arrayOfString[i] + \" \";\n\t                        }\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        cpuInfo[1] += arrayOfString[2];\n\t                        localBufferedReader.close();\n\t                } catch (IOException e) {\n\t                }\n\t                // Log.i(TAG, \"cpuinfo:\" + cpuInfo[0] + \" \" + cpuInfo[1]);\n\t                return \"1-cpu型号:\" + cpuInfo[0] + \"2-cpu频率:\" + cpuInfo[1];\n\t        }// 和内存信息同理，cpu信息可通过读取/proc/cpuinfo文件来得到，其中第一行为cpu型号，第二行为cpu频率。\n\t\n\t        /*\n\t         * 一、Android 获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)\n\t         * 1、通过PackageManager可获取手机端已安装的apk文件的信息，具体代码如下: PackageManager\n\t         * packageManager = this.getPackageManager(); List<PackageInfo>\n\t         * packageInfoList = packageManager.getInstalledPackages(0);\n\t         * 通过上述方法，可得到手机中安装的所有应用程序，包括手动安装的apk包的信息、、系统预装的应用软件的信息，要区分这两类软件可使用以下方法:\n\t         * （a）从packageInfoList获取的packageInfo\n\t         * ，再通过packageInfo.applicationInfo获取applicationInfo。\n\t         * （b）判断(applicationInfo.flags &\n\t         * ApplicationInfo.FLAG_SYSTEM)的值，该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用。\n\t         * (1)获取应用的代码: public static List<PackageInfo> getAllApps(Context context) {\n\t         * List<PackageInfo> apps = new ArrayList<PackageInfo>(); PackageManager\n\t         * pManager = context.getPackageManager(); //获取手机内所有应用 List<PackageInfo>\n\t         * paklist = pManager.getInstalledPackages(0); for (int i = 0; i <\n\t         * paklist.size(); i++) { PackageInfo pak = (PackageInfo) paklist.get(i);\n\t         * //判断是否为非系统预装的应用程序 if ((pak.applicationInfo.flags &\n\t         * pak.applicationInfo.FLAG_SYSTEM) <= 0) { apps.add(pak); } } return apps;\n\t         * } (2)、获取图片、应用名、包名: PackageManager pManager =\n\t         * MessageSendActivity.this.getPackageManager(); List<PackageInfo> appList =\n\t         * Utils.getAllApps(MessageSendActivity.this); for(int\n\t         * i=0;i<appList.size();i++) { PackageInfo pinfo = appList.get(i); shareItem\n\t         * = new ShareItemInfo();\n\t         * shareItem.setIcon(pManager.getApplicationIcon(pinfo.applicationInfo));\n\t         * shareItem\n\t         * .setLabel(pManager.getApplicationLabel(pinfo.applicationInfo).toString\n\t         * ()); shareItem.setPackageName(pinfo.applicationInfo.packageName); }\n\t         * 其中ShareItemInfo 类自己写的，各位可以忽略 (3)获取支持分享的应用的代码： public static\n\t         * List<ResolveInfo> getShareApps(Context context){ List<ResolveInfo> mApps\n\t         * = new ArrayList<ResolveInfo>(); Intent intent=new\n\t         * Intent(Intent.ACTION_SEND,null);\n\t         * intent.addCategory(Intent.CATEGORY_DEFAULT);\n\t         * intent.setType(\"text/plain\"); PackageManager pManager =\n\t         * context.getPackageManager(); mApps =\n\t         * pManager.queryIntentActivities(intent\n\t         * ,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT); return mApps; }\n\t         * 由于该方法，返回的并不是PackageInfo 对象。而是ResolveInfo。因此获取图片、应用名、包名的方法不一样，如下：\n\t         * PackageManager pManager = MessageSendActivity.this.getPackageManager();\n\t         * List<ResolveInfo> resolveList =\n\t         * Utils.getShareApps(MessageSendActivity.this); for(int\n\t         * i=0;i<resolveList.size();i++) { ResolveInfo resolve = resolveList.get(i);\n\t         * ShareItemInfo shareItem = new ShareItemInfo(); //set Icon\n\t         * shareItem.setIcon(resolve.loadIcon(pManager)); //set Application Name\n\t         * shareItem.setLabel(resolve.loadLabel(pManager).toString()); //set Package\n\t         * Name shareItem.setPackageName(resolve.activityInfo.packageName); } 总结： 通过\n\t         * PackageInfo 获取具体信息方法： 包名获取方法：packageInfo.packageName\n\t         * icon获取获取方法：packageManager.getApplicationIcon(applicationInfo)\n\t         * 应用名称获取方法：packageManager.getApplicationLabel(applicationInfo)\n\t         * 使用权限获取方法：packageManager\n\t         * .getPackageInfo(packageName,PackageManager.GET_PERMISSIONS)\n\t         * .requestedPermissions 通过 ResolveInfo 获取具体信息方法：\n\t         * 包名获取方法：resolve.activityInfo.packageName\n\t         * icon获取获取方法：resolve.loadIcon(packageManager)\n\t         * 应用名称获取方法：resolve.loadLabel(packageManager).toString()\n\t         */\n\t        public String getSimCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                // <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n\t                /*\n\t                 * TelephonyManager类主要提供了一系列用于访问与手机通讯相关的状态和信息的get方法。其中包括手机SIM的状态和信息\n\t                 * 、电信网络的状态及手机用户的信息。\n\t                 * 在应用程序中可以使用这些get方法获取相关数据。TelephonyManager类的对象可以通过Context\n\t                 * .getSystemService(Context.TELEPHONY_SERVICE)\n\t                 * 方法来获得，需要注意的是有些通讯信息的获取对应用程序的权限有一定的限制\n\t                 * ，在开发的时候需要为其添加相应的权限。以下列出TelephonyManager类所有方法及说明：\n\t                 * TelephonyManager提供设备上获取通讯服务信息的入口。 应用程序可以使用这个类方法确定的电信服务商和国家\n\t                 * 以及某些类型的用户访问信息。 应用程序也可以注册一个监听器到电话收状态的变化。不需要直接实例化这个类\n\t                 * 使用Context.getSystemService (Context.TELEPHONY_SERVICE)来获取这个类的实例。\n\t                 */\n\t\n\t                // 解释：\n\t                // IMSI是国际移动用户识别码的简称(International Mobile Subscriber Identity)\n\t                // IMSI共有15位，其结构如下：\n\t                // MCC+MNC+MIN\n\t                // MCC：Mobile Country Code，移动国家码，共3位，中国为460;\n\t                // MNC:Mobile NetworkCode，移动网络码，共2位\n\t                // 在中国，移动的代码为电00和02，联通的代码为01，电信的代码为03\n\t                // 合起来就是（也是Android手机中APN配置文件中的代码）：\n\t                // 中国移动：46000 46002\n\t                // 中国联通：46001\n\t                // 中国电信：46003\n\t                // 举例，一个典型的IMSI号码为460030912121001\n\t\n\t                // IMEI是International Mobile Equipment Identity （国际移动设备标识）的简称\n\t                // IMEI由15位数字组成的”电子串号”，它与每台手机一一对应，而且该码是全世界唯一的\n\t                // 其组成为：\n\t                // 1. 前6位数(TAC)是”型号核准号码”，一般代表机型\n\t                // 2. 接着的2位数(FAC)是”最后装配号”，一般代表产地\n\t                // 3. 之后的6位数(SNR)是”串号”，一般代表生产顺序号\n\t                // 4. 最后1位数(SP)通常是”0″，为检验码，目前暂备用\n\t\n\t                TelephonyManager tm = (TelephonyManager) this\n\t                                .getSystemService(TELEPHONY_SERVICE);\n\t                /*\n\t                 * 电话状态： 1.tm.CALL_STATE_IDLE=0 无活动，无任何状态时 2.tm.CALL_STATE_RINGING=1\n\t                 * 响铃，电话进来时 3.tm.CALL_STATE_OFFHOOK=2 摘机\n\t                 */\n\t                tm.getCallState();// int\n\t\n\t                /*\n\t                 * 电话方位：\n\t                 */\n\t                // 返回当前移动终端的位置\n\t                CellLocation location = tm.getCellLocation();\n\t                // 请求位置更新，如果更新将产生广播，接收对象为注册LISTEN_CELL_LOCATION的对象，需要的permission名称为\n\t                // ACCESS_COARSE_LOCATION。\n\t                location.requestLocationUpdate();\n\t\n\t                /**\n\t                 * 获取数据活动状态\n\t                 * \n\t                 * DATA_ACTIVITY_IN 数据连接状态：活动，正在接受数据 DATA_ACTIVITY_OUT 数据连接状态：活动，正在发送数据\n\t                 * DATA_ACTIVITY_INOUT 数据连接状态：活动，正在接受和发送数据 DATA_ACTIVITY_NONE\n\t                 * 数据连接状态：活动，但无数据发送和接受\n\t                 */\n\t                tm.getDataActivity();\n\t\n\t                /**\n\t                 * 获取数据连接状态\n\t                 * \n\t                 * DATA_CONNECTED 数据连接状态：已连接 DATA_CONNECTING 数据连接状态：正在连接\n\t                 * DATA_DISCONNECTED 数据连接状态：断开 DATA_SUSPENDED 数据连接状态：暂停\n\t                 */\n\t                tm.getDataState();\n\t\n\t                /**\n\t                 * 返回当前移动终端的唯一标识，设备ID\n\t                 * \n\t                 * 如果是GSM网络，返回IMEI；如果是CDMA网络，返回MEID Return null if device ID is not\n\t                 * available.\n\t                 */\n\t                String Imei = tm.getDeviceId();// String\n\t\n\t                /*\n\t                 * 返回移动终端的软件版本，例如：GSM手机的IMEI/SV码。 设备的软件版本号： 例如：the IMEI/SV(software\n\t                 * version) for GSM phones. Return null if the software version is not\n\t                 * available.\n\t                 */\n\t                tm.getDeviceSoftwareVersion();// String\n\t\n\t                /*\n\t                 * 手机号： GSM手机的 MSISDN. Return null if it is unavailable.\n\t                 */\n\t                String phoneNum = tm.getLine1Number();// String\n\t\n\t                /*\n\t                 * 获取ISO标准的国家码，即国际长途区号。 注意：仅当用户已在网络注册后有效。 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkCountryIso();// String\n\t\n\t                /*\n\t                 * MCC+MNC(mobile country code + mobile network code) 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkOperator();// String\n\t\n\t                /*\n\t                 * 按照字母次序的current registered operator(当前已注册的用户)的名字 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t\n\t                tm.getNetworkOperatorName();// String\n\t\n\t                /*\n\t                 * 当前使用的网络类型： 例如： NETWORK_TYPE_UNKNOWN 网络类型未知 0 NETWORK_TYPE_GPRS GPRS网络\n\t                 * 1 NETWORK_TYPE_EDGE EDGE网络 2 NETWORK_TYPE_UMTS UMTS网络 3\n\t                 * NETWORK_TYPE_HSDPA HSDPA网络 8 NETWORK_TYPE_HSUPA HSUPA网络 9\n\t                 * NETWORK_TYPE_HSPA HSPA网络 10 NETWORK_TYPE_CDMA CDMA网络,IS95A 或 IS95B. 4\n\t                 * NETWORK_TYPE_EVDO_0 EVDO网络, revision 0. 5 NETWORK_TYPE_EVDO_A EVDO网络,\n\t                 * revision A. 6 NETWORK_TYPE_1xRTT 1xRTT网络 7\n\t                 */\n\t                tm.getNetworkType();// int\n\t\n\t                /*\n\t                 * 手机类型： 例如： PHONE_TYPE_NONE 无信号 PHONE_TYPE_GSM GSM信号 PHONE_TYPE_CDMA\n\t                 * CDMA信号\n\t                 */\n\t                tm.getPhoneType();// int\n\t\n\t                /*\n\t                 * Returns the ISO country code equivalent for the SIM provider's\n\t                 * country code. 获取ISO国家码，相当于提供SIM卡的国家码。\n\t                 */\n\t                tm.getSimCountryIso();// String\n\t\n\t                /*\n\t                 * Returns the MCC+MNC (mobile country code + mobile network code) of\n\t                 * the provider of the SIM. 5 or 6 decimal digits.\n\t                 * 获取SIM卡提供的移动国家码和移动网络码.5或6位的十进制数字. SIM卡的状态必须是\n\t                 * SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperator();// String\n\t\n\t                /*\n\t                 * 服务商名称： 例如：中国移动、联通 SIM卡的状态必须是 SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperatorName();// String\n\t\n\t                /*\n\t                 * SIM卡的序列号： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSimSerialNumber();// String\n\t\n\t                /*\n\t                 * SIM的状态信息： SIM_STATE_UNKNOWN 未知状态 0 SIM_STATE_ABSENT 没插卡 1\n\t                 * SIM_STATE_PIN_REQUIRED 锁定状态，需要用户的PIN码解锁 2 SIM_STATE_PUK_REQUIRED\n\t                 * 锁定状态，需要用户的PUK码解锁 3 SIM_STATE_NETWORK_LOCKED 锁定状态，需要网络的PIN码解锁 4\n\t                 * SIM_STATE_READY 就绪状态 5\n\t                 */\n\t                tm.getSimState();// int\n\t\n\t                /*\n\t                 * 唯一的用户ID： 例如：IMSI(国际移动用户识别码) for a GSM phone. 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSubscriberId();// String\n\t\n\t                /*\n\t                 * 取得和语音邮件相关的标签，即为识别符 需要权限：READ_PHONE_STATE\n\t                 */\n\t\n\t                tm.getVoiceMailAlphaTag();// String\n\t\n\t                /*\n\t                 * 获取语音邮件号码： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getVoiceMailNumber();// String\n\t\n\t                /*\n\t                 * ICC卡是否存在\n\t                 */\n\t                tm.hasIccCard();// boolean\n\t\n\t                /*\n\t                 * 是否漫游: (在GSM用途下)\n\t                 */\n\t                tm.isNetworkRoaming();//\n\t\n\t                String ProvidersName = null;\n\t                // 返回唯一的用户ID;就是这张卡的编号神马的\n\t                String IMSI = tm.getSubscriberId(); // 国际移动用户识别码\n\t                // IMSI号前面3位460是国家，紧接着后面2位00 02是中国移动，01是中国联通，03是中国电信。\n\t                System.out.println(IMSI);\n\t                if (IMSI.startsWith(\"46000\") || IMSI.startsWith(\"46002\")) {\n\t                        ProvidersName = \"中国移动\";\n\t                } else if (IMSI.startsWith(\"46001\")) {\n\t\n\t                        ProvidersName = \"中国联通\";\n\t\n\t                } else if (IMSI.startsWith(\"46003\")) {\n\t\n\t                        ProvidersName = \"中国电信\";\n\t\n\t                }\n\t                // 返回当前移动终端附近移动终端的信息\n\t                /*\n\t                 * 附近的电话的信息: 类型：List<NeighboringCellInfo>\n\t                 * 需要权限：android.Manifest.permission#ACCESS_COARSE_UPDATES\n\t                 */\n\t                List<NeighboringCellInfo> infos = tm.getNeighboringCellInfo();\n\t                for (NeighboringCellInfo info : infos) {\n\t                        // 获取邻居小区号\n\t                        int cid = info.getCid();\n\t                        // 获取邻居小区LAC，LAC:\n\t                        // 位置区域码。为了确定移动台的位置，每个GSM/PLMN的覆盖区都被划分成许多位置区，LAC则用于标识不同的位置区。\n\t                        info.getLac();\n\t                        info.getNetworkType();\n\t                        info.getPsc();\n\t                        // 获取邻居小区信号强度\n\t                        info.getRssi();\n\t                }\n\t                return \"手机号码:\" + phoneNum + \"\\n\" + \"服务商：\" + ProvidersName + \"\\n\"\n\t                                + \"IMEI：\" + Imei;\n\t\n\t        }\n\t\n\t        // 显示信息对话框\n\t        public void showDialog(String title, String info) {\n\t                AlertDialog dialog = new AlertDialog.Builder(this)\n\t                                .setTitle(title)\n\t                                .setMessage(info)\n\t                                .setPositiveButton(\"close\",\n\t                                                new DialogInterface.OnClickListener() {\n\t                                                        @Override\n\t                                                        public void onClick(DialogInterface dialog,\n\t                                                                        int which) {\n\t                                                                dialog.cancel();\n\t                                                                dialog = null;\n\t                                                        }\n\t                                                }).create();\n\t                dialog.show();\n\t        }\n\t}\n\n\n```\n","source":"_posts/mobile-phone-information-acquisition.md","raw":"title: android之获取手机信息\ncategories: [Android]\ntags: [Android]\ndate: 2013-07-18\n---\nandroid获取手机信息（号码，内存，CPU，分辨率，MAC，IP，SD卡，IMEI,经纬度，信号强度等等）\n\n<!-- more -->\n\n```java\n\tpackage com.android.xiaomolong.example.apkdemo;\t\n\timport java.io.BufferedReader;\n\timport java.io.File;\n\timport java.io.FileReader;\n\timport java.io.IOException;\n\timport java.io.InputStream;\n\timport java.io.InputStreamReader;\n\timport java.net.HttpURLConnection;\n\timport java.net.InetAddress;\n\timport java.net.MalformedURLException;\n\timport java.net.NetworkInterface;\n\timport java.net.SocketException;\n\timport java.net.URL;\n\timport java.net.URLConnection;\n\timport java.util.Enumeration;\n\timport java.util.List;\n\t\n\timport android.app.Activity;\n\timport android.app.ActivityManager;\n\timport android.app.ActivityManager.MemoryInfo;\n\timport android.app.AlertDialog;\n\timport android.content.Context;\n\timport android.content.DialogInterface;\n\timport android.location.Criteria;\n\timport android.location.Location;\n\timport android.location.LocationListener;\n\timport android.location.LocationManager;\n\timport android.net.ConnectivityManager;\n\timport android.net.NetworkInfo;\n\timport android.net.wifi.WifiInfo;\n\timport android.net.wifi.WifiManager;\n\timport android.os.Bundle;\n\timport android.os.Environment;\n\timport android.os.StatFs;\n\timport android.telephony.CellLocation;\n\timport android.telephony.NeighboringCellInfo;\n\timport android.telephony.PhoneStateListener;\n\timport android.telephony.ServiceState;\n\timport android.telephony.SignalStrength;\n\timport android.telephony.TelephonyManager;\n\timport android.telephony.cdma.CdmaCellLocation;\n\timport android.telephony.gsm.GsmCellLocation;\n\timport android.text.format.Formatter;\n\timport android.util.DisplayMetrics;\n\timport android.util.Log;\n\timport android.view.Gravity;\n\timport android.view.WindowManager;\n\timport android.widget.Toast;\n\t\n\t/**\n\t * \n\t * @author 小尛龙\n\t * \n\t */\n\tpublic class MainActivity extends Activity {\n\t\n\t        @Override\n\t        protected void onCreate(Bundle savedInstanceState) {\n\t                super.onCreate(savedInstanceState);\n\t                setContentView(R.layout.activity_main);\n\t\n\t                Log.d(\"wxl\", getSystemMemory());\n\t\n\t        }\n\t\n\t        // 获取Android手机中SD卡存储信息 获取剩余空间\n\t        public void getSDCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                /*\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\">\n\t                 * </uses-permission>\n\t                 */\n\t                // 需要判断手机上面SD卡是否插好，如果有SD卡的情况下，我们才可以访问得到并获取到它的相关信息，当然以下这个语句需要用if做判断\n\t                if (Environment.getExternalStorageState().equals(\n\t                                Environment.MEDIA_MOUNTED)) {\n\t                        // 取得sdcard文件路径\n\t                        File path = Environment.getExternalStorageDirectory();\n\t                        StatFs statfs = new StatFs(path.getPath());\n\t                        // 获取block的SIZE\n\t                        long blocSize = statfs.getBlockSize();\n\t                        // 获取BLOCK数量\n\t                        long totalBlocks = statfs.getBlockCount();\n\t                        // 空闲的Block的数量\n\t                        long availaBlock = statfs.getAvailableBlocks();\n\t                        // 计算总空间大小和空闲的空间大小\n\t                        // 存储空间大小跟空闲的存储空间大小就被计算出来了。\n\t                        long availableSize = blocSize * availaBlock;\n\t                        // (availableBlocks * blockSize)/1024 KIB 单位\n\t                        // (availableBlocks * blockSize)/1024 /1024 MIB单位\n\t                        long allSize = blocSize * totalBlocks;\n\t                }\n\t\n\t        }\n\t\n\t        // 获取手机ip method-1\n\t        public String getLocalIpAddress() {\n\t                try {\n\t                        for (Enumeration<NetworkInterface> en = NetworkInterface\n\t                                        .getNetworkInterfaces(); en.hasMoreElements();) {\n\t                                NetworkInterface intf = en.nextElement();\n\t                                for (Enumeration<InetAddress> enumIpAddr = intf\n\t                                                .getInetAddresses(); enumIpAddr.hasMoreElements();) {\n\t                                        InetAddress inetAddress = enumIpAddr.nextElement();\n\t                                        if (!inetAddress.isLoopbackAddress()) {\n\t                                                Toast.makeText(this,\n\t                                                                inetAddress.getHostAddress().toString(), 3000)\n\t                                                                .show();\n\t                                                return inetAddress.getHostAddress().toString();\n\t                                        }\n\t                                }\n\t                        }\n\t                } catch (SocketException ex) {\n\t                        ex.printStackTrace();\n\t                        // Log.e(\"ifo\", ex.toString());\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 需要权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.INTERNET\"></uses-permission>\n\t\n\t        // 获取手机ip method-2\n\t        // 首先设置用户权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.CHANGE_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t        public String getLocalIpAddress2() {\n\t                // 获取wifi服务\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                // 判断wifi是否开启\n\t                if (!wifiManager.isWifiEnabled()) {\n\t                        wifiManager.setWifiEnabled(true);\n\t                }\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                int ipAddress = wifiInfo.getIpAddress();\n\t                String ip = intToIp(ipAddress);\n\t                return ip;\n\t        }\n\t\n\t        private String intToIp(int i) {\n\t                return (i & 0xFF) + \".\" + ((i >> 8) & 0xFF) + \".\" + ((i >> 16) & 0xFF)\n\t                                + \".\" + (i >> 24 & 0xFF);\n\t        }\n\t\n\t        // 查看本机外网IP\n\t        /*\n\t         * 该方法需要设备支持上网 查看\n\t         * System.out.println((GetNetIp(\"http://fw.qq.com/ipaddress\"))); 加权限\n\t         * <uses-permission\n\t         * android:name=\"android.permission.INTERNET\"></uses-permission>\n\t         * 通过获取http://fw.qq.com/ipaddress网页取得外网IP 这里有几个查看IP的网址然后提取IP试试。\n\t         * http://ip168.com/ http://www.cmyip.com/ http://city.ip138.com/ip2city.asp\n\t         */\n\t        public String GetNetIp(String ipaddr) {\n\t                URL infoUrl = null;\n\t                InputStream inStream = null;\n\t                try {\n\t                        infoUrl = new URL(ipaddr);\n\t                        URLConnection connection = infoUrl.openConnection();\n\t                        HttpURLConnection httpConnection = (HttpURLConnection) connection;\n\t                        int responseCode = httpConnection.getResponseCode();\n\t                        if (responseCode == HttpURLConnection.HTTP_OK) {\n\t                                inStream = httpConnection.getInputStream();\n\t                                BufferedReader reader = new BufferedReader(\n\t                                                new InputStreamReader(inStream, \"utf-8\"));\n\t                                StringBuilder strber = new StringBuilder();\n\t                                String line = null;\n\t                                while ((line = reader.readLine()) != null)\n\t                                        strber.append(line + \"\\n\");\n\t                                inStream.close();\n\t                                return strber.toString();\n\t                        }\n\t                } catch (MalformedURLException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                } catch (IOException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 获取手机MAC地址\n\t        private String getMacAddress() {\n\t                String result = \"\";\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                result = wifiInfo.getMacAddress();\n\t                // Log.i(TAG, \"macAdd:\" + result);\n\t                return result;\n\t        }\n\t\n\t        // 获取手机屏幕高度\n\t        private String getWeithAndHeight() {\n\t                // 这种方式在service中无法使用，\n\t                DisplayMetrics dm = new DisplayMetrics();\n\t                getWindowManager().getDefaultDisplay().getMetrics(dm);\n\t                int width = dm.widthPixels; // 宽\n\t                int height = dm.heightPixels; // 高\n\t                float density = dm.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                int densityDpi = dm.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                // 在service中也能得到高和宽\n\t                WindowManager mWindowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);\n\t                width = mWindowManager.getDefaultDisplay().getWidth();\n\t                height = mWindowManager.getDefaultDisplay().getHeight();\n\t\n\t                // 居中显示Toast\n\t                Toast msg = Toast.makeText(this, \"宽=\" + width + \"   高=\" + height,\n\t                                Toast.LENGTH_LONG);\n\t                msg.setGravity(Gravity.CENTER, msg.getXOffset() / 2,\n\t                                msg.getYOffset() / 2);\n\t                msg.show();\n\t                return \"(像素)宽:\" + width + \"\\n\" + \"(像素)高:\" + height + \"\\n\"\n\t                                + \"屏幕密度（0.75 / 1.0 / 1.5）:\" + density + \"\\n\"\n\t                                + \"屏幕密度DPI（120 / 160 / 240）:\" + densityDpi + \"\\n\";\n\t                /*\n\t                 * 下面的代码即可获取屏幕的尺寸。 在一个Activity的onCreate方法中，写入如下代码： DisplayMetrics metric\n\t                 * = new DisplayMetrics();\n\t                 * getWindowManager().getDefaultDisplay().getMetrics(metric); int width\n\t                 * = metric.widthPixels; // 屏幕宽度（像素） int height = metric.heightPixels;\n\t                 * // 屏幕高度（像素） float density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                 * int densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                 * \n\t                 * 但是，需要注意的是，在一个低密度的小屏手机上，仅靠上面的代码是不能获取正确的尺寸的。\n\t                 * 比如说，一部240x320像素的低密度手机，如果运行上述代码，获取到的屏幕尺寸是320x427。\n\t                 * 因此，研究之后发现，若没有设定多分辨率支持的话\n\t                 * ，Android系统会将240x320的低密度（120）尺寸转换为中等密度（160）对应的尺寸，\n\t                 * 这样的话就大大影响了程序的编码。所以，需要在工程的AndroidManifest\n\t                 * .xml文件中，加入supports-screens节点，具体的内容如下： <supports-screens\n\t                 * android:smallScreens=\"true\" android:normalScreens=\"true\"\n\t                 * android:largeScreens=\"true\" android:resizeable=\"true\"\n\t                 * android:anyDensity=\"true\" />\n\t                 * 这样的话，当前的Android程序就支持了多种分辨率，那么就可以得到正确的物理尺寸了。\n\t                 */\n\t        }\n\t\n\t        // 获取手机经纬度\n\t        public void getLocation() {\n\t                // 1. 创建一个 LocationManager对象。\n\t                LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\n\t                // 2. 创建一个 LocationListener对象。\n\t                LocationListener myGPSListener = new LocationListener() {\n\t                        // 一旦Location发生改变就会调用这个方法\n\t                        public void onLocationChanged(Location location) {\n\t                                double latitude = location.getLatitude();\n\t                                double longitude = location.getLongitude();\n\t                        }\n\t\n\t                        public void onStatusChanged(String provider, int status,\n\t                                        Bundle extras) {\n\t                        }\n\t\n\t                        public void onProviderEnabled(String provider) {\n\t                        }\n\t\n\t                        public void onProviderDisabled(String provider) {\n\t                        }\n\t                };\n\t                // 3.向LocationManager 注册一个LocationListener。\n\t                Criteria criteria = new Criteria();\n\t                criteria.setAccuracy(Criteria.ACCURACY_COARSE);\n\t                criteria.setAltitudeRequired(false);\n\t                criteria.setCostAllowed(true);\n\t                criteria.setPowerRequirement(Criteria.POWER_LOW);\n\t                String provider = locationManager.getBestProvider(criteria, true); // 根据Criteria\n\t                                                                                                                                                        // 的设置获取一个最佳的Provider\n\t                locationManager\n\t                                .requestLocationUpdates(provider, 5000, 0, myGPSListener);\n\t                // 4.移除LocationManager 注册的 LocationListener。\n\t                locationManager.removeUpdates(myGPSListener);\n\t\n\t        }\n\t\n\t        // 当前网络是否连接\n\t        public boolean isNetConnecting() {\n\t                ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t                NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t                if (networkInfo == null || !networkInfo.isConnected()) {\n\t                        // info.setConnected(false);\n\t                        return false;\n\t                } else {\n\t                        // info.setConnected(true);\n\t                        return true;\n\t                }\n\t        }\n\t\n\t        // 获取信号强度\n\t        public void getPhoneState() {\n\t                // 1. 创建telephonyManager 对象。\n\t                TelephonyManager telephonyManager = (TelephonyManager) /* context. */getSystemService(Context.TELEPHONY_SERVICE);\n\t                // 2. 创建PhoneStateListener 对象\n\t                PhoneStateListener MyPhoneListener = new PhoneStateListener() {\n\t                        @Override\n\t                        public void onCellLocationChanged(CellLocation location) {\n\t                                if (location instanceof GsmCellLocation) {// gsm网络\n\t                                        int CID = ((GsmCellLocation) location).getCid();\n\t                                } else if (location instanceof CdmaCellLocation) {// 其他CDMA等网络\n\t                                        int ID = ((CdmaCellLocation) location).getBaseStationId();\n\t                                }\n\t                        }\n\t\n\t                        @Override\n\t                        public void onServiceStateChanged(ServiceState serviceState) {\n\t                                super.onServiceStateChanged(serviceState);\n\t                        }\n\t\n\t                        @Override\n\t                        public void onSignalStrengthsChanged(SignalStrength signalStrength) {\n\t                                int asu = signalStrength.getGsmSignalStrength();\n\t                                int dbm = -113 + 2 * asu; // 信号强度\n\t                                super.onSignalStrengthsChanged(signalStrength);\n\t                        }\n\t                };\n\t                // 3. 监听信号改变\n\t                telephonyManager.listen(MyPhoneListener,\n\t                                PhoneStateListener.LISTEN_SIGNAL_STRENGTHS);\n\t\n\t                /*\n\t                 * 可能需要的权限 <uses-permission\n\t                 * android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n\t                 * <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"\n\t                 * /> <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\t                 */\n\t        }\n\t\n\t        // 获取手机可用内存和总内存\n\t        private String getSystemMemory() {\n\t                /*\n\t                 * 在Android开发中，有时候我们想获取手机的一些硬件信息，比如android手机的总内存和可用内存大小。这个该如何实现呢？\n\t                 * 通过读取文件\"/proc/meminfo\"\n\t                 * 的信息能够获取手机Memory的总量，而通过ActivityManager.getMemoryInfo\n\t                 * (ActivityManager.MemoryInfo)方法可以获取当前的可用Memory量。\n\t                 * \"/proc/meminfo\"文件记录了android手机的一些内存信息\n\t                 * ，在命令行窗口里输入\"adb shell\"，进入shell环境，输入\n\t                 * \"cat /proc/meminfo\"即可在命令行里显示meminfo文件的内容，具体如下所示。\n\t                 * \n\t                 * C:\\Users\\Figo>adb shell # cat /proc/meminfo cat /proc/meminfo\n\t                 * MemTotal: 94096 kB MemFree: 1684 kB Buffers: 16 kB Cached: 27160 kB\n\t                 * SwapCached: 0 kB Active: 35392 kB Inactive: 44180 kB Active(anon):\n\t                 * 26540 kB Inactive(anon): 28244 kB Active(file): 8852 kB\n\t                 * Inactive(file): 15936 kB Unevictable: 280 kB Mlocked: 0 kB *\n\t                 * SwapTotal: 0 kB SwapFree: 0 kB Dirty: 0 kB Writeback: 0 kB AnonPages:\n\t                 * 52688 kB Mapped: 17960 kB Slab: 3816 kB SReclaimable: 936 kB\n\t                 * SUnreclaim: 2880 kB PageTables: 5260 kB NFS_Unstable: 0 kB Bounce: 0\n\t                 * kB WritebackTmp: 0 kB CommitLimit: 47048 kB Committed_AS: 1483784 kB\n\t                 * VmallocTotal: 876544 kB VmallocUsed: 15456 kB VmallocChunk: 829444 kB\n\t                 * #\n\t                 * \n\t                 * 下面先对\"/proc/meminfo\"文件里列出的字段进行粗略解释： MemTotal: 所有可用RAM大小。 MemFree:\n\t                 * LowFree与HighFree的总和，被系统留着未使用的内存。 Buffers: 用来给文件做缓冲大小。 Cached:\n\t                 * 被高速缓冲存储器（cache memory）用的内存的大小（等于diskcache minus SwapCache）。\n\t                 * SwapCached:被高速缓冲存储器（cache\n\t                 * memory）用的交换空间的大小。已经被交换出来的内存，仍然被存放在swapfile中，\n\t                 * 用来在需要的时候很快的被替换而不需要再次打开I/O端口。 Active:\n\t                 * 在活跃使用中的缓冲或高速缓冲存储器页面文件的大小，除非非常必要，否则不会被移作他用。 Inactive:\n\t                 * 在不经常使用中的缓冲或高速缓冲存储器页面文件的大小，可能被用于其他途径。 SwapTotal: 交换空间的总大小。 SwapFree:\n\t                 * 未被使用交换空间的大小。 Dirty: 等待被写回到磁盘的内存大小。 Writeback: 正在被写回到磁盘的内存大小。\n\t                 * AnonPages：未映射页的内存大小。 Mapped: 设备和文件等映射的大小。 Slab:\n\t                 * 内核数据结构缓存的大小，可以减少申请和释放内存带来的消耗。 SReclaimable:可收回Slab的大小。\n\t                 * SUnreclaim：不可收回Slab的大小（SUnreclaim+SReclaimable＝Slab）。\n\t                 * PageTables：管理内存分页页面的索引表的大小。 NFS_Unstable:不稳定页表的大小。\n\t                 * 要获取android手机总内存大小，只需读取\"/proc/meminfo\"文件的第1行，并进行简单的字符串处理即可。\n\t                 */\n\t                String availMemory = getAvailMemory();\n\t                String totalMemory = getTotalMemory();\n\t                return \"可用内存=\" + availMemory + \"\\n\" + \"总内存=\" + totalMemory;\n\t\n\t        }// 手机的内存信息主要在/proc/meminfo文件中，其中第一行是总内存，而剩余内存可通过ActivityManager.MemoryInfo得到。\n\t\n\t        private String getAvailMemory() {// 获取android当前可用内存大小\n\t                ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\n\t                MemoryInfo mi = new MemoryInfo();\n\t                am.getMemoryInfo(mi);\n\t                // mi.availMem; 当前系统的可用内存\n\t                return Formatter.formatFileSize(getBaseContext(), mi.availMem);// 将获取的内存大小规格化\n\t        }\n\t\n\t        private String getTotalMemory() {\n\t                String str1 = \"/proc/meminfo\";// 系统内存信息文件\n\t                String str2;\n\t                String[] arrayOfString;\n\t                long initial_memory = 0;\n\t                try {\n\t                        FileReader localFileReader = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(\n\t                                        localFileReader, 8192);\n\t                        str2 = localBufferedReader.readLine();// 读取meminfo第一行，系统总内存大小\n\t\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (String num : arrayOfString) {\n\t                                Log.i(str2, num + \"\\t\");\n\t                        }\n\t\n\t                        initial_memory = Integer.valueOf(arrayOfString[1]).intValue() * 1024;// 获得系统总内存，单位是KB，乘以1024转换为Byte\n\t                        localBufferedReader.close();\n\t\n\t                } catch (IOException e) {\n\t                }\n\t                return Formatter.formatFileSize(getBaseContext(), initial_memory);// Byte转换为KB或者MB，内存大小规格化\n\t        }\n\t\n\t        // 获取手机CPU信息\n\t        private String getCpuInfo() {\n\t                String str1 = \"/proc/cpuinfo\";\n\t                String str2 = \"\";\n\t                String[] cpuInfo = { \"\", \"\" }; // 1-cpu型号 //2-cpu频率\n\t                String[] arrayOfString;\n\t                try {\n\t                        FileReader fr = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(fr, 8192);\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (int i = 2; i < arrayOfString.length; i++) {\n\t                                cpuInfo[0] = cpuInfo[0] + arrayOfString[i] + \" \";\n\t                        }\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        cpuInfo[1] += arrayOfString[2];\n\t                        localBufferedReader.close();\n\t                } catch (IOException e) {\n\t                }\n\t                // Log.i(TAG, \"cpuinfo:\" + cpuInfo[0] + \" \" + cpuInfo[1]);\n\t                return \"1-cpu型号:\" + cpuInfo[0] + \"2-cpu频率:\" + cpuInfo[1];\n\t        }// 和内存信息同理，cpu信息可通过读取/proc/cpuinfo文件来得到，其中第一行为cpu型号，第二行为cpu频率。\n\t\n\t        /*\n\t         * 一、Android 获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)\n\t         * 1、通过PackageManager可获取手机端已安装的apk文件的信息，具体代码如下: PackageManager\n\t         * packageManager = this.getPackageManager(); List<PackageInfo>\n\t         * packageInfoList = packageManager.getInstalledPackages(0);\n\t         * 通过上述方法，可得到手机中安装的所有应用程序，包括手动安装的apk包的信息、、系统预装的应用软件的信息，要区分这两类软件可使用以下方法:\n\t         * （a）从packageInfoList获取的packageInfo\n\t         * ，再通过packageInfo.applicationInfo获取applicationInfo。\n\t         * （b）判断(applicationInfo.flags &\n\t         * ApplicationInfo.FLAG_SYSTEM)的值，该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用。\n\t         * (1)获取应用的代码: public static List<PackageInfo> getAllApps(Context context) {\n\t         * List<PackageInfo> apps = new ArrayList<PackageInfo>(); PackageManager\n\t         * pManager = context.getPackageManager(); //获取手机内所有应用 List<PackageInfo>\n\t         * paklist = pManager.getInstalledPackages(0); for (int i = 0; i <\n\t         * paklist.size(); i++) { PackageInfo pak = (PackageInfo) paklist.get(i);\n\t         * //判断是否为非系统预装的应用程序 if ((pak.applicationInfo.flags &\n\t         * pak.applicationInfo.FLAG_SYSTEM) <= 0) { apps.add(pak); } } return apps;\n\t         * } (2)、获取图片、应用名、包名: PackageManager pManager =\n\t         * MessageSendActivity.this.getPackageManager(); List<PackageInfo> appList =\n\t         * Utils.getAllApps(MessageSendActivity.this); for(int\n\t         * i=0;i<appList.size();i++) { PackageInfo pinfo = appList.get(i); shareItem\n\t         * = new ShareItemInfo();\n\t         * shareItem.setIcon(pManager.getApplicationIcon(pinfo.applicationInfo));\n\t         * shareItem\n\t         * .setLabel(pManager.getApplicationLabel(pinfo.applicationInfo).toString\n\t         * ()); shareItem.setPackageName(pinfo.applicationInfo.packageName); }\n\t         * 其中ShareItemInfo 类自己写的，各位可以忽略 (3)获取支持分享的应用的代码： public static\n\t         * List<ResolveInfo> getShareApps(Context context){ List<ResolveInfo> mApps\n\t         * = new ArrayList<ResolveInfo>(); Intent intent=new\n\t         * Intent(Intent.ACTION_SEND,null);\n\t         * intent.addCategory(Intent.CATEGORY_DEFAULT);\n\t         * intent.setType(\"text/plain\"); PackageManager pManager =\n\t         * context.getPackageManager(); mApps =\n\t         * pManager.queryIntentActivities(intent\n\t         * ,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT); return mApps; }\n\t         * 由于该方法，返回的并不是PackageInfo 对象。而是ResolveInfo。因此获取图片、应用名、包名的方法不一样，如下：\n\t         * PackageManager pManager = MessageSendActivity.this.getPackageManager();\n\t         * List<ResolveInfo> resolveList =\n\t         * Utils.getShareApps(MessageSendActivity.this); for(int\n\t         * i=0;i<resolveList.size();i++) { ResolveInfo resolve = resolveList.get(i);\n\t         * ShareItemInfo shareItem = new ShareItemInfo(); //set Icon\n\t         * shareItem.setIcon(resolve.loadIcon(pManager)); //set Application Name\n\t         * shareItem.setLabel(resolve.loadLabel(pManager).toString()); //set Package\n\t         * Name shareItem.setPackageName(resolve.activityInfo.packageName); } 总结： 通过\n\t         * PackageInfo 获取具体信息方法： 包名获取方法：packageInfo.packageName\n\t         * icon获取获取方法：packageManager.getApplicationIcon(applicationInfo)\n\t         * 应用名称获取方法：packageManager.getApplicationLabel(applicationInfo)\n\t         * 使用权限获取方法：packageManager\n\t         * .getPackageInfo(packageName,PackageManager.GET_PERMISSIONS)\n\t         * .requestedPermissions 通过 ResolveInfo 获取具体信息方法：\n\t         * 包名获取方法：resolve.activityInfo.packageName\n\t         * icon获取获取方法：resolve.loadIcon(packageManager)\n\t         * 应用名称获取方法：resolve.loadLabel(packageManager).toString()\n\t         */\n\t        public String getSimCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                // <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n\t                /*\n\t                 * TelephonyManager类主要提供了一系列用于访问与手机通讯相关的状态和信息的get方法。其中包括手机SIM的状态和信息\n\t                 * 、电信网络的状态及手机用户的信息。\n\t                 * 在应用程序中可以使用这些get方法获取相关数据。TelephonyManager类的对象可以通过Context\n\t                 * .getSystemService(Context.TELEPHONY_SERVICE)\n\t                 * 方法来获得，需要注意的是有些通讯信息的获取对应用程序的权限有一定的限制\n\t                 * ，在开发的时候需要为其添加相应的权限。以下列出TelephonyManager类所有方法及说明：\n\t                 * TelephonyManager提供设备上获取通讯服务信息的入口。 应用程序可以使用这个类方法确定的电信服务商和国家\n\t                 * 以及某些类型的用户访问信息。 应用程序也可以注册一个监听器到电话收状态的变化。不需要直接实例化这个类\n\t                 * 使用Context.getSystemService (Context.TELEPHONY_SERVICE)来获取这个类的实例。\n\t                 */\n\t\n\t                // 解释：\n\t                // IMSI是国际移动用户识别码的简称(International Mobile Subscriber Identity)\n\t                // IMSI共有15位，其结构如下：\n\t                // MCC+MNC+MIN\n\t                // MCC：Mobile Country Code，移动国家码，共3位，中国为460;\n\t                // MNC:Mobile NetworkCode，移动网络码，共2位\n\t                // 在中国，移动的代码为电00和02，联通的代码为01，电信的代码为03\n\t                // 合起来就是（也是Android手机中APN配置文件中的代码）：\n\t                // 中国移动：46000 46002\n\t                // 中国联通：46001\n\t                // 中国电信：46003\n\t                // 举例，一个典型的IMSI号码为460030912121001\n\t\n\t                // IMEI是International Mobile Equipment Identity （国际移动设备标识）的简称\n\t                // IMEI由15位数字组成的”电子串号”，它与每台手机一一对应，而且该码是全世界唯一的\n\t                // 其组成为：\n\t                // 1. 前6位数(TAC)是”型号核准号码”，一般代表机型\n\t                // 2. 接着的2位数(FAC)是”最后装配号”，一般代表产地\n\t                // 3. 之后的6位数(SNR)是”串号”，一般代表生产顺序号\n\t                // 4. 最后1位数(SP)通常是”0″，为检验码，目前暂备用\n\t\n\t                TelephonyManager tm = (TelephonyManager) this\n\t                                .getSystemService(TELEPHONY_SERVICE);\n\t                /*\n\t                 * 电话状态： 1.tm.CALL_STATE_IDLE=0 无活动，无任何状态时 2.tm.CALL_STATE_RINGING=1\n\t                 * 响铃，电话进来时 3.tm.CALL_STATE_OFFHOOK=2 摘机\n\t                 */\n\t                tm.getCallState();// int\n\t\n\t                /*\n\t                 * 电话方位：\n\t                 */\n\t                // 返回当前移动终端的位置\n\t                CellLocation location = tm.getCellLocation();\n\t                // 请求位置更新，如果更新将产生广播，接收对象为注册LISTEN_CELL_LOCATION的对象，需要的permission名称为\n\t                // ACCESS_COARSE_LOCATION。\n\t                location.requestLocationUpdate();\n\t\n\t                /**\n\t                 * 获取数据活动状态\n\t                 * \n\t                 * DATA_ACTIVITY_IN 数据连接状态：活动，正在接受数据 DATA_ACTIVITY_OUT 数据连接状态：活动，正在发送数据\n\t                 * DATA_ACTIVITY_INOUT 数据连接状态：活动，正在接受和发送数据 DATA_ACTIVITY_NONE\n\t                 * 数据连接状态：活动，但无数据发送和接受\n\t                 */\n\t                tm.getDataActivity();\n\t\n\t                /**\n\t                 * 获取数据连接状态\n\t                 * \n\t                 * DATA_CONNECTED 数据连接状态：已连接 DATA_CONNECTING 数据连接状态：正在连接\n\t                 * DATA_DISCONNECTED 数据连接状态：断开 DATA_SUSPENDED 数据连接状态：暂停\n\t                 */\n\t                tm.getDataState();\n\t\n\t                /**\n\t                 * 返回当前移动终端的唯一标识，设备ID\n\t                 * \n\t                 * 如果是GSM网络，返回IMEI；如果是CDMA网络，返回MEID Return null if device ID is not\n\t                 * available.\n\t                 */\n\t                String Imei = tm.getDeviceId();// String\n\t\n\t                /*\n\t                 * 返回移动终端的软件版本，例如：GSM手机的IMEI/SV码。 设备的软件版本号： 例如：the IMEI/SV(software\n\t                 * version) for GSM phones. Return null if the software version is not\n\t                 * available.\n\t                 */\n\t                tm.getDeviceSoftwareVersion();// String\n\t\n\t                /*\n\t                 * 手机号： GSM手机的 MSISDN. Return null if it is unavailable.\n\t                 */\n\t                String phoneNum = tm.getLine1Number();// String\n\t\n\t                /*\n\t                 * 获取ISO标准的国家码，即国际长途区号。 注意：仅当用户已在网络注册后有效。 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkCountryIso();// String\n\t\n\t                /*\n\t                 * MCC+MNC(mobile country code + mobile network code) 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkOperator();// String\n\t\n\t                /*\n\t                 * 按照字母次序的current registered operator(当前已注册的用户)的名字 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t\n\t                tm.getNetworkOperatorName();// String\n\t\n\t                /*\n\t                 * 当前使用的网络类型： 例如： NETWORK_TYPE_UNKNOWN 网络类型未知 0 NETWORK_TYPE_GPRS GPRS网络\n\t                 * 1 NETWORK_TYPE_EDGE EDGE网络 2 NETWORK_TYPE_UMTS UMTS网络 3\n\t                 * NETWORK_TYPE_HSDPA HSDPA网络 8 NETWORK_TYPE_HSUPA HSUPA网络 9\n\t                 * NETWORK_TYPE_HSPA HSPA网络 10 NETWORK_TYPE_CDMA CDMA网络,IS95A 或 IS95B. 4\n\t                 * NETWORK_TYPE_EVDO_0 EVDO网络, revision 0. 5 NETWORK_TYPE_EVDO_A EVDO网络,\n\t                 * revision A. 6 NETWORK_TYPE_1xRTT 1xRTT网络 7\n\t                 */\n\t                tm.getNetworkType();// int\n\t\n\t                /*\n\t                 * 手机类型： 例如： PHONE_TYPE_NONE 无信号 PHONE_TYPE_GSM GSM信号 PHONE_TYPE_CDMA\n\t                 * CDMA信号\n\t                 */\n\t                tm.getPhoneType();// int\n\t\n\t                /*\n\t                 * Returns the ISO country code equivalent for the SIM provider's\n\t                 * country code. 获取ISO国家码，相当于提供SIM卡的国家码。\n\t                 */\n\t                tm.getSimCountryIso();// String\n\t\n\t                /*\n\t                 * Returns the MCC+MNC (mobile country code + mobile network code) of\n\t                 * the provider of the SIM. 5 or 6 decimal digits.\n\t                 * 获取SIM卡提供的移动国家码和移动网络码.5或6位的十进制数字. SIM卡的状态必须是\n\t                 * SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperator();// String\n\t\n\t                /*\n\t                 * 服务商名称： 例如：中国移动、联通 SIM卡的状态必须是 SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperatorName();// String\n\t\n\t                /*\n\t                 * SIM卡的序列号： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSimSerialNumber();// String\n\t\n\t                /*\n\t                 * SIM的状态信息： SIM_STATE_UNKNOWN 未知状态 0 SIM_STATE_ABSENT 没插卡 1\n\t                 * SIM_STATE_PIN_REQUIRED 锁定状态，需要用户的PIN码解锁 2 SIM_STATE_PUK_REQUIRED\n\t                 * 锁定状态，需要用户的PUK码解锁 3 SIM_STATE_NETWORK_LOCKED 锁定状态，需要网络的PIN码解锁 4\n\t                 * SIM_STATE_READY 就绪状态 5\n\t                 */\n\t                tm.getSimState();// int\n\t\n\t                /*\n\t                 * 唯一的用户ID： 例如：IMSI(国际移动用户识别码) for a GSM phone. 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSubscriberId();// String\n\t\n\t                /*\n\t                 * 取得和语音邮件相关的标签，即为识别符 需要权限：READ_PHONE_STATE\n\t                 */\n\t\n\t                tm.getVoiceMailAlphaTag();// String\n\t\n\t                /*\n\t                 * 获取语音邮件号码： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getVoiceMailNumber();// String\n\t\n\t                /*\n\t                 * ICC卡是否存在\n\t                 */\n\t                tm.hasIccCard();// boolean\n\t\n\t                /*\n\t                 * 是否漫游: (在GSM用途下)\n\t                 */\n\t                tm.isNetworkRoaming();//\n\t\n\t                String ProvidersName = null;\n\t                // 返回唯一的用户ID;就是这张卡的编号神马的\n\t                String IMSI = tm.getSubscriberId(); // 国际移动用户识别码\n\t                // IMSI号前面3位460是国家，紧接着后面2位00 02是中国移动，01是中国联通，03是中国电信。\n\t                System.out.println(IMSI);\n\t                if (IMSI.startsWith(\"46000\") || IMSI.startsWith(\"46002\")) {\n\t                        ProvidersName = \"中国移动\";\n\t                } else if (IMSI.startsWith(\"46001\")) {\n\t\n\t                        ProvidersName = \"中国联通\";\n\t\n\t                } else if (IMSI.startsWith(\"46003\")) {\n\t\n\t                        ProvidersName = \"中国电信\";\n\t\n\t                }\n\t                // 返回当前移动终端附近移动终端的信息\n\t                /*\n\t                 * 附近的电话的信息: 类型：List<NeighboringCellInfo>\n\t                 * 需要权限：android.Manifest.permission#ACCESS_COARSE_UPDATES\n\t                 */\n\t                List<NeighboringCellInfo> infos = tm.getNeighboringCellInfo();\n\t                for (NeighboringCellInfo info : infos) {\n\t                        // 获取邻居小区号\n\t                        int cid = info.getCid();\n\t                        // 获取邻居小区LAC，LAC:\n\t                        // 位置区域码。为了确定移动台的位置，每个GSM/PLMN的覆盖区都被划分成许多位置区，LAC则用于标识不同的位置区。\n\t                        info.getLac();\n\t                        info.getNetworkType();\n\t                        info.getPsc();\n\t                        // 获取邻居小区信号强度\n\t                        info.getRssi();\n\t                }\n\t                return \"手机号码:\" + phoneNum + \"\\n\" + \"服务商：\" + ProvidersName + \"\\n\"\n\t                                + \"IMEI：\" + Imei;\n\t\n\t        }\n\t\n\t        // 显示信息对话框\n\t        public void showDialog(String title, String info) {\n\t                AlertDialog dialog = new AlertDialog.Builder(this)\n\t                                .setTitle(title)\n\t                                .setMessage(info)\n\t                                .setPositiveButton(\"close\",\n\t                                                new DialogInterface.OnClickListener() {\n\t                                                        @Override\n\t                                                        public void onClick(DialogInterface dialog,\n\t                                                                        int which) {\n\t                                                                dialog.cancel();\n\t                                                                dialog = null;\n\t                                                        }\n\t                                                }).create();\n\t                dialog.show();\n\t        }\n\t}\n\n\n```\n","slug":"mobile-phone-information-acquisition","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszg0019v0zi5vdg2ghv"},{"title":"SQLite随机取n行的方法","date":"2013-03-01T16:00:00.000Z","_content":"\n百度SQLite 随机取n行的方法大多数如下：\n\n```java\n\tSELECT key,value FROM dict ORDER BY RANDOM(key) LIMIT 1\n```\n那如何写入android的SQLite？LIMIT 1\n我也懂了就是拿到一条数据，可能是key给我误导了，\n我运行时一直报错，现在才调试好。\n现在分享给大家，代码如下：\n\n```java\n\tCursor cursor = db.query(\"表名\", new String[] { \"*\" }, null, null,null, null, \"RANDOM()\"); \n```\n","source":"_posts/methods-SQLite-were-randomly-selected-for-the-N.md","raw":"title: SQLite随机取n行的方法\ndate: 2013-03-02\ncategories: Android\ntags: [Android,SQLite]\n---\n\n百度SQLite 随机取n行的方法大多数如下：\n\n```java\n\tSELECT key,value FROM dict ORDER BY RANDOM(key) LIMIT 1\n```\n那如何写入android的SQLite？LIMIT 1\n我也懂了就是拿到一条数据，可能是key给我误导了，\n我运行时一直报错，现在才调试好。\n现在分享给大家，代码如下：\n\n```java\n\tCursor cursor = db.query(\"表名\", new String[] { \"*\" }, null, null,null, null, \"RANDOM()\"); \n```\n","slug":"methods-SQLite-were-randomly-selected-for-the-N","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszi001cv0zi5oupa31n"},{"title":"解决Android视频锁屏还在继续播放","date":"2014-11-23T16:00:00.000Z","_content":"###一、锁屏\nT_T被整哭了，我明知道锁屏走了onDestroy()方法，没有着手这个，反而去监听锁屏，还是`太菜`，`基础不牢`。\n\n看日志发现，主Activity先onDestroy()了，随即又onCreate()，原因如下：\n\n视频本身是横屏，手机界面是竖屏，锁屏操作存在一个横屏转竖屏的过程，这个过程如果不加android:configChanges=\"orientation\",\nActivity会自动重新走一遍它的生命周期，即先销毁再重新创建，加上后只会调用onConfigurationChanged。`哎，我知道这个，怎么没有想到这点啊`。\n\n另外如果你的target > 13时，还必须得加上“ScreenSize”。\n\n<!-- more -->\n\n```java\n <activity\n  android:name=\"com.xiaomolong.ufosay.ui.VideoPlayActivity\"\n  android:configChanges=\"keyboardHidden|orientation|screenSize\"\n  android:label=\"PlayingActivity\"\n  android:screenOrientation=\"landscape\"\n  android:theme=\"@android:style/Theme.Holo.Light.NoActionBar.Fullscreen\" >\n  </activity>\n```\n\n###二、记录视频进度\n\n视频播放点击Home建和锁屏时需要保存播放的进度，因此有必要了解下onSaveInstanceState和onRestoreInstanceState触发的时机\n\n* 1、onSaveInstanceState\n\n(1)、当用户按下HOME键时。\n\n这是显而易见的，系统不知道你按下HOME后要运行多少其他的程序，自然也不知道activity A是否会被销毁，故系统会调用onSaveInstanceState，让用户有机会保存某些非永久性的数据。以下几种情况的分析都遵循该原则\n\n(2)、长按HOME键，选择运行其他的程序时。\n\n(3)、按下电源按键（关闭屏幕显示）时。\n\n(4)、从activity A中启动一个新的activity时。\n\n(5)、屏幕方向切换时，例如从竖屏切换到横屏时。\n\n在屏幕切换之前，系统会销毁activity A，在屏幕切换之后系统又会自动地创建activity A，所以onSaveInstanceState一定会被执行\n\n* 2、onRestoreInstanceState\n\nonRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用，例如，当正在显示activity A的时候，用户按下HOME键回到主界面，然后用户紧接着又返回到activity A，这种情况下activity A一般不会因为内存的原因被系统销毁，故activity A的onRestoreInstanceState方法不会被执行\n\n另外，onRestoreInstanceState的bundle参数也会传递到onCreate方法中，你也可以选择在onCreate方法中做数据还原。\n\n```java\n  /**\n\t * 记录播放位置\n\t */\n\tprivate int mLastPos = 0;\n  protected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.video_play);\n\t\tif (savedInstanceState != null) {\n\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t}\n\t}\n\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n\t\tsuper.onRestoreInstanceState(savedInstanceState);\n\t\tLog.d(\"wxl\", \"onRestoreInstanceState start\");\n\t\tif (savedInstanceState != null) {\n\t\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t\tLog.d(\"wxl\", \"onRestoreInstanceState \" + mLastPos);\n\t\t}\n\t}\n\n\t@Override\n\tprotected void onSaveInstanceState(Bundle outState) {\n\t\tsuper.onSaveInstanceState(outState);\n\t\tLog.d(\"wxl\", \"onSaveInstanceState start\");\n\t\toutState.putInt(\"LastPosition\", mLastPos);\n\t}\n```\n\n###三、附录\n\n[Android锁屏后主Activity的onDestroy方法被调用](http://blog.csdn.net/terrantian/article/details/18670381)\n\n[onSaveInstanceState和onRestoreInstanceState触发的时机](http://android.blog.51cto.com/268543/634646/)\n\n[Android 监听屏幕锁屏,用户解锁](http://www.cnblogs.com/a284628487/p/3345317.html)\n","source":"_posts/lock-screen-video.md","raw":"title: 解决Android视频锁屏还在继续播放\ndate: 2014-11-24\ncategories: [Android]\ntags: [Android,Video]\n---\n###一、锁屏\nT_T被整哭了，我明知道锁屏走了onDestroy()方法，没有着手这个，反而去监听锁屏，还是`太菜`，`基础不牢`。\n\n看日志发现，主Activity先onDestroy()了，随即又onCreate()，原因如下：\n\n视频本身是横屏，手机界面是竖屏，锁屏操作存在一个横屏转竖屏的过程，这个过程如果不加android:configChanges=\"orientation\",\nActivity会自动重新走一遍它的生命周期，即先销毁再重新创建，加上后只会调用onConfigurationChanged。`哎，我知道这个，怎么没有想到这点啊`。\n\n另外如果你的target > 13时，还必须得加上“ScreenSize”。\n\n<!-- more -->\n\n```java\n <activity\n  android:name=\"com.xiaomolong.ufosay.ui.VideoPlayActivity\"\n  android:configChanges=\"keyboardHidden|orientation|screenSize\"\n  android:label=\"PlayingActivity\"\n  android:screenOrientation=\"landscape\"\n  android:theme=\"@android:style/Theme.Holo.Light.NoActionBar.Fullscreen\" >\n  </activity>\n```\n\n###二、记录视频进度\n\n视频播放点击Home建和锁屏时需要保存播放的进度，因此有必要了解下onSaveInstanceState和onRestoreInstanceState触发的时机\n\n* 1、onSaveInstanceState\n\n(1)、当用户按下HOME键时。\n\n这是显而易见的，系统不知道你按下HOME后要运行多少其他的程序，自然也不知道activity A是否会被销毁，故系统会调用onSaveInstanceState，让用户有机会保存某些非永久性的数据。以下几种情况的分析都遵循该原则\n\n(2)、长按HOME键，选择运行其他的程序时。\n\n(3)、按下电源按键（关闭屏幕显示）时。\n\n(4)、从activity A中启动一个新的activity时。\n\n(5)、屏幕方向切换时，例如从竖屏切换到横屏时。\n\n在屏幕切换之前，系统会销毁activity A，在屏幕切换之后系统又会自动地创建activity A，所以onSaveInstanceState一定会被执行\n\n* 2、onRestoreInstanceState\n\nonRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用，例如，当正在显示activity A的时候，用户按下HOME键回到主界面，然后用户紧接着又返回到activity A，这种情况下activity A一般不会因为内存的原因被系统销毁，故activity A的onRestoreInstanceState方法不会被执行\n\n另外，onRestoreInstanceState的bundle参数也会传递到onCreate方法中，你也可以选择在onCreate方法中做数据还原。\n\n```java\n  /**\n\t * 记录播放位置\n\t */\n\tprivate int mLastPos = 0;\n  protected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.video_play);\n\t\tif (savedInstanceState != null) {\n\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t}\n\t}\n\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n\t\tsuper.onRestoreInstanceState(savedInstanceState);\n\t\tLog.d(\"wxl\", \"onRestoreInstanceState start\");\n\t\tif (savedInstanceState != null) {\n\t\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t\tLog.d(\"wxl\", \"onRestoreInstanceState \" + mLastPos);\n\t\t}\n\t}\n\n\t@Override\n\tprotected void onSaveInstanceState(Bundle outState) {\n\t\tsuper.onSaveInstanceState(outState);\n\t\tLog.d(\"wxl\", \"onSaveInstanceState start\");\n\t\toutState.putInt(\"LastPosition\", mLastPos);\n\t}\n```\n\n###三、附录\n\n[Android锁屏后主Activity的onDestroy方法被调用](http://blog.csdn.net/terrantian/article/details/18670381)\n\n[onSaveInstanceState和onRestoreInstanceState触发的时机](http://android.blog.51cto.com/268543/634646/)\n\n[Android 监听屏幕锁屏,用户解锁](http://www.cnblogs.com/a284628487/p/3345317.html)\n","slug":"lock-screen-video","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszk001gv0zi5rae2zpt"},{"title":"刷新RecyclerView/ListView某个item状态","date":"2015-07-07T16:00:00.000Z","_content":"\n### 1、比如列表有收藏按钮，当前页面收藏\n\n```java\nprivate List<Map<String, String>> mList = new ArrayList<>();\n...\n走收藏接口，在成功后\n  mList.get(position).put(\"favorites\", \"1\");\n  notifyDataSetChanged();\n```\n\n<!-- more -->\n\n### 2、比如列表有收藏按钮，下个页面进行收藏\n\n这种情况下，收藏成功后，返回需要刷新上一个页面状态\n\nDataAdapter\n\n```java\n Intent intent = new Intent(activity, NextActivity.class); \n intent.putExtra(\"userhead\", doctorList.get(position) .getHeadImg()); \n intent.putExtra(\"username\", doctorList.get(position) .getName()); \n intent.putExtra(\"userId\", doctorList.get(position) .getUserinfo_djid()); \n intent.putExtra(\"position\", position); startActivityForResult(intent,AppConfig.REQUEST_CODE_DIALOGUE);\n```\n\nNextActivity.class\n\n```java\n收藏成功后，返回\nIntent intent;\nintent = new Intent();\nBundle bundle = new Bundle();\nbundle.putInt(\"position\", position);\nintent.putExtras(bundle);\nsetResult(RESULT_OK, intent);\n finish();\n```\n\nonActivityResult\n\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n            if (requestCode == AppConfig.REQUEST_CODE_DIALOGUE\n                && resultCode == RESULT_OK) {\n            int position = data.getExtras().getInt(\"position\");\n            Object object = dataAdapter.getItem(position);\n            if (object instanceof DoctorList) {\n                DoctorList doctorList = (DoctorList) object;\n                doctorList.setUnreadnum(\"0\");\n                dataAdapter.notifyDataSetChanged();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n```\n\nDoctorList\n\n```java\nclass DialogueBean {\n    private String result;\n    private ArrayList<DoctorList> doctorList;\npublic class DoctorList implements Serializable {\n        private String userinfo_djid;\n        private String headImg;\n        private String name;\n        private String unreadnum;\n        private String infoContent;\n        private String sendDate;\n        private String ky_flag;\n        private String tobewritten;\n}\n}\n```\n\n### 3、以上只是未重新请求接口下刷新View，未真正局部刷新 \n\n* ListView局部刷新\n\n```java\n   private List<Map<String, Object>> mData;\n   private ListView mListView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mData = getData();\n        MyAdapter adapter = new MyAdapter(this);\n        mListView = (ListView) findViewById(R.id.listView);\n        mListView.setAdapter(adapter);\n    }\n\n    private List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<>();\n        Map<String, Object> map;\n        for (int i = 0; i < 50; i++) {\n            map = new HashMap<>();\n            map.put(\"title\", \"G\" + i);\n            list.add(map);\n        }\n        return list;\n    }\n\n\n    public class MyAdapter extends BaseAdapter {\n        private LayoutInflater mInflater;\n\n        public MyAdapter(Context context) {\n            this.mInflater = LayoutInflater.from(context);\n        }\n\n        @Override\n        public int getCount() {\n            return mData.size();\n        }\n\n        @Override\n        public Object getItem(int arg0) {\n            return mData.get(arg0);\n        }\n\n        @Override\n        public long getItemId(int arg0) {\n            return arg0;\n        }\n\n        @Override\n        public View getView(final int position, View convertView, ViewGroup parent) {\n            Log.d(\"wxl\", \"getView=\" + position);\n            ViewHolder holder = null;\n            if (convertView == null) {\n                holder = new ViewHolder();\n                convertView = mInflater.inflate(R.layout.listview_item, null);\n                holder.textview = (TextView) convertView.findViewById(R.id.textview);\n                convertView.setTag(holder);\n            } else {\n                holder = (ViewHolder) convertView.getTag();\n            }\n            holder.textview.setText((String) mData.get(position).get(\"title\"));\n            convertView.setOnClickListener(new View.OnClickListener() {\n\n                @Override\n                public void onClick(View v) {\n                    updateItemView(position);//状态改变时，调用，这里是为了演示方便\n                }\n            });\n\n\n            return convertView;\n        }\n\n        public class ViewHolder {\n            public TextView textview;\n        }\n    }\n\n    public void updateItemView(int position) {\n        //得到第一个可显示控件的位置，\n        int visiblePosition = mListView.getFirstVisiblePosition();\n        //只有当要更新的view在可见的位置时才更新，不可见时，跳过不更新\n        int index = position - visiblePosition;\n        if (index >= 0) {\n            //得到要更新的item的view\n            View view = mListView.getChildAt(index);\n            //从view中取得holder\n            MyAdapter.ViewHolder holder = (MyAdapter.ViewHolder) view.getTag();\n            holder.textview.setText(\"测试数据\");\n            mData.get(index).put(\"title\", \"测试数据\");\n        }\n    }\n}\n```\nlistview_item.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:id=\"@+id/textview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_gravity=\"center_vertical\"\n        android:gravity=\"center_vertical\" />\n</LinearLayout>\n```\n\n* RecyclerView局部刷新\n\nRecyclerView已经替代了ListView，局部刷新很有必要知道\n\n```java\n收藏成功后\nmList.get(position).put(\"favorites\", \"0\");\nViewHolder viewHolder = (ViewHolder) mRecyclerView.findViewHolderForAdapterPosition(position);\nviewHolder.mCheck.setBackgroundResource(R.mipmap.collect_normal);\n```\n","source":"_posts/listView_item_state.md","raw":"title: 刷新RecyclerView/ListView某个item状态\ndate: 2015-07-08\ncategories: [Android]\ntags: [Android,SQLite]\n---\n\n### 1、比如列表有收藏按钮，当前页面收藏\n\n```java\nprivate List<Map<String, String>> mList = new ArrayList<>();\n...\n走收藏接口，在成功后\n  mList.get(position).put(\"favorites\", \"1\");\n  notifyDataSetChanged();\n```\n\n<!-- more -->\n\n### 2、比如列表有收藏按钮，下个页面进行收藏\n\n这种情况下，收藏成功后，返回需要刷新上一个页面状态\n\nDataAdapter\n\n```java\n Intent intent = new Intent(activity, NextActivity.class); \n intent.putExtra(\"userhead\", doctorList.get(position) .getHeadImg()); \n intent.putExtra(\"username\", doctorList.get(position) .getName()); \n intent.putExtra(\"userId\", doctorList.get(position) .getUserinfo_djid()); \n intent.putExtra(\"position\", position); startActivityForResult(intent,AppConfig.REQUEST_CODE_DIALOGUE);\n```\n\nNextActivity.class\n\n```java\n收藏成功后，返回\nIntent intent;\nintent = new Intent();\nBundle bundle = new Bundle();\nbundle.putInt(\"position\", position);\nintent.putExtras(bundle);\nsetResult(RESULT_OK, intent);\n finish();\n```\n\nonActivityResult\n\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n            if (requestCode == AppConfig.REQUEST_CODE_DIALOGUE\n                && resultCode == RESULT_OK) {\n            int position = data.getExtras().getInt(\"position\");\n            Object object = dataAdapter.getItem(position);\n            if (object instanceof DoctorList) {\n                DoctorList doctorList = (DoctorList) object;\n                doctorList.setUnreadnum(\"0\");\n                dataAdapter.notifyDataSetChanged();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n```\n\nDoctorList\n\n```java\nclass DialogueBean {\n    private String result;\n    private ArrayList<DoctorList> doctorList;\npublic class DoctorList implements Serializable {\n        private String userinfo_djid;\n        private String headImg;\n        private String name;\n        private String unreadnum;\n        private String infoContent;\n        private String sendDate;\n        private String ky_flag;\n        private String tobewritten;\n}\n}\n```\n\n### 3、以上只是未重新请求接口下刷新View，未真正局部刷新 \n\n* ListView局部刷新\n\n```java\n   private List<Map<String, Object>> mData;\n   private ListView mListView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mData = getData();\n        MyAdapter adapter = new MyAdapter(this);\n        mListView = (ListView) findViewById(R.id.listView);\n        mListView.setAdapter(adapter);\n    }\n\n    private List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<>();\n        Map<String, Object> map;\n        for (int i = 0; i < 50; i++) {\n            map = new HashMap<>();\n            map.put(\"title\", \"G\" + i);\n            list.add(map);\n        }\n        return list;\n    }\n\n\n    public class MyAdapter extends BaseAdapter {\n        private LayoutInflater mInflater;\n\n        public MyAdapter(Context context) {\n            this.mInflater = LayoutInflater.from(context);\n        }\n\n        @Override\n        public int getCount() {\n            return mData.size();\n        }\n\n        @Override\n        public Object getItem(int arg0) {\n            return mData.get(arg0);\n        }\n\n        @Override\n        public long getItemId(int arg0) {\n            return arg0;\n        }\n\n        @Override\n        public View getView(final int position, View convertView, ViewGroup parent) {\n            Log.d(\"wxl\", \"getView=\" + position);\n            ViewHolder holder = null;\n            if (convertView == null) {\n                holder = new ViewHolder();\n                convertView = mInflater.inflate(R.layout.listview_item, null);\n                holder.textview = (TextView) convertView.findViewById(R.id.textview);\n                convertView.setTag(holder);\n            } else {\n                holder = (ViewHolder) convertView.getTag();\n            }\n            holder.textview.setText((String) mData.get(position).get(\"title\"));\n            convertView.setOnClickListener(new View.OnClickListener() {\n\n                @Override\n                public void onClick(View v) {\n                    updateItemView(position);//状态改变时，调用，这里是为了演示方便\n                }\n            });\n\n\n            return convertView;\n        }\n\n        public class ViewHolder {\n            public TextView textview;\n        }\n    }\n\n    public void updateItemView(int position) {\n        //得到第一个可显示控件的位置，\n        int visiblePosition = mListView.getFirstVisiblePosition();\n        //只有当要更新的view在可见的位置时才更新，不可见时，跳过不更新\n        int index = position - visiblePosition;\n        if (index >= 0) {\n            //得到要更新的item的view\n            View view = mListView.getChildAt(index);\n            //从view中取得holder\n            MyAdapter.ViewHolder holder = (MyAdapter.ViewHolder) view.getTag();\n            holder.textview.setText(\"测试数据\");\n            mData.get(index).put(\"title\", \"测试数据\");\n        }\n    }\n}\n```\nlistview_item.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:id=\"@+id/textview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_gravity=\"center_vertical\"\n        android:gravity=\"center_vertical\" />\n</LinearLayout>\n```\n\n* RecyclerView局部刷新\n\nRecyclerView已经替代了ListView，局部刷新很有必要知道\n\n```java\n收藏成功后\nmList.get(position).put(\"favorites\", \"0\");\nViewHolder viewHolder = (ViewHolder) mRecyclerView.findViewHolderForAdapterPosition(position);\nviewHolder.mCheck.setBackgroundResource(R.mipmap.collect_normal);\n```\n","slug":"listView_item_state","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszn001lv0zit7z7jbgz"},{"title":"Android之ListView属性","date":"2013-07-18T16:00:00.000Z","_content":"\n```java \n\t<ListView \n\tandroid:divider=\"@drawable/song_item_line\"  item之间的分割线\n        android:cacheColorHint=\"#00000000\"拖动系统切换item时的缓存色\n        android:scrollbars=\"none\"不显示滚动条\n        android:listSelector=\"#00000000\"/>选中时背景色\n        android:fadingEdge=\"none\" 设置后上边和下边没有阴影了\n        android:fastScrollEnabled=\"true\" 快速滚动滑块\n        android:cacheColorHint 如果你是用图片做背景的话，那也只要将android:cacheColorHint指定为透明（#00000000）就可以了.  \n        android:divider=\"@drawable/list_driver\" 设置显示分割线图形，如果不想显示分割线则只要设置为\n        android:divider=\"@null\" 就可以了，分割线可以自定义颜色、或图片.\n        android:dividerHeight=\"6px\"设置分割线高度像素.  \n        android:fadeScrollbars=\"true\"  滚动条的自动隐藏和显示. \n        android:transcriptMode=\"alwaysScroll\"  （支持ScrollBar）自动滑动到最底部.\n        android:stackFromBottom=\"true\" 设置你做好的列表显示在列表的最下面，值为true和false. \n        android:drawSelectorOnTop=\"true\"  点击某一条记录，颜色会显示在最上面，记录上的文字被遮住，所以点击文字不放，文字就看不到\n        android:drawSelectorOnTop=\"false\" 点击某条记录不放，颜色会在记录的后面，成为背景色，但是记录内容的文字是可见的\n\t/>\n```\n\n\n","source":"_posts/listView.md","raw":"title: Android之ListView属性\ncategories: [Android]\ntags: [Android,ListView]\ndate: 2013-07-19\n---\n\n```java \n\t<ListView \n\tandroid:divider=\"@drawable/song_item_line\"  item之间的分割线\n        android:cacheColorHint=\"#00000000\"拖动系统切换item时的缓存色\n        android:scrollbars=\"none\"不显示滚动条\n        android:listSelector=\"#00000000\"/>选中时背景色\n        android:fadingEdge=\"none\" 设置后上边和下边没有阴影了\n        android:fastScrollEnabled=\"true\" 快速滚动滑块\n        android:cacheColorHint 如果你是用图片做背景的话，那也只要将android:cacheColorHint指定为透明（#00000000）就可以了.  \n        android:divider=\"@drawable/list_driver\" 设置显示分割线图形，如果不想显示分割线则只要设置为\n        android:divider=\"@null\" 就可以了，分割线可以自定义颜色、或图片.\n        android:dividerHeight=\"6px\"设置分割线高度像素.  \n        android:fadeScrollbars=\"true\"  滚动条的自动隐藏和显示. \n        android:transcriptMode=\"alwaysScroll\"  （支持ScrollBar）自动滑动到最底部.\n        android:stackFromBottom=\"true\" 设置你做好的列表显示在列表的最下面，值为true和false. \n        android:drawSelectorOnTop=\"true\"  点击某一条记录，颜色会显示在最上面，记录上的文字被遮住，所以点击文字不放，文字就看不到\n        android:drawSelectorOnTop=\"false\" 点击某条记录不放，颜色会在记录的后面，成为背景色，但是记录内容的文字是可见的\n\t/>\n```\n\n\n","slug":"listView","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszr001pv0zi3ih5yh06"},{"title":"java.lang.IllegalStateException:Fragment（XXFragment） not attached to Activity","date":"2014-06-23T16:00:00.000Z","_content":"java.lang.IllegalStateException: Fragment already active\n\n说明：当Fragment处于激活状态，使用Fragment.setArguments(bundle)就会跑出该异常\n\n解决：setArguments()之前，判断Fragment是否可见，Fragment.isVisible();\n\n转载：http://jogickis.iteye.com/blog/1990790\n\n下边两个问题，是在开发中碰到的一些关于Fragment的偶发性的问题，下面是网上搜了一些解决方式：\n\n<!-- more -->\n\n \n1、关于Fragment（XXFragment） not attached to Activity 异常。出现该异常，是因为Fragment的还没有Attach到Activity时，调用了如getResource()等，需要上下文Content的函数。\n\n解决方法，就是等将调用的代码写在OnStart（）中。网上还有几处这样的参考：http://stackoverflow.com/questions/10919240/fragment-myfragment-not-attached-to-activity  \n回答的主要是在调用\ngetResources().getString(R.string.app_name); \ngetResources().getString(R.string.app_name);\n\n之前增加一个判断isAdded(),两外说这个异常解决办法的有http://stackoverflow.com/questions/6870325/android-compatibility-package-fragment-not-attached-to-activity\n这个是针对另外一种情况下的解决方式。\n\n2、在使用Fragment保存参数的时候，可能是因为需要保存的参数比较大或者比较多，这种情况下页会引起异常。比如代码\n\n```java\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\n```\n\n设置好参数，并且添加hide(),add(),方法之后，需要commit()，来实现两个Fragment跳转的时候，这种情形下参数需要进行系统保存，但是这个时候你已经实现了跳转，系统参数却没有保存。\n此时就会报java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState异常。\n\n分析原因：你并不需要系统保存的参数，只要你自己设置的参数能够传递过去，在另外一个Fragment里能够顺利接受就行了，现在android里提供了另外一种形式的提交方式commitAllowingStateLoss()，从名字上就能看出，这种提交是允许状态值丢失的。到此问题得到完美解决，值的传递是你自己控制的。\n\n这里也说一下另外一个问题，bitmap 也可以通过Bundle传递的，使用putParacelable就可以了\n\n转载：http://www.cnblogs.com/fanglove/archive/2013/05/09/3069325.html\n","source":"_posts/java-lang-IllegalStateException-Fragment-not-attached-to-Activity.md","raw":"title: java.lang.IllegalStateException:Fragment（XXFragment） not attached to Activity\ndate: 2014-06-24 \ncategories: [Android]\ntags: [Android,Fragment]\n---\njava.lang.IllegalStateException: Fragment already active\n\n说明：当Fragment处于激活状态，使用Fragment.setArguments(bundle)就会跑出该异常\n\n解决：setArguments()之前，判断Fragment是否可见，Fragment.isVisible();\n\n转载：http://jogickis.iteye.com/blog/1990790\n\n下边两个问题，是在开发中碰到的一些关于Fragment的偶发性的问题，下面是网上搜了一些解决方式：\n\n<!-- more -->\n\n \n1、关于Fragment（XXFragment） not attached to Activity 异常。出现该异常，是因为Fragment的还没有Attach到Activity时，调用了如getResource()等，需要上下文Content的函数。\n\n解决方法，就是等将调用的代码写在OnStart（）中。网上还有几处这样的参考：http://stackoverflow.com/questions/10919240/fragment-myfragment-not-attached-to-activity  \n回答的主要是在调用\ngetResources().getString(R.string.app_name); \ngetResources().getString(R.string.app_name);\n\n之前增加一个判断isAdded(),两外说这个异常解决办法的有http://stackoverflow.com/questions/6870325/android-compatibility-package-fragment-not-attached-to-activity\n这个是针对另外一种情况下的解决方式。\n\n2、在使用Fragment保存参数的时候，可能是因为需要保存的参数比较大或者比较多，这种情况下页会引起异常。比如代码\n\n```java\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\n```\n\n设置好参数，并且添加hide(),add(),方法之后，需要commit()，来实现两个Fragment跳转的时候，这种情形下参数需要进行系统保存，但是这个时候你已经实现了跳转，系统参数却没有保存。\n此时就会报java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState异常。\n\n分析原因：你并不需要系统保存的参数，只要你自己设置的参数能够传递过去，在另外一个Fragment里能够顺利接受就行了，现在android里提供了另外一种形式的提交方式commitAllowingStateLoss()，从名字上就能看出，这种提交是允许状态值丢失的。到此问题得到完美解决，值的传递是你自己控制的。\n\n这里也说一下另外一个问题，bitmap 也可以通过Bundle传递的，使用putParacelable就可以了\n\n转载：http://www.cnblogs.com/fanglove/archive/2013/05/09/3069325.html\n","slug":"java-lang-IllegalStateException-Fragment-not-attached-to-Activity","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszu001uv0ziy66pkd1g"},{"title":"jarsigner签名安卓Apk程序","date":"2014-12-04T16:00:00.000Z","_content":"\n发布过Android应用的朋友们应该都知道，Android APK的发布是必需要签名，本签名指南演示如何使用WoSign安卓代码签名证书，签名安卓 .apk 程序。\n\n1、签名证书\n\n制作证书，证书文件名：android.keystore, 证书别名：android.keystore\n \n2、 安装签名环境JDK包\n\n签名工具包可以在JDK官方网站下载：[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)，也可以直接点击这里下载JDK工具包(请使用JDK 1.6版本)。\n文件包下载安装完成后，然后就开始进入jdk的签名根目录，具体如下：\n\n开始-> 运行-> cmd->cd 到您安装的jdk的目录这里我是D:\\Program Files\\Java\\jdk1.6.0\\bin\n \n<!-- more -->\n3、签名\n\n在D:\\Program Files\\Java\\jdk1.6.0\\bin 找到工具 jarsigner.exe，并把证书android.keystore 文件放入当前目录。签名命令：\n\njarsigner -verbose -keystore android.keystore -signedjar Last_gongs_sign.apk Before_sign.apk android.keystore\n\n1）jarsigner是工具名称，-verbose表示将签名过程中的详细信息打印出来，显示在dos窗口中；\n\n2）-keystore android.keystore 表示签名所使用的数字证书和所在位置，这里没有写路径，表示在当前目录下；\n\n3）-signedjar Last_gongs_sign.apk Before_sign.apk 表示给 Before_sign.apk文件签名，签名后的文件名称为Last_gongs_sign.apk；\n\n4）最后面的android.keystore 表示证书的别名\n \n如下图所示：\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-1.png)\n\n \n4、验证签名\n\n使用命令验证已经签名的apk文件：jarsigner –verify Last_gongs_sign.apk\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-2.png)\n\n如果想要知道更多明细, 你可以尝试如下几个命令:\n\n    jarsigner -verify -verbose Last_gongs_sign.apk                                            \n或\n    jarsigner -verify -verbose -certs Last_gongs_sign.apk  \n    \n上面的命令, 使用 -certs 参数, 将显示 \"CN=\" 行, 描述是谁签名了APK文件.\n\n原文：[http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/](http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/)\n","source":"_posts/jarsigner.md","raw":"title: jarsigner签名安卓Apk程序\ndate: 2014-12-05 \ncategories: [Android]\ntags: [Android,jarsigner]\n---\n\n发布过Android应用的朋友们应该都知道，Android APK的发布是必需要签名，本签名指南演示如何使用WoSign安卓代码签名证书，签名安卓 .apk 程序。\n\n1、签名证书\n\n制作证书，证书文件名：android.keystore, 证书别名：android.keystore\n \n2、 安装签名环境JDK包\n\n签名工具包可以在JDK官方网站下载：[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)，也可以直接点击这里下载JDK工具包(请使用JDK 1.6版本)。\n文件包下载安装完成后，然后就开始进入jdk的签名根目录，具体如下：\n\n开始-> 运行-> cmd->cd 到您安装的jdk的目录这里我是D:\\Program Files\\Java\\jdk1.6.0\\bin\n \n<!-- more -->\n3、签名\n\n在D:\\Program Files\\Java\\jdk1.6.0\\bin 找到工具 jarsigner.exe，并把证书android.keystore 文件放入当前目录。签名命令：\n\njarsigner -verbose -keystore android.keystore -signedjar Last_gongs_sign.apk Before_sign.apk android.keystore\n\n1）jarsigner是工具名称，-verbose表示将签名过程中的详细信息打印出来，显示在dos窗口中；\n\n2）-keystore android.keystore 表示签名所使用的数字证书和所在位置，这里没有写路径，表示在当前目录下；\n\n3）-signedjar Last_gongs_sign.apk Before_sign.apk 表示给 Before_sign.apk文件签名，签名后的文件名称为Last_gongs_sign.apk；\n\n4）最后面的android.keystore 表示证书的别名\n \n如下图所示：\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-1.png)\n\n \n4、验证签名\n\n使用命令验证已经签名的apk文件：jarsigner –verify Last_gongs_sign.apk\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-2.png)\n\n如果想要知道更多明细, 你可以尝试如下几个命令:\n\n    jarsigner -verify -verbose Last_gongs_sign.apk                                            \n或\n    jarsigner -verify -verbose -certs Last_gongs_sign.apk  \n    \n上面的命令, 使用 -certs 参数, 将显示 \"CN=\" 行, 描述是谁签名了APK文件.\n\n原文：[http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/](http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/)\n","slug":"jarsigner","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzszx001zv0zi5yvetffx"},{"title":"Android如何防止apk程序被反编译","date":"2013-07-22T16:00:00.000Z","_content":"作为Android应用开发者，不得不面对一个尴尬的局面，就是自己辛辛苦苦开发的应用可以被别人很轻易的就反编译出来。Google似乎也发现了这个问题，从SDK2.3开始我们可以看到在android-sdk-windows\\tools\\下面多了一个proguard文件夹。proguard是一个java代码混淆的工具，通过proguard，别人即使反编译你的apk包，也只会看到一些让人很难看懂的代码，从而达到保护代码的作用。新建项目都会有以下两个文件：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-1.png)\nproject.properties文件“proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt”注释放开。\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-2.png)\n然后在proguard-project.txt文件里做混淆，例如：\n\n<!-- more -->\n\n```java\n\t#---------------Begin: support-v4包 ----------\n\t-libraryjars   libs/android-support-v4.jar\n\t-dontwarn android.support.v4.**  #打包时忽略以下类的警告  \n\t-keep class android.support.v4.** { *; }  \n\t-keep interface android.support.v4.app.** { *; }  \n\t-keep public class * extends android.support.v4.**  \n\t#-keep public class * extends android.app.Fragment\n\t#---------------End: support-v4包 ----------\n```\n以上是混淆了support-v4包，如果混淆其他的jar，举一反三。\n比如A.jar，它的包名是a.b.c.d。然后做混淆就如下：\n\n\n```java \n\t-keep class a.b.c.d.** { *; }  \n```\n正常的编译签名后就可以防止代码被反编译了。反编译经过代码混淆的apk得到的代码应该类似于下面的效果，是很难看懂的：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-3.png)\n","source":"_posts/how-to-prevent-the-APK-program-by-decompile.md","raw":"title: Android如何防止apk程序被反编译\ncategories: [Android]\ntags: [Android]\ndate: 2013-07-23\n---\n作为Android应用开发者，不得不面对一个尴尬的局面，就是自己辛辛苦苦开发的应用可以被别人很轻易的就反编译出来。Google似乎也发现了这个问题，从SDK2.3开始我们可以看到在android-sdk-windows\\tools\\下面多了一个proguard文件夹。proguard是一个java代码混淆的工具，通过proguard，别人即使反编译你的apk包，也只会看到一些让人很难看懂的代码，从而达到保护代码的作用。新建项目都会有以下两个文件：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-1.png)\nproject.properties文件“proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt”注释放开。\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-2.png)\n然后在proguard-project.txt文件里做混淆，例如：\n\n<!-- more -->\n\n```java\n\t#---------------Begin: support-v4包 ----------\n\t-libraryjars   libs/android-support-v4.jar\n\t-dontwarn android.support.v4.**  #打包时忽略以下类的警告  \n\t-keep class android.support.v4.** { *; }  \n\t-keep interface android.support.v4.app.** { *; }  \n\t-keep public class * extends android.support.v4.**  \n\t#-keep public class * extends android.app.Fragment\n\t#---------------End: support-v4包 ----------\n```\n以上是混淆了support-v4包，如果混淆其他的jar，举一反三。\n比如A.jar，它的包名是a.b.c.d。然后做混淆就如下：\n\n\n```java \n\t-keep class a.b.c.d.** { *; }  \n```\n正常的编译签名后就可以防止代码被反编译了。反编译经过代码混淆的apk得到的代码应该类似于下面的效果，是很难看懂的：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-3.png)\n","slug":"how-to-prevent-the-APK-program-by-decompile","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt000024v0zinllzrwrs"},{"title":"Hello hexo","date":"2015-07-29T23:56:29.000Z","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n<!--more-->\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-hexo.md","raw":"title: Hello hexo\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: hexo #文章标签，多于一项时用这种格式\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n<!--more-->\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-hexo","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt010027v0ziy9pcl7hv"},{"title":"不花钱上谷歌","date":"2015-01-11T16:00:00.000Z","_content":"\n>\n不会谷歌的程序猿不是好的程序猿!\n>\n\n![](http://wuxiaolong.qiniudn.com/2015-01-12-google.png)\n在大天朝，上谷歌竟成了一项\"技能\"，当然花钱另说，我当然不会花钱啦，之前goagent翻墙已经不好谷歌了，现在的方案是更改HOSTS（C:\\Windows\\System32\\drivers\\etc），复制以下Hosts文件替换即可：\n\n[http://pan.baidu.com/s/1o63Hqrg](http://pan.baidu.com/s/1o63Hqrg)\n\n<!-- more -->\n\n如果此HOSTS不好用，请留言告知，我将及时更新，祝大家工作愉快，生活愉快！\n\n附：\n[不用翻墙，即可访问google等网站hosts，及修改方法](http://levi.cg.am/archives/3553)\n","source":"_posts/google.md","raw":"title: 不花钱上谷歌\ndate: 2015-01-12 \ncategories: [Life]\ntags: [Life]\n---\n\n>\n不会谷歌的程序猿不是好的程序猿!\n>\n\n![](http://wuxiaolong.qiniudn.com/2015-01-12-google.png)\n在大天朝，上谷歌竟成了一项\"技能\"，当然花钱另说，我当然不会花钱啦，之前goagent翻墙已经不好谷歌了，现在的方案是更改HOSTS（C:\\Windows\\System32\\drivers\\etc），复制以下Hosts文件替换即可：\n\n[http://pan.baidu.com/s/1o63Hqrg](http://pan.baidu.com/s/1o63Hqrg)\n\n<!-- more -->\n\n如果此HOSTS不好用，请留言告知，我将及时更新，祝大家工作愉快，生活愉快！\n\n附：\n[不用翻墙，即可访问google等网站hosts，及修改方法](http://levi.cg.am/archives/3553)\n","slug":"google","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt04002cv0zi2iyk51hk"},{"title":"Fragment里更改Activity菜单","date":"2015-06-09T16:00:00.000Z","_content":"\n```java\n  @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        //来指出fragment愿意添加item到选项菜单(否则, fragment将接收不到对 onCreateOptionsMenu()的调用)\n        setHasOptionsMenu(true);\n    }\n    \n @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        getActivity().getMenuInflater().inflate(R.menu.menu_yuqing_search, menu);\n    }\n```\n","source":"_posts/fragmentMenu.md","raw":"title: Fragment里更改Activity菜单\ndate: 2015-06-10\ncategories: [Android]\ntags: [Android,Fragment]\n---\n\n```java\n  @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        //来指出fragment愿意添加item到选项菜单(否则, fragment将接收不到对 onCreateOptionsMenu()的调用)\n        setHasOptionsMenu(true);\n    }\n    \n @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        getActivity().getMenuInflater().inflate(R.menu.menu_yuqing_search, menu);\n    }\n```\n","slug":"fragmentMenu","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt05002fv0ziyo22615d"},{"title":"Eclipse中整合git","date":"2014-08-25T16:00:00.000Z","_content":"首先在github上面创建工程。\n\n在个人主页上点击Responsitories选项卡的New\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-1.png)\n\n填写一些信息，点Create respository\n\n<!-- more -->\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-2.png)\n\ngithub上的项目就创建好了。\n在Eclipse中创建一个工程。\n然后在工程上右击->Team->Share project->git->next.\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-3.png)\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-4.png)\n\n选择Use or create repository in parent folder of project->Create Repository，如下图，点finish。\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-5.png)\n\n执行完成之后项目文件夹下就会创建好一个.git的文件夹，仓库就创建好了。\n\n由于项目中的有一些文件没有必要上传，比如bin文件夹，需要在项目中设置好。\n\n展开对应的项目，有小箭头的表示需要上传到服务器的目录，在不想要上传的目录上右击，Team->Ignoe,该目录就会被忽略了。\n\n下面来commit代码到本机一下。\n\n项目上右击Team->commit。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-6.png)\n\n选中要commit的文件，点commit，完成之后，代码就上传到本地的服务器了。\n\n接下来把代码上传到github的服务器。\n\n命令行中进入到项目的文件夹，运行\ngit remote add origin https://github.com/WuXiaolong/ApkTest.git\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-7.png)\n再执行\ngit push -u origin master\n\n成功执行后就像这样：\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-8.png)\n查看github的项目主页，发现文件已经上传好。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-9.png)\n\n之后在Eclipse中修改好项目代码之后，commit，之后pull，为止代码冲突，然后项目上右击Team->push to Upstream就可以进行代码提交。\n\n\n上传到github上之后，团队中另外的成员可以通过Eclipse->File->Import->Project from Git->URI来提取工程。\n\n在团队开发中，通常在新的一天的开始工作之前，把最新的代码fecth下来。\n\n直接在项目想右击->Team->fetch\n再执行->Team->Merge.\n\n服务器上的新文件就会添加进来了。\n","source":"_posts/eclipse-git.md","raw":"title: Eclipse中整合git\ndate: 2014-08-26 \ncategories: [Life]\ntags: [Life,git]\n---\n首先在github上面创建工程。\n\n在个人主页上点击Responsitories选项卡的New\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-1.png)\n\n填写一些信息，点Create respository\n\n<!-- more -->\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-2.png)\n\ngithub上的项目就创建好了。\n在Eclipse中创建一个工程。\n然后在工程上右击->Team->Share project->git->next.\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-3.png)\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-4.png)\n\n选择Use or create repository in parent folder of project->Create Repository，如下图，点finish。\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-5.png)\n\n执行完成之后项目文件夹下就会创建好一个.git的文件夹，仓库就创建好了。\n\n由于项目中的有一些文件没有必要上传，比如bin文件夹，需要在项目中设置好。\n\n展开对应的项目，有小箭头的表示需要上传到服务器的目录，在不想要上传的目录上右击，Team->Ignoe,该目录就会被忽略了。\n\n下面来commit代码到本机一下。\n\n项目上右击Team->commit。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-6.png)\n\n选中要commit的文件，点commit，完成之后，代码就上传到本地的服务器了。\n\n接下来把代码上传到github的服务器。\n\n命令行中进入到项目的文件夹，运行\ngit remote add origin https://github.com/WuXiaolong/ApkTest.git\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-7.png)\n再执行\ngit push -u origin master\n\n成功执行后就像这样：\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-8.png)\n查看github的项目主页，发现文件已经上传好。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-9.png)\n\n之后在Eclipse中修改好项目代码之后，commit，之后pull，为止代码冲突，然后项目上右击Team->push to Upstream就可以进行代码提交。\n\n\n上传到github上之后，团队中另外的成员可以通过Eclipse->File->Import->Project from Git->URI来提取工程。\n\n在团队开发中，通常在新的一天的开始工作之前，把最新的代码fecth下来。\n\n直接在项目想右击->Team->fetch\n再执行->Team->Merge.\n\n服务器上的新文件就会添加进来了。\n","slug":"eclipse-git","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt07002jv0zibzkdvg8b"},{"title":"Eclipse ADT的Custom debug keystore所需证书规格","date":"2014-06-29T16:00:00.000Z","_content":"自定义的调试证书，也需要保证和默认证书一样的密码，别名alias和别名密码。\n\n默认证书信息如下：\n\n```js\nKeystore name: “debug.keystore”\nKeystore password: “android”\nKey alias: “androiddebugkey”\nKey password: “android”\n```\n\n遵循这个规则就可以用自定义调试证书了。\n\nAndroid apk签名方法\nhttp://hi.baidu.com/40406_jun/item/8b936db4a9a0e79b19469782\n","source":"_posts/custom-debug-keystore.md","raw":"title: Eclipse ADT的Custom debug keystore所需证书规格\ndate: 2014-06-30 \ncategories: [Android]\ntags: [Android]\n---\n自定义的调试证书，也需要保证和默认证书一样的密码，别名alias和别名密码。\n\n默认证书信息如下：\n\n```js\nKeystore name: “debug.keystore”\nKeystore password: “android”\nKey alias: “androiddebugkey”\nKey password: “android”\n```\n\n遵循这个规则就可以用自定义调试证书了。\n\nAndroid apk签名方法\nhttp://hi.baidu.com/40406_jun/item/8b936db4a9a0e79b19469782\n","slug":"custom-debug-keystore","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0a002ov0zi8xij5raj"},{"title":"企业通","date":"2014-12-29T16:00:00.000Z","_content":"\n>\n灵感源于生活，进而反馈生活。\n>\n\n前段时间坐公交突然一个想法，咱们公司不是人数很多，除了本部门人认识，其他部门基本不认识，也没交集，能不能有款App把大家连起来，于是有了“企业通”。企业通针对企业，便于企业内部交流。\n\n\n##（一）前提\n该企业开放程度较高，员工可以言论自由\n\n##（二）模块划分\n* 最新公告\n \n发布公司重大信息\n<!-- more -->\n\n* 部门论坛\n\n根据各个公司，细分各部门板块，各部门的人在相应的部门发帖吐槽等，看其他部门帖子可以评论\n\n* 通讯录\n\n列出公司所有人，可以查看相应的介绍，聊天\n\n##（三）盈利模式\n买给其他企业，只需要更改服务器地址就能配置成他们公司企业通\n","source":"_posts/company.md","raw":"title: 企业通\ndate: 2014-12-30 \ncategories: [Life]\ntags: [Life]\n---\n\n>\n灵感源于生活，进而反馈生活。\n>\n\n前段时间坐公交突然一个想法，咱们公司不是人数很多，除了本部门人认识，其他部门基本不认识，也没交集，能不能有款App把大家连起来，于是有了“企业通”。企业通针对企业，便于企业内部交流。\n\n\n##（一）前提\n该企业开放程度较高，员工可以言论自由\n\n##（二）模块划分\n* 最新公告\n \n发布公司重大信息\n<!-- more -->\n\n* 部门论坛\n\n根据各个公司，细分各部门板块，各部门的人在相应的部门发帖吐槽等，看其他部门帖子可以评论\n\n* 通讯录\n\n列出公司所有人，可以查看相应的介绍，聊天\n\n##（三）盈利模式\n买给其他企业，只需要更改服务器地址就能配置成他们公司企业通\n","slug":"company","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0b002rv0ziabo9530b"},{"title":"Android判断权限被限制","date":"2015-06-09T16:00:00.000Z","_content":"\n开发过程，如果某个权限被第三方限制了，比如录音，网上查了下\n\n```java\n String permName = \"android.permission.RECORD_AUDIO\";\n        String pkgName = getPackageName();\n        // 结果为0则表示使用了该权限，-1则表求没有使用该权限\n        int reslut = getPackageManager().checkPermission(permName, pkgName);\n        Log.d(\"wxl\", \"reslut=\" + reslut + \"======\"\n                + PackageManager.PERMISSION_GRANTED);\n```\n实际这个方法只是检测你的APP是否使用了某个权限，但是不能检测是否被限制了。\n\n<!-- more -->\n\n我以为做不了，找了微信，限制录音权限，结果提示录音权限被限，于是我仔细看了异常信息。\n\n```js\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ java.io.IOException: Recording permission has been disabled for current app\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at com.lbe.security.service.core.client.MultimediaClient.mrShouldBlock(Unknown Source)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder._setOutputFile(Native Method)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder.prepare(MediaRecorder.java:769)\n```\n对比Recording permission has been disabled for current app，做相应的提示就OK！\n\n","source":"_posts/checkPermission.md","raw":"title: Android判断权限被限制\ndate: 2015-06-10 \ncategories: [Android]\ntags: [Android,Permission]\n---\n\n开发过程，如果某个权限被第三方限制了，比如录音，网上查了下\n\n```java\n String permName = \"android.permission.RECORD_AUDIO\";\n        String pkgName = getPackageName();\n        // 结果为0则表示使用了该权限，-1则表求没有使用该权限\n        int reslut = getPackageManager().checkPermission(permName, pkgName);\n        Log.d(\"wxl\", \"reslut=\" + reslut + \"======\"\n                + PackageManager.PERMISSION_GRANTED);\n```\n实际这个方法只是检测你的APP是否使用了某个权限，但是不能检测是否被限制了。\n\n<!-- more -->\n\n我以为做不了，找了微信，限制录音权限，结果提示录音权限被限，于是我仔细看了异常信息。\n\n```js\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ java.io.IOException: Recording permission has been disabled for current app\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at com.lbe.security.service.core.client.MultimediaClient.mrShouldBlock(Unknown Source)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder._setOutputFile(Native Method)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder.prepare(MediaRecorder.java:769)\n```\n对比Recording permission has been disabled for current app，做相应的提示就OK！\n\n","slug":"checkPermission","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0e002uv0zivvofus03"},{"title":"Android Studio如何更改JDK和SDK的路径","date":"2014-11-21T16:00:00.000Z","_content":"安装Android Studio后它默认在自己的文件目录下又安装了一个sdk，然后SDK路径默认到这个文件下。\n今天更新Android Studio到0.8.14，提示要移动这个sdk，但是我在设置中始终没有找到更改sdk的路径的地方。\n网上找了，我没有想到居然在这里设置，直接上图：\n![](http://wuxiaolong.qiniudn.com/2014-11-22-change-sdk-path.png)\n","source":"_posts/change-sdk-path.md","raw":"title: Android Studio如何更改JDK和SDK的路径\ndate: 2014-11-22 \ncategories: [Android Studio]\ntags: [Android Studio]\n---\n安装Android Studio后它默认在自己的文件目录下又安装了一个sdk，然后SDK路径默认到这个文件下。\n今天更新Android Studio到0.8.14，提示要移动这个sdk，但是我在设置中始终没有找到更改sdk的路径的地方。\n网上找了，我没有想到居然在这里设置，直接上图：\n![](http://wuxiaolong.qiniudn.com/2014-11-22-change-sdk-path.png)\n","slug":"change-sdk-path","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0g002zv0zi2gdi7skc"},{"title":"手把手教你建github技术博客by jekyll","date":"2014-10-25T23:56:29.000Z","_content":"\n\n******\n\n## <a name=\"index\"/>目录\n* [一、适合人群](#for-the-crowd)\n* [二、github创建博客](#build-blog)\n\t* 注册账号\n\t* 创建页面仓库\n\t* 项目设置\n\t* 页面生成器\n\t* 创建用户页面\n\t* 页面发布\n\t* 查看效果\n* [三、如何发布博客](#write-blog)\n\t* 安装 Ruby\n\t* 安装 DevKit\n\t* 安装 Python\n\t* 安装 Jekyll\n\t* 启动 Jekyll\n\t* 图床\n* [四、总结](#ps)\n* [五、附录](#appendix)\n\n<!-- more -->\n\n<a name=\"for-the-crowd\"/>\n\n## 一、适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n\n\n<a name=\"build-blog\"/>\n\n## 二、github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n* ### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式:`yourname`.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n\n* ### 项目设置\n![4](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-4.png)\n\n* ### 页面生成器\n![5](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-5.png)\n\n* ### 创建用户页面\n![6](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-6.png)\n\n* ### 页面发布\n![7](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-7.png)\n\n* ### 查看效果\n需要等待十分钟，自此，完成了github的博客创建，访问地址：yourname.github.io\n![8](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-8.png)\n<a name=\"write-blog\"/>\n\n## 三、如何发布博客\n\n以上只是创建了博客，那怎么发布自己的博客？共分为以下几个重要步骤（window下）：\n\n* 安装 Ruby\n* 安装 DevKit\n* 安装 Python\n* 安装 Jekyll\n\n### 安装 Ruby\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 安装\n\t* 最好保持默认的路径 C:\\Ruby200-x64， 因为安装包明确提出 “请不要使用带有空格的文件夹 (如： Program Files)”。\n\t* 勾选 “Add Ruby executables to your PATH”，这样执行程序会被自动添加至 PATH 而避免不必要的头疼。\n\t\n![9](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-9.png)\n\t* 命令行ruby -v来检测Ruby是否成功安装\t    \n\t\n```js \n\tC:\\Users\\WuXL>ruby -v\t\n\t返回ruby 2.1.3p242 (2014-09-19 revision 47630) [x64-mingw32]，ok\n\t\n```\n\t\n### 五、安装 DevKit\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 下载同系统及 Ruby 版本相对应的 DevKit 安装包。 例如，DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe 适用于64位 Windows 系统上的 Ruby 2.0.0 x64。\n* 运行安装包并解压缩至某文件夹，如 C:\\DevKit\n* 通过初始化来创建 config.yml 文件。在命令行窗口内，输入下列命令：\n\n```js\n\tcd “C:\\DevKit”\n\truby dk.rb init\n\tnotepad config.yml\n```\n\n* 在打开的记事本窗口中，于末尾添加新的一行 - C:\\Ruby200-x64，保存文件并退出。\n* 回到命令行窗口内，审查（非必须）并安装。\n\n```js\n\truby dk.rb review\n\truby dk.rb install\n```\n### 安装 pyhton\n\n* 下载地址：[http://www.python.org/download/](http://www.python.org/download/) \n* 添加安装路径 (如C:\\Python27)至PATH。\n\n### 安装 Jekyll\n\n\n* 查看是否安装 gem 成功\n\n```js\n\tgem --version\n\t返回2.2.2，OK\n```\n\n* 更新为 淘宝镜像<br>\n\tRubyGems镜像换为 淘宝、防止下载包出错(官网https://ruby.taobao.org/)\n\n* 移除旧地址\n \n```js\n\tgem sources --remove https://rubygems.org/ \n\t返回https://rubygems.org/ removed from sources，ok\n```\n* 更新为淘宝镜像\n\n```js\n\tgem sources -a https://ruby.taobao.org/\n\t返回https://ruby.taobao.org/ added to sources，ok\n```\n* 安装jekyll\n\n```js\n\tgem install jekyll \n```\n* 查看是否安装jekyll成功\n\n```js\n\tjekyll -version\n\t返回jekyll 2.4.0，ok\n```\n* 安装 依赖包 \n\n```js\n\tgem install wdm\n```\n* 安装依赖包代码 高亮 \n\n```js\n\tgem install rdiscount\n```\n* 安装 ‘Easy Install’\n \n```js\n\t浏览 https://pypi.python.org/pypi/setuptools#installation-instructions 来查看详细的安装指南。\n\t对于 Windows 7 的机器，下载 ez_setup.py 并保存，例如，至C:\\。 然后从命令行使用 Python 运行此文件：python “C:\\ez_setup.py”\n\t添加 ‘Python Scripts’ 路径 (如： C:\\Python27\\Scripts) 至 PATH\n```\n* 安装 Pygments\n\n```js\n\t确保 easy_install 已经正确安装\n\teasy_install --version\n\t输出示例：\n\tsetuptools 3.1\n```\n* 使用 “easy_install” 来安装 Pygments\n\n```js\n\teasy_install Pygments\n```\n* 安装指定版本的yajl\n\n\n```js\n\t删除86版本的yajl\n\tC:\\OpenSources\\liyouhai>gem uninstall yajl-ruby\n\tSuccessfully uninstalled yajl-ruby-1.1.0-x86-mingw32\n\t安装指定版本的yajl\n\tC:\\OpenSources\\liyouhai>gem install yajl-ruby -v 1.1.0 --platform=ruby\n\tFetching: yajl-ruby-1.1.0.gem (100%)\n\tTemporarily enhancing PATH to include DevKit...\n\tBuilding native extensions.  This could take a while...\n\tSuccessfully installed yajl-ruby-1.1.0\n\tParsing documentation for yajl-ruby-1.1.0\n\tunable to convert \"\\x90\" from ASCII-8BIT to UTF-8 for lib/yajl/yajl.so, skipping\n\tInstalling ri documentation for yajl-ruby-1.1.0\n\t1 gem installed\n```\n\n### 启动 Jekyll\n\n按照官方的 Jekyll[`快速开始手册`](http://jekyllrb.com/docs/quickstart/)的步骤，或者克隆[`模板`](https://github.com/jekyll/jekyll/wiki/Sites)到本地，cmd下cd进入目录运行如下命令，就能在 localhost:4000 中预览了，大功告成。\n\n```js\n\tjekyll serve -watch (或jekyll serve -w)\n```\n### 图床\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n<a name=\"ps\"/>\n\n## 四、总结\n\n一开始认为 GitHub.io 技术博客很有难度，从10月23日着手，经历24日一天摸索，知道了jekyll，MarkDown(其实就是github的 READ.md ,幸亏之前自学过READ.md语法），也有幸自学了git，不然还不知道这个建博客 什么时候能做好，进jekyll安装就花了半天，反正各种错误，然后各种谷歌百度  ，25日一天就写了这个博客（集众建博客的帖子所长），问题主要是没有 文章摘要 ，一下子全部显示出来，我有强迫症，不能接受这个，到26日才解决，如果您没有一定的编程基础，爱折腾，坚持不懈的精神，还是不要建自己的 GitHub.io 技术博客吧。\n\n<a name=\"appendix\"/>\n\n## 五、附录\n\njekyll中文官网：[http://jekyllcn.com/](http://jekyllcn.com/) <br>\nMarkdown 语法说明：[http://wowubuntu.com/markdown/#autoescape](http://wowubuntu.com/markdown/#autoescape) \n\n","source":"_posts/build-blog.md","raw":"title: 手把手教你建github技术博客by jekyll\ndate: 2014-10-26 07:56:29 \ncategories: jekyll\ntags: [github,jekyll]\n---\n\n\n******\n\n## <a name=\"index\"/>目录\n* [一、适合人群](#for-the-crowd)\n* [二、github创建博客](#build-blog)\n\t* 注册账号\n\t* 创建页面仓库\n\t* 项目设置\n\t* 页面生成器\n\t* 创建用户页面\n\t* 页面发布\n\t* 查看效果\n* [三、如何发布博客](#write-blog)\n\t* 安装 Ruby\n\t* 安装 DevKit\n\t* 安装 Python\n\t* 安装 Jekyll\n\t* 启动 Jekyll\n\t* 图床\n* [四、总结](#ps)\n* [五、附录](#appendix)\n\n<!-- more -->\n\n<a name=\"for-the-crowd\"/>\n\n## 一、适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n\n\n<a name=\"build-blog\"/>\n\n## 二、github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n* ### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式:`yourname`.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n\n* ### 项目设置\n![4](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-4.png)\n\n* ### 页面生成器\n![5](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-5.png)\n\n* ### 创建用户页面\n![6](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-6.png)\n\n* ### 页面发布\n![7](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-7.png)\n\n* ### 查看效果\n需要等待十分钟，自此，完成了github的博客创建，访问地址：yourname.github.io\n![8](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-8.png)\n<a name=\"write-blog\"/>\n\n## 三、如何发布博客\n\n以上只是创建了博客，那怎么发布自己的博客？共分为以下几个重要步骤（window下）：\n\n* 安装 Ruby\n* 安装 DevKit\n* 安装 Python\n* 安装 Jekyll\n\n### 安装 Ruby\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 安装\n\t* 最好保持默认的路径 C:\\Ruby200-x64， 因为安装包明确提出 “请不要使用带有空格的文件夹 (如： Program Files)”。\n\t* 勾选 “Add Ruby executables to your PATH”，这样执行程序会被自动添加至 PATH 而避免不必要的头疼。\n\t\n![9](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-9.png)\n\t* 命令行ruby -v来检测Ruby是否成功安装\t    \n\t\n```js \n\tC:\\Users\\WuXL>ruby -v\t\n\t返回ruby 2.1.3p242 (2014-09-19 revision 47630) [x64-mingw32]，ok\n\t\n```\n\t\n### 五、安装 DevKit\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 下载同系统及 Ruby 版本相对应的 DevKit 安装包。 例如，DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe 适用于64位 Windows 系统上的 Ruby 2.0.0 x64。\n* 运行安装包并解压缩至某文件夹，如 C:\\DevKit\n* 通过初始化来创建 config.yml 文件。在命令行窗口内，输入下列命令：\n\n```js\n\tcd “C:\\DevKit”\n\truby dk.rb init\n\tnotepad config.yml\n```\n\n* 在打开的记事本窗口中，于末尾添加新的一行 - C:\\Ruby200-x64，保存文件并退出。\n* 回到命令行窗口内，审查（非必须）并安装。\n\n```js\n\truby dk.rb review\n\truby dk.rb install\n```\n### 安装 pyhton\n\n* 下载地址：[http://www.python.org/download/](http://www.python.org/download/) \n* 添加安装路径 (如C:\\Python27)至PATH。\n\n### 安装 Jekyll\n\n\n* 查看是否安装 gem 成功\n\n```js\n\tgem --version\n\t返回2.2.2，OK\n```\n\n* 更新为 淘宝镜像<br>\n\tRubyGems镜像换为 淘宝、防止下载包出错(官网https://ruby.taobao.org/)\n\n* 移除旧地址\n \n```js\n\tgem sources --remove https://rubygems.org/ \n\t返回https://rubygems.org/ removed from sources，ok\n```\n* 更新为淘宝镜像\n\n```js\n\tgem sources -a https://ruby.taobao.org/\n\t返回https://ruby.taobao.org/ added to sources，ok\n```\n* 安装jekyll\n\n```js\n\tgem install jekyll \n```\n* 查看是否安装jekyll成功\n\n```js\n\tjekyll -version\n\t返回jekyll 2.4.0，ok\n```\n* 安装 依赖包 \n\n```js\n\tgem install wdm\n```\n* 安装依赖包代码 高亮 \n\n```js\n\tgem install rdiscount\n```\n* 安装 ‘Easy Install’\n \n```js\n\t浏览 https://pypi.python.org/pypi/setuptools#installation-instructions 来查看详细的安装指南。\n\t对于 Windows 7 的机器，下载 ez_setup.py 并保存，例如，至C:\\。 然后从命令行使用 Python 运行此文件：python “C:\\ez_setup.py”\n\t添加 ‘Python Scripts’ 路径 (如： C:\\Python27\\Scripts) 至 PATH\n```\n* 安装 Pygments\n\n```js\n\t确保 easy_install 已经正确安装\n\teasy_install --version\n\t输出示例：\n\tsetuptools 3.1\n```\n* 使用 “easy_install” 来安装 Pygments\n\n```js\n\teasy_install Pygments\n```\n* 安装指定版本的yajl\n\n\n```js\n\t删除86版本的yajl\n\tC:\\OpenSources\\liyouhai>gem uninstall yajl-ruby\n\tSuccessfully uninstalled yajl-ruby-1.1.0-x86-mingw32\n\t安装指定版本的yajl\n\tC:\\OpenSources\\liyouhai>gem install yajl-ruby -v 1.1.0 --platform=ruby\n\tFetching: yajl-ruby-1.1.0.gem (100%)\n\tTemporarily enhancing PATH to include DevKit...\n\tBuilding native extensions.  This could take a while...\n\tSuccessfully installed yajl-ruby-1.1.0\n\tParsing documentation for yajl-ruby-1.1.0\n\tunable to convert \"\\x90\" from ASCII-8BIT to UTF-8 for lib/yajl/yajl.so, skipping\n\tInstalling ri documentation for yajl-ruby-1.1.0\n\t1 gem installed\n```\n\n### 启动 Jekyll\n\n按照官方的 Jekyll[`快速开始手册`](http://jekyllrb.com/docs/quickstart/)的步骤，或者克隆[`模板`](https://github.com/jekyll/jekyll/wiki/Sites)到本地，cmd下cd进入目录运行如下命令，就能在 localhost:4000 中预览了，大功告成。\n\n```js\n\tjekyll serve -watch (或jekyll serve -w)\n```\n### 图床\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n<a name=\"ps\"/>\n\n## 四、总结\n\n一开始认为 GitHub.io 技术博客很有难度，从10月23日着手，经历24日一天摸索，知道了jekyll，MarkDown(其实就是github的 READ.md ,幸亏之前自学过READ.md语法），也有幸自学了git，不然还不知道这个建博客 什么时候能做好，进jekyll安装就花了半天，反正各种错误，然后各种谷歌百度  ，25日一天就写了这个博客（集众建博客的帖子所长），问题主要是没有 文章摘要 ，一下子全部显示出来，我有强迫症，不能接受这个，到26日才解决，如果您没有一定的编程基础，爱折腾，坚持不懈的精神，还是不要建自己的 GitHub.io 技术博客吧。\n\n<a name=\"appendix\"/>\n\n## 五、附录\n\njekyll中文官网：[http://jekyllcn.com/](http://jekyllcn.com/) <br>\nMarkdown 语法说明：[http://wowubuntu.com/markdown/#autoescape](http://wowubuntu.com/markdown/#autoescape) \n\n","slug":"build-blog","published":1,"updated":"2015-08-04T14:05:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0i0033v0ziyoirre7k"},{"title":"手把手教你建github技术博客by hexo","date":"2015-07-31T06:22:35.000Z","_content":"## 适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n<!-- more -->\n\n## 环境准备\n\n### 安装Git\n下载 [msysgit](http://msysgit.github.io/) 并执行即可完成安装。\n\n### 安装Node.js\n在 Windows 环境下安装 [Node.js](http://nodejs.org/) 非常简单，仅须下载安装文件并执行即可完成安装。\n\n### 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```js\nnpm install -g hexo\n```\n`问题`\n* npm ERR! registry error parsing json 错误\n\n可能需要设置npm代理,执行命令\n```js \nnpm config set registry http://registry.cnpmjs.org\n```\n\n* hexo:command not found\n删除刚刚安装的npm目录，重新执行命令npm install -g hexo安装hexo，\n\n\n### 创建hexo文件夹\n安装完成后，在你喜爱的文件夹下（如H:\\hexo），执行以下指令(在H:\\hexo内点击鼠标右键，选择Git bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\n```js\nhexo init\n```\n\n### 安装依赖包\n```js\nnpm install\n```\n\n### 本地查看\n\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在H:\\hexo)，然后到浏览器输入localhost:4000看看。\n```js\nhexo generate\nhexo server\n```\n好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。\n\n`问题`\n* 执行hexo server提示找不到该指令 \n解决办法： \n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```js\nnpm install hexo -server --save \n```\n安装此server后再试，问题解决\n\n## github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-1.png)\n\n### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式: yourname.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-2.png)\n![3](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-3.png)\n`注意`\n命名规则：你的github账号.github.io，我这里被坑了，之前是jekell写的，现在换成hexo，所以我是另建创库了。\n\n### 生成SSH密钥\nssh-keygen -t rsa -C \"你的邮箱地址\"，按3个回车，密码为空。\n\n在C:\\Users\\Administrator.ssh下，得到两个文件id_rsa和id_rsa.pub。\n\n### 在GitHub上添加SSH密钥\n打开id_rsa.pub，复制全文。[https://github.com/settings/ssh](https://github.com/settings/ssh) ，Add SSH key，粘贴进去。\n\n## hexo使用\n\n### 目录结构\n\n.\n├── .deploy       #需要部署的文件\n├── node_modules  #Hexo插件\n├── public        #生成的静态网页文件\n├── scaffolds     #模板\n├── source        #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n|   ├── _drafts   #草稿\n|   └── _posts    #文章\n├── themes        #主题\n├── _config.yml   #全局配置文件\n└── package.json\n\n### 全局配置 _config.yml\n\n```js\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Site #站点信息\ntitle:  #标题\nsubtitle:  #副标题\ndescription:  #站点描述，给搜索引擎看的\nauthor:  #作者\nemail:  #电子邮箱\nlanguage: zh-CN #语言\n# URL #链接格式\nurl:  #网址\nroot: / #根目录\npermalink: :year/:month/:day/:title/ #文章的链接格式\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #分类目录\ncode_dir: downloads/code\npermalink_defaults:\n# Directory #目录\nsource_dir: source #源文件目录\npublic_dir: public #生成的网页文件目录\n# Writing #写作\nnew_post_name: :title.md #新文章标题\ndefault_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）\ntitlecase: false #标题转换成大写\nexternal_link: true #在新选项卡中打开连接\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nhighlight: #语法高亮\n  enable: true #是否启用\n  line_number: true #显示行号\n  tab_replace:\n# Category & Tag #分类和标签\ndefault_category: uncategorized #默认分类\ncategory_map:\ntag_map:\n# Archives\n2: 开启分页\n1: 禁用分页\n0: 全部禁用\narchive: 2\ncategory: 2\ntag: 2\n# Server #本地服务器\nport: 4000 #端口号\nserver_ip: localhost #IP 地址\nlogger: false\nlogger_format: dev\n# Date / Time format #日期时间格式\ndate_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/\ntime_format: H:mm:ss\n# Pagination #分页\nper_page: 10 #每页文章数，设置成 0 禁用分页\npagination_dir: page\n# Disqus #Disqus评论，替换为多说\ndisqus_shortname:\n# Extensions #拓展插件\ntheme: landscape-plus #主题\nexclude_generator:\nplugins: #插件，例如生成 RSS 和站点地图的\n- hexo-generator-feed\n- hexo-generator-sitemap\n# Deployment #部署，将 lmintlcx 改成用户名\ndeploy:\n  type: git\n  repo: 刚刚github创库地址.git\n  branch: master\n```\n`注意`\n配置文件的冒号“:”后面有一个空格\n\n### hexo命令行使用\n\n常用命令：\n\n```js\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n\n简写：\n\n```js\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n### 编辑文章\n\n新建文章\n\n```js\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件标题.md\n```js\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n```\n编辑完后保存，hexo server 预览\n\n## hexo部署\n\n执行下列指令即可完成部署。\n```js\nhexo generate\nhexo deploy\n```\n\n以下提示说明部署成功\n```js\n[info] Deploy done: git\n```\n点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at http://wuxiaolong.me (这是我买的域名)\n\n## 图床\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n## 域名\n### 将独立域名与GitHub Pages的空间绑定\n方法一：在站点source目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n方法二：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n\n### DNS设置\n用[DNSpod](https://www.dnspod.cn/)，快，免费，稳定。\n注册DNSpod，添加域名，如下图设置。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-1.png)\n其中A的两条记录指向的ip地址是github Pages的提供的ip\n如何知道你的github上项目的IP，如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-2.png)\n\n### 去Godaddy修改DNS地址\n更改godaddy的Nameservers为DNSpod的NameServers。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-5.png)\n\n## 总结\n之前用的jekell写的，[手把手教你建github技术博客by jekyll](http://wuxiaolong.github.io/2014/10/26/build-blog/)，也是折腾了几天才做成自己满意的，昨天决定换成hexo，也是花了一天半时间，为了追求更好，必须折腾！\n\n## 附录\n* [hexo系列教程：（一）hexo介绍](http://zipperary.com/2013/05/28/hexo-guide-1/)\n* [使用Hexo搭建博客](http://blog.lmintlcx.com/post/blog-with-hexo.html)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [windows下搭建hexo博客并将其部署到GitCafe终极教程](http://www.jianshu.com/p/e858a90d0a17)\n* [GoDaddy优惠码](http://www.dute.me/)\n* [Godaddy购买域名及配置](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [GitHub配置域名（Godaddy）](http://blog.csdn.net/yuguiyang1990/article/details/39523005)\n\n\n\n","source":"_posts/build-blog-by-hexo.md","raw":"title: 手把手教你建github技术博客by hexo\ndate: 2015-07-31 14:22:35\ntags: [github,hexo]\ncategory: hexo\n---\n## 适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n<!-- more -->\n\n## 环境准备\n\n### 安装Git\n下载 [msysgit](http://msysgit.github.io/) 并执行即可完成安装。\n\n### 安装Node.js\n在 Windows 环境下安装 [Node.js](http://nodejs.org/) 非常简单，仅须下载安装文件并执行即可完成安装。\n\n### 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```js\nnpm install -g hexo\n```\n`问题`\n* npm ERR! registry error parsing json 错误\n\n可能需要设置npm代理,执行命令\n```js \nnpm config set registry http://registry.cnpmjs.org\n```\n\n* hexo:command not found\n删除刚刚安装的npm目录，重新执行命令npm install -g hexo安装hexo，\n\n\n### 创建hexo文件夹\n安装完成后，在你喜爱的文件夹下（如H:\\hexo），执行以下指令(在H:\\hexo内点击鼠标右键，选择Git bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\n```js\nhexo init\n```\n\n### 安装依赖包\n```js\nnpm install\n```\n\n### 本地查看\n\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在H:\\hexo)，然后到浏览器输入localhost:4000看看。\n```js\nhexo generate\nhexo server\n```\n好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。\n\n`问题`\n* 执行hexo server提示找不到该指令 \n解决办法： \n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```js\nnpm install hexo -server --save \n```\n安装此server后再试，问题解决\n\n## github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-1.png)\n\n### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式: yourname.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-2.png)\n![3](http://wuxiaolong.qiniudn.com/2014-10-26-build-blog-3.png)\n`注意`\n命名规则：你的github账号.github.io，我这里被坑了，之前是jekell写的，现在换成hexo，所以我是另建创库了。\n\n### 生成SSH密钥\nssh-keygen -t rsa -C \"你的邮箱地址\"，按3个回车，密码为空。\n\n在C:\\Users\\Administrator.ssh下，得到两个文件id_rsa和id_rsa.pub。\n\n### 在GitHub上添加SSH密钥\n打开id_rsa.pub，复制全文。[https://github.com/settings/ssh](https://github.com/settings/ssh) ，Add SSH key，粘贴进去。\n\n## hexo使用\n\n### 目录结构\n\n.\n├── .deploy       #需要部署的文件\n├── node_modules  #Hexo插件\n├── public        #生成的静态网页文件\n├── scaffolds     #模板\n├── source        #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n|   ├── _drafts   #草稿\n|   └── _posts    #文章\n├── themes        #主题\n├── _config.yml   #全局配置文件\n└── package.json\n\n### 全局配置 _config.yml\n\n```js\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Site #站点信息\ntitle:  #标题\nsubtitle:  #副标题\ndescription:  #站点描述，给搜索引擎看的\nauthor:  #作者\nemail:  #电子邮箱\nlanguage: zh-CN #语言\n# URL #链接格式\nurl:  #网址\nroot: / #根目录\npermalink: :year/:month/:day/:title/ #文章的链接格式\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #分类目录\ncode_dir: downloads/code\npermalink_defaults:\n# Directory #目录\nsource_dir: source #源文件目录\npublic_dir: public #生成的网页文件目录\n# Writing #写作\nnew_post_name: :title.md #新文章标题\ndefault_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）\ntitlecase: false #标题转换成大写\nexternal_link: true #在新选项卡中打开连接\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nhighlight: #语法高亮\n  enable: true #是否启用\n  line_number: true #显示行号\n  tab_replace:\n# Category & Tag #分类和标签\ndefault_category: uncategorized #默认分类\ncategory_map:\ntag_map:\n# Archives\n2: 开启分页\n1: 禁用分页\n0: 全部禁用\narchive: 2\ncategory: 2\ntag: 2\n# Server #本地服务器\nport: 4000 #端口号\nserver_ip: localhost #IP 地址\nlogger: false\nlogger_format: dev\n# Date / Time format #日期时间格式\ndate_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/\ntime_format: H:mm:ss\n# Pagination #分页\nper_page: 10 #每页文章数，设置成 0 禁用分页\npagination_dir: page\n# Disqus #Disqus评论，替换为多说\ndisqus_shortname:\n# Extensions #拓展插件\ntheme: landscape-plus #主题\nexclude_generator:\nplugins: #插件，例如生成 RSS 和站点地图的\n- hexo-generator-feed\n- hexo-generator-sitemap\n# Deployment #部署，将 lmintlcx 改成用户名\ndeploy:\n  type: git\n  repo: 刚刚github创库地址.git\n  branch: master\n```\n`注意`\n配置文件的冒号“:”后面有一个空格\n\n### hexo命令行使用\n\n常用命令：\n\n```js\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n\n简写：\n\n```js\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n### 编辑文章\n\n新建文章\n\n```js\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件标题.md\n```js\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n```\n编辑完后保存，hexo server 预览\n\n## hexo部署\n\n执行下列指令即可完成部署。\n```js\nhexo generate\nhexo deploy\n```\n\n以下提示说明部署成功\n```js\n[info] Deploy done: git\n```\n点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at http://wuxiaolong.me (这是我买的域名)\n\n## 图床\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n## 域名\n### 将独立域名与GitHub Pages的空间绑定\n方法一：在站点source目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n方法二：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n\n### DNS设置\n用[DNSpod](https://www.dnspod.cn/)，快，免费，稳定。\n注册DNSpod，添加域名，如下图设置。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-1.png)\n其中A的两条记录指向的ip地址是github Pages的提供的ip\n如何知道你的github上项目的IP，如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-2.png)\n\n### 去Godaddy修改DNS地址\n更改godaddy的Nameservers为DNSpod的NameServers。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-5.png)\n\n## 总结\n之前用的jekell写的，[手把手教你建github技术博客by jekyll](http://wuxiaolong.github.io/2014/10/26/build-blog/)，也是折腾了几天才做成自己满意的，昨天决定换成hexo，也是花了一天半时间，为了追求更好，必须折腾！\n\n## 附录\n* [hexo系列教程：（一）hexo介绍](http://zipperary.com/2013/05/28/hexo-guide-1/)\n* [使用Hexo搭建博客](http://blog.lmintlcx.com/post/blog-with-hexo.html)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [windows下搭建hexo博客并将其部署到GitCafe终极教程](http://www.jianshu.com/p/e858a90d0a17)\n* [GoDaddy优惠码](http://www.dute.me/)\n* [Godaddy购买域名及配置](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [GitHub配置域名（Godaddy）](http://blog.csdn.net/yuguiyang1990/article/details/39523005)\n\n\n\n","slug":"build-blog-by-hexo","published":1,"updated":"2015-08-02T13:30:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0k0039v0zit2gl67p6"},{"title":"Android studio share项目到svn仓库","date":"2015-05-24T16:00:00.000Z","_content":"\n##import into SVN\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-1.png)\n\n##忽略文件\n\nAndroid Studio 中建议过滤的文件：<br>\n.idea 文件夹<br>\n.gradle 文件夹<br>\n所有的 build 文件夹<br>\n所有的 .iml 文件<br>\nlocal.properties 文件<br>\n\nAndroid studio已经自动生成了git的忽略文件，如图：\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-4.png)\n\n但是SVN如下设置不知道为什么没有效果\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-3.png)\n\n目前有两种解决方案：\n\n1、通过TortoiseSVN设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-6.png)\n\n2、上传代码忽略以上提及的文件\n\n##update和commit\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-5.png)\n\n如果没有这两个按钮，通过下面的设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-2.png)\n\n附：\n\n[【AndroidStudio】关于SVN的相关配置简介](http://blog.csdn.net/zhouzme/article/details/22790395)\n\n[Android studio share项目到svn仓库](http://blog.csdn.net/hymking/article/details/45199077)\n\n\n\n","source":"_posts/android-studio-share-to-svn.md","raw":"title: Android studio share项目到svn仓库\ndate: 2015-05-25 \ncategories: [Android Studio]\ntags: [Android Studio]\n---\n\n##import into SVN\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-1.png)\n\n##忽略文件\n\nAndroid Studio 中建议过滤的文件：<br>\n.idea 文件夹<br>\n.gradle 文件夹<br>\n所有的 build 文件夹<br>\n所有的 .iml 文件<br>\nlocal.properties 文件<br>\n\nAndroid studio已经自动生成了git的忽略文件，如图：\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-4.png)\n\n但是SVN如下设置不知道为什么没有效果\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-3.png)\n\n目前有两种解决方案：\n\n1、通过TortoiseSVN设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-6.png)\n\n2、上传代码忽略以上提及的文件\n\n##update和commit\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-5.png)\n\n如果没有这两个按钮，通过下面的设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-2.png)\n\n附：\n\n[【AndroidStudio】关于SVN的相关配置简介](http://blog.csdn.net/zhouzme/article/details/22790395)\n\n[Android studio share项目到svn仓库](http://blog.csdn.net/hymking/article/details/45199077)\n\n\n\n","slug":"android-studio-share-to-svn","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0l003dv0zi5h25l8xb"},{"title":"Android实战Samples之下载","date":"2015-01-20T16:00:00.000Z","_content":"本Samples演示了如何在通知栏里下载，分为默认和自定义的。\n\n###效果图：\n![](http://wuxiaolong.qiniudn.com/2014-11-21-android-samples-download.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n\n\n###拓展\n>[Android 通知栏Notification学习](http://blog.csdn.net/vipzjyno1/article/details/25248021)\n","source":"_posts/android-samples-download.md","raw":"title: Android实战Samples之下载\ndate: 2015-01-21 \ncategories: [Android]\ntags: [Android]\n---\n本Samples演示了如何在通知栏里下载，分为默认和自定义的。\n\n###效果图：\n![](http://wuxiaolong.qiniudn.com/2014-11-21-android-samples-download.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n\n\n###拓展\n>[Android 通知栏Notification学习](http://blog.csdn.net/vipzjyno1/article/details/25248021)\n","slug":"android-samples-download","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0n003gv0zivp1r3sqc"},{"title":"Android开发者应该保持以下特质","date":"2013-06-13T16:00:00.000Z","_content":"1. 深读SDK文档\n2. 深读SDK的APIDemo和Samples\n3. 掌握GIT开源代码\n4. 多了解Android开源项目，学习别人的手法写程序\n","source":"_posts/android-developers-should-keep-the-following-characteristics.md","raw":"title: Android开发者应该保持以下特质\ncategories: [Android]\ntags: [Android]\ndate: 2013-06-14\n---\n1. 深读SDK文档\n2. 深读SDK的APIDemo和Samples\n3. 掌握GIT开源代码\n4. 多了解Android开源项目，学习别人的手法写程序\n","slug":"android-developers-should-keep-the-following-characteristics","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0q003jv0zix050bf5u"},{"title":"今日情感","date":"2015-08-04T08:27:21.000Z","_content":"\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/todayEmotionAppScreenshots.gif)\n\n<!--more-->\n\n## 应用下载\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 应用介绍\n【今日情感】专注于分享情感故事、情感美文、情感语录；情感是人适应生存的心理工具，也是人际通信交流的重要手段。 \n★ 内容 \n情感文章栏目主要内容有情感美文、情侣恋爱技巧与爱情知识、爱情文章故事、朋友间的友情，家庭亲情中夫妻关系、子女关系、父母关系相处技巧。 \n★寄语 \n偶遇今日情感，希望您在这里找到共鸣。\n\n## 更新日志\n* v3.8\n1、新增职场指南和经典语录模块\n2、新增美图美句图片长按保存\n3、美图美句详情图片放大缩小优化\n\n* v3.7\n1、新增美图美句模块，享受小清新文字\n2、新增阅读量，记录每天阅读\n\n* v3.6\n1、新增微信、QQ、微博等分享\n2、全新Material Design风格\n\n* v3.5\n1、新增 情感圈，交流、分享、学习\n2、新增 我的下载\n3、文章列表 新增发布时间\n4、布局优化\n\n* v3.4\n1、新增夜间/白天模式切换，夜晚阅读不伤眼\n2、文章详情 新增下载功能，喜欢文章一键下载\n\n\n* v3.3\n1、文章详情 新增 发表评论\n2、设置 新增 用户中心\n3、欢迎页 优化 “一语倾心”\n\n* v3.1\n1、欢迎页 新增 “一语倾心”\n2、文章详情 新增 收藏功能\n3、文章详情 长按 复制功能\n4、设置 新增 我的收藏\n5、我的收藏 长按 删除收藏\n\n","source":"_posts/TodayEmotion.md","raw":"title: 今日情感\ndate: 2015-08-04 16:27:21\ntags: [Android,App]\ncategory: App\n---\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/todayEmotionAppScreenshots.gif)\n\n<!--more-->\n\n## 应用下载\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 应用介绍\n【今日情感】专注于分享情感故事、情感美文、情感语录；情感是人适应生存的心理工具，也是人际通信交流的重要手段。 \n★ 内容 \n情感文章栏目主要内容有情感美文、情侣恋爱技巧与爱情知识、爱情文章故事、朋友间的友情，家庭亲情中夫妻关系、子女关系、父母关系相处技巧。 \n★寄语 \n偶遇今日情感，希望您在这里找到共鸣。\n\n## 更新日志\n* v3.8\n1、新增职场指南和经典语录模块\n2、新增美图美句图片长按保存\n3、美图美句详情图片放大缩小优化\n\n* v3.7\n1、新增美图美句模块，享受小清新文字\n2、新增阅读量，记录每天阅读\n\n* v3.6\n1、新增微信、QQ、微博等分享\n2、全新Material Design风格\n\n* v3.5\n1、新增 情感圈，交流、分享、学习\n2、新增 我的下载\n3、文章列表 新增发布时间\n4、布局优化\n\n* v3.4\n1、新增夜间/白天模式切换，夜晚阅读不伤眼\n2、文章详情 新增下载功能，喜欢文章一键下载\n\n\n* v3.3\n1、文章详情 新增 发表评论\n2、设置 新增 用户中心\n3、欢迎页 优化 “一语倾心”\n\n* v3.1\n1、欢迎页 新增 “一语倾心”\n2、文章详情 新增 收藏功能\n3、文章详情 长按 复制功能\n4、设置 新增 我的收藏\n5、我的收藏 长按 删除收藏\n\n","slug":"TodayEmotion","published":1,"updated":"2015-08-04T12:39:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0s003mv0zij9on4oep"},{"title":"时间工具类TimeUtil","date":"2015-07-07T16:00:00.000Z","_content":"\n```java\npublic class TimeUtil {\n\n    public static String getCurrentTime() {\n        return getCurrentTime(\"yyyy-MM-dd HH:mm:ss\");\n    }\n\n    public static String getCurrentTime(String format) {\n        Date date = new Date();\n        SimpleDateFormat sdf = new SimpleDateFormat(format, Locale.getDefault());\n        String currentTime = sdf.format(date);\n        return currentTime;\n    }\n\n    public static String getTime(int count) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd 00:00:00\");\n        Calendar c = Calendar.getInstance();\n        c.add(Calendar.DAY_OF_MONTH, -count);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getStartTime(int year, int monthOfYear, int dayOfMonth) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar c = Calendar.getInstance();\n        c.set(Calendar.YEAR, year);\n        c.set(Calendar.MONTH, monthOfYear);\n        c.set(Calendar.DAY_OF_MONTH, dayOfMonth);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getEndTime(int year, int monthOfYear, int dayOfMonth) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar c = Calendar.getInstance();\n        c.set(Calendar.YEAR, year);\n        c.set(Calendar.MONTH, monthOfYear);\n        c.set(Calendar.DAY_OF_MONTH, dayOfMonth);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getEndTime(int count) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd 23:59:59\");\n        Calendar c = Calendar.getInstance();\n        c.add(Calendar.DAY_OF_MONTH, -count);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static int getYear(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int year = calendar.get(Calendar.YEAR);\n        return year;\n    }\n\n    public static int getMonth(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int month = calendar.get(Calendar.MONTH);\n        return month;\n    }\n\n    public static int getDay(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int day = calendar.get(Calendar.DATE);\n        return day;\n    }\n\n    /**\n     * -1:date1大于date2；\n     * 1:date1小于date2\n     *\n     * @param date1\n     * @param date2\n     * @return\n     */\n    public static int compareDate(String date1, String date2) {\n        DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n        try {\n            Date dt1 = df.parse(date1);\n            Date dt2 = df.parse(date2);\n            if (dt1.getTime() > dt2.getTime()) {\n                return -1;\n            } else if (dt1.getTime() < dt2.getTime()) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n        return 0;\n    }\n}\n```\n","source":"_posts/TimeUtil.md","raw":"title: 时间工具类TimeUtil\ndate: 2015-07-08\ncategories: [Android]\ntags: [Android]\n---\n\n```java\npublic class TimeUtil {\n\n    public static String getCurrentTime() {\n        return getCurrentTime(\"yyyy-MM-dd HH:mm:ss\");\n    }\n\n    public static String getCurrentTime(String format) {\n        Date date = new Date();\n        SimpleDateFormat sdf = new SimpleDateFormat(format, Locale.getDefault());\n        String currentTime = sdf.format(date);\n        return currentTime;\n    }\n\n    public static String getTime(int count) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd 00:00:00\");\n        Calendar c = Calendar.getInstance();\n        c.add(Calendar.DAY_OF_MONTH, -count);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getStartTime(int year, int monthOfYear, int dayOfMonth) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar c = Calendar.getInstance();\n        c.set(Calendar.YEAR, year);\n        c.set(Calendar.MONTH, monthOfYear);\n        c.set(Calendar.DAY_OF_MONTH, dayOfMonth);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getEndTime(int year, int monthOfYear, int dayOfMonth) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar c = Calendar.getInstance();\n        c.set(Calendar.YEAR, year);\n        c.set(Calendar.MONTH, monthOfYear);\n        c.set(Calendar.DAY_OF_MONTH, dayOfMonth);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static String getEndTime(int count) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd 23:59:59\");\n        Calendar c = Calendar.getInstance();\n        c.add(Calendar.DAY_OF_MONTH, -count);\n        Date d = c.getTime();\n        return format.format(d);\n    }\n\n    public static int getYear(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int year = calendar.get(Calendar.YEAR);\n        return year;\n    }\n\n    public static int getMonth(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int month = calendar.get(Calendar.MONTH);\n        return month;\n    }\n\n    public static int getDay(String time) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Calendar calendar = GregorianCalendar.getInstance();\n        try {\n            calendar.setTime(sdf.parse(time));\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        int day = calendar.get(Calendar.DATE);\n        return day;\n    }\n\n    /**\n     * -1:date1大于date2；\n     * 1:date1小于date2\n     *\n     * @param date1\n     * @param date2\n     * @return\n     */\n    public static int compareDate(String date1, String date2) {\n        DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n        try {\n            Date dt1 = df.parse(date1);\n            Date dt2 = df.parse(date2);\n            if (dt1.getTime() > dt2.getTime()) {\n                return -1;\n            } else if (dt1.getTime() < dt2.getTime()) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n        return 0;\n    }\n}\n```\n","slug":"TimeUtil","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0v003sv0zi283yfg03"},{"title":"Android Design Support Library之TabLayout","date":"2015-08-03T01:26:54.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TabLayout1.gif)\n<!--more-->\n## 实例APK\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 使用方法\nGradle 中添加下面依赖\n```js\n compile 'com.android.support:design:22.2.0'\n```\n\n## xml布局\n```js\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\">\n\n        <android.support.design.widget.TabLayout\n            android:id=\"@+id/tabs\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:tabBackground=\"?attr/colorPrimary\"\n            app:tabSelectedTextColor=\"@color/white\"\n            app:tabTextColor=\"?attr/cursorTextColor\" />\n\n   \n    <android.support.v4.view.ViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"?attr/backgroundColor\"\n       />\n\n</LinearLayout>\n```\n## ViewPager的适配器\n```java\nclass ViewPagerAdapter extends FragmentPagerAdapter {\n        private final List<Fragment> mFragmentList = new ArrayList<>();\n        private final List<String> mFragmentTitleList = new ArrayList<>();\n\n        public ViewPagerAdapter(FragmentManager manager) {\n            super(manager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return mFragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return mFragmentList.size();\n        }\n\n        public void addFrag(Fragment fragment, String title) {\n            mFragmentList.add(fragment);\n            mFragmentTitleList.add(title);\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return mFragmentTitleList.get(position);\n        }\n    }\n    \n  private void setupViewPager(ViewPager viewPager) {\n        ViewPagerAdapter adapter = new ViewPagerAdapter(getActivity().getSupportFragmentManager());\n\n\n        Fragment newfragment = new TodayEmotionFragment();\n        Bundle data = new Bundle();\n        data.putInt(\"id\", 0);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.classical_article));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 3);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"职场指南\");\n\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 1);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.emotion_daily));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 2);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.love_marriage));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 4);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"经典语录\");\n\n        viewPager.setAdapter(adapter);\n\n        viewPager.setOffscreenPageLimit(5);\n    }\n```\n## 设置TabLayout\n```java\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        TabLayout tabLayout = (TabLayout) view.findViewById(R.id.tabs);\n\n        ViewPager viewPager = (ViewPager) view.findViewById(R.id.viewPager);\n        setupViewPager(viewPager);\n        // 设置ViewPager的数据等\n        tabLayout.setupWithViewPager(viewPager);\n        tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);//适合很多tab\n        //tabLayout.setTabMode(TabLayout.MODE_FIXED);//tab均分,适合少的tab\n    }\n```\n## 定义TabLayout的样式\n[参考博客](http://chenfuduo.me/2015/07/30/TabLayout-of-design-support-library/)","source":"_posts/TabLayout.md","raw":"title: Android Design Support Library之TabLayout \ndate: 2015-08-03 09:26:54\ntags: [Android,TabLayout]\ncategory: Android\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TabLayout1.gif)\n<!--more-->\n## 实例APK\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 使用方法\nGradle 中添加下面依赖\n```js\n compile 'com.android.support:design:22.2.0'\n```\n\n## xml布局\n```js\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\">\n\n        <android.support.design.widget.TabLayout\n            android:id=\"@+id/tabs\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:tabBackground=\"?attr/colorPrimary\"\n            app:tabSelectedTextColor=\"@color/white\"\n            app:tabTextColor=\"?attr/cursorTextColor\" />\n\n   \n    <android.support.v4.view.ViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"?attr/backgroundColor\"\n       />\n\n</LinearLayout>\n```\n## ViewPager的适配器\n```java\nclass ViewPagerAdapter extends FragmentPagerAdapter {\n        private final List<Fragment> mFragmentList = new ArrayList<>();\n        private final List<String> mFragmentTitleList = new ArrayList<>();\n\n        public ViewPagerAdapter(FragmentManager manager) {\n            super(manager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return mFragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return mFragmentList.size();\n        }\n\n        public void addFrag(Fragment fragment, String title) {\n            mFragmentList.add(fragment);\n            mFragmentTitleList.add(title);\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return mFragmentTitleList.get(position);\n        }\n    }\n    \n  private void setupViewPager(ViewPager viewPager) {\n        ViewPagerAdapter adapter = new ViewPagerAdapter(getActivity().getSupportFragmentManager());\n\n\n        Fragment newfragment = new TodayEmotionFragment();\n        Bundle data = new Bundle();\n        data.putInt(\"id\", 0);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.classical_article));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 3);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"职场指南\");\n\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 1);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.emotion_daily));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 2);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.love_marriage));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 4);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"经典语录\");\n\n        viewPager.setAdapter(adapter);\n\n        viewPager.setOffscreenPageLimit(5);\n    }\n```\n## 设置TabLayout\n```java\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        TabLayout tabLayout = (TabLayout) view.findViewById(R.id.tabs);\n\n        ViewPager viewPager = (ViewPager) view.findViewById(R.id.viewPager);\n        setupViewPager(viewPager);\n        // 设置ViewPager的数据等\n        tabLayout.setupWithViewPager(viewPager);\n        tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);//适合很多tab\n        //tabLayout.setTabMode(TabLayout.MODE_FIXED);//tab均分,适合少的tab\n    }\n```\n## 定义TabLayout的样式\n[参考博客](http://chenfuduo.me/2015/07/30/TabLayout-of-design-support-library/)","slug":"TabLayout","published":1,"updated":"2015-08-04T13:47:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0w003vv0zieptq59h3"},{"title":"Android之SqliteSample","date":"2015-04-20T16:00:00.000Z","_content":"原文：[https://developer.android.com/training/basics/data-storage/databases.html](https://developer.android.com/training/basics/data-storage/databases.html)\n\n* Define a Schema and Contract\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.provider.BaseColumns;\n\npublic final class FeedReaderContract {\n\tpublic FeedReaderContract() {\n\t}\n\n\tpublic static abstract class FeedEntry implements BaseColumns {\n\t\tpublic static final String TABLE_NAME = \"entry\";\n\t\tpublic static final String COLUMN_NAME_ENTRY_ID = \"entryid\";\n\t\tpublic static final String COLUMN_NAME_TITLE = \"title\";\n\t\tpublic static final String COLUMN_NAME_SUBTITLE = \"subtitle\";\n\n\t}\n}\n\n```\n<!-- more -->\n* FeedEntryDb\n\n```java\npackage com.xiaomolong.sqlitesample;\n\npublic class FeedEntryDb {\n\tpublic String entryid;\n\tpublic String title;\n\tpublic String subtitle;\n\n\tpublic String getEntryid() {\n\t\treturn entryid;\n\t}\n\n\tpublic void setEntryid(String entryid) {\n\t\tthis.entryid = entryid;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\n\tpublic String getSubtitle() {\n\t\treturn subtitle;\n\t}\n\n\tpublic void setSubtitle(String subtitle) {\n\t\tthis.subtitle = subtitle;\n\t}\n}\n\n```\n\n\n* Create a Database Using a SQL Helper\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteDatabase.CursorFactory;\nimport android.database.sqlite.SQLiteOpenHelper;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class FeedReaderDbHelper extends SQLiteOpenHelper {\n\tpublic static final int DATABASE_VERSION = 1;\n\tpublic static final String DATABASE_NAME = \"FeedReader.db\";\n\tprivate static final String TEXT_TYPE = \" TEXT\";\n\tprivate static final String COMMA_SEP = \",\";\n\tprivate static final String SQL_CREATE_ENTRIES = \"CREATE TABLE \"\n\t\t\t+ FeedEntry.TABLE_NAME + \" (\" + FeedEntry._ID\n\t\t\t+ \" INTEGER PRIMARY KEY,\" + FeedEntry.COLUMN_NAME_ENTRY_ID\n\t\t\t+ TEXT_TYPE + COMMA_SEP + FeedEntry.COLUMN_NAME_TITLE + TEXT_TYPE\n\t\t\t+ COMMA_SEP + FeedEntry.COLUMN_NAME_SUBTITLE + TEXT_TYPE +\n\t\t\t// Any other options for the CREATE command\n\t\t\t\" )\";\n\n\tprivate static final String SQL_DELETE_ENTRIES = \"DROP TABLE IF EXISTS \"\n\t\t\t+ FeedEntry.TABLE_NAME;\n\n\tpublic FeedReaderDbHelper(Context context) {\n\t\tsuper(context, DATABASE_NAME, null, DATABASE_VERSION);\n\t}\n\n\tpublic FeedReaderDbHelper(Context context, String name,\n\t\t\tCursorFactory factory, int version) {\n\t\tsuper(context, name, factory, version);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase db) {\n\t\tdb.execSQL(SQL_CREATE_ENTRIES);\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n\t\tdb.execSQL(SQL_DELETE_ENTRIES);\n\t\tonCreate(db);\n\t}\n\n}\n\n```\n\n * DatabaseManger，包括增删改查\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.content.ContentValues;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class DatabaseManger {\n\n\tprivate static FeedReaderDbHelper mFeedReaderDbHelper = null;\n\n\tDatabaseManger(Context context) {\n\t\tgetInstance(context);\n\t}\n\n\tpublic static void getInstance(Context context) {\n\t\tif (mFeedReaderDbHelper == null) {\n\t\t\tmFeedReaderDbHelper = new FeedReaderDbHelper(context);\n\t\t}\n\t}\n\n\t/**\n\t * 插入\n\t * \n\t * @return the row ID of the newly inserted row, or -1 if an error occurred\n\t */\n\tpublic long insert(FeedEntryDb feedEntry) {\n\n\t\t// Gets the data repository in write mode\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getWritableDatabase();\n\n\t\t// Create a new map of values, where column names are the keys\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_ENTRY_ID, feedEntry.getEntryid());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntry.getTitle());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_SUBTITLE, feedEntry.getSubtitle());\n\n\t\t// Insert the new row, returning the primary key value of the new row\n\t\tlong newRowId;\n\t\tnewRowId = db.insert(FeedEntry.TABLE_NAME, null, values);\n\t\tdb.close();\n\t\treturn newRowId;\n\n\t}\n\n\t/**\n\t * 查询或通过条件查询\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic List<FeedEntryDb> query(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\n\t\t// Define a projection that specifies which columns from the database\n\t\t// you will actually use after this query.\n\t\tString[] projection = { FeedEntry._ID, FeedEntry.COLUMN_NAME_ENTRY_ID,\n\t\t\t\tFeedEntry.COLUMN_NAME_TITLE, FeedEntry.COLUMN_NAME_SUBTITLE };\n\t\tString selection = null;\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\tif (rowId != -1) {// 通过条件查询\n\t\t\tselection = FeedEntry._ID + \" = ?\";\n\t\t} else {\n\t\t\tselectionArgs = null;\n\t\t}\n\t\t// How you want the results sorted in the resulting Cursor\n\t\tString sortOrder = FeedEntry.COLUMN_NAME_TITLE + \" DESC\";\n\n\t\tCursor cursor = db.query(FeedEntry.TABLE_NAME, // The table to query\n\t\t\t\tprojection, // The columns to return\n\t\t\t\tselection, // The columns for the WHERE clause\n\t\t\t\tselectionArgs, // The values for the WHERE clause\n\t\t\t\tnull, // don't group the rows\n\t\t\t\tnull, // don't filter by row groups\n\t\t\t\tsortOrder // The sort order\n\t\t\t\t);\n\t\tList<FeedEntryDb> feedEntryDbList = new ArrayList<FeedEntryDb>();\n\t\twhile (cursor.moveToNext()) {\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tlong itemId = cursor.getLong(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry._ID));\n\t\t\tfeedEntryDb.setEntryid(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_ENTRY_ID)));\n\t\t\tfeedEntryDb.setTitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_TITLE)));\n\t\t\tfeedEntryDb.setSubtitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_SUBTITLE)));\n\t\t\tfeedEntryDbList.add(feedEntryDb);\n\t\t}\n\t\tcursor.close();\n\t\tdb.close();\n\t\treturn feedEntryDbList;\n\n\t}\n\n\t/**\n\t * 更新\n\t * \n\t * @param feedEntry\n\t * @param rowId\n\t * @return\n\t */\n\tpublic int update(FeedEntryDb feedEntryDb, int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// New value for one column\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntryDb.getTitle()\n\t\t\t\t.toString());\n\n\t\t// Which row to update, based on the ID\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\n\t\tint count = db.update(FeedEntry.TABLE_NAME, values, selection,\n\t\t\t\tselectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n\n\t/**\n\t * 删除\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic int delete(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// Define 'where' part of query.\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\t// Specify arguments in placeholder order.\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\t// Issue SQL statement.\n\t\tint count = db.delete(FeedEntry.TABLE_NAME, selection, selectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n}\n\n ```\n \n * 方法调用\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class MainActivity extends Activity implements OnClickListener {\n\tDatabaseManger mDatabaseManger;\n\tTextView textView;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\ttextView = (TextView) findViewById(R.id.textView);\n\t\tfindViewById(R.id.btnAdd).setOnClickListener(this);\n\t\tfindViewById(R.id.btnQuery).setOnClickListener(this);\n\t\tfindViewById(R.id.btnUpdate).setOnClickListener(this);\n\t\tfindViewById(R.id.btnDelete).setOnClickListener(this);\n\t\tmDatabaseManger = new DatabaseManger(this);\n\t}\n\n\t@Override\n\tpublic void onClick(View v) {\n\t\tswitch (v.getId()) {\n\t\tcase R.id.btnAdd:\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\t\tfeedEntryDb.setEntryid(i + \"\");\n\t\t\t\tfeedEntryDb.setTitle(\"title\" + i + \"\");\n\t\t\t\tfeedEntryDb.setSubtitle(\"subtitle\" + i + \"\");\n\t\t\t\tmDatabaseManger.insert(feedEntryDb);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase R.id.btnQuery:\n\t\t\tList<FeedEntryDb> feedEntryDbList = mDatabaseManger.query(-1);\n\t\t\tString t = \"\";\n\t\t\tfor (int i = 0; i < feedEntryDbList.size(); i++) {\n\n\t\t\t\tt = t + feedEntryDbList.get(i).getTitle() + \"\\n\"\n\t\t\t\t\t\t+ feedEntryDbList.get(i).getSubtitle() + \"\\n\\n\";\n\t\t\t}\n\t\t\ttextView.setText(t);\n\t\t\tbreak;\n\t\tcase R.id.btnUpdate:\n\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tfeedEntryDb.setTitle(\"修改\");\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.update(feedEntryDb, 1));\n\n\t\t\tbreak;\n\t\tcase R.id.btnDelete:\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.delete(1));\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.main, menu);\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n\t\t// Handle action bar item clicks here. The action bar will\n\t\t// automatically handle clicks on the Home/Up button, so long\n\t\t// as you specify a parent activity in AndroidManifest.xml.\n\t\tint id = item.getItemId();\n\t\tif (id == R.id.action_settings) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onOptionsItemSelected(item);\n\t}\n\n}\n\n ```\n","source":"_posts/SqliteSample.md","raw":"title: Android之SqliteSample\ndate: 2015-04-21\ncategories: [Android]\ntags: [Android,Sqlite]\n---\n原文：[https://developer.android.com/training/basics/data-storage/databases.html](https://developer.android.com/training/basics/data-storage/databases.html)\n\n* Define a Schema and Contract\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.provider.BaseColumns;\n\npublic final class FeedReaderContract {\n\tpublic FeedReaderContract() {\n\t}\n\n\tpublic static abstract class FeedEntry implements BaseColumns {\n\t\tpublic static final String TABLE_NAME = \"entry\";\n\t\tpublic static final String COLUMN_NAME_ENTRY_ID = \"entryid\";\n\t\tpublic static final String COLUMN_NAME_TITLE = \"title\";\n\t\tpublic static final String COLUMN_NAME_SUBTITLE = \"subtitle\";\n\n\t}\n}\n\n```\n<!-- more -->\n* FeedEntryDb\n\n```java\npackage com.xiaomolong.sqlitesample;\n\npublic class FeedEntryDb {\n\tpublic String entryid;\n\tpublic String title;\n\tpublic String subtitle;\n\n\tpublic String getEntryid() {\n\t\treturn entryid;\n\t}\n\n\tpublic void setEntryid(String entryid) {\n\t\tthis.entryid = entryid;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\n\tpublic String getSubtitle() {\n\t\treturn subtitle;\n\t}\n\n\tpublic void setSubtitle(String subtitle) {\n\t\tthis.subtitle = subtitle;\n\t}\n}\n\n```\n\n\n* Create a Database Using a SQL Helper\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteDatabase.CursorFactory;\nimport android.database.sqlite.SQLiteOpenHelper;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class FeedReaderDbHelper extends SQLiteOpenHelper {\n\tpublic static final int DATABASE_VERSION = 1;\n\tpublic static final String DATABASE_NAME = \"FeedReader.db\";\n\tprivate static final String TEXT_TYPE = \" TEXT\";\n\tprivate static final String COMMA_SEP = \",\";\n\tprivate static final String SQL_CREATE_ENTRIES = \"CREATE TABLE \"\n\t\t\t+ FeedEntry.TABLE_NAME + \" (\" + FeedEntry._ID\n\t\t\t+ \" INTEGER PRIMARY KEY,\" + FeedEntry.COLUMN_NAME_ENTRY_ID\n\t\t\t+ TEXT_TYPE + COMMA_SEP + FeedEntry.COLUMN_NAME_TITLE + TEXT_TYPE\n\t\t\t+ COMMA_SEP + FeedEntry.COLUMN_NAME_SUBTITLE + TEXT_TYPE +\n\t\t\t// Any other options for the CREATE command\n\t\t\t\" )\";\n\n\tprivate static final String SQL_DELETE_ENTRIES = \"DROP TABLE IF EXISTS \"\n\t\t\t+ FeedEntry.TABLE_NAME;\n\n\tpublic FeedReaderDbHelper(Context context) {\n\t\tsuper(context, DATABASE_NAME, null, DATABASE_VERSION);\n\t}\n\n\tpublic FeedReaderDbHelper(Context context, String name,\n\t\t\tCursorFactory factory, int version) {\n\t\tsuper(context, name, factory, version);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase db) {\n\t\tdb.execSQL(SQL_CREATE_ENTRIES);\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n\t\tdb.execSQL(SQL_DELETE_ENTRIES);\n\t\tonCreate(db);\n\t}\n\n}\n\n```\n\n * DatabaseManger，包括增删改查\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.content.ContentValues;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class DatabaseManger {\n\n\tprivate static FeedReaderDbHelper mFeedReaderDbHelper = null;\n\n\tDatabaseManger(Context context) {\n\t\tgetInstance(context);\n\t}\n\n\tpublic static void getInstance(Context context) {\n\t\tif (mFeedReaderDbHelper == null) {\n\t\t\tmFeedReaderDbHelper = new FeedReaderDbHelper(context);\n\t\t}\n\t}\n\n\t/**\n\t * 插入\n\t * \n\t * @return the row ID of the newly inserted row, or -1 if an error occurred\n\t */\n\tpublic long insert(FeedEntryDb feedEntry) {\n\n\t\t// Gets the data repository in write mode\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getWritableDatabase();\n\n\t\t// Create a new map of values, where column names are the keys\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_ENTRY_ID, feedEntry.getEntryid());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntry.getTitle());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_SUBTITLE, feedEntry.getSubtitle());\n\n\t\t// Insert the new row, returning the primary key value of the new row\n\t\tlong newRowId;\n\t\tnewRowId = db.insert(FeedEntry.TABLE_NAME, null, values);\n\t\tdb.close();\n\t\treturn newRowId;\n\n\t}\n\n\t/**\n\t * 查询或通过条件查询\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic List<FeedEntryDb> query(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\n\t\t// Define a projection that specifies which columns from the database\n\t\t// you will actually use after this query.\n\t\tString[] projection = { FeedEntry._ID, FeedEntry.COLUMN_NAME_ENTRY_ID,\n\t\t\t\tFeedEntry.COLUMN_NAME_TITLE, FeedEntry.COLUMN_NAME_SUBTITLE };\n\t\tString selection = null;\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\tif (rowId != -1) {// 通过条件查询\n\t\t\tselection = FeedEntry._ID + \" = ?\";\n\t\t} else {\n\t\t\tselectionArgs = null;\n\t\t}\n\t\t// How you want the results sorted in the resulting Cursor\n\t\tString sortOrder = FeedEntry.COLUMN_NAME_TITLE + \" DESC\";\n\n\t\tCursor cursor = db.query(FeedEntry.TABLE_NAME, // The table to query\n\t\t\t\tprojection, // The columns to return\n\t\t\t\tselection, // The columns for the WHERE clause\n\t\t\t\tselectionArgs, // The values for the WHERE clause\n\t\t\t\tnull, // don't group the rows\n\t\t\t\tnull, // don't filter by row groups\n\t\t\t\tsortOrder // The sort order\n\t\t\t\t);\n\t\tList<FeedEntryDb> feedEntryDbList = new ArrayList<FeedEntryDb>();\n\t\twhile (cursor.moveToNext()) {\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tlong itemId = cursor.getLong(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry._ID));\n\t\t\tfeedEntryDb.setEntryid(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_ENTRY_ID)));\n\t\t\tfeedEntryDb.setTitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_TITLE)));\n\t\t\tfeedEntryDb.setSubtitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_SUBTITLE)));\n\t\t\tfeedEntryDbList.add(feedEntryDb);\n\t\t}\n\t\tcursor.close();\n\t\tdb.close();\n\t\treturn feedEntryDbList;\n\n\t}\n\n\t/**\n\t * 更新\n\t * \n\t * @param feedEntry\n\t * @param rowId\n\t * @return\n\t */\n\tpublic int update(FeedEntryDb feedEntryDb, int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// New value for one column\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntryDb.getTitle()\n\t\t\t\t.toString());\n\n\t\t// Which row to update, based on the ID\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\n\t\tint count = db.update(FeedEntry.TABLE_NAME, values, selection,\n\t\t\t\tselectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n\n\t/**\n\t * 删除\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic int delete(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// Define 'where' part of query.\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\t// Specify arguments in placeholder order.\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\t// Issue SQL statement.\n\t\tint count = db.delete(FeedEntry.TABLE_NAME, selection, selectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n}\n\n ```\n \n * 方法调用\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class MainActivity extends Activity implements OnClickListener {\n\tDatabaseManger mDatabaseManger;\n\tTextView textView;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\ttextView = (TextView) findViewById(R.id.textView);\n\t\tfindViewById(R.id.btnAdd).setOnClickListener(this);\n\t\tfindViewById(R.id.btnQuery).setOnClickListener(this);\n\t\tfindViewById(R.id.btnUpdate).setOnClickListener(this);\n\t\tfindViewById(R.id.btnDelete).setOnClickListener(this);\n\t\tmDatabaseManger = new DatabaseManger(this);\n\t}\n\n\t@Override\n\tpublic void onClick(View v) {\n\t\tswitch (v.getId()) {\n\t\tcase R.id.btnAdd:\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\t\tfeedEntryDb.setEntryid(i + \"\");\n\t\t\t\tfeedEntryDb.setTitle(\"title\" + i + \"\");\n\t\t\t\tfeedEntryDb.setSubtitle(\"subtitle\" + i + \"\");\n\t\t\t\tmDatabaseManger.insert(feedEntryDb);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase R.id.btnQuery:\n\t\t\tList<FeedEntryDb> feedEntryDbList = mDatabaseManger.query(-1);\n\t\t\tString t = \"\";\n\t\t\tfor (int i = 0; i < feedEntryDbList.size(); i++) {\n\n\t\t\t\tt = t + feedEntryDbList.get(i).getTitle() + \"\\n\"\n\t\t\t\t\t\t+ feedEntryDbList.get(i).getSubtitle() + \"\\n\\n\";\n\t\t\t}\n\t\t\ttextView.setText(t);\n\t\t\tbreak;\n\t\tcase R.id.btnUpdate:\n\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tfeedEntryDb.setTitle(\"修改\");\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.update(feedEntryDb, 1));\n\n\t\t\tbreak;\n\t\tcase R.id.btnDelete:\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.delete(1));\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.main, menu);\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n\t\t// Handle action bar item clicks here. The action bar will\n\t\t// automatically handle clicks on the Home/Up button, so long\n\t\t// as you specify a parent activity in AndroidManifest.xml.\n\t\tint id = item.getItemId();\n\t\tif (id == R.id.action_settings) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onOptionsItemSelected(item);\n\t}\n\n}\n\n ```\n","slug":"SqliteSample","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt0z0040v0zi6nrhktz4"},{"title":"Android字符串分割","date":"2015-04-26T16:00:00.000Z","_content":"\n```java\nsplit(\"|\")实现字符串分割\n```\n\n下面同样的效果\n\n```java\nString chartest = \"abcdefghijk\";\n\t\tchar[] chs = chartest.toCharArray();// 注：这里一定要用char来定义。\n\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t// Log.d(\"wxl\", \"chs=========\" + chs[i]);\n\t\t}\n\t\t// 输出: a b c d e f g h i j k\n```\n\nString[] strs = str.split(\"\\\\|\\\\|\");\n\n就可以了。|在正则表达式里表示或者的意思，转一下就好了。\n","source":"_posts/Split.md","raw":"title: Android字符串分割\ndate: 2015-04-27 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n```java\nsplit(\"|\")实现字符串分割\n```\n\n下面同样的效果\n\n```java\nString chartest = \"abcdefghijk\";\n\t\tchar[] chs = chartest.toCharArray();// 注：这里一定要用char来定义。\n\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t// Log.d(\"wxl\", \"chs=========\" + chs[i]);\n\t\t}\n\t\t// 输出: a b c d e f g h i j k\n```\n\nString[] strs = str.split(\"\\\\|\\\\|\");\n\n就可以了。|在正则表达式里表示或者的意思，转一下就好了。\n","slug":"Split","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt120045v0zilxfgvy1z"},{"title":"Actionbar之SearchView","date":"2014-12-10T16:00:00.000Z","_content":"\n```js\n <item\n        android:id=\"@+id/menu_search\"\n        android:actionLayout=\"@layout/searchview\"//自定义\n        android:icon=\"@drawable/ic_action_search\"\n        android:showAsAction=\"always|collapseActionView\"\n        android:title=\"Search\"/>\n        android:actionViewClass=\"android.widget.SearchView\"//系统的\n```\n我们设定 showAsAction这个属性的时候，加了collapseActionView这么一个参数，它的意思是说，将item引用的布局隐藏起来，当你点击该item的时候，再将其展现出来。通过这个属性，我们就可以将每个item复杂的布局隐藏起来，从而有效的节约了actionbar的布局空间。\n<!-- more -->\nsearchview.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <EditText\n        android:id=\"@+id/search\"\n        style=\"@android:style/Widget.Holo.EditText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:hint=\"搜索视频\"\n        android:imeOptions=\"actionSearch\"\n        android:singleLine=\"true\"\n        android:textColor=\"@android:color/black\"\n        android:textCursorDrawable=\"@null\" />\n\n</LinearLayout>\n```\n\n代码\n\n```java\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.activity_main, menu);\n\t\tinitSearch(menu);\n\t\treturn true;\n\t}\n\n\tprivate VideoFragment videoFragment;\n\n\t/**\n\t * 搜索动作\n\t * \n\t * @param menu\n\t */\n\tprivate void initSearch(Menu menu) {\n\t\tMenuItem item = menu.findItem(R.id.menu_search);\n\t\tView view = item.getActionView();\n\t\tfinal EditText search = (EditText) view.findViewById(R.id.search);\n\t\tMenuItemCompat.setOnActionExpandListener(item,\n\t\t\t\tnew OnActionExpandListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啊哦，我隐藏起来了！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.clearFocus(); // 清除焦点\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tif (search.getText().length() > 0) {// 重新恢复搜索之前的数据\n\t\t\t\t\t\t\tvideoFragment.searchVideoTable(false, \"\");//\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啦啦啦，我出现喽！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.requestFocus(); // 请求获取焦点\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * 调起软键盘\n\t\t\t\t\t\t */\n\t\t\t\t\t\tInputMethodManager m = (InputMethodManager)     getSystemService(Context.INPUT_METHOD_SERVICE);\n\t\t\t\t\t\tm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tsearch.setOnEditorActionListener(new OnEditorActionListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onEditorAction(TextView v, int actionId,\n\t\t\t\t\tKeyEvent event) {\n\t\t\t\tif (actionId == EditorInfo.IME_ACTION_SEARCH) {\n\t\t\t\t\tif (search.getText().length() > 0) {// 搜索\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tvideoFragment.searchVideoTable(true, search.getText()\n\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n```\n\n* 参考\n\n[Android ActionBar 的其它用法（搜索、分享、隐藏复杂布局，模仿Google Play,微信）](http://blog.csdn.net/xy_nyle/article/details/18894755)\n\n[Android在EditText中开启软键盘的＂Done＂按钮](http://www.fengfly.com/plus/view-206564-1.html)\n\n[输入法软键盘显示/隐藏的监听和控制](http://glblong.blog.51cto.com/3058613/1543172)\n\n[修改Android EditText光标颜色](http://blog.csdn.net/cw2004100021124/article/details/12649671)\n\n[Android:自定义输入框光标颜色](http://my.oschina.net/xsjayz/blog/104344)\n","source":"_posts/SearchView.md","raw":"title: Actionbar之SearchView\ndate: 2014-12-11 \ncategories: [Android]\ntags: [Android,Actionbar,SearchView]\n---\n\n```js\n <item\n        android:id=\"@+id/menu_search\"\n        android:actionLayout=\"@layout/searchview\"//自定义\n        android:icon=\"@drawable/ic_action_search\"\n        android:showAsAction=\"always|collapseActionView\"\n        android:title=\"Search\"/>\n        android:actionViewClass=\"android.widget.SearchView\"//系统的\n```\n我们设定 showAsAction这个属性的时候，加了collapseActionView这么一个参数，它的意思是说，将item引用的布局隐藏起来，当你点击该item的时候，再将其展现出来。通过这个属性，我们就可以将每个item复杂的布局隐藏起来，从而有效的节约了actionbar的布局空间。\n<!-- more -->\nsearchview.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <EditText\n        android:id=\"@+id/search\"\n        style=\"@android:style/Widget.Holo.EditText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:hint=\"搜索视频\"\n        android:imeOptions=\"actionSearch\"\n        android:singleLine=\"true\"\n        android:textColor=\"@android:color/black\"\n        android:textCursorDrawable=\"@null\" />\n\n</LinearLayout>\n```\n\n代码\n\n```java\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.activity_main, menu);\n\t\tinitSearch(menu);\n\t\treturn true;\n\t}\n\n\tprivate VideoFragment videoFragment;\n\n\t/**\n\t * 搜索动作\n\t * \n\t * @param menu\n\t */\n\tprivate void initSearch(Menu menu) {\n\t\tMenuItem item = menu.findItem(R.id.menu_search);\n\t\tView view = item.getActionView();\n\t\tfinal EditText search = (EditText) view.findViewById(R.id.search);\n\t\tMenuItemCompat.setOnActionExpandListener(item,\n\t\t\t\tnew OnActionExpandListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啊哦，我隐藏起来了！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.clearFocus(); // 清除焦点\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tif (search.getText().length() > 0) {// 重新恢复搜索之前的数据\n\t\t\t\t\t\t\tvideoFragment.searchVideoTable(false, \"\");//\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啦啦啦，我出现喽！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.requestFocus(); // 请求获取焦点\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * 调起软键盘\n\t\t\t\t\t\t */\n\t\t\t\t\t\tInputMethodManager m = (InputMethodManager)     getSystemService(Context.INPUT_METHOD_SERVICE);\n\t\t\t\t\t\tm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tsearch.setOnEditorActionListener(new OnEditorActionListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onEditorAction(TextView v, int actionId,\n\t\t\t\t\tKeyEvent event) {\n\t\t\t\tif (actionId == EditorInfo.IME_ACTION_SEARCH) {\n\t\t\t\t\tif (search.getText().length() > 0) {// 搜索\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tvideoFragment.searchVideoTable(true, search.getText()\n\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n```\n\n* 参考\n\n[Android ActionBar 的其它用法（搜索、分享、隐藏复杂布局，模仿Google Play,微信）](http://blog.csdn.net/xy_nyle/article/details/18894755)\n\n[Android在EditText中开启软键盘的＂Done＂按钮](http://www.fengfly.com/plus/view-206564-1.html)\n\n[输入法软键盘显示/隐藏的监听和控制](http://glblong.blog.51cto.com/3058613/1543172)\n\n[修改Android EditText光标颜色](http://blog.csdn.net/cw2004100021124/article/details/12649671)\n\n[Android:自定义输入框光标颜色](http://my.oschina.net/xsjayz/blog/104344)\n","slug":"SearchView","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt15004av0ziz5gqlnzw"},{"title":"Saving Data-Saving Files","date":"2015-07-12T16:00:00.000Z","_content":"1、需要权限\n\n```js\n <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n2、存数据\n\n```java\n public static final File SDCardDir = Environment.getExternalStorageDirectory(); //获取SDCard目录\n    public static final String NAME = \"ApkSample/\";\n\n    public static void saveToFile(String result, String filename) {\n        try {\n            // 判断SD卡是否存在，并且是否具有读写权限\n            if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n                File saveFile = new File(SDCardDir + File.separator + NAME, filename);\n                if (!saveFile.getParentFile().exists()) {\n                    saveFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream outStream = new FileOutputStream(saveFile);\n                outStream.write(result.getBytes());\n                outStream.close();\n            } else {\n            }\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n```\n\n3、读取数据\n\n```java\n public static String getFileData(String filename) {\n        String result = null;\n        File file = new File(SDCardDir + File.separator + NAME, filename);\n        if (file.exists() && file.isFile()) {\n            StringBuffer stringBuffer = new StringBuffer();\n            try {\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"));\n                int c;\n                while ((c = bufferedReader.read()) != -1) {\n                    stringBuffer.append((char) c);\n                }\n                bufferedReader.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            result = stringBuffer.toString();\n        }\n        return result;\n    }\n```\n","source":"_posts/SavingFiles.md","raw":"title: Saving Data-Saving Files\ndate: 2015-07-13\ncategories: [Android]\ntags: [Android,SQLite]\n---\n1、需要权限\n\n```js\n <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n2、存数据\n\n```java\n public static final File SDCardDir = Environment.getExternalStorageDirectory(); //获取SDCard目录\n    public static final String NAME = \"ApkSample/\";\n\n    public static void saveToFile(String result, String filename) {\n        try {\n            // 判断SD卡是否存在，并且是否具有读写权限\n            if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n                File saveFile = new File(SDCardDir + File.separator + NAME, filename);\n                if (!saveFile.getParentFile().exists()) {\n                    saveFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream outStream = new FileOutputStream(saveFile);\n                outStream.write(result.getBytes());\n                outStream.close();\n            } else {\n            }\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n```\n\n3、读取数据\n\n```java\n public static String getFileData(String filename) {\n        String result = null;\n        File file = new File(SDCardDir + File.separator + NAME, filename);\n        if (file.exists() && file.isFile()) {\n            StringBuffer stringBuffer = new StringBuffer();\n            try {\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"));\n                int c;\n                while ((c = bufferedReader.read()) != -1) {\n                    stringBuffer.append((char) c);\n                }\n                bufferedReader.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            result = stringBuffer.toString();\n        }\n        return result;\n    }\n```\n","slug":"SavingFiles","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt18004hv0zir5ut53d4"},{"title":"Android保存图片并显示系统图库","date":"2015-07-26T16:00:00.000Z","_content":"```java\n  /**\n     * 0 保存失败；\n     * 1 保存成功；\n     * 2 已经存在\n     */\n\n    class SaveImageToGalleryTask extends AsyncTask<Objects, Objects, Integer> {\n        @Override\n        protected Integer doInBackground(Objects... params) {\n            Bitmap bitmap = null;\n          \n            try {\n              \n                bitmap = Picasso.with(GirlImageDetailActivity.this).load(\"图片URL\").get();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (bitmap == null) {\n                return 0;\n            }\n            File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n            if (!appDir.exists()) {\n                appDir.mkdir();\n            }\n            final String fileName = \"图片名字\"+ \".png\";\n            File file = new File(appDir, fileName);\n            if (file.exists()) {\n                return 2;\n            } else {\n                try {\n                    FileOutputStream fileOutputStream = new FileOutputStream(file);\n                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\n                    fileOutputStream.flush();\n                    fileOutputStream.close();\n\n                    // 其次把文件插入到系统图库\n                    MediaStore.Images.Media.insertImage(GirlImageDetailActivity.this.getContentResolver(), file.getAbsolutePath(), fileName, null);\n\n                    // 最后通知图库更新\n                    Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + file.getAbsolutePath()));\n                    sendBroadcast(intent);\n                    return 1;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    return 0;\n                }\n\n            }\n        }\n\n        @Override\n        protected void onPostExecute(Integer integer) {\n            super.onPostExecute(integer);\n            switch (integer) {\n                case 0:\n                    Snackbar.make(detailLayout, \"保存失败\", Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 1:\n                    File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n                    Snackbar.make(detailLayout, \"成功保存至\" + appDir.getAbsolutePath(), Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 2:\n                    Snackbar.make(detailLayout, \"图片已经存在\", Snackbar.LENGTH_SHORT).show();\n                    break;\n            }\n        }\n    }\n```\n","source":"_posts/SaveImageToGallery.md","raw":"title: Android保存图片并显示系统图库\ndate: 2015-07-27 #发表日期，一般不改动\ncategory: Android\ntags: [Android]\n---\n```java\n  /**\n     * 0 保存失败；\n     * 1 保存成功；\n     * 2 已经存在\n     */\n\n    class SaveImageToGalleryTask extends AsyncTask<Objects, Objects, Integer> {\n        @Override\n        protected Integer doInBackground(Objects... params) {\n            Bitmap bitmap = null;\n          \n            try {\n              \n                bitmap = Picasso.with(GirlImageDetailActivity.this).load(\"图片URL\").get();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (bitmap == null) {\n                return 0;\n            }\n            File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n            if (!appDir.exists()) {\n                appDir.mkdir();\n            }\n            final String fileName = \"图片名字\"+ \".png\";\n            File file = new File(appDir, fileName);\n            if (file.exists()) {\n                return 2;\n            } else {\n                try {\n                    FileOutputStream fileOutputStream = new FileOutputStream(file);\n                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\n                    fileOutputStream.flush();\n                    fileOutputStream.close();\n\n                    // 其次把文件插入到系统图库\n                    MediaStore.Images.Media.insertImage(GirlImageDetailActivity.this.getContentResolver(), file.getAbsolutePath(), fileName, null);\n\n                    // 最后通知图库更新\n                    Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + file.getAbsolutePath()));\n                    sendBroadcast(intent);\n                    return 1;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    return 0;\n                }\n\n            }\n        }\n\n        @Override\n        protected void onPostExecute(Integer integer) {\n            super.onPostExecute(integer);\n            switch (integer) {\n                case 0:\n                    Snackbar.make(detailLayout, \"保存失败\", Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 1:\n                    File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n                    Snackbar.make(detailLayout, \"成功保存至\" + appDir.getAbsolutePath(), Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 2:\n                    Snackbar.make(detailLayout, \"图片已经存在\", Snackbar.LENGTH_SHORT).show();\n                    break;\n            }\n        }\n    }\n```\n","slug":"SaveImageToGallery","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt19004lv0zi5ec68g5i"},{"title":"android获取 res 中的资源","date":"2015-04-29T16:00:00.000Z","_content":"\n### 如何获取 res 中的资源\n\n数据包package：android.content.res\n\n### 主要类：Resources\n\n其主要接口按照功能，划分为以下三部分：\n\ngetXXXX()\n\n<!-- more -->\n\n例如：\n\nint getColor(int id)\n\nDrawable getDrawable(int id)\n\nString getString(int id)  直接获取res中存放的资源\n\nInputStream openRawResource(int id)  获取资源的数据流，读取资源数据\n\nvoid parseBundleExtras(XmlResourceParser parser, Bundle outBundle)  从XML文件中获取数据\n\nResource为每种资源提供了相应的接口来获取这种资源，除了可以直接获取资源外，还额外提供了以数据流的方式获取资源，这在以后的应用程序开发中会经常使用，那么如何获取Resources了，如下：Resources r = this.getContext().getResources();\n\nInputStream in = getResources().getAssets().open(\"wangfei.jpg\");//Assets下文件\n","source":"_posts/ResResources.md","raw":"title: android获取 res 中的资源\ndate: 2015-04-30 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n### 如何获取 res 中的资源\n\n数据包package：android.content.res\n\n### 主要类：Resources\n\n其主要接口按照功能，划分为以下三部分：\n\ngetXXXX()\n\n<!-- more -->\n\n例如：\n\nint getColor(int id)\n\nDrawable getDrawable(int id)\n\nString getString(int id)  直接获取res中存放的资源\n\nInputStream openRawResource(int id)  获取资源的数据流，读取资源数据\n\nvoid parseBundleExtras(XmlResourceParser parser, Bundle outBundle)  从XML文件中获取数据\n\nResource为每种资源提供了相应的接口来获取这种资源，除了可以直接获取资源外，还额外提供了以数据流的方式获取资源，这在以后的应用程序开发中会经常使用，那么如何获取Resources了，如下：Resources r = this.getContext().getResources();\n\nInputStream in = getResources().getAssets().open(\"wangfei.jpg\");//Assets下文件\n","slug":"ResResources","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt1b004ov0zipeis9esf"},{"title":"PullLoadMoreRecyclerView","date":"2015-07-23T23:56:29.000Z","_content":"\nRecyclerView实现下拉刷新和上拉加载更多\n\n<!--more-->\n\n# 效果预览\n![](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/raw/master/screenshots/screenshots.gif)\n\n\n\n# 源码地址\n[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)\n","source":"_posts/PullLoadMoreRecyclerView.md","raw":"title: PullLoadMoreRecyclerView\ndate: 2015-07-24 07:56:29 #发表日期，一般不改动\ncategories: Android\ntags: [Android,RecyclerView]\n---\n\nRecyclerView实现下拉刷新和上拉加载更多\n\n<!--more-->\n\n# 效果预览\n![](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/raw/master/screenshots/screenshots.gif)\n\n\n\n# 源码地址\n[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)\n","slug":"PullLoadMoreRecyclerView","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt1d004sv0zipul29buk"},{"title":"Android Lollipop新特性-Palette","date":"2015-08-03T03:19:09.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/paletteScreenshots.gif)\n<!-- more -->\n## 使用方法\nPalette可以提取的颜色如下\n* Vibrant （有活力的）\n* Vibrant dark（有活力的 暗色）\n* Vibrant light（有活力的 亮色）\n* Muted （柔和的）\n* Muted dark（柔和的 暗色）\n* Muted light（柔和的 亮色）\n\n我们要想使用Palette，需要导入Palette的兼容库，Gradle 中添加下面依赖。\n```js\ncompile 'com.android.support:palette-v7:22.2.0'\n```\n\n## 实例代码\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <ImageView\n        android:id=\"@+id/image\"\n        android:layout_width=\"72dp\"\n        android:layout_height=\"72dp\" />\n\n    <Button\n        android:id=\"@+id/vibrant\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrant\" />\n\n    <Button\n        android:id=\"@+id/vibrantLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantLight\" />\n\n    <Button\n        android:id=\"@+id/vibrantDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantDark\" />\n\n    <Button\n        android:id=\"@+id/muted\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"muted\" />\n\n    <Button\n        android:id=\"@+id/mutedLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedLight\" />\n\n    <Button\n        android:id=\"@+id/mutedDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedDark\" />\n\n\n</LinearLayout>\n\n```\n\njava\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.graphics.Palette;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.ImageView;\n\n\npublic class MainActivity extends AppCompatActivity {\n    ImageView image;\n    ActionBar mActionBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        image = (ImageView) findViewById(R.id.image);\n        image.setImageResource(R.mipmap.dog);\n        final Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        mActionBar = getSupportActionBar();\n\n\n    }\n\n    public void onClick(View view) {\n        Palette.from(drawableToBitmap(image.getDrawable())).generate(new LPaletteAsyncListener(view));\n    }\n\n    /**\n     * 参考博客https://www.bignerdranch.com/blog/extracting-colors-to-a-palette-with-android-lollipop/\n     */\n    class LPaletteAsyncListener implements Palette.PaletteAsyncListener {\n        View view;\n\n        LPaletteAsyncListener(View view) {\n            this.view = view;\n        }\n\n        @Override\n        public void onGenerated(Palette palette) {\n            int paletteColor = 0;\n            switch (view.getId()) {\n                case R.id.vibrant:\n                    Palette.Swatch swatch = palette.getVibrantSwatch();\n                    paletteColor = palette.getVibrantColor(0x000000);\n//                    paletteColor = swatch.getRgb();\n                    break;\n                case R.id.vibrantLight:\n                    paletteColor = palette.getLightVibrantColor(0x000000);\n                    break;\n                case R.id.vibrantDark:\n                    paletteColor = palette.getDarkVibrantColor(0x000000);\n                    break;\n                case R.id.muted:\n                    paletteColor = palette.getMutedColor(0x000000);\n                    break;\n                case R.id.mutedLight:\n                    paletteColor = palette.getLightMutedColor(0x000000);\n                    break;\n                case R.id.mutedDark:\n                    paletteColor = palette.getDarkMutedColor(0x000000);\n                    break;\n\n\n            }\n            if (mActionBar != null) {\n                mActionBar.setBackgroundDrawable(new ColorDrawable(paletteColor));\n            }\n\n        }\n    }\n\n    public static Bitmap drawableToBitmap(Drawable drawable) {\n        if (drawable instanceof BitmapDrawable) {\n            return ((BitmapDrawable) drawable).getBitmap();\n        }\n\n        int width = drawable.getIntrinsicWidth();\n        width = width > 0 ? width : 1;\n        int height = drawable.getIntrinsicHeight();\n        height = height > 0 ? height : 1;\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n\n        return bitmap;\n    }\n\n}\n\n```","source":"_posts/Palette.md","raw":"title: Android Lollipop新特性-Palette\ndate: 2015-08-03 11:19:09\ntags: [Android,Palette]\ncategory: Android\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/paletteScreenshots.gif)\n<!-- more -->\n## 使用方法\nPalette可以提取的颜色如下\n* Vibrant （有活力的）\n* Vibrant dark（有活力的 暗色）\n* Vibrant light（有活力的 亮色）\n* Muted （柔和的）\n* Muted dark（柔和的 暗色）\n* Muted light（柔和的 亮色）\n\n我们要想使用Palette，需要导入Palette的兼容库，Gradle 中添加下面依赖。\n```js\ncompile 'com.android.support:palette-v7:22.2.0'\n```\n\n## 实例代码\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <ImageView\n        android:id=\"@+id/image\"\n        android:layout_width=\"72dp\"\n        android:layout_height=\"72dp\" />\n\n    <Button\n        android:id=\"@+id/vibrant\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrant\" />\n\n    <Button\n        android:id=\"@+id/vibrantLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantLight\" />\n\n    <Button\n        android:id=\"@+id/vibrantDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantDark\" />\n\n    <Button\n        android:id=\"@+id/muted\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"muted\" />\n\n    <Button\n        android:id=\"@+id/mutedLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedLight\" />\n\n    <Button\n        android:id=\"@+id/mutedDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedDark\" />\n\n\n</LinearLayout>\n\n```\n\njava\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.graphics.Palette;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.ImageView;\n\n\npublic class MainActivity extends AppCompatActivity {\n    ImageView image;\n    ActionBar mActionBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        image = (ImageView) findViewById(R.id.image);\n        image.setImageResource(R.mipmap.dog);\n        final Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        mActionBar = getSupportActionBar();\n\n\n    }\n\n    public void onClick(View view) {\n        Palette.from(drawableToBitmap(image.getDrawable())).generate(new LPaletteAsyncListener(view));\n    }\n\n    /**\n     * 参考博客https://www.bignerdranch.com/blog/extracting-colors-to-a-palette-with-android-lollipop/\n     */\n    class LPaletteAsyncListener implements Palette.PaletteAsyncListener {\n        View view;\n\n        LPaletteAsyncListener(View view) {\n            this.view = view;\n        }\n\n        @Override\n        public void onGenerated(Palette palette) {\n            int paletteColor = 0;\n            switch (view.getId()) {\n                case R.id.vibrant:\n                    Palette.Swatch swatch = palette.getVibrantSwatch();\n                    paletteColor = palette.getVibrantColor(0x000000);\n//                    paletteColor = swatch.getRgb();\n                    break;\n                case R.id.vibrantLight:\n                    paletteColor = palette.getLightVibrantColor(0x000000);\n                    break;\n                case R.id.vibrantDark:\n                    paletteColor = palette.getDarkVibrantColor(0x000000);\n                    break;\n                case R.id.muted:\n                    paletteColor = palette.getMutedColor(0x000000);\n                    break;\n                case R.id.mutedLight:\n                    paletteColor = palette.getLightMutedColor(0x000000);\n                    break;\n                case R.id.mutedDark:\n                    paletteColor = palette.getDarkMutedColor(0x000000);\n                    break;\n\n\n            }\n            if (mActionBar != null) {\n                mActionBar.setBackgroundDrawable(new ColorDrawable(paletteColor));\n            }\n\n        }\n    }\n\n    public static Bitmap drawableToBitmap(Drawable drawable) {\n        if (drawable instanceof BitmapDrawable) {\n            return ((BitmapDrawable) drawable).getBitmap();\n        }\n\n        int width = drawable.getIntrinsicWidth();\n        width = width > 0 ? width : 1;\n        int height = drawable.getIntrinsicHeight();\n        height = height > 0 ? height : 1;\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n\n        return bitmap;\n    }\n\n}\n\n```","slug":"Palette","published":1,"updated":"2015-08-04T12:39:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt1h004xv0zir1ymle0l"},{"title":"Android之LoadMoreListView","date":"2015-04-27T16:00:00.000Z","_content":"\njava\n\n```java\n/**\n * Android load more ListView when scroll down.\n * \n * @author Charon Chui\n */\npublic class LoadMoreListView extends ListView {\n\tprotected static final String TAG = \"LoadMoreListView\";\n\tprivate View mFooterView;\n\tprivate OnScrollListener mOnScrollListener;\n\tprivate OnLoadMoreListener mOnLoadMoreListener;\n\n\t/**\n\t * If is loading now.\n\t */\n\tprivate boolean mIsLoading;\n\n\tprivate int mCurrentScrollState;\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs, int defStyle) {\n\t\tsuper(context, attrs, defStyle);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context) {\n\t\tsuper(context);\n\t\tinit(context);\n\t}\n\n\tprivate void init(Context context) {\n\t\tmFooterView = View.inflate(context, R.layout.load_more_footer, null);\n\t\taddFooterView(mFooterView);\n\t\thideFooterView();\n\t\t/*\n\t\t * Must use super.setOnScrollListener() here to avoid override when call\n\t\t * this view's setOnScrollListener method\n\t\t */\n\t\tsuper.setOnScrollListener(superOnScrollListener);\n\t}\n\n\t/**\n\t * Hide the load more view(footer view)\n\t */\n\tprivate void hideFooterView() {\n\t\tmFooterView.setVisibility(View.GONE);\n\t}\n\n\t/**\n\t * Show load more view\n\t */\n\tprivate void showFooterView() {\n\t\tmFooterView.setVisibility(View.VISIBLE);\n\t}\n\n\t@Override\n\tpublic void setOnScrollListener(OnScrollListener l) {\n\t\tmOnScrollListener = l;\n\t}\n\n\t/**\n\t * Set load more listener, usually you should get more data here.\n\t * \n\t * @param listener\n\t *            OnLoadMoreListener\n\t * @see OnLoadMoreListener\n\t */\n\tpublic void setOnLoadMoreListener(OnLoadMoreListener listener) {\n\t\tmOnLoadMoreListener = listener;\n\t}\n\n\t/**\n\t * When complete load more data, you must use this method to hide the footer\n\t * view, if not the footer view will be shown all the time.\n\t */\n\tpublic void onLoadMoreComplete() {\n\t\tmIsLoading = false;\n\t\thideFooterView();\n\t}\n\n\tprivate OnScrollListener superOnScrollListener = new OnScrollListener() {\n\n\t\t@Override\n\t\tpublic void onScrollStateChanged(AbsListView view, int scrollState) {\n\t\t\tmCurrentScrollState = scrollState;\n\t\t\t// Avoid override when use setOnScrollListener\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScrollStateChanged(view, scrollState);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void onScroll(AbsListView view, int firstVisibleItem,\n\t\t\t\tint visibleItemCount, int totalItemCount) {\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScroll(view, firstVisibleItem,\n\t\t\t\t\t\tvisibleItemCount, totalItemCount);\n\t\t\t}\n\t\t\t// The count of footer view will be add to visibleItemCount also are\n\t\t\t// added to totalItemCount\n\t\t\tif (visibleItemCount == totalItemCount) {\n\t\t\t\t// If all the item can not fill screen, we should make the\n\t\t\t\t// footer view invisible.\n\t\t\t\thideFooterView();\n\t\t\t} else if (!mIsLoading\n\t\t\t\t\t&& (firstVisibleItem + visibleItemCount >= totalItemCount)\n\t\t\t\t\t&& mCurrentScrollState != SCROLL_STATE_IDLE) {\n\t\t\t\tshowFooterView();\n\t\t\t\tmIsLoading = true;\n\t\t\t\tif (mOnLoadMoreListener != null) {\n\t\t\t\t\tmOnLoadMoreListener.onLoadMore();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Interface for load more\n\t */\n\tpublic interface OnLoadMoreListener {\n\t\t/**\n\t\t * Load more data.\n\t\t */\n\t\tvoid onLoadMore();\n\t}\n\n````\n<!-- more -->\nload_more_footer.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:gravity=\"center\"\n    android:orientation=\"horizontal\" >\n\n    <ProgressBar\n        android:id=\"@+id/load_more_pb\"\n        style=\"@android:style/Widget.ProgressBar.Small\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginRight=\"10dp\" />\n\n    <TextView\n        android:id=\"@+id/load_more_tv\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:paddingBottom=\"5dp\"\n        android:paddingTop=\"5dp\"\n        android:text=\"正在加载...\"\n        tools:ignore=\"HardcodedText\" />\n\n</LinearLayout>\n```\n\n调用\n\n```java\nmListView.setOnLoadMoreListener(new OnLoadMoreListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onLoadMore() {\n\t\t\t\t\n\t\t\t}\n\t\t});\n```\n","source":"_posts/LoadMoreListView.md","raw":"title: Android之LoadMoreListView\ndate: 2015-04-28 \ncategories: [Android]\ntags: [Android,ListView]\n---\n\njava\n\n```java\n/**\n * Android load more ListView when scroll down.\n * \n * @author Charon Chui\n */\npublic class LoadMoreListView extends ListView {\n\tprotected static final String TAG = \"LoadMoreListView\";\n\tprivate View mFooterView;\n\tprivate OnScrollListener mOnScrollListener;\n\tprivate OnLoadMoreListener mOnLoadMoreListener;\n\n\t/**\n\t * If is loading now.\n\t */\n\tprivate boolean mIsLoading;\n\n\tprivate int mCurrentScrollState;\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs, int defStyle) {\n\t\tsuper(context, attrs, defStyle);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context) {\n\t\tsuper(context);\n\t\tinit(context);\n\t}\n\n\tprivate void init(Context context) {\n\t\tmFooterView = View.inflate(context, R.layout.load_more_footer, null);\n\t\taddFooterView(mFooterView);\n\t\thideFooterView();\n\t\t/*\n\t\t * Must use super.setOnScrollListener() here to avoid override when call\n\t\t * this view's setOnScrollListener method\n\t\t */\n\t\tsuper.setOnScrollListener(superOnScrollListener);\n\t}\n\n\t/**\n\t * Hide the load more view(footer view)\n\t */\n\tprivate void hideFooterView() {\n\t\tmFooterView.setVisibility(View.GONE);\n\t}\n\n\t/**\n\t * Show load more view\n\t */\n\tprivate void showFooterView() {\n\t\tmFooterView.setVisibility(View.VISIBLE);\n\t}\n\n\t@Override\n\tpublic void setOnScrollListener(OnScrollListener l) {\n\t\tmOnScrollListener = l;\n\t}\n\n\t/**\n\t * Set load more listener, usually you should get more data here.\n\t * \n\t * @param listener\n\t *            OnLoadMoreListener\n\t * @see OnLoadMoreListener\n\t */\n\tpublic void setOnLoadMoreListener(OnLoadMoreListener listener) {\n\t\tmOnLoadMoreListener = listener;\n\t}\n\n\t/**\n\t * When complete load more data, you must use this method to hide the footer\n\t * view, if not the footer view will be shown all the time.\n\t */\n\tpublic void onLoadMoreComplete() {\n\t\tmIsLoading = false;\n\t\thideFooterView();\n\t}\n\n\tprivate OnScrollListener superOnScrollListener = new OnScrollListener() {\n\n\t\t@Override\n\t\tpublic void onScrollStateChanged(AbsListView view, int scrollState) {\n\t\t\tmCurrentScrollState = scrollState;\n\t\t\t// Avoid override when use setOnScrollListener\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScrollStateChanged(view, scrollState);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void onScroll(AbsListView view, int firstVisibleItem,\n\t\t\t\tint visibleItemCount, int totalItemCount) {\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScroll(view, firstVisibleItem,\n\t\t\t\t\t\tvisibleItemCount, totalItemCount);\n\t\t\t}\n\t\t\t// The count of footer view will be add to visibleItemCount also are\n\t\t\t// added to totalItemCount\n\t\t\tif (visibleItemCount == totalItemCount) {\n\t\t\t\t// If all the item can not fill screen, we should make the\n\t\t\t\t// footer view invisible.\n\t\t\t\thideFooterView();\n\t\t\t} else if (!mIsLoading\n\t\t\t\t\t&& (firstVisibleItem + visibleItemCount >= totalItemCount)\n\t\t\t\t\t&& mCurrentScrollState != SCROLL_STATE_IDLE) {\n\t\t\t\tshowFooterView();\n\t\t\t\tmIsLoading = true;\n\t\t\t\tif (mOnLoadMoreListener != null) {\n\t\t\t\t\tmOnLoadMoreListener.onLoadMore();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Interface for load more\n\t */\n\tpublic interface OnLoadMoreListener {\n\t\t/**\n\t\t * Load more data.\n\t\t */\n\t\tvoid onLoadMore();\n\t}\n\n````\n<!-- more -->\nload_more_footer.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:gravity=\"center\"\n    android:orientation=\"horizontal\" >\n\n    <ProgressBar\n        android:id=\"@+id/load_more_pb\"\n        style=\"@android:style/Widget.ProgressBar.Small\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginRight=\"10dp\" />\n\n    <TextView\n        android:id=\"@+id/load_more_tv\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:paddingBottom=\"5dp\"\n        android:paddingTop=\"5dp\"\n        android:text=\"正在加载...\"\n        tools:ignore=\"HardcodedText\" />\n\n</LinearLayout>\n```\n\n调用\n\n```java\nmListView.setOnLoadMoreListener(new OnLoadMoreListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onLoadMore() {\n\t\t\t\t\n\t\t\t}\n\t\t});\n```\n","slug":"LoadMoreListView","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt1w0052v0zivoyyelo7"},{"title":"Android之LayoutParams","date":"2015-05-27T16:00:00.000Z","_content":"\n LayoutParams相当于一个Layout的信息包，它封装了Layout的位置、高、宽等信息。假设在屏幕上一块区域是由一个Layout占领的，如果将一个View添加到一个Layout中，最好告诉Layout用户期望的布局方式，也就是将一个认可的layoutParams传递进去。\n       可以这样去形容LayoutParams，在象棋的棋盘上，每个棋子都占据一个位置，也就是每个棋子都有一个位置的信息，如这个棋子在4行4列，这里的“4行4列”就是棋子的LayoutParams。\n\n但LayoutParams类也只是简单的描述了宽高，宽和高都可以设置成三种值：\n       \n1，一个确定的值；\n       \n2，FILL_PARENT，即填满（和父容器一样大小）；\n       \n3，WRAP_CONTENT，即包裹住组件就好。\n\n<!-- more -->\n\n在JAVA中动态构建的布局，常常这样写：\n\n```java\nsetLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n```\n\n上面这一句话其实是子对父的，也就是说，父布局下的子控件要设置这句话。\n\n因为布局很多，虽然都继承至ViewGroup但是各个布局还是有很大的不同。\n\n很显然上面这句应该这样写才算准确：\n\n```java\nsetLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.FILL_PARENT,TableRow.LayoutParams.FILL_PARENT));\n```\n\n这表示这个子控件的父布局是一个TableRow , 这样的LayoutParams 太多，所以应明确指明。\n\n \n\n下面分别说下两个常用到布局:\n\n1. FrameLayout下动态设置子控件居中，动态用JAVA代码要这样实现:\n\n```java\nFrameLayout.LayoutParams lytp = new FrameLayout.LayoutParams(80,LayoutParams.WRAP_CONTENT);\nlytp .gravity = Gravity.CENTER;\nbtn.setLayoutParams(lytp);\n```\n\n2. RelativeLayout下动态设置子控件居中：\n\n```java\nRelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT); \nlp.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE); \nlp.addRule(RelativeLayout.ALIGN_PARENT_TOP, RelativeLayout.TRUE); \nbtn1.setLayoutParams(lp);\n```\n","source":"_posts/LayoutParams.md","raw":"title: Android之LayoutParams\ndate: 2015-05-28 \ncategories: [Android]\ntags: [Android,LayoutParams]\n---\n\n LayoutParams相当于一个Layout的信息包，它封装了Layout的位置、高、宽等信息。假设在屏幕上一块区域是由一个Layout占领的，如果将一个View添加到一个Layout中，最好告诉Layout用户期望的布局方式，也就是将一个认可的layoutParams传递进去。\n       可以这样去形容LayoutParams，在象棋的棋盘上，每个棋子都占据一个位置，也就是每个棋子都有一个位置的信息，如这个棋子在4行4列，这里的“4行4列”就是棋子的LayoutParams。\n\n但LayoutParams类也只是简单的描述了宽高，宽和高都可以设置成三种值：\n       \n1，一个确定的值；\n       \n2，FILL_PARENT，即填满（和父容器一样大小）；\n       \n3，WRAP_CONTENT，即包裹住组件就好。\n\n<!-- more -->\n\n在JAVA中动态构建的布局，常常这样写：\n\n```java\nsetLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n```\n\n上面这一句话其实是子对父的，也就是说，父布局下的子控件要设置这句话。\n\n因为布局很多，虽然都继承至ViewGroup但是各个布局还是有很大的不同。\n\n很显然上面这句应该这样写才算准确：\n\n```java\nsetLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.FILL_PARENT,TableRow.LayoutParams.FILL_PARENT));\n```\n\n这表示这个子控件的父布局是一个TableRow , 这样的LayoutParams 太多，所以应明确指明。\n\n \n\n下面分别说下两个常用到布局:\n\n1. FrameLayout下动态设置子控件居中，动态用JAVA代码要这样实现:\n\n```java\nFrameLayout.LayoutParams lytp = new FrameLayout.LayoutParams(80,LayoutParams.WRAP_CONTENT);\nlytp .gravity = Gravity.CENTER;\nbtn.setLayoutParams(lytp);\n```\n\n2. RelativeLayout下动态设置子控件居中：\n\n```java\nRelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT); \nlp.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE); \nlp.addRule(RelativeLayout.ALIGN_PARENT_TOP, RelativeLayout.TRUE); \nbtn1.setLayoutParams(lp);\n```\n","slug":"LayoutParams","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt230056v0zityyb0qw3"},{"title":"Android之LayoutInflate","date":"2015-04-22T16:00:00.000Z","_content":"【转载】[Android获取LayoutInflater对象的方法总结](http://blog.csdn.net/bigconvience/article/details/26582497)\n\n在写Android程序时，有时候会编写自定义的View，使用Inflater对象来将布局文件解析成一个View。本文主要目的是总结获取LayoutInflater对象的方法。\n\n1、若能获取context对象，可以有以下几种方法：\n\n```java \nLayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n<!-- more -->\n\nor\n\n```java\nLayoutInflater inflater = LayoutInflater.from(context);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n\ninflate实现源码如下：\n\n```java\npublic static View inflate(Context context, int resource, ViewGroup root) {  \n    LayoutInflater factory = LayoutInflater.from(context);  \n    return factory.inflate(resource, root);  \n}  \n```\n\nLayoutInflater.from(context)实际上是对方法1的包装，可参考以下源码：\n\n```java\npublic static LayoutInflater from(Context context) {  \n    LayoutInflater LayoutInflater =  \n            (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \n    if (LayoutInflater == null) {  \n        throw new AssertionError(\"LayoutInflater not found.\");  \n    }  \n    return LayoutInflater;  \n}  \n```\n\n2、在一个Activity中，可以有以下方法：\n\n```java\nView child = getLayoutInflater().inflate(R.layout.child, item, false); \n```\n\nor\n\n```java\nView view;   \nLayoutInflater inflater = (LayoutInflater)   getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);   \nview = inflater.inflate(R.layout.mylayout, null);  \n```\n方法1和方法2其实都是对context().getSystemService()的使用。\n\n3、使用View的静态方法：\n\n```java\nView view=View.inflate(context, R.layout.child, null)  \n```\n\n","source":"_posts/LayoutInflater.md","raw":"title: Android之LayoutInflate\ndate: 2015-04-23 \ncategories: [Android]\ntags: [Android,LayoutInflate]\n---\n【转载】[Android获取LayoutInflater对象的方法总结](http://blog.csdn.net/bigconvience/article/details/26582497)\n\n在写Android程序时，有时候会编写自定义的View，使用Inflater对象来将布局文件解析成一个View。本文主要目的是总结获取LayoutInflater对象的方法。\n\n1、若能获取context对象，可以有以下几种方法：\n\n```java \nLayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n<!-- more -->\n\nor\n\n```java\nLayoutInflater inflater = LayoutInflater.from(context);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n\ninflate实现源码如下：\n\n```java\npublic static View inflate(Context context, int resource, ViewGroup root) {  \n    LayoutInflater factory = LayoutInflater.from(context);  \n    return factory.inflate(resource, root);  \n}  \n```\n\nLayoutInflater.from(context)实际上是对方法1的包装，可参考以下源码：\n\n```java\npublic static LayoutInflater from(Context context) {  \n    LayoutInflater LayoutInflater =  \n            (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \n    if (LayoutInflater == null) {  \n        throw new AssertionError(\"LayoutInflater not found.\");  \n    }  \n    return LayoutInflater;  \n}  \n```\n\n2、在一个Activity中，可以有以下方法：\n\n```java\nView child = getLayoutInflater().inflate(R.layout.child, item, false); \n```\n\nor\n\n```java\nView view;   \nLayoutInflater inflater = (LayoutInflater)   getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);   \nview = inflater.inflate(R.layout.mylayout, null);  \n```\n方法1和方法2其实都是对context().getSystemService()的使用。\n\n3、使用View的静态方法：\n\n```java\nView view=View.inflate(context, R.layout.child, null)  \n```\n\n","slug":"LayoutInflater","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt25005bv0zivliy2pgs"},{"title":"Android打包错误Export aborted because fatal lint errors were found","date":"2013-11-21T16:00:00.000Z","_content":"打包时报如下错误：\n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-1.jpg)\n\n<!-- more -->\n\nExport aborted because fatal lint errors were found. These are listed in the Lint View. Either fix these before running Export again,or turn off\"Run full error check when exporting app\" in the Android > Lint Error Checking preference page.\n\n解决方法如下： \n\n1、选择Project->Properties，弹出“Properties for 你的项目名称” \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-3.jpg)\n2、选择Adnroid Lint Preferences->Configure Workspace Settings...,弹出Preferences(Filtered)对话框，将\"Run full error check when exporting app and abort if fatal errors are found \"前的勾去掉，点击Apply再点击OK. \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-2.jpg)\n3、回到项目右击选择Android Tools->Clean Lint Markers,待项目自己更新完成即可。 \n这时就可以打包了。\n","source":"_posts/Export-aborted-because-fatal-lint-errors-were-found.md","raw":"title: Android打包错误Export aborted because fatal lint errors were found\ndate: 2013-11-22 \ncategories: [Android]\ntags: [Android]\n---\n打包时报如下错误：\n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-1.jpg)\n\n<!-- more -->\n\nExport aborted because fatal lint errors were found. These are listed in the Lint View. Either fix these before running Export again,or turn off\"Run full error check when exporting app\" in the Android > Lint Error Checking preference page.\n\n解决方法如下： \n\n1、选择Project->Properties，弹出“Properties for 你的项目名称” \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-3.jpg)\n2、选择Adnroid Lint Preferences->Configure Workspace Settings...,弹出Preferences(Filtered)对话框，将\"Run full error check when exporting app and abort if fatal errors are found \"前的勾去掉，点击Apply再点击OK. \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-2.jpg)\n3、回到项目右击选择Android Tools->Clean Lint Markers,待项目自己更新完成即可。 \n这时就可以打包了。\n","slug":"Export-aborted-because-fatal-lint-errors-were-found","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt27005gv0zizfu77knn"},{"title":"Android Defining Custom Animations","date":"2015-05-05T16:00:00.000Z","_content":"\n[官网Defining Custom Animations](https://developer.android.com/training/material/animations.html#Transitions)\n","source":"_posts/Defining_Custom_Animations.md","raw":"title: Android Defining Custom Animations\ndate: 2015-05-06 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n[官网Defining Custom Animations](https://developer.android.com/training/material/animations.html#Transitions)\n","slug":"Defining_Custom_Animations","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2c005jv0zis4urs3hr"},{"title":"Android之CustomToast","date":"2015-04-16T16:00:00.000Z","_content":"\n一、简单的CustomToast\n\nJava\n\n```java\npublic class CustomToast {\n\tprivate String tip = \"\";\n\tprivate Activity activity;\n\tprivate int duration;\n\n\tpublic CustomToast(Activity activity, String tip, int duration) {\n\t\tthis.tip = tip;\n\t\tthis.activity = activity;\n\t\tthis.duration = duration;\n\t}\n\n\t@SuppressLint(\"InflateParams\")\n\tpublic void show() {\n\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\tView view = inflater.inflate(R.layout.custom_toast, null);\n\t\tTextView txt = (TextView) view.findViewById(R.id.txt);\n\t\ttxt.setText(tip);\n\t\tToast toast = new Toast(activity);\n\t\t// toast.setGravity(Gravity.CENTER | Gravity.TOP, 12, 40);\n\t\ttoast.setDuration(duration);\n\t\ttoast.setView(view);\n\t\ttoast.show();\n\t}\n}\n```\n\n<!-- more -->\n\ncustom_toast.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/shape_toast\"\n        android:orientation=\"vertical\" >\n\n        <TextView\n            android:id=\"@+id/txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"5dp\"\n            android:textColor=\"@android:color/white\"\n            android:textSize=\"@dimen/text_size_medium\" />\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n调用\n\n```java\nnew CustomToast(WelcomeActivity.this,\"番茄-视频专辑app，下载地址：http://app.mi.com/detail/65621\",Toast.LENGTH_SHORT).show();\n```\n\n二、重写继承Toast\n\nJava\n\n```java\npublic class TipsToast extends Toast {\n\n    public TipsToast(Context context) {\n        super(context);\n    }\n\n    @SuppressLint(\"InflateParams\")\n\tpublic static TipsToast makeText(Context context, CharSequence text, int duration) {\n        TipsToast result = new TipsToast(context);\n\n        LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(R.layout.view_tips, null);\n        TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n        TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n        msgTxt.setVisibility(View.GONE);\n        tv.setText(text);\n\n        result.setView(v);\n        // setGravity方法用于设置位置，此处为垂直居中\n        result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n        result.setDuration(duration);\n\n        return result;\n    }\n\n    @SuppressLint(\"InflateParams\")\n   \tpublic static TipsToast makeText(Context context, CharSequence text, CharSequence msg, int duration) {\n           TipsToast result = new TipsToast(context);\n\n           LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n           View v = inflate.inflate(R.layout.view_tips, null);\n           TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n           TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n           tv.setText(text);\n           msgTxt.setVisibility(View.VISIBLE);\n           msgTxt.setText(msg);\n\n           result.setView(v);\n           // setGravity方法用于设置位置，此处为垂直居中\n           result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n           result.setDuration(duration);\n\n           return result;\n       }\n    \n    \n    public static TipsToast makeText(Context context, int resId, int duration) throws Resources.NotFoundException {\n        return makeText(context, context.getResources().getText(resId), duration);\n    }\n\n    public void setIcon(int iconResId) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        ImageView iv = (ImageView) getView().findViewById(R.id.tips_icon);\n        if (iv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        iv.setImageResource(iconResId);\n    }\n    @Override\n    public void setText(CharSequence s) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        TextView tv = (TextView) getView().findViewById(R.id.tips_msg);\n        if (tv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        tv.setText(s);\n    }\n}\n```\n\nview_tips.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@drawable/tips_bg\" >\n\n    <!-- 撑开布局 -->\n    <View\n        android:layout_width=\"170dp\"\n        android:layout_height=\"150dp\"\n        \n        android:layout_centerInParent=\"true\" />\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\" >\n\n        <ImageView\n            android:id=\"@+id/tips_icon\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"10.0dip\"\n            android:gravity=\"center\" />\n\n        <TextView\n            android:id=\"@+id/tips_msg\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:maxWidth=\"180dip\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\" />\n        \n        <TextView\n            android:id=\"@+id/tips_msg_txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\"\n            android:visibility=\"gone\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n调用\n\n```java\nTipsToast tipsToast = TipsToast.makeText(context.getApplication().getBaseContext(),\"今日情感app，下载地址：http://app.mi.com/detail/30499\",TipsToast.LENGTH_SHORT);\ntipsToast.setIcon(R.drawable.warn);\ntipsToast.show();\n\t\n```\n","source":"_posts/CustomToast.md","raw":"title: Android之CustomToast\ndate: 2015-04-17 \ncategories: [Android]\ntags: [Android]\n---\n\n一、简单的CustomToast\n\nJava\n\n```java\npublic class CustomToast {\n\tprivate String tip = \"\";\n\tprivate Activity activity;\n\tprivate int duration;\n\n\tpublic CustomToast(Activity activity, String tip, int duration) {\n\t\tthis.tip = tip;\n\t\tthis.activity = activity;\n\t\tthis.duration = duration;\n\t}\n\n\t@SuppressLint(\"InflateParams\")\n\tpublic void show() {\n\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\tView view = inflater.inflate(R.layout.custom_toast, null);\n\t\tTextView txt = (TextView) view.findViewById(R.id.txt);\n\t\ttxt.setText(tip);\n\t\tToast toast = new Toast(activity);\n\t\t// toast.setGravity(Gravity.CENTER | Gravity.TOP, 12, 40);\n\t\ttoast.setDuration(duration);\n\t\ttoast.setView(view);\n\t\ttoast.show();\n\t}\n}\n```\n\n<!-- more -->\n\ncustom_toast.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/shape_toast\"\n        android:orientation=\"vertical\" >\n\n        <TextView\n            android:id=\"@+id/txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"5dp\"\n            android:textColor=\"@android:color/white\"\n            android:textSize=\"@dimen/text_size_medium\" />\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n调用\n\n```java\nnew CustomToast(WelcomeActivity.this,\"番茄-视频专辑app，下载地址：http://app.mi.com/detail/65621\",Toast.LENGTH_SHORT).show();\n```\n\n二、重写继承Toast\n\nJava\n\n```java\npublic class TipsToast extends Toast {\n\n    public TipsToast(Context context) {\n        super(context);\n    }\n\n    @SuppressLint(\"InflateParams\")\n\tpublic static TipsToast makeText(Context context, CharSequence text, int duration) {\n        TipsToast result = new TipsToast(context);\n\n        LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(R.layout.view_tips, null);\n        TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n        TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n        msgTxt.setVisibility(View.GONE);\n        tv.setText(text);\n\n        result.setView(v);\n        // setGravity方法用于设置位置，此处为垂直居中\n        result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n        result.setDuration(duration);\n\n        return result;\n    }\n\n    @SuppressLint(\"InflateParams\")\n   \tpublic static TipsToast makeText(Context context, CharSequence text, CharSequence msg, int duration) {\n           TipsToast result = new TipsToast(context);\n\n           LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n           View v = inflate.inflate(R.layout.view_tips, null);\n           TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n           TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n           tv.setText(text);\n           msgTxt.setVisibility(View.VISIBLE);\n           msgTxt.setText(msg);\n\n           result.setView(v);\n           // setGravity方法用于设置位置，此处为垂直居中\n           result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n           result.setDuration(duration);\n\n           return result;\n       }\n    \n    \n    public static TipsToast makeText(Context context, int resId, int duration) throws Resources.NotFoundException {\n        return makeText(context, context.getResources().getText(resId), duration);\n    }\n\n    public void setIcon(int iconResId) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        ImageView iv = (ImageView) getView().findViewById(R.id.tips_icon);\n        if (iv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        iv.setImageResource(iconResId);\n    }\n    @Override\n    public void setText(CharSequence s) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        TextView tv = (TextView) getView().findViewById(R.id.tips_msg);\n        if (tv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        tv.setText(s);\n    }\n}\n```\n\nview_tips.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@drawable/tips_bg\" >\n\n    <!-- 撑开布局 -->\n    <View\n        android:layout_width=\"170dp\"\n        android:layout_height=\"150dp\"\n        \n        android:layout_centerInParent=\"true\" />\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\" >\n\n        <ImageView\n            android:id=\"@+id/tips_icon\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"10.0dip\"\n            android:gravity=\"center\" />\n\n        <TextView\n            android:id=\"@+id/tips_msg\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:maxWidth=\"180dip\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\" />\n        \n        <TextView\n            android:id=\"@+id/tips_msg_txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\"\n            android:visibility=\"gone\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n调用\n\n```java\nTipsToast tipsToast = TipsToast.makeText(context.getApplication().getBaseContext(),\"今日情感app，下载地址：http://app.mi.com/detail/30499\",TipsToast.LENGTH_SHORT);\ntipsToast.setIcon(R.drawable.warn);\ntipsToast.show();\n\t\n```\n","slug":"CustomToast","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2e005nv0zi3kvyp3g8"},{"title":"Android Creating Custom Views","date":"2015-04-27T16:00:00.000Z","_content":">\n最近好烦，发现代码是写过不少，也做过十来个大大小小的项目，不过只是实现功能罢了，没有停下来多看看代码，我这样写再多都是妄劳，只不过复制粘贴代码。行吧，停止写代码，抓抓基础，整装待发。\n>\n\n##一、自定义View\n\n1、[【官网】Creating Custom Views](http://developer.android.com/training/custom-views/index.html)\n\n2、[Creating custom and compound Views in Android](http://www.vogella.com/tutorials/AndroidCustomViews/article.html)\n\n3、[Android LayoutInflater原理分析，带你一步步深入了解View(一)](http://blog.csdn.net/guolin_blog/article/details/12921889)\n\n4、[Android视图绘制流程完全解析，带你一步步深入了解View(二)](http://blog.csdn.net/guolin_blog/article/details/16330267)\n\n5、[Android视图状态及重绘流程分析，带你一步步深入了解View(三)](http://blog.csdn.net/guolin_blog/article/details/17045157)\n\n6、[Android自定义View的实现方法，带你一步步深入了解View(四)](http://blog.csdn.net/guolin_blog/article/details/17357967)\n\n<!-- more -->\n\n##二、必看开源库\n\n1、[android-async-http](https://github.com/loopj/android-async-http)\n\n2、[ndroid-Universal-Image-Loader](https://github.com/nostra13/Android-Universal-Image-Loader)\n\n3、[PhotoView](https://github.com/chrisbanes/PhotoView)\n\n4、[android-volley](https://github.com/mcxiaoke/android-volley)\n\nPS：循序渐进，慢慢看，一天进步一点点。\n","source":"_posts/CreatingCustomViews.md","raw":"title: Android Creating Custom Views\ndate: 2015-04-28 \ncategories: [Android]\ntags: [Android]\n---\n>\n最近好烦，发现代码是写过不少，也做过十来个大大小小的项目，不过只是实现功能罢了，没有停下来多看看代码，我这样写再多都是妄劳，只不过复制粘贴代码。行吧，停止写代码，抓抓基础，整装待发。\n>\n\n##一、自定义View\n\n1、[【官网】Creating Custom Views](http://developer.android.com/training/custom-views/index.html)\n\n2、[Creating custom and compound Views in Android](http://www.vogella.com/tutorials/AndroidCustomViews/article.html)\n\n3、[Android LayoutInflater原理分析，带你一步步深入了解View(一)](http://blog.csdn.net/guolin_blog/article/details/12921889)\n\n4、[Android视图绘制流程完全解析，带你一步步深入了解View(二)](http://blog.csdn.net/guolin_blog/article/details/16330267)\n\n5、[Android视图状态及重绘流程分析，带你一步步深入了解View(三)](http://blog.csdn.net/guolin_blog/article/details/17045157)\n\n6、[Android自定义View的实现方法，带你一步步深入了解View(四)](http://blog.csdn.net/guolin_blog/article/details/17357967)\n\n<!-- more -->\n\n##二、必看开源库\n\n1、[android-async-http](https://github.com/loopj/android-async-http)\n\n2、[ndroid-Universal-Image-Loader](https://github.com/nostra13/Android-Universal-Image-Loader)\n\n3、[PhotoView](https://github.com/chrisbanes/PhotoView)\n\n4、[android-volley](https://github.com/mcxiaoke/android-volley)\n\nPS：循序渐进，慢慢看，一天进步一点点。\n","slug":"CreatingCustomViews","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2g005qv0ziet3sg52r"},{"title":"Android下Context、Activity、Application之间有什么区别","date":"2015-01-12T16:00:00.000Z","_content":"\n在开发Android程序的时候，我们经常要跟Context、Activity、Application这三个类打交道，那么这个三个类之间有什么联系和区别呢？\n\n首先Activity和Application都是Context的子类。Context从字面上理解就是上下文的意思，在实际应用中它也确实是起到了管理上下文环境中各个参数和变量的总用，方便我们可以简单的访问到各种资源。虽然Activity和Application都是Context的子类，但是他们维护的生命周期不一样。前者维护一个Acitivity的生命周期，所以其对应的Context也只能访问该activity内的各种资源。后者则是维护一个Application的证明周期。\n","source":"_posts/Context-Activity.md","raw":"title: Android下Context、Activity、Application之间有什么区别\ndate: 2015-01-13 \ncategories: [Android]\ntags: [Android]\n---\n\n在开发Android程序的时候，我们经常要跟Context、Activity、Application这三个类打交道，那么这个三个类之间有什么联系和区别呢？\n\n首先Activity和Application都是Context的子类。Context从字面上理解就是上下文的意思，在实际应用中它也确实是起到了管理上下文环境中各个参数和变量的总用，方便我们可以简单的访问到各种资源。虽然Activity和Application都是Context的子类，但是他们维护的生命周期不一样。前者维护一个Acitivity的生命周期，所以其对应的Context也只能访问该activity内的各种资源。后者则是维护一个Application的证明周期。\n","slug":"Context-Activity","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2l005tv0zivzd0uk0n"},{"title":"Android之Canvas中内容保存为图片","date":"2015-04-22T16:00:00.000Z","_content":"\n```java\nBitmap bm = Bitmap.createBitmap(320, 480, Config.ARGB_8888);  \n        Canvas canvas = new Canvas(bm);  \n        Paint p = new Paint();  \n        canvas.drawRect(50, 50, 200, 200, p);  \n        canvas.save(Canvas.ALL_SAVE_FLAG );  \n        canvas.restore();  \n          \n        File f = new File(\"/sdcard/0.png\");  \n        FileOutputStream fos = null;  \n        try {  \n            fos = new FileOutputStream(f);  \n            bm.compress(Bitmap.CompressFormat.PNG, 50, fos);  \n        } catch (FileNotFoundException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        // 其次把文件插入到系统图库\n    try {\n        MediaStore.Images.Media.insertImage(context.getContentResolver(),\n\t\t\t\tfile.getAbsolutePath(), fileName, null);\n    } catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n    // 最后通知图库更新\n    context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + path)));\n```\n\n这样就把Canvas中的内容保存成了sd卡上的一个png图片。简单说一下原理，自己create一个bitmap，然后让Canvas通过这个bitmap创建一个实例，然后在该canvas上绘制的内容都会画\n在该bitmap上，保存Canvas的图层，然后把bitmap写到sd卡上的文件。注意：要在AndroidManifest.xml中添加在sd卡上读写文件的权限\n\n```js\n<!-- 在SDCard中创建与删除文件权限 -->     \n<uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>     \n<!-- 往SDCard写入数据权限 -->     \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>  \n```\n\nCanvas加入图片\n\n```java\nCanvas canvas;\nBitmap bmp = BitmapFactory.decodeResource(getResources(), R.drawable.pic180);  \n            canvas.drawColor(Color.BLACK);  \n            canvas.drawBitmap(bmp, 10, 10, null);  \n```\n\n","source":"_posts/CanvasToPhoto.md","raw":"title: Android之Canvas中内容保存为图片\ndate: 2015-04-23 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n```java\nBitmap bm = Bitmap.createBitmap(320, 480, Config.ARGB_8888);  \n        Canvas canvas = new Canvas(bm);  \n        Paint p = new Paint();  \n        canvas.drawRect(50, 50, 200, 200, p);  \n        canvas.save(Canvas.ALL_SAVE_FLAG );  \n        canvas.restore();  \n          \n        File f = new File(\"/sdcard/0.png\");  \n        FileOutputStream fos = null;  \n        try {  \n            fos = new FileOutputStream(f);  \n            bm.compress(Bitmap.CompressFormat.PNG, 50, fos);  \n        } catch (FileNotFoundException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        // 其次把文件插入到系统图库\n    try {\n        MediaStore.Images.Media.insertImage(context.getContentResolver(),\n\t\t\t\tfile.getAbsolutePath(), fileName, null);\n    } catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n    // 最后通知图库更新\n    context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + path)));\n```\n\n这样就把Canvas中的内容保存成了sd卡上的一个png图片。简单说一下原理，自己create一个bitmap，然后让Canvas通过这个bitmap创建一个实例，然后在该canvas上绘制的内容都会画\n在该bitmap上，保存Canvas的图层，然后把bitmap写到sd卡上的文件。注意：要在AndroidManifest.xml中添加在sd卡上读写文件的权限\n\n```js\n<!-- 在SDCard中创建与删除文件权限 -->     \n<uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>     \n<!-- 往SDCard写入数据权限 -->     \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>  \n```\n\nCanvas加入图片\n\n```java\nCanvas canvas;\nBitmap bmp = BitmapFactory.decodeResource(getResources(), R.drawable.pic180);  \n            canvas.drawColor(Color.BLACK);  \n            canvas.drawBitmap(bmp, 10, 10, null);  \n```\n\n","slug":"CanvasToPhoto","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2p005wv0ziox88lqnc"},{"title":"Android获取手机已安装apk文件信息","date":"2015-07-28T16:00:00.000Z","_content":"\n```java\n  Intent intent = new Intent(Intent.ACTION_MAIN, null);\n  intent.addCategory(Intent.CATEGORY_LAUNCHER);\n  List<AppInfo> applicationList = new ArrayList<>();\n  List<ResolveInfo> resolveInfoList = getPackageManager().queryIntentActivities(intent, 0);\n  for (ResolveInfo resolveInfo : resolveInfoList) {\n  AppInfo appInfo = new AppInfo(MainActivity.this, resolveInfo);\n  PackageInfo packageInfo = appInfo.getPackageInfo();\n  //判断(applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM)的值，\n  // 该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用\n  if ((packageInfo.applicationInfo.flags & packageInfo.applicationInfo.FLAG_SYSTEM) <= 0) {\n  // customs applications\n  applicationList.add(appInfo);\n   }\n  }\n```\n<!-- more -->\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.SuppressLint;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager.NameNotFoundException;\nimport android.content.pm.ResolveInfo;\nimport android.content.res.AssetManager;\nimport android.content.res.Configuration;\nimport android.content.res.Resources;\nimport android.graphics.drawable.Drawable;\nimport android.util.DisplayMetrics;\n\nimport java.util.Locale;\n\npublic class AppInfo implements Comparable<Object> {\n\n    private Context context;\n    private ResolveInfo resolveInfo;\n    private ComponentName componentName = null;\n    private PackageInfo packageInfo = null;\n    private Drawable icon = null;\n    private String name = null;\n\n    public AppInfo(Context context, ResolveInfo ri) {\n        this.context = context;\n        this.resolveInfo = ri;\n        this.componentName = new ComponentName(ri.activityInfo.applicationInfo.packageName, ri.activityInfo.name);\n        try {\n            packageInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n        } catch (NameNotFoundException e) {\n        }\n    }\n\n    public String getName() {\n        if (name != null) {\n            return name;\n        } else {\n            try {\n                return getNameFromResolveInfo(resolveInfo);\n            } catch (NameNotFoundException e) {\n                return getPackageName();\n            }\n        }\n    }\n\n    public String getActivityName() {\n        return resolveInfo.activityInfo.name;\n    }\n\n    public String getPackageName() {\n        return resolveInfo.activityInfo.packageName;\n    }\n\n    public ComponentName getComponentName() {\n        return componentName;\n    }\n\n    public String getComponentInfo() {\n        if (getComponentName() != null) {\n            return getComponentName().toString();\n        } else {\n            return \"\";\n        }\n    }\n\n    public ResolveInfo getResolveInfo() {\n        return resolveInfo;\n    }\n\n    public PackageInfo getPackageInfo() {\n        return packageInfo;\n    }\n\n    public String getVersionName() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionName;\n        } else {\n            return \"\";\n        }\n    }\n\n    public int getVersionCode() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionCode;\n        } else {\n            return 0;\n        }\n    }\n\n    public Drawable getIcon() {\n        if (icon == null) {\n            icon = getResolveInfo().loadIcon(context.getPackageManager());\n            /*\n            Drawable dr = getResolveInfo().loadIcon(ctx.getPackageManager());\n            Bitmap bitmap = ((BitmapDrawable) dr).getBitmap();\n            icon = new BitmapDrawable(ctx.getResources(), AppHelper.getResizedBitmap(bitmap, 144, 144));\n            */\n        }\n        return icon;\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getFirstInstallTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.firstInstallTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getLastUpdateTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.lastUpdateTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        AppInfo f = (AppInfo) o;\n        return getName().compareTo(f.getName());\n    }\n\n    @Override\n    public String toString() {\n        return getName();\n    }\n\n    /**\n     * Helper method to get an applications name!\n     *\n     * @param ri\n     * @return\n     * @throws NameNotFoundException\n     */\n\n    public String getNameFromResolveInfo(ResolveInfo ri) throws NameNotFoundException {\n        String name = ri.resolvePackageName;\n        if (ri.activityInfo != null) {\n            Resources res = context.getPackageManager().getResourcesForApplication(ri.activityInfo.applicationInfo);\n            Resources engRes = getEnglishRessources(res);\n\n            if (ri.activityInfo.labelRes != 0) {\n                name = engRes.getString(ri.activityInfo.labelRes);\n\n                if (name == null || name.equals(\"\")) {\n                    name = res.getString(ri.activityInfo.labelRes);\n                }\n\n            } else {\n                name = ri.activityInfo.applicationInfo.loadLabel(context.getPackageManager()).toString();\n            }\n        }\n        return name;\n    }\n\n    public Resources getEnglishRessources(Resources standardResources) {\n        AssetManager assets = standardResources.getAssets();\n        DisplayMetrics metrics = standardResources.getDisplayMetrics();\n        Configuration config = new Configuration(standardResources.getConfiguration());\n        config.locale = Locale.US;\n        return new Resources(assets, metrics, config);\n    }\n}\n```\n\n参考博客\n\n[【Android】获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)](http://blog.csdn.net/feng88724/article/details/6198446)\n","source":"_posts/AppInfo.md","raw":"title:  Android获取手机已安装apk文件信息\ncategories: [Android]\ntags: [Android]\ndate: 2015-07-29\n---\n\n```java\n  Intent intent = new Intent(Intent.ACTION_MAIN, null);\n  intent.addCategory(Intent.CATEGORY_LAUNCHER);\n  List<AppInfo> applicationList = new ArrayList<>();\n  List<ResolveInfo> resolveInfoList = getPackageManager().queryIntentActivities(intent, 0);\n  for (ResolveInfo resolveInfo : resolveInfoList) {\n  AppInfo appInfo = new AppInfo(MainActivity.this, resolveInfo);\n  PackageInfo packageInfo = appInfo.getPackageInfo();\n  //判断(applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM)的值，\n  // 该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用\n  if ((packageInfo.applicationInfo.flags & packageInfo.applicationInfo.FLAG_SYSTEM) <= 0) {\n  // customs applications\n  applicationList.add(appInfo);\n   }\n  }\n```\n<!-- more -->\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.SuppressLint;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager.NameNotFoundException;\nimport android.content.pm.ResolveInfo;\nimport android.content.res.AssetManager;\nimport android.content.res.Configuration;\nimport android.content.res.Resources;\nimport android.graphics.drawable.Drawable;\nimport android.util.DisplayMetrics;\n\nimport java.util.Locale;\n\npublic class AppInfo implements Comparable<Object> {\n\n    private Context context;\n    private ResolveInfo resolveInfo;\n    private ComponentName componentName = null;\n    private PackageInfo packageInfo = null;\n    private Drawable icon = null;\n    private String name = null;\n\n    public AppInfo(Context context, ResolveInfo ri) {\n        this.context = context;\n        this.resolveInfo = ri;\n        this.componentName = new ComponentName(ri.activityInfo.applicationInfo.packageName, ri.activityInfo.name);\n        try {\n            packageInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n        } catch (NameNotFoundException e) {\n        }\n    }\n\n    public String getName() {\n        if (name != null) {\n            return name;\n        } else {\n            try {\n                return getNameFromResolveInfo(resolveInfo);\n            } catch (NameNotFoundException e) {\n                return getPackageName();\n            }\n        }\n    }\n\n    public String getActivityName() {\n        return resolveInfo.activityInfo.name;\n    }\n\n    public String getPackageName() {\n        return resolveInfo.activityInfo.packageName;\n    }\n\n    public ComponentName getComponentName() {\n        return componentName;\n    }\n\n    public String getComponentInfo() {\n        if (getComponentName() != null) {\n            return getComponentName().toString();\n        } else {\n            return \"\";\n        }\n    }\n\n    public ResolveInfo getResolveInfo() {\n        return resolveInfo;\n    }\n\n    public PackageInfo getPackageInfo() {\n        return packageInfo;\n    }\n\n    public String getVersionName() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionName;\n        } else {\n            return \"\";\n        }\n    }\n\n    public int getVersionCode() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionCode;\n        } else {\n            return 0;\n        }\n    }\n\n    public Drawable getIcon() {\n        if (icon == null) {\n            icon = getResolveInfo().loadIcon(context.getPackageManager());\n            /*\n            Drawable dr = getResolveInfo().loadIcon(ctx.getPackageManager());\n            Bitmap bitmap = ((BitmapDrawable) dr).getBitmap();\n            icon = new BitmapDrawable(ctx.getResources(), AppHelper.getResizedBitmap(bitmap, 144, 144));\n            */\n        }\n        return icon;\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getFirstInstallTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.firstInstallTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getLastUpdateTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.lastUpdateTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        AppInfo f = (AppInfo) o;\n        return getName().compareTo(f.getName());\n    }\n\n    @Override\n    public String toString() {\n        return getName();\n    }\n\n    /**\n     * Helper method to get an applications name!\n     *\n     * @param ri\n     * @return\n     * @throws NameNotFoundException\n     */\n\n    public String getNameFromResolveInfo(ResolveInfo ri) throws NameNotFoundException {\n        String name = ri.resolvePackageName;\n        if (ri.activityInfo != null) {\n            Resources res = context.getPackageManager().getResourcesForApplication(ri.activityInfo.applicationInfo);\n            Resources engRes = getEnglishRessources(res);\n\n            if (ri.activityInfo.labelRes != 0) {\n                name = engRes.getString(ri.activityInfo.labelRes);\n\n                if (name == null || name.equals(\"\")) {\n                    name = res.getString(ri.activityInfo.labelRes);\n                }\n\n            } else {\n                name = ri.activityInfo.applicationInfo.loadLabel(context.getPackageManager()).toString();\n            }\n        }\n        return name;\n    }\n\n    public Resources getEnglishRessources(Resources standardResources) {\n        AssetManager assets = standardResources.getAssets();\n        DisplayMetrics metrics = standardResources.getDisplayMetrics();\n        Configuration config = new Configuration(standardResources.getConfiguration());\n        config.locale = Locale.US;\n        return new Resources(assets, metrics, config);\n    }\n}\n```\n\n参考博客\n\n[【Android】获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)](http://blog.csdn.net/feng88724/article/details/6198446)\n","slug":"AppInfo","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2r0060v0zinmjzuc9c"},{"title":"Android实战Samples","date":"2014-11-08T16:00:00.000Z","_content":"工作将近三年，早就应该将自己实际开发中遇到的问题整成一个App，虽然论坛（[eoeAndroid](http://www.eoeandroid.com/space-uid-788456.html)、[安卓巴士](http://www.apkbus.com/home.php?mod=space&uid=104974)）已经分享了不少demo，自己也记录一些Android知识点，但是觉得这些还是不够，再次遇到以前的问题，还是会找以前的帖子去看，太不便，决定花点时间，将以前写的demo整到一块，方便自己，方便大家。\n\n源码地址：[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n","source":"_posts/AndroidSamples.md","raw":"title: Android实战Samples\ndate: 2014-11-09 \ncategories: [Android]\ntags: [Android]\n---\n工作将近三年，早就应该将自己实际开发中遇到的问题整成一个App，虽然论坛（[eoeAndroid](http://www.eoeandroid.com/space-uid-788456.html)、[安卓巴士](http://www.apkbus.com/home.php?mod=space&uid=104974)）已经分享了不少demo，自己也记录一些Android知识点，但是觉得这些还是不够，再次遇到以前的问题，还是会找以前的帖子去看，太不便，决定花点时间，将以前写的demo整到一块，方便自己，方便大家。\n\n源码地址：[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n","slug":"AndroidSamples","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2t0063v0zi0veezshs"},{"title":"Android开发人员调查","date":"2015-07-23T16:00:00.000Z","_content":"\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n截止发帖，共收到172份，数据如下：\n\n<!-- more -->\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_1.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_2.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_3.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_5.png)\n\n## 具体数据\n[Android开发人员调查](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey.xls)\n\n数据越多越有参考价值，快来填填吧！\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n","source":"_posts/AndroidDeveloperSurvey.md","raw":"title: Android开发人员调查\ndate: 2015-07-24\ncategories: [Android]\ntags: [Android]\n---\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n截止发帖，共收到172份，数据如下：\n\n<!-- more -->\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_1.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_2.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_3.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey_5.png)\n\n## 具体数据\n[Android开发人员调查](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey.xls)\n\n数据越多越有参考价值，快来填填吧！\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n","slug":"AndroidDeveloperSurvey","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt2y0066v0zi1deq9dzk"},{"title":"Android Studio快捷键设置成跟Eclipse一样","date":"2014-10-20T16:00:00.000Z","_content":"1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-1.png)\n<!-- more -->\n2、Keymap，设置成Eclipse\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-2.png)\n3、设置个别快捷键\n* 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n\n* 快捷设置set和get方法\nAlt+insert\n* 自动导包\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-3.png)\n\n* 联想\nClass Name Completion，AS快捷键是Ctrl+Alt+Space（空格键），Eclipse的快捷键Alt+/\n","source":"_posts/Android-Studio-shortcut-keys-arranged-like-Eclipse.md","raw":"title: Android Studio快捷键设置成跟Eclipse一样\ndate: 2014-10-21 \ncategories: [Android Studio]\ntags: [Android Studio]\n---\n1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-1.png)\n<!-- more -->\n2、Keymap，设置成Eclipse\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-2.png)\n3、设置个别快捷键\n* 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n\n* 快捷设置set和get方法\nAlt+insert\n* 自动导包\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-3.png)\n\n* 联想\nClass Name Completion，AS快捷键是Ctrl+Alt+Space（空格键），Eclipse的快捷键Alt+/\n","slug":"Android-Studio-shortcut-keys-arranged-like-Eclipse","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt3b0069v0ziqspevsn1"},{"title":"Android Studio安装Genymotion插件","date":"2014-10-20T16:00:00.000Z","_content":"1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-1.png)\n2、搜索Plugins，安装Genymotion插件\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-2.png)\n3、settings->设置Genymotion安装路径\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-3.png)\n4、ok，over\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-4.png)","source":"_posts/Android-Studio-Genymotion.md","raw":"title: Android Studio安装Genymotion插件\ndate: 2014-10-21 \ncategories: [Android Studio]\ntags: [Android Studio,Genymotion]\n---\n1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-1.png)\n2、搜索Plugins，安装Genymotion插件\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-2.png)\n3、settings->设置Genymotion安装路径\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-3.png)\n4、ok，over\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-4.png)","slug":"Android-Studio-Genymotion","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt3e006cv0zi3e70wo94"},{"title":"Android调用系统相机和相册","date":"2014-11-09T16:00:00.000Z","_content":"\n相册拍照的功能在实际开发中是最常见的功能，我整理成`图片裁剪`和`不裁剪`，另外你还能学习`自定义的PopupWindow`。在我开发这块，发现网上很多demo都有选择相册大图片时有溢出的bug，我的这个sample解决了这个bug。\n\n###效果图\n![](http://wuxiaolong.qiniudn.com/2014-11-10-Android-Samples-Photograph-1.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n* 相机\n\n```java\npublic static String SAVED_IMAGE_DIR_PATH = Environment\n\t\t\t.getExternalStorageDirectory().getPath() + \"/AppName/camera/\";// 拍照路径\ncase R.id.btn_photograph:\n\n\t\t\t\tString state = Environment.getExternalStorageState();\n\t\t\t\tif (state.equals(Environment.MEDIA_MOUNTED)) {\n\t\t\t\t\tIntent getImageByCamera = new Intent(\n\t\t\t\t\t\t\t\"android.media.action.IMAGE_CAPTURE\");\n\t\t\t\t\tString out_file_path = AppConfig.SAVED_IMAGE_DIR_PATH;\n\t\t\t\t\tFile dir = new File(out_file_path);\n\t\t\t\t\tif (!dir.exists()) {\n\t\t\t\t\t\tdir.mkdirs();\n\t\t\t\t\t}\n\t\t\t\t\tcapturePath = AppConfig.SAVED_IMAGE_DIR_PATH\n\t\t\t\t\t\t\t+ System.currentTimeMillis() + \".png\";\n\t\t\t\t\tgetImageByCamera.putExtra(MediaStore.EXTRA_OUTPUT,\n\t\t\t\t\t\t\tUri.fromFile(new File(capturePath)));\n\t\t\t\t\tgetImageByCamera\n\t\t\t\t\t\t\t.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);\n\n\t\t\t\t\tstartActivityForResult(getImageByCamera,\n\t\t\t\t\t\t\tAppConfig.BTN_PHOTOGRAPH);\n\t\t\t\t} else {\n\t\t\t\t\tToast.makeText(getApplicationContext(), \"请确认已经插入SD卡\",\n\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t}\n\t\t\t\tbreak;\n```\n* 相册\n\n```java\ncase R.id.btn_user_album:\n\t\t\t\ttry {\n\t\t\t\t\t// 选择照片的时候也一样，我们用Action为Intent.ACTION_GET_CONTENT，\n\t\t\t\t\t// 有些人使用其他的Action但我发现在有些机子中会出问题，所以优先选择这个\n\t\t\t\t\tintent = new Intent(\n\t\t\t\t\t\t\tIntent.ACTION_PICK,\n\t\t\t\t\t\t\tandroid.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\n\t\t\t\t\tintent.setType(\"image/*\");\n\t\t\t\t\t// intent.setAction(Intent.ACTION_GET_CONTENT);\n\t\t\t\t\tstartActivityForResult(intent,\n\t\t\t\t\t\t\tAppConfig.REQUEST_CODE_USER_ALBUM);\n\t\t\t\t} catch (ActivityNotFoundException e) {\n\n\t\t\t\t}\n\t\t\t\tbreak;\n```\n\n```java\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (resultCode == RESULT_OK) {\n\t\t\t/**\n\t\t\t * 用户相册\n\t\t\t */\n\t\t\tif (requestCode == AppConfig.REQUEST_CODE_USER_ALBUM) {\n\t\t\t\tif (data != null) {\n\n\t\t\t\t\t// 这个方法是根据Uri获取Bitmap图片的静态方法\n\n\t\t\t\t\t// 取得返回的Uri,基本上选择照片的时候返回的是以Uri形式，但是在拍照中有得机子呢Uri是空的，所以要特别注意\n\t\t\t\t\tUri mImageCaptureUri = data.getData();\n\t\t\t\t\t// 返回的Uri不为空时，那么图片信息数据都会在Uri中获得。如果为空，那么我们就进行下面的方式获取\n\t\t\t\t\tif (mImageCaptureUri != null) {\n\t\t\t\t\t\tstartPhotoZoom(mImageCaptureUri);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// android拍照获得图片URI为空的处理方法http://www.xuebuyuan.com/1929552.html\n\t\t\t\t\t\t// 这样做取得是缩略图,以下链接是取得原始图片\n\t\t\t\t\t\t// http://blog.csdn.net/beyond0525/article/details/8940840\n\t\t\t\t\t\tBundle extras = data.getExtras();\n\t\t\t\t\t\tif (extras != null) {\n\t\t\t\t\t\t\t// 这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片\n\t\t\t\t\t\t\t// Bitmap imageBitmap =\n\t\t\t\t\t\t\t// extras.getParcelable(\"data\");\n\t\t\t\t\t\t\tBitmap imageBitmap = (Bitmap) extras.get(\"data\");\n\t\t\t\t\t\t\tmImageCaptureUri = Uri\n\t\t\t\t\t\t\t\t\t.parse(MediaStore.Images.Media.insertImage(\n\t\t\t\t\t\t\t\t\t\t\tgetContentResolver(), imageBitmap,\n\t\t\t\t\t\t\t\t\t\t\tnull, null));\n\n\t\t\t\t\t\t\t// if (imageBitmap != null) {\n\t\t\t\t\t\t\t// add_camera.setImageBitmap(imageBitmap);\n\t\t\t\t\t\t\t// }\n             startPhotoZoom(mImageCaptureUri);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * 拍照\n\t\t\t */\n\t\t\tif (requestCode == AppConfig.BTN_PHOTOGRAPH) {\n\t\t\t\tstartPhotoZoom(Uri.fromFile(new File(capturePath)));\n\t\t\t\n\t\t\t}\n\t\t\tif (requestCode == AppConfig.PHOTO_CUTTING) {\n\t\t\t\tBundle extras = data.getExtras();\n\t\t\t\tif (extras != null) {\n\t\t\t\t\t// 这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片\n\t\t\t\t\tcutImageBitmap = toRoundBitmap((Bitmap) data.getExtras()\n\t\t\t\t\t\t\t.get(\"data\"));\n\n\t\t\t\t\tLog.d(\"wxl\", \"PHOTO_CUTTING=\");\n\t\t\t\t\t// if (CutImageActivity.CutImageBitmap != null) {\n\t\t\t\t\tFile baseFile = FileHelper\n\t\t\t\t\t\t\t.getBaseFile(FileHelper.PATH_PHOTOGRAPH);\n\t\t\t\t\tif (baseFile == null) {\n\t\t\t\t\t\t// showLongMessage(\"SD卡不可用,请检查SD卡情况\");\n\t\t\t\t\t\tToast.makeText(MyMsgActivity.this, \"SD卡不存在，请插入SD卡\",\n\t\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tString fileName = FileHelper.getFileName(); // 图片名称\n\t\t\t\t\tFileHelper.saveBitmap(cutImageBitmap, fileName, baseFile);\n\t\t\t\t\tString imagePath = Environment\n\t\t\t\t\t\t\t.getExternalStorageDirectory()\n\t\t\t\t\t\t\t+ File.separator\n\t\t\t\t\t\t\t+ FileHelper.PATH_PHOTOGRAPH + fileName;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\tuserAvatar.setImageBitmap(cutImageBitmap);\n\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\te.printStackTrace();\n\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n```java\n/**\n\t * 裁剪图片方法实现\n\t * \n\t * @param uri\n\t */\n\tpublic void startPhotoZoom(Uri uri) {\n\t\tIntent intent = new Intent(\"com.android.camera.action.CROP\");\n\t\tintent.setDataAndType(uri, \"image/*\");\n\t\t// 下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪\n\t\tintent.putExtra(\"crop\", \"true\");\n\t\t// aspectX aspectY 是宽高的比例\n\t\tintent.putExtra(\"aspectX\", 1);\n\t\tintent.putExtra(\"aspectY\", 1);\n\t\t// outputX outputY 是裁剪图片宽高\n\t\tintent.putExtra(\"outputX\", 150);\n\t\tintent.putExtra(\"outputY\", 150);\n\t\tintent.putExtra(\"return-data\", true);\n\t\tstartActivityForResult(intent, AppConfig.PHOTO_CUTTING);\n\t}\n```\n\n```java\n/**\n\t * 转换图片成圆形\n\t * \n\t * @param bitmap\n\t *            传入Bitmap对象\n\t * @return\n\t */\n\tpublic Bitmap toRoundBitmap(Bitmap bitmap) {\n\t\tint width = bitmap.getWidth();\n\t\tint height = bitmap.getHeight();\n\t\tfloat roundPx;\n\t\tfloat left, top, right, bottom, dst_left, dst_top, dst_right, dst_bottom;\n\t\tif (width <= height) {\n\t\t\troundPx = width / 2;\n\t\t\ttop = 0;\n\t\t\tbottom = width;\n\t\t\tleft = 0;\n\t\t\tright = width;\n\t\t\theight = width;\n\t\t\tdst_left = 0;\n\t\t\tdst_top = 0;\n\t\t\tdst_right = width;\n\t\t\tdst_bottom = width;\n\t\t} else {\n\t\t\troundPx = height / 2;\n\t\t\tfloat clip = (width - height) / 2;\n\t\t\tleft = clip;\n\t\t\tright = width - clip;\n\t\t\ttop = 0;\n\t\t\tbottom = height;\n\t\t\twidth = height;\n\t\t\tdst_left = 0;\n\t\t\tdst_top = 0;\n\t\t\tdst_right = height;\n\t\t\tdst_bottom = height;\n\t\t}\n\n\t\tBitmap output = Bitmap.createBitmap(width, height, Config.ARGB_8888);\n\t\tCanvas canvas = new Canvas(output);\n\n\t\tfinal int color = 0xff424242;\n\t\tfinal Paint paint = new Paint();\n\t\tfinal Rect src = new Rect((int) left, (int) top, (int) right,\n\t\t\t\t(int) bottom);\n\t\tfinal Rect dst = new Rect((int) dst_left, (int) dst_top,\n\t\t\t\t(int) dst_right, (int) dst_bottom);\n\t\tfinal RectF rectF = new RectF(dst);\n\n\t\tpaint.setAntiAlias(true);\n\n\t\tcanvas.drawARGB(0, 0, 0, 0);\n\t\tpaint.setColor(color);\n\t\tcanvas.drawRoundRect(rectF, roundPx, roundPx, paint);\n\n\t\tpaint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));\n\t\tcanvas.drawBitmap(bitmap, src, dst, paint);\n\t\treturn output;\n\t}\n```\n","source":"_posts/Android-Photograph_Album.md","raw":"title: Android调用系统相机和相册\ndate: 2014-11-10 \ncategories: [Android]\ntags: [Android]\n---\n\n相册拍照的功能在实际开发中是最常见的功能，我整理成`图片裁剪`和`不裁剪`，另外你还能学习`自定义的PopupWindow`。在我开发这块，发现网上很多demo都有选择相册大图片时有溢出的bug，我的这个sample解决了这个bug。\n\n###效果图\n![](http://wuxiaolong.qiniudn.com/2014-11-10-Android-Samples-Photograph-1.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n* 相机\n\n```java\npublic static String SAVED_IMAGE_DIR_PATH = Environment\n\t\t\t.getExternalStorageDirectory().getPath() + \"/AppName/camera/\";// 拍照路径\ncase R.id.btn_photograph:\n\n\t\t\t\tString state = Environment.getExternalStorageState();\n\t\t\t\tif (state.equals(Environment.MEDIA_MOUNTED)) {\n\t\t\t\t\tIntent getImageByCamera = new Intent(\n\t\t\t\t\t\t\t\"android.media.action.IMAGE_CAPTURE\");\n\t\t\t\t\tString out_file_path = AppConfig.SAVED_IMAGE_DIR_PATH;\n\t\t\t\t\tFile dir = new File(out_file_path);\n\t\t\t\t\tif (!dir.exists()) {\n\t\t\t\t\t\tdir.mkdirs();\n\t\t\t\t\t}\n\t\t\t\t\tcapturePath = AppConfig.SAVED_IMAGE_DIR_PATH\n\t\t\t\t\t\t\t+ System.currentTimeMillis() + \".png\";\n\t\t\t\t\tgetImageByCamera.putExtra(MediaStore.EXTRA_OUTPUT,\n\t\t\t\t\t\t\tUri.fromFile(new File(capturePath)));\n\t\t\t\t\tgetImageByCamera\n\t\t\t\t\t\t\t.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 1);\n\n\t\t\t\t\tstartActivityForResult(getImageByCamera,\n\t\t\t\t\t\t\tAppConfig.BTN_PHOTOGRAPH);\n\t\t\t\t} else {\n\t\t\t\t\tToast.makeText(getApplicationContext(), \"请确认已经插入SD卡\",\n\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t}\n\t\t\t\tbreak;\n```\n* 相册\n\n```java\ncase R.id.btn_user_album:\n\t\t\t\ttry {\n\t\t\t\t\t// 选择照片的时候也一样，我们用Action为Intent.ACTION_GET_CONTENT，\n\t\t\t\t\t// 有些人使用其他的Action但我发现在有些机子中会出问题，所以优先选择这个\n\t\t\t\t\tintent = new Intent(\n\t\t\t\t\t\t\tIntent.ACTION_PICK,\n\t\t\t\t\t\t\tandroid.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\n\t\t\t\t\tintent.setType(\"image/*\");\n\t\t\t\t\t// intent.setAction(Intent.ACTION_GET_CONTENT);\n\t\t\t\t\tstartActivityForResult(intent,\n\t\t\t\t\t\t\tAppConfig.REQUEST_CODE_USER_ALBUM);\n\t\t\t\t} catch (ActivityNotFoundException e) {\n\n\t\t\t\t}\n\t\t\t\tbreak;\n```\n\n```java\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (resultCode == RESULT_OK) {\n\t\t\t/**\n\t\t\t * 用户相册\n\t\t\t */\n\t\t\tif (requestCode == AppConfig.REQUEST_CODE_USER_ALBUM) {\n\t\t\t\tif (data != null) {\n\n\t\t\t\t\t// 这个方法是根据Uri获取Bitmap图片的静态方法\n\n\t\t\t\t\t// 取得返回的Uri,基本上选择照片的时候返回的是以Uri形式，但是在拍照中有得机子呢Uri是空的，所以要特别注意\n\t\t\t\t\tUri mImageCaptureUri = data.getData();\n\t\t\t\t\t// 返回的Uri不为空时，那么图片信息数据都会在Uri中获得。如果为空，那么我们就进行下面的方式获取\n\t\t\t\t\tif (mImageCaptureUri != null) {\n\t\t\t\t\t\tstartPhotoZoom(mImageCaptureUri);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// android拍照获得图片URI为空的处理方法http://www.xuebuyuan.com/1929552.html\n\t\t\t\t\t\t// 这样做取得是缩略图,以下链接是取得原始图片\n\t\t\t\t\t\t// http://blog.csdn.net/beyond0525/article/details/8940840\n\t\t\t\t\t\tBundle extras = data.getExtras();\n\t\t\t\t\t\tif (extras != null) {\n\t\t\t\t\t\t\t// 这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片\n\t\t\t\t\t\t\t// Bitmap imageBitmap =\n\t\t\t\t\t\t\t// extras.getParcelable(\"data\");\n\t\t\t\t\t\t\tBitmap imageBitmap = (Bitmap) extras.get(\"data\");\n\t\t\t\t\t\t\tmImageCaptureUri = Uri\n\t\t\t\t\t\t\t\t\t.parse(MediaStore.Images.Media.insertImage(\n\t\t\t\t\t\t\t\t\t\t\tgetContentResolver(), imageBitmap,\n\t\t\t\t\t\t\t\t\t\t\tnull, null));\n\n\t\t\t\t\t\t\t// if (imageBitmap != null) {\n\t\t\t\t\t\t\t// add_camera.setImageBitmap(imageBitmap);\n\t\t\t\t\t\t\t// }\n             startPhotoZoom(mImageCaptureUri);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * 拍照\n\t\t\t */\n\t\t\tif (requestCode == AppConfig.BTN_PHOTOGRAPH) {\n\t\t\t\tstartPhotoZoom(Uri.fromFile(new File(capturePath)));\n\t\t\t\n\t\t\t}\n\t\t\tif (requestCode == AppConfig.PHOTO_CUTTING) {\n\t\t\t\tBundle extras = data.getExtras();\n\t\t\t\tif (extras != null) {\n\t\t\t\t\t// 这里是有些拍照后的图片是直接存放到Bundle中的所以我们可以从这里面获取Bitmap图片\n\t\t\t\t\tcutImageBitmap = toRoundBitmap((Bitmap) data.getExtras()\n\t\t\t\t\t\t\t.get(\"data\"));\n\n\t\t\t\t\tLog.d(\"wxl\", \"PHOTO_CUTTING=\");\n\t\t\t\t\t// if (CutImageActivity.CutImageBitmap != null) {\n\t\t\t\t\tFile baseFile = FileHelper\n\t\t\t\t\t\t\t.getBaseFile(FileHelper.PATH_PHOTOGRAPH);\n\t\t\t\t\tif (baseFile == null) {\n\t\t\t\t\t\t// showLongMessage(\"SD卡不可用,请检查SD卡情况\");\n\t\t\t\t\t\tToast.makeText(MyMsgActivity.this, \"SD卡不存在，请插入SD卡\",\n\t\t\t\t\t\t\t\tToast.LENGTH_LONG).show();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tString fileName = FileHelper.getFileName(); // 图片名称\n\t\t\t\t\tFileHelper.saveBitmap(cutImageBitmap, fileName, baseFile);\n\t\t\t\t\tString imagePath = Environment\n\t\t\t\t\t\t\t.getExternalStorageDirectory()\n\t\t\t\t\t\t\t+ File.separator\n\t\t\t\t\t\t\t+ FileHelper.PATH_PHOTOGRAPH + fileName;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\tuserAvatar.setImageBitmap(cutImageBitmap);\n\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\te.printStackTrace();\n\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n```java\n/**\n\t * 裁剪图片方法实现\n\t * \n\t * @param uri\n\t */\n\tpublic void startPhotoZoom(Uri uri) {\n\t\tIntent intent = new Intent(\"com.android.camera.action.CROP\");\n\t\tintent.setDataAndType(uri, \"image/*\");\n\t\t// 下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪\n\t\tintent.putExtra(\"crop\", \"true\");\n\t\t// aspectX aspectY 是宽高的比例\n\t\tintent.putExtra(\"aspectX\", 1);\n\t\tintent.putExtra(\"aspectY\", 1);\n\t\t// outputX outputY 是裁剪图片宽高\n\t\tintent.putExtra(\"outputX\", 150);\n\t\tintent.putExtra(\"outputY\", 150);\n\t\tintent.putExtra(\"return-data\", true);\n\t\tstartActivityForResult(intent, AppConfig.PHOTO_CUTTING);\n\t}\n```\n\n```java\n/**\n\t * 转换图片成圆形\n\t * \n\t * @param bitmap\n\t *            传入Bitmap对象\n\t * @return\n\t */\n\tpublic Bitmap toRoundBitmap(Bitmap bitmap) {\n\t\tint width = bitmap.getWidth();\n\t\tint height = bitmap.getHeight();\n\t\tfloat roundPx;\n\t\tfloat left, top, right, bottom, dst_left, dst_top, dst_right, dst_bottom;\n\t\tif (width <= height) {\n\t\t\troundPx = width / 2;\n\t\t\ttop = 0;\n\t\t\tbottom = width;\n\t\t\tleft = 0;\n\t\t\tright = width;\n\t\t\theight = width;\n\t\t\tdst_left = 0;\n\t\t\tdst_top = 0;\n\t\t\tdst_right = width;\n\t\t\tdst_bottom = width;\n\t\t} else {\n\t\t\troundPx = height / 2;\n\t\t\tfloat clip = (width - height) / 2;\n\t\t\tleft = clip;\n\t\t\tright = width - clip;\n\t\t\ttop = 0;\n\t\t\tbottom = height;\n\t\t\twidth = height;\n\t\t\tdst_left = 0;\n\t\t\tdst_top = 0;\n\t\t\tdst_right = height;\n\t\t\tdst_bottom = height;\n\t\t}\n\n\t\tBitmap output = Bitmap.createBitmap(width, height, Config.ARGB_8888);\n\t\tCanvas canvas = new Canvas(output);\n\n\t\tfinal int color = 0xff424242;\n\t\tfinal Paint paint = new Paint();\n\t\tfinal Rect src = new Rect((int) left, (int) top, (int) right,\n\t\t\t\t(int) bottom);\n\t\tfinal Rect dst = new Rect((int) dst_left, (int) dst_top,\n\t\t\t\t(int) dst_right, (int) dst_bottom);\n\t\tfinal RectF rectF = new RectF(dst);\n\n\t\tpaint.setAntiAlias(true);\n\n\t\tcanvas.drawARGB(0, 0, 0, 0);\n\t\tpaint.setColor(color);\n\t\tcanvas.drawRoundRect(rectF, roundPx, roundPx, paint);\n\n\t\tpaint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));\n\t\tcanvas.drawBitmap(bitmap, src, dst, paint);\n\t\treturn output;\n\t}\n```\n","slug":"Android-Photograph_Album","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt3i006hv0zim5df1c4e"},{"title":"github之Android-Iconics使用","date":"2014-07-28T16:00:00.000Z","_content":"源码地址：[https://github.com/mikepenz/Android-Iconics](https://github.com/mikepenz/Android-Iconics)\n\n* build.gradle添加\n\n```java\ndependencies {\n    compile 'com.mikepenz:iconics:1.3.0@aar'\n}\n```\n<!-- more -->\n\n* 作为Drawable使用\n\n```java\nImageView image = (ImageView) findViewById(R.id.image);\nimage.setImageDrawable(new IconicsDrawable(this, FontAwesome.Icon.faw_android).color(Color.RED).sizeDp(24));\n```\n\n* 作为MenuItem使用\n\n```java\nMenuItem menuItem = menu.findItem(R.id.action_opensource);\nmenuItem.setIcon(new IconicsDrawable(this, FontAwesome.Icon.faw_github).actionBar().color(Color.WHITE));\n```\n\n* xml使用\n\n```js\n <com.mikepenz.iconics.view.IconicsImageView\n        android:id=\"@+id/icon\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:clickable=\"false\"\n        android:padding=\"8dp\"\n        android:scaleType=\"fitXY\"\n        app:iiv_color=\"@android:color/holo_green_dark\"\n        app:iiv_icon=\"faw_adjust\" />\n```\n\n```java\n IconicsImageView icon = (IconicsImageView) findViewById(R.id.icon);\n  List<String> icons = new ArrayList<String>();\n                        for (ITypeface font : Iconics.getRegisteredFonts()) {\n                            Log.d(\"wxl\", \"FontName=\" + font.getFontName());\n                            if (font.getFontName().equalsIgnoreCase(\"FontAwesome\")) {\n                                for (String icon : font.getIcons()) {\n                                    Log.d(\"wxl\", \"getIcons=\" + icon);\n                                    icons.add(icon);\n                                }\n                            }\n                        }\n  icon.setIcon(icons.get(0));\n  \n```\n","source":"_posts/Android-Iconics.md","raw":"title: github之Android-Iconics使用\ndate: 2014-07-29 \ncategories: [Android]\ntags: [Android,SQLite]\n---\n源码地址：[https://github.com/mikepenz/Android-Iconics](https://github.com/mikepenz/Android-Iconics)\n\n* build.gradle添加\n\n```java\ndependencies {\n    compile 'com.mikepenz:iconics:1.3.0@aar'\n}\n```\n<!-- more -->\n\n* 作为Drawable使用\n\n```java\nImageView image = (ImageView) findViewById(R.id.image);\nimage.setImageDrawable(new IconicsDrawable(this, FontAwesome.Icon.faw_android).color(Color.RED).sizeDp(24));\n```\n\n* 作为MenuItem使用\n\n```java\nMenuItem menuItem = menu.findItem(R.id.action_opensource);\nmenuItem.setIcon(new IconicsDrawable(this, FontAwesome.Icon.faw_github).actionBar().color(Color.WHITE));\n```\n\n* xml使用\n\n```js\n <com.mikepenz.iconics.view.IconicsImageView\n        android:id=\"@+id/icon\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:clickable=\"false\"\n        android:padding=\"8dp\"\n        android:scaleType=\"fitXY\"\n        app:iiv_color=\"@android:color/holo_green_dark\"\n        app:iiv_icon=\"faw_adjust\" />\n```\n\n```java\n IconicsImageView icon = (IconicsImageView) findViewById(R.id.icon);\n  List<String> icons = new ArrayList<String>();\n                        for (ITypeface font : Iconics.getRegisteredFonts()) {\n                            Log.d(\"wxl\", \"FontName=\" + font.getFontName());\n                            if (font.getFontName().equalsIgnoreCase(\"FontAwesome\")) {\n                                for (String icon : font.getIcons()) {\n                                    Log.d(\"wxl\", \"getIcons=\" + icon);\n                                    icons.add(icon);\n                                }\n                            }\n                        }\n  icon.setIcon(icons.get(0));\n  \n```\n","slug":"Android-Iconics","published":1,"updated":"2015-08-01T04:13:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt3k006kv0zid5k7o1od"},{"title":"广告基金","date":"2015-05-11T16:00:00.000Z","_content":"\n>我很想买mac，但是暂时经济紧张，于是心里想，今年我的广告费什么时候攒够\n>了，就买。求赞助，求包养T_T\n\n\n| 月份       | 收益   |  备注  |\n| :----:     | :----:  | :----: |\n| 2015年07月 | 417.40  |  广点通 |\n| 2015年06月 | 151.89  |  百度   |\n| 2015年06月 | 412.40  |  广点通 |\n| 2015年05月 | 647.45  |  广点通 |\n| 2015年05月 | 186.15  |  百度   |\n| 2015年04月 | 257.74  |  广点通 |\n| 2015年04月 | 463.96  |  百度   |\n| 2015年03月 | 1120.08 |  百度   |\n| 2015年02月 | 944.47  |  百度   |\n|    --      | 4601.54 |  总计   |\n","source":"_posts/AdFund.md","raw":"title: 广告基金\ndate: 2015-05-12\ncategories: [Life]\ntags: [Life]\n---\n\n>我很想买mac，但是暂时经济紧张，于是心里想，今年我的广告费什么时候攒够\n>了，就买。求赞助，求包养T_T\n\n\n| 月份       | 收益   |  备注  |\n| :----:     | :----:  | :----: |\n| 2015年07月 | 417.40  |  广点通 |\n| 2015年06月 | 151.89  |  百度   |\n| 2015年06月 | 412.40  |  广点通 |\n| 2015年05月 | 647.45  |  广点通 |\n| 2015年05月 | 186.15  |  百度   |\n| 2015年04月 | 257.74  |  广点通 |\n| 2015年04月 | 463.96  |  百度   |\n| 2015年03月 | 1120.08 |  百度   |\n| 2015年02月 | 944.47  |  百度   |\n|    --      | 4601.54 |  总计   |\n","slug":"AdFund","published":1,"updated":"2015-08-04T12:39:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cicxfzt42006ov0zijakqr6lv"}],"PostAsset":[],"PostCategory":[{"post_id":"cicxfzsyx0004v0zi1yytuk1v","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzsz00008v0zicqpxclek"},{"post_id":"cicxfzsz2000dv0zi3rvpbex8","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzsz3000hv0zi70zjvdt9"},{"post_id":"cicxfzsz4000iv0zi3ce4aykj","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzsz4000jv0zinrrux4t0"},{"post_id":"cicxfzsz6000nv0zids1t51nu","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzsz6000ov0zib9llmoac"},{"post_id":"cicxfzsz8000sv0zi9sk65nyk","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzsz9000tv0zidkt1sanc"},{"post_id":"cicxfzsz9000vv0zius0wv1ys","category_id":"cicxfzsza000wv0zi6wg0zm5j","_id":"cicxfzszb000zv0zi43kg0sul"},{"post_id":"cicxfzszb0010v0zirkuvzalz","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszc0011v0zijpozi8pj"},{"post_id":"cicxfzszd0015v0zib1pf9hmn","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzsze0016v0zi3ks2pdbr"},{"post_id":"cicxfzszg0019v0zi5vdg2ghv","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszh001av0zifm27fif1"},{"post_id":"cicxfzszi001cv0zi5oupa31n","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszj001dv0zi3dlmhv6l"},{"post_id":"cicxfzszk001gv0zi5rae2zpt","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszl001hv0zi8no40arm"},{"post_id":"cicxfzszn001lv0zit7z7jbgz","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszo001mv0zic0owfc9p"},{"post_id":"cicxfzszr001pv0zi3ih5yh06","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszs001qv0ziw4c77huw"},{"post_id":"cicxfzszu001uv0ziy66pkd1g","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszw001vv0zi5th8gk5f"},{"post_id":"cicxfzszx001zv0zi5yvetffx","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzszy0020v0zixok07par"},{"post_id":"cicxfzt000024v0zinllzrwrs","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt010025v0zimwmcp0ou"},{"post_id":"cicxfzt010027v0ziy9pcl7hv","category_id":"cicxfzt020028v0ziwdzmnqpy","_id":"cicxfzt03002bv0zi3ajovxvo"},{"post_id":"cicxfzt04002cv0zi2iyk51hk","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzt04002dv0ziut3kmxej"},{"post_id":"cicxfzt05002fv0ziyo22615d","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt06002gv0zir5qhk22y"},{"post_id":"cicxfzt07002jv0zibzkdvg8b","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzt08002kv0zifcy7k5s3"},{"post_id":"cicxfzt0a002ov0zi8xij5raj","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0a002pv0zik7k0c1t3"},{"post_id":"cicxfzt0b002rv0ziabo9530b","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzt0c002sv0zi6csjugw1"},{"post_id":"cicxfzt0e002uv0zivvofus03","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0f002vv0zilpufovcf"},{"post_id":"cicxfzt0g002zv0zi2gdi7skc","category_id":"cicxfzt0h0030v0zicegs6t5l","_id":"cicxfzt0h0032v0zib8oy1mnj"},{"post_id":"cicxfzt0i0033v0ziyoirre7k","category_id":"cicxfzt0i0034v0ziz563xtdi","_id":"cicxfzt0j0037v0ziyly4e3kr"},{"post_id":"cicxfzt0k0039v0zit2gl67p6","category_id":"cicxfzt020028v0ziwdzmnqpy","_id":"cicxfzt0k003av0zi3fwfwj5p"},{"post_id":"cicxfzt0l003dv0zi5h25l8xb","category_id":"cicxfzt0h0030v0zicegs6t5l","_id":"cicxfzt0m003ev0zi3m7uvczb"},{"post_id":"cicxfzt0n003gv0zivp1r3sqc","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0o003hv0zi4l6qcj22"},{"post_id":"cicxfzt0q003jv0zix050bf5u","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0r003kv0zih397p773"},{"post_id":"cicxfzt0s003mv0zij9on4oep","category_id":"cicxfzt0t003nv0zic1bd8gnv","_id":"cicxfzt0u003qv0ziqr11u8bg"},{"post_id":"cicxfzt0v003sv0zi283yfg03","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0v003tv0zihc608wr5"},{"post_id":"cicxfzt0w003vv0zieptq59h3","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt0x003wv0ziwbs7iltx"},{"post_id":"cicxfzt0z0040v0zi6nrhktz4","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt100041v0zi1fuww03o"},{"post_id":"cicxfzt120045v0zilxfgvy1z","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt130046v0zi548smpt3"},{"post_id":"cicxfzt15004av0ziz5gqlnzw","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt16004bv0zixlx7kyn7"},{"post_id":"cicxfzt18004hv0zir5ut53d4","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt18004iv0zirnhj8in7"},{"post_id":"cicxfzt19004lv0zi5ec68g5i","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt1a004mv0ziikzfm9v2"},{"post_id":"cicxfzt1b004ov0zipeis9esf","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt1b004pv0zipm0ltu5i"},{"post_id":"cicxfzt1d004sv0zipul29buk","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt1f004tv0zi13tvksys"},{"post_id":"cicxfzt1h004xv0zir1ymle0l","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt1i004yv0zisampim3p"},{"post_id":"cicxfzt1w0052v0zivoyyelo7","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt200053v0zicc10lj1l"},{"post_id":"cicxfzt230056v0zityyb0qw3","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt230057v0ziiy6syavu"},{"post_id":"cicxfzt25005bv0zivliy2pgs","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt26005cv0zivc4ykgu3"},{"post_id":"cicxfzt27005gv0zizfu77knn","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt28005hv0zify7yj1hz"},{"post_id":"cicxfzt2c005jv0zis4urs3hr","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2d005kv0zi6xr7ksyz"},{"post_id":"cicxfzt2e005nv0zi3kvyp3g8","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2f005ov0zi6do3r9r5"},{"post_id":"cicxfzt2g005qv0ziet3sg52r","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2g005rv0zizkvob37l"},{"post_id":"cicxfzt2l005tv0zivzd0uk0n","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2m005uv0zixnw45ska"},{"post_id":"cicxfzt2p005wv0ziox88lqnc","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2p005xv0ziab6e5vm7"},{"post_id":"cicxfzt2r0060v0zinmjzuc9c","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2s0061v0zii28ie61y"},{"post_id":"cicxfzt2t0063v0zi0veezshs","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2u0064v0ziquvpr5gr"},{"post_id":"cicxfzt2y0066v0zi1deq9dzk","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt2z0067v0zikxl35lpg"},{"post_id":"cicxfzt3b0069v0ziqspevsn1","category_id":"cicxfzt0h0030v0zicegs6t5l","_id":"cicxfzt3c006av0zi4pdxgsi1"},{"post_id":"cicxfzt3e006cv0zi3e70wo94","category_id":"cicxfzt0h0030v0zicegs6t5l","_id":"cicxfzt3f006dv0zipvx1hnv2"},{"post_id":"cicxfzt3i006hv0zim5df1c4e","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt3i006iv0zis73xxugk"},{"post_id":"cicxfzt3k006kv0zid5k7o1od","category_id":"cicxfzsyz0005v0zibvp1rf2q","_id":"cicxfzt3l006lv0zik3ndh7y9"},{"post_id":"cicxfzt42006ov0zijakqr6lv","category_id":"cicxfzsz3000ev0zij2n5v4me","_id":"cicxfzt43006pv0zi3aqmi2va"}],"PostTag":[{"post_id":"cicxfzsyx0004v0zi1yytuk1v","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzsz1000av0zi4nd9xth6"},{"post_id":"cicxfzsyx0004v0zi1yytuk1v","tag_id":"cicxfzsz00007v0zi4o3p0858","_id":"cicxfzsz1000bv0zil6r3seav"},{"post_id":"cicxfzsyx0004v0zi1yytuk1v","tag_id":"cicxfzsz10009v0zi5x0ftkgr","_id":"cicxfzsz1000cv0zixmx19tde"},{"post_id":"cicxfzsz2000dv0zi3rvpbex8","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzsz3000gv0ziu9rub9rz"},{"post_id":"cicxfzsz4000iv0zi3ce4aykj","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzsz5000lv0ziw8qr1eyf"},{"post_id":"cicxfzsz4000iv0zi3ce4aykj","tag_id":"cicxfzsz5000kv0zijztfjtt2","_id":"cicxfzsz5000mv0zivexqi01j"},{"post_id":"cicxfzsz6000nv0zids1t51nu","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzsz7000qv0zim0i7h3yg"},{"post_id":"cicxfzsz6000nv0zids1t51nu","tag_id":"cicxfzsz6000pv0zibjhtt046","_id":"cicxfzsz7000rv0zijgyac1yg"},{"post_id":"cicxfzsz8000sv0zi9sk65nyk","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzsz9000uv0zifkf7nh7a"},{"post_id":"cicxfzsz9000vv0zius0wv1ys","tag_id":"cicxfzsza000xv0zi7xwtbqna","_id":"cicxfzsza000yv0ziezz1zixs"},{"post_id":"cicxfzszb0010v0zirkuvzalz","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszd0013v0zi8dusqnaj"},{"post_id":"cicxfzszb0010v0zirkuvzalz","tag_id":"cicxfzszc0012v0zimje2fod3","_id":"cicxfzszd0014v0zih1qjz4nt"},{"post_id":"cicxfzszd0015v0zib1pf9hmn","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzszf0017v0ziq86hl0in"},{"post_id":"cicxfzszd0015v0zib1pf9hmn","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszf0018v0zi4tbahv2v"},{"post_id":"cicxfzszg0019v0zi5vdg2ghv","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszh001bv0ziy7p1sqwb"},{"post_id":"cicxfzszi001cv0zi5oupa31n","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszj001ev0ziyprm7wd4"},{"post_id":"cicxfzszi001cv0zi5oupa31n","tag_id":"cicxfzszc0012v0zimje2fod3","_id":"cicxfzszk001fv0zipkiyj6de"},{"post_id":"cicxfzszk001gv0zi5rae2zpt","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszm001jv0zipwsbtvc9"},{"post_id":"cicxfzszk001gv0zi5rae2zpt","tag_id":"cicxfzszl001iv0ziwseietgx","_id":"cicxfzszm001kv0zihx0seiev"},{"post_id":"cicxfzszn001lv0zit7z7jbgz","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszo001nv0zizyy13psu"},{"post_id":"cicxfzszn001lv0zit7z7jbgz","tag_id":"cicxfzszc0012v0zimje2fod3","_id":"cicxfzszo001ov0zitp2bkdhk"},{"post_id":"cicxfzszr001pv0zi3ih5yh06","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszt001sv0ziowwutjoi"},{"post_id":"cicxfzszr001pv0zi3ih5yh06","tag_id":"cicxfzszt001rv0zivbhlm367","_id":"cicxfzszu001tv0zibys4j1sq"},{"post_id":"cicxfzszu001uv0ziy66pkd1g","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszw001xv0ziqrrzdo08"},{"post_id":"cicxfzszu001uv0ziy66pkd1g","tag_id":"cicxfzszw001wv0zi8qzy3fdb","_id":"cicxfzszx001yv0ziqv69u22t"},{"post_id":"cicxfzszx001zv0zi5yvetffx","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzszy0022v0zi5rcyigd1"},{"post_id":"cicxfzszx001zv0zi5yvetffx","tag_id":"cicxfzszy0021v0ziyb4y5qtg","_id":"cicxfzszz0023v0zismynrbxo"},{"post_id":"cicxfzt000024v0zinllzrwrs","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt010026v0zixy63orwg"},{"post_id":"cicxfzt010027v0ziy9pcl7hv","tag_id":"cicxfzt020029v0zi63cx78hy","_id":"cicxfzt02002av0zipqm64jxd"},{"post_id":"cicxfzt04002cv0zi2iyk51hk","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzt04002ev0zi2v10qg11"},{"post_id":"cicxfzt05002fv0ziyo22615d","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt07002hv0zihzdi2bwj"},{"post_id":"cicxfzt05002fv0ziyo22615d","tag_id":"cicxfzszw001wv0zi8qzy3fdb","_id":"cicxfzt07002iv0ziwrg2o5tv"},{"post_id":"cicxfzt07002jv0zibzkdvg8b","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzt09002mv0zikul805md"},{"post_id":"cicxfzt07002jv0zibzkdvg8b","tag_id":"cicxfzt08002lv0zir9i632qz","_id":"cicxfzt09002nv0zisfnib9ym"},{"post_id":"cicxfzt0a002ov0zi8xij5raj","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0b002qv0zi1p58dors"},{"post_id":"cicxfzt0b002rv0ziabo9530b","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzt0c002tv0zih1f0h320"},{"post_id":"cicxfzt0e002uv0zivvofus03","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0f002xv0zizduc8ttv"},{"post_id":"cicxfzt0e002uv0zivvofus03","tag_id":"cicxfzt0f002wv0zia185nrse","_id":"cicxfzt0g002yv0ziriiu7ljq"},{"post_id":"cicxfzt0g002zv0zi2gdi7skc","tag_id":"cicxfzsz6000pv0zibjhtt046","_id":"cicxfzt0h0031v0ziroub975e"},{"post_id":"cicxfzt0i0033v0ziyoirre7k","tag_id":"cicxfzsza000xv0zi7xwtbqna","_id":"cicxfzt0j0036v0zi47fnfypw"},{"post_id":"cicxfzt0i0033v0ziyoirre7k","tag_id":"cicxfzt0i0035v0ziaheeo1vq","_id":"cicxfzt0j0038v0zidpibcmn8"},{"post_id":"cicxfzt0k0039v0zit2gl67p6","tag_id":"cicxfzsza000xv0zi7xwtbqna","_id":"cicxfzt0l003bv0zix797h56u"},{"post_id":"cicxfzt0k0039v0zit2gl67p6","tag_id":"cicxfzt020029v0zi63cx78hy","_id":"cicxfzt0l003cv0zibzceb5k9"},{"post_id":"cicxfzt0l003dv0zi5h25l8xb","tag_id":"cicxfzsz6000pv0zibjhtt046","_id":"cicxfzt0m003fv0ziudlv8qpx"},{"post_id":"cicxfzt0n003gv0zivp1r3sqc","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0o003iv0zii3rgxmpt"},{"post_id":"cicxfzt0q003jv0zix050bf5u","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0r003lv0zi4a7mf1qc"},{"post_id":"cicxfzt0s003mv0zij9on4oep","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0u003pv0ziy2i3skxl"},{"post_id":"cicxfzt0s003mv0zij9on4oep","tag_id":"cicxfzt0t003ov0ziiiadclxw","_id":"cicxfzt0u003rv0ziow4vxu95"},{"post_id":"cicxfzt0v003sv0zi283yfg03","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0w003uv0zir1bi6xk6"},{"post_id":"cicxfzt0w003vv0zieptq59h3","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt0y003yv0ziwgrld67d"},{"post_id":"cicxfzt0w003vv0zieptq59h3","tag_id":"cicxfzt0x003xv0ziiiighuov","_id":"cicxfzt0y003zv0zin177c5mh"},{"post_id":"cicxfzt0z0040v0zi6nrhktz4","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt100043v0zi8n26pxnm"},{"post_id":"cicxfzt0z0040v0zi6nrhktz4","tag_id":"cicxfzt100042v0zi1tyxcwtd","_id":"cicxfzt100044v0ziwschkbnr"},{"post_id":"cicxfzt120045v0zilxfgvy1z","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt130048v0zinngaehfh"},{"post_id":"cicxfzt120045v0zilxfgvy1z","tag_id":"cicxfzt130047v0zi39v9r93c","_id":"cicxfzt130049v0zijiv1qe4l"},{"post_id":"cicxfzt15004av0ziz5gqlnzw","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt16004ev0ziv299mxda"},{"post_id":"cicxfzt15004av0ziz5gqlnzw","tag_id":"cicxfzt16004cv0zijepoassp","_id":"cicxfzt17004fv0zi6b5v4ct5"},{"post_id":"cicxfzt15004av0ziz5gqlnzw","tag_id":"cicxfzt16004dv0zio5pv1pmp","_id":"cicxfzt17004gv0zimtsmuler"},{"post_id":"cicxfzt18004hv0zir5ut53d4","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt18004jv0zi62xft561"},{"post_id":"cicxfzt18004hv0zir5ut53d4","tag_id":"cicxfzszc0012v0zimje2fod3","_id":"cicxfzt18004kv0zi0n0jhxab"},{"post_id":"cicxfzt19004lv0zi5ec68g5i","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt1a004nv0zi44nfe737"},{"post_id":"cicxfzt1b004ov0zipeis9esf","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt1c004qv0zibndb0td6"},{"post_id":"cicxfzt1b004ov0zipeis9esf","tag_id":"cicxfzt130047v0zi39v9r93c","_id":"cicxfzt1c004rv0zixn6nom7k"},{"post_id":"cicxfzt1d004sv0zipul29buk","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt1g004vv0zi1cw7fy0b"},{"post_id":"cicxfzt1d004sv0zipul29buk","tag_id":"cicxfzt1f004uv0zi9jdzfkqf","_id":"cicxfzt1g004wv0zirfybvo0m"},{"post_id":"cicxfzt1h004xv0zir1ymle0l","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt1i0050v0zisslx1wct"},{"post_id":"cicxfzt1h004xv0zir1ymle0l","tag_id":"cicxfzt1i004zv0ziotmkncgr","_id":"cicxfzt1i0051v0ziro2wn9ln"},{"post_id":"cicxfzt1w0052v0zivoyyelo7","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt210054v0zimrwiv7wu"},{"post_id":"cicxfzt1w0052v0zivoyyelo7","tag_id":"cicxfzszt001rv0zivbhlm367","_id":"cicxfzt210055v0zieju4x4s9"},{"post_id":"cicxfzt230056v0zityyb0qw3","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt240059v0zi4rjv2sgm"},{"post_id":"cicxfzt230056v0zityyb0qw3","tag_id":"cicxfzt240058v0ziusbmx3x8","_id":"cicxfzt24005av0ziezro2569"},{"post_id":"cicxfzt25005bv0zivliy2pgs","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt26005ev0zi1xr028ss"},{"post_id":"cicxfzt25005bv0zivliy2pgs","tag_id":"cicxfzt26005dv0ziyao4hw2f","_id":"cicxfzt26005fv0zi5ea67gco"},{"post_id":"cicxfzt27005gv0zizfu77knn","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt28005iv0ziaa6xs6p2"},{"post_id":"cicxfzt2c005jv0zis4urs3hr","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2d005lv0zir35lcrrd"},{"post_id":"cicxfzt2c005jv0zis4urs3hr","tag_id":"cicxfzt130047v0zi39v9r93c","_id":"cicxfzt2d005mv0zi7xgtkm7s"},{"post_id":"cicxfzt2e005nv0zi3kvyp3g8","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2f005pv0ziicekr6h0"},{"post_id":"cicxfzt2g005qv0ziet3sg52r","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2h005sv0zio075p7m7"},{"post_id":"cicxfzt2l005tv0zivzd0uk0n","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2m005vv0zimdvj9nrf"},{"post_id":"cicxfzt2p005wv0ziox88lqnc","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2p005yv0zicszjtwzg"},{"post_id":"cicxfzt2p005wv0ziox88lqnc","tag_id":"cicxfzt130047v0zi39v9r93c","_id":"cicxfzt2q005zv0zi0ybxpn5f"},{"post_id":"cicxfzt2r0060v0zinmjzuc9c","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2s0062v0zi6b7zyjah"},{"post_id":"cicxfzt2t0063v0zi0veezshs","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2u0065v0zi99e0vut0"},{"post_id":"cicxfzt2y0066v0zi1deq9dzk","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt2z0068v0ziecnl9x9n"},{"post_id":"cicxfzt3b0069v0ziqspevsn1","tag_id":"cicxfzsz6000pv0zibjhtt046","_id":"cicxfzt3c006bv0ziwbxyp3r2"},{"post_id":"cicxfzt3e006cv0zi3e70wo94","tag_id":"cicxfzsz6000pv0zibjhtt046","_id":"cicxfzt3f006fv0ziq272z091"},{"post_id":"cicxfzt3e006cv0zi3e70wo94","tag_id":"cicxfzt3f006ev0zi6l47qvx5","_id":"cicxfzt3f006gv0zis3smaedo"},{"post_id":"cicxfzt3i006hv0zim5df1c4e","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt3i006jv0ziunlo4yne"},{"post_id":"cicxfzt3k006kv0zid5k7o1od","tag_id":"cicxfzsyz0006v0ziuwwvrgcz","_id":"cicxfzt3m006mv0ziono59p30"},{"post_id":"cicxfzt3k006kv0zid5k7o1od","tag_id":"cicxfzszc0012v0zimje2fod3","_id":"cicxfzt3m006nv0zillvq40bp"},{"post_id":"cicxfzt42006ov0zijakqr6lv","tag_id":"cicxfzsz3000fv0zij6xhgabb","_id":"cicxfzt43006qv0zim9ngrjcm"}],"Tag":[{"name":"Android","_id":"cicxfzsyz0006v0ziuwwvrgcz"},{"name":"XMPP","_id":"cicxfzsz00007v0zi4o3p0858"},{"name":"openfire","_id":"cicxfzsz10009v0zi5x0ftkgr"},{"name":"Life","_id":"cicxfzsz3000fv0zij6xhgabb"},{"name":"Shape","_id":"cicxfzsz5000kv0zijztfjtt2"},{"name":"Android Studio","_id":"cicxfzsz6000pv0zibjhtt046"},{"name":"github","_id":"cicxfzsza000xv0zi7xwtbqna"},{"name":"SQLite","_id":"cicxfzszc0012v0zimje2fod3"},{"name":"Video","_id":"cicxfzszl001iv0ziwseietgx"},{"name":"ListView","_id":"cicxfzszt001rv0zivbhlm367"},{"name":"Fragment","_id":"cicxfzszw001wv0zi8qzy3fdb"},{"name":"jarsigner","_id":"cicxfzszy0021v0ziyb4y5qtg"},{"name":"hexo","_id":"cicxfzt020029v0zi63cx78hy"},{"name":"git","_id":"cicxfzt08002lv0zir9i632qz"},{"name":"Permission","_id":"cicxfzt0f002wv0zia185nrse"},{"name":"jekyll","_id":"cicxfzt0i0035v0ziaheeo1vq"},{"name":"App","_id":"cicxfzt0t003ov0ziiiadclxw"},{"name":"TabLayout","_id":"cicxfzt0x003xv0ziiiighuov"},{"name":"Sqlite","_id":"cicxfzt100042v0zi1tyxcwtd"},{"name":"Canvas","_id":"cicxfzt130047v0zi39v9r93c"},{"name":"Actionbar","_id":"cicxfzt16004cv0zijepoassp"},{"name":"SearchView","_id":"cicxfzt16004dv0zio5pv1pmp"},{"name":"RecyclerView","_id":"cicxfzt1f004uv0zi9jdzfkqf"},{"name":"Palette","_id":"cicxfzt1i004zv0ziotmkncgr"},{"name":"LayoutParams","_id":"cicxfzt240058v0ziusbmx3x8"},{"name":"LayoutInflate","_id":"cicxfzt26005dv0ziyao4hw2f"},{"name":"Genymotion","_id":"cicxfzt3f006ev0zi6l47qvx5"}]}}