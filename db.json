{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","path":"assets/js/tranquilpeak.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/script.js","path":"assets/js/script.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/script-rt08quwts7iav5x0cfd2ym0gb5qkd1lvrsmwrakxtkhefmaaes4ywkmnjnwf.min.js","path":"assets/js/script-rt08quwts7iav5x0cfd2ym0gb5qkd1lvrsmwrakxtkhefmaaes4ywkmnjnwf.min.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","path":"assets/js/jquery.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","path":"assets/js/jquery.fancybox.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox-thumbs.js","path":"assets/js/jquery.fancybox-thumbs.js","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/favicon.ico","path":"assets/images/favicon.ico","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite@2x.png","path":"assets/images/fancybox_sprite@2x.png","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite.png","path":"assets/images/fancybox_sprite.png","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_overlay.png","path":"assets/images/fancybox_overlay.png","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading@2x.gif","path":"assets/images/fancybox_loading@2x.gif","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading.gif","path":"assets/images/fancybox_loading.gif","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","path":"assets/images/cover.jpg","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","path":"assets/images/cover-v1.2.0.jpg","modified":1},{"_id":"themes/tranquilpeak/source/assets/images/blank.gif","path":"assets/images/blank.gif","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff2","path":"assets/fonts/fontawesome-webfont.woff2","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff","path":"assets/fonts/fontawesome-webfont.woff","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.ttf","path":"assets/fonts/fontawesome-webfont.ttf","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.svg","path":"assets/fonts/fontawesome-webfont.svg","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.eot","path":"assets/fonts/fontawesome-webfont.eot","modified":1},{"_id":"themes/tranquilpeak/source/assets/fonts/FontAwesome.otf","path":"assets/fonts/FontAwesome.otf","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","path":"assets/css/tranquilpeak.css","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/style.css","path":"assets/css/style.css","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/style-yrst5vo1nxaxbp2g3v9na2wg1lixlpr3ghbjdvskeixmu79deycecx3rh4bt.min.css","path":"assets/css/style-yrst5vo1nxaxbp2g3v9na2wg1lixlpr3ghbjdvskeixmu79deycecx3rh4bt.min.css","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","path":"assets/css/jquery.fancybox.css","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox-thumbs.css","path":"assets/css/jquery.fancybox-thumbs.css","modified":1},{"_id":"themes/tranquilpeak/source/assets/css/font-awesome.css","path":"assets/css/font-awesome.css","modified":1}],"Cache":[{"_id":"source/CNAME","shasum":"60eae165881188b967de288d8d98b05420883e49","modified":1458175446333},{"_id":"source/_drafts/android-studio-hx.md","shasum":"40762d2776e49bfa7275965a225b4b2ed91d9439","modified":1458175446334},{"_id":"source/_drafts/finalApk.md","shasum":"ca7b9396eff769d98c6952e0983a516b889fbf28","modified":1467180294417},{"_id":"source/_drafts/toast.md","shasum":"1756fe1abe0a984d8e5fd26aa7f8df3dff74a18d","modified":1463733409334},{"_id":"source/_posts/2015key.md","shasum":"c18c02ff2dd1df9f8ddfa34f2946178032497861","modified":1458175446334},{"_id":"source/_posts/2016key.md","shasum":"32127093fecec981554a104b21f3559dc9e9dc37","modified":1458175446334},{"_id":"source/_posts/Activity.md","shasum":"ff4a42d212ce997958993c4063da0c56470467b8","modified":1458175446335},{"_id":"source/_posts/AdFund.md","shasum":"58d9b4e5dcd3482a0bbb98e081408101627ca368","modified":1458175446335},{"_id":"source/_posts/Android-Iconics.md","shasum":"374bb15c69d992dee9cb5c8c345503619b0dba84","modified":1458175446335},{"_id":"source/_posts/Android-Photograph-Album2.md","shasum":"ad2d327aa4698487fa87bebf041e0a515c0037cc","modified":1464944532660},{"_id":"source/_posts/Android-Photograph_Album.md","shasum":"13b4c591b9340c7459d93b7e00a5fd03330d8070","modified":1464944532660},{"_id":"source/_posts/Android-Studio-Genymotion.md","shasum":"a284a461874c7dfe9ef4caf82f38aabf9cb032ea","modified":1458175446336},{"_id":"source/_posts/Android-Studio-shortcut-keys-arranged-like-Eclipse.md","shasum":"bf5eb2f38d406acf8ed14cdf1d848960462243b1","modified":1458175446336},{"_id":"source/_posts/AndroidDeveloperSurvey.md","shasum":"86fa20c3456d760c44d8a77b4690e40944bc510b","modified":1458175446336},{"_id":"source/_posts/AndroidMVPSample.md","shasum":"d9a0c7b3b07730dbb16493695630227531f92a02","modified":1458624771948},{"_id":"source/_posts/AndroidSamples.md","shasum":"f4af1cabce94938f179fc4051294132f97a395f8","modified":1458175446337},{"_id":"source/_posts/AndroidStudioError.md","shasum":"2f94622567e40e39a945a29de9c5b237411ad03b","modified":1458175446337},{"_id":"source/_posts/Animator.md","shasum":"b4fef3902c3b0cf100c36325f2d1d9cbc884b69c","modified":1458624830677},{"_id":"source/_posts/AppInfo.md","shasum":"2deaeef50a08debcd4a6244e68cc71dd33f16341","modified":1458175446338},{"_id":"source/_posts/BroadcastReceiver.md","shasum":"7a71ab209dadbd1d863d3417c0a2938515d6a27a","modified":1458175446338},{"_id":"source/_posts/CanvasToPhoto.md","shasum":"e8cbe84d000a7577d205ad38b3586a9a30187b6b","modified":1458175446338},{"_id":"source/_posts/ChangeTheme.md","shasum":"940bf51e700c5f7fee282e9ce396b13ae68c8b5e","modified":1458175446338},{"_id":"source/_posts/CollapsingToolbarLayout.md","shasum":"00167d657d2709b0584b32334773b482ab2a0d0b","modified":1470379160069},{"_id":"source/_posts/Context-Activity.md","shasum":"28fcd1836c13275d1a619f18acbb4e3a7623831d","modified":1458175446339},{"_id":"source/_posts/CoordinatorLayout.md","shasum":"59414e4a72d900da983a9b3f07f7dc8731850b1f","modified":1470379160070},{"_id":"source/_posts/CreatingCustomViews.md","shasum":"94ac366632b81a3cde71c0835f7fe53d410b6a29","modified":1470379160071},{"_id":"source/_posts/CustomToast.md","shasum":"bc8b087e900918c17d07b7f61fd596d7df8beb61","modified":1458175446340},{"_id":"source/_posts/CustomView.md","shasum":"ae27e55326a13262de20b8a59b4c01dcde465463","modified":1470379160072},{"_id":"source/_posts/Defining_Custom_Animations.md","shasum":"f4586a9ca7e3e38cd2436297fe46a4ba40d7bbd9","modified":1458175446340},{"_id":"source/_posts/DesignSupportLibrary.md","shasum":"e1cac5bc43a207b4e0e99be214b55ff93298b3cb","modified":1458625455303},{"_id":"source/_posts/DragView.md","shasum":"174feed509a3596d596aa6ade8d7e7cab6b4a614","modified":1470379160073},{"_id":"source/_posts/Drawable-to-Bitmap.md","shasum":"f9a786f0a3a9a3fccc8bd8b177197b82189a6040","modified":1458175446341},{"_id":"source/_posts/Export-aborted-because-fatal-lint-errors-were-found.md","shasum":"9c1abc006b7135fa3abff7039de6934b55c50c09","modified":1458175446341},{"_id":"source/_posts/Font-Awesome.md","shasum":"90c6ebb6ad5be92731d3ad719398e5ee7404dd83","modified":1458175446341},{"_id":"source/_posts/GenymotionErrors.md","shasum":"5a484c47d657835790ef782fa86de49c4d710c74","modified":1458808330945},{"_id":"source/_posts/Intent.md","shasum":"8dfcc509bf178ce5f6f1d12ea02b7e435e3d2437","modified":1458175446342},{"_id":"source/_posts/LayoutInflater.md","shasum":"f1ed8bb6e700d43ebcc78405356df7e5eb9d6c91","modified":1458175446342},{"_id":"source/_posts/LayoutParams.md","shasum":"c7773bc605912b587541644f1bfc9902a9ba0e1a","modified":1458175446342},{"_id":"source/_posts/LinearGradientTextView.md","shasum":"f825f08c1e39e1c1d4dc8e9050e9ee5608ad3deb","modified":1458175446343},{"_id":"source/_posts/LoadMoreListView.md","shasum":"518fe93e12fb6a54097b9a4e300b749e1aa9c4b3","modified":1458175446343},{"_id":"source/_posts/MyCodeHobby.md","shasum":"724de4ac860aae0bc2b13a9f84e2d5e8bb47c160","modified":1460686969624},{"_id":"source/_posts/NavigationView.md","shasum":"41a103fe648a51488977e20680ec9e550d09fad3","modified":1470379160075},{"_id":"source/_posts/MotionEvent.md","shasum":"bef247d27d2a281e360560f21a8b0e753107c866","modified":1470379160074},{"_id":"source/_posts/PaintCanvas.md","shasum":"9f7bb90d677caee4764cee3d69ac2da5cb0bebd2","modified":1458175446344},{"_id":"source/_posts/Palette.md","shasum":"1b7d5134b5b66e9661a44960accf07c5841e7349","modified":1458175446345},{"_id":"source/_posts/PhotoView.md","shasum":"2782853c1b64c2db3f6a9f3e396bc543caaed282","modified":1458175446345},{"_id":"source/_posts/Picasso.md","shasum":"5e98b080597f3bfe6dc9d4869b0afde21cf0bf64","modified":1458175446345},{"_id":"source/_posts/PioneeringRoad.md","shasum":"65ebc5242f8ad63e73ba413c2e70c75d7cab10d4","modified":1458175446345},{"_id":"source/_posts/PreferenceUtils.md","shasum":"4317cdfdcfafc87dfa67d84bd0d5f14480b5ea0a","modified":1458175446346},{"_id":"source/_posts/RecyclerViewCardView.md","shasum":"2933c6affc914011a8d77262b10dc17472d4d3e7","modified":1458175446346},{"_id":"source/_posts/PullLoadMoreRecyclerView.md","shasum":"3faad0fc74fecae228740e657acedc45307ecfbf","modified":1458175446346},{"_id":"source/_posts/ResResources.md","shasum":"ab093861ceed4c0c2899074defa3b934f05bbd76","modified":1458175446346},{"_id":"source/_posts/RuntimePermission.md","shasum":"f2f2e6ea6f79bbcfa606b6fe8ea4b556c42e22d2","modified":1458175446347},{"_id":"source/_posts/SaveImageToGallery.md","shasum":"73eaf18b317c24017da478e3ae459e0991eb9a2c","modified":1458175446347},{"_id":"source/_posts/SavingFiles.md","shasum":"87e80088d3c847eaadf4142d2a5d42da2fce4a7a","modified":1458175446347},{"_id":"source/_posts/SearchView.md","shasum":"3e54ebc3b3bbdc6015969afa9d3f20cd341d7c2d","modified":1458175446348},{"_id":"source/_posts/SharePopupWindow.md","shasum":"103b590db9a43fb056cc4e42523dccfdb79b2bd0","modified":1458175446348},{"_id":"source/_posts/Split.md","shasum":"ca6f6a53569f59502292593bdbddcddec747ffb0","modified":1458175446348},{"_id":"source/_posts/SqliteSample.md","shasum":"3846ad7e129ab15d9be69796e55ed6514c1b6b21","modified":1458175446349},{"_id":"source/_posts/TabLayout.md","shasum":"02ce3b58f6db6c979a8b526f3888c9a4e29aabbd","modified":1470379160076},{"_id":"source/_posts/TheSecondResignation.md","shasum":"295dbe10eff10ba6f78fc4135ab7eb0dd6986896","modified":1458175446349},{"_id":"source/_posts/TimeUtil.md","shasum":"464f9d6747969ce6e2d8e0fd9ad68fcfc406865f","modified":1458175446349},{"_id":"source/_posts/TodayEmotion.md","shasum":"4429f748a449a0e86f93114aed38ea0bd6383c33","modified":1458175446350},{"_id":"source/_posts/ViewAnimation.md","shasum":"44b2813451e858707cf6bfa93b979d6871d48e5c","modified":1458175446350},{"_id":"source/_posts/ViewDragHelper.md","shasum":"ccfa27a44cba78f1208730055e55bcdb61fed3aa","modified":1458175446350},{"_id":"source/_posts/Volley.md","shasum":"140f340e3ee5813e570ffac335aa1ca959f79b8e","modified":1458175446351},{"_id":"source/_posts/WeWin.md","shasum":"5977454fff740962732dff3d9514d0067532d920","modified":1458175446351},{"_id":"source/_posts/addHeaderView.md","shasum":"fc708af465b008764237f9cb3a07ae27be61dc0b","modified":1458175446351},{"_id":"source/_posts/android-async-http.md","shasum":"a67d01d92128bd16577fc6b64e0352ae4a9e1502","modified":1458175446351},{"_id":"source/_posts/android-developers-should-keep-the-following-characteristics.md","shasum":"eb3d9a88e0994ee4aab729e2b237459094a98140","modified":1458175446352},{"_id":"source/_posts/android-samples-download.md","shasum":"2438d94b88a81cf90f70a45907ab1da183d37ee0","modified":1458175446352},{"_id":"source/_posts/android-small-knowledge-base.md","shasum":"5e05673805bd2aba6e16f42e461fe7315bcf2732","modified":1464944786309},{"_id":"source/_posts/android-studio-share-to-svn.md","shasum":"de515ba7b37c96b5099f025d8f011f451ce0f58a","modified":1458175446353},{"_id":"source/_posts/androidSdkStudioUpdate.md","shasum":"862d4bec5439eb7134d0951522e50604cc68181c","modified":1460431392339},{"_id":"source/_posts/androidwords.md","shasum":"1d62ee878653f7e76a7afcf0baa869b3ad7302b7","modified":1458175446353},{"_id":"source/_posts/appcompatDayNight.md","shasum":"45c0b7d18da80069fe0387ba1e15874874bf51e0","modified":1470379160077},{"_id":"source/_posts/boentang.md","shasum":"c881a95475099a08e89a567214515d235421a196","modified":1458175446353},{"_id":"source/_posts/build-blog-by-hexo.md","shasum":"c1d8c705955f7b57310735147a9308a781f65f46","modified":1470371974503},{"_id":"source/_posts/build-blog.md","shasum":"4f9f475d03098c19deb48b2197bb6d17ec6ff8f4","modified":1458175446354},{"_id":"source/_posts/change-sdk-path.md","shasum":"726fade2b533a9e9e060cc004bdadaa21c974598","modified":1458175446354},{"_id":"source/_posts/checkPermission.md","shasum":"c03e5b71d27c5fafcf145f999366bc3428649711","modified":1458175446354},{"_id":"source/_posts/company.md","shasum":"1d7ad767be776cd7cb61910dca617aaa3929433f","modified":1458175446355},{"_id":"source/_posts/contactIndex.md","shasum":"10c46816826854a5061eb36b1233b7c97eea3356","modified":1458175446355},{"_id":"source/_posts/custom-debug-keystore.md","shasum":"7e0914c2eda8d4768eea230de86812ae17df4efa","modified":1458175446355},{"_id":"source/_posts/dashishuo.md","shasum":"d355166f1b343abc473cec7bca1e3d4d7e637c6a","modified":1458175446355},{"_id":"source/_posts/eclipse-git.md","shasum":"2ea6b96dcfb2e1044f2b48cdac90d6542077a376","modified":1458175446356},{"_id":"source/_posts/fragmentMenu.md","shasum":"bbb5c39a18affec5d80bc5013ff4cbb72161fb81","modified":1458175446356},{"_id":"source/_posts/emulatorError.md","shasum":"1da2aa8f809ec474c8f47a54263adf257f1b28e3","modified":1458175446356},{"_id":"source/_posts/fragmentToolbar.md","shasum":"57dab320af832b66f80edeba68878f40fc196dae","modified":1458891242470},{"_id":"source/_posts/google.md","shasum":"f2b7e7a0d936dbcbf8b0c8beaccc73085b5d16c6","modified":1458175446357},{"_id":"source/_posts/goufangche.md","shasum":"3992c0727780148330a835ee60d9772ff16402f0","modified":1458175446357},{"_id":"source/_posts/gradle.md","shasum":"ba7c7ebdc66d4c93c24c58667d9a83257dea3b81","modified":1458175446357},{"_id":"source/_posts/gradle4android1.md","shasum":"500a27eedd162f762271ced173a88739fdf84574","modified":1461291579994},{"_id":"source/_posts/gradle4android2.md","shasum":"6a7123cc6eb63a62e913a3219ab39156e5c262ac","modified":1463731431085},{"_id":"source/_posts/gradle4android3.md","shasum":"10eefc3defec57b90d47c4a8499852a216dc1e9c","modified":1459473119978},{"_id":"source/_posts/hello-hexo.md","shasum":"86dd46bc17f4c9f0b7be3dc9447139b29b861dc9","modified":1458175446357},{"_id":"source/_posts/how-to-prevent-the-APK-program-by-decompile.md","shasum":"bbc6b82859ffffd74f5b75cdc6f0b7fc1c7d6cf8","modified":1458175446358},{"_id":"source/_posts/jarsigner.md","shasum":"57786fd0f680bc14b6eaa7a058512ac151656e29","modified":1458175446358},{"_id":"source/_posts/java-lang-IllegalStateException-Fragment-not-attached-to-Activity.md","shasum":"160ebf6958f0df63077cd0ff9ff972ae40716f3d","modified":1458175446358},{"_id":"source/_posts/jcenter.md","shasum":"c1e8076d646215a810e282d6d82f7c4b6a41ebb2","modified":1462505389640},{"_id":"source/_posts/jcenter2.md","shasum":"708ce840d643bb6d09fffc40552cb9439d5d6ded","modified":1462506647572},{"_id":"source/_posts/lambda4android.md","shasum":"0d389a269533dad60876859951b232e5a3b881cf","modified":1458704237339},{"_id":"source/_posts/listView.md","shasum":"5558db72647f78f20a3ae81c030089c5d5edd7c9","modified":1458175446359},{"_id":"source/_posts/listView_item_state.md","shasum":"1f38f592d89b56c896c8d7585c374537ba4d1aeb","modified":1462505458759},{"_id":"source/_posts/lock-screen-video.md","shasum":"a38c6fbe8194298e2d913c21491a808844451d3d","modified":1458175446359},{"_id":"source/_posts/methods-SQLite-were-randomly-selected-for-the-N.md","shasum":"4c89be7cc884bf85cd7ec29888f238d8dabcf9dc","modified":1458175446359},{"_id":"source/_posts/mobile-phone-information-acquisition.md","shasum":"9140889530acc094f629656effd98ad433aa1089","modified":1458175446360},{"_id":"source/_posts/mobile.md","shasum":"06e19e6e7d5a000857369324c886a2090e87086a","modified":1458175446360},{"_id":"source/_posts/mvpRetrofitRxjava.md","shasum":"bb972b017ed9af0fc71b4c7d28873a16b059e76c","modified":1466414273858},{"_id":"source/_posts/myHappyWay.md","shasum":"b03e494bf5e2f404b1bb0973fbc991e8702d7d17","modified":1470379160077},{"_id":"source/_posts/ninety-nine-life-sentiment.md","shasum":"1261bbe971d1990f5f462ed33382ccca164a3e51","modified":1458175446361},{"_id":"source/_posts/phone_space.md","shasum":"2dfd4e4aa4b886b137a7152905b4094c8e5abfbd","modified":1458175446361},{"_id":"source/_posts/processes-and-threads.md","shasum":"e4f4211ebf71b2ad087746fbd0040b3d804d1ce4","modified":1458175446361},{"_id":"source/_posts/qiniu-photo-bed.md","shasum":"dfb778dc5ecaf121c11da4bb2b30fcbf47bcdc41","modified":1458175446361},{"_id":"source/_posts/qinziyouwan.md","shasum":"97504aed8f063f1165ab456059dd6fcfc5cab147","modified":1458175446362},{"_id":"source/_posts/retrofit.md","shasum":"bde93b5c03cbf8417620afe915d970189a5f7ce2","modified":1458890510378},{"_id":"source/_posts/retrofits.md","shasum":"e9cd02c0c7222508ceeed0285813709a036ad72a","modified":1465954499774},{"_id":"source/_posts/rxbus.md","shasum":"9872654cf307b62f5757f54152cf02ee1517aee8","modified":1466389363599},{"_id":"source/_posts/rxjava.md","shasum":"2285e9dd29ab6389afbed950873b86164d51ce51","modified":1458703254337},{"_id":"source/_posts/screen-adaptation.md","shasum":"2131b52352d42caa4947e53e0ea7f182b587cb1c","modified":1458175446362},{"_id":"source/_posts/sdk-update.md","shasum":"2450a0493492b3b5b6f9c6b35ebe2b0ccb051993","modified":1458175446363},{"_id":"source/_posts/service.md","shasum":"3375725c78af58e4a63591c51420c9d3be2704e2","modified":1458175446363},{"_id":"source/_posts/shape.md","shasum":"e3b95cbce26b2d0b10b8d50bb377fa042f19dd1d","modified":1458175446364},{"_id":"source/_posts/shengmingzhiyuan.md","shasum":"33663afef906bcf574cd6ebd7cb01a796ef22d0c","modified":1458175446364},{"_id":"source/_posts/toolbar.md","shasum":"42965fb9f23da69a501645dd0f8fdd5544e5cc40","modified":1461641441255},{"_id":"source/_posts/uCrop.md","shasum":"19342eea356311a34639f6338dfa511220977ea2","modified":1466736177056},{"_id":"source/_posts/weilian.md","shasum":"e2afa3d4c72afc32162b7b84d147922d1998793c","modified":1458175446364},{"_id":"source/_posts/weiyan.md","shasum":"e2ec948768b2d4e255d373a1b910b6467c26f87c","modified":1458175446365},{"_id":"source/_posts/wochat.md","shasum":"61ba8e669677c5dceec03dfaeb673ba48ffb5d23","modified":1458175446365},{"_id":"source/_posts/xmpp1.md","shasum":"cb120376b118e620e03e2237953b2d2610b5c9c3","modified":1458175446365},{"_id":"source/_posts/xmpp2.md","shasum":"873bbefb90c2c0c476db45394de01e4263a93344","modified":1458175446365},{"_id":"source/_posts/xmpp3.md","shasum":"a9c137ee40c0ef704b16b6d8f1139611991c8133","modified":1458175446366},{"_id":"source/_posts/zhuangbi.md","shasum":"6ac7a87a3385f9e68d8dc3d3b79f7ece2c92860c","modified":1459903180216},{"_id":"source/_posts/zxing.md","shasum":"891e300c7bc46c15584144ab98760ff7ea3f4719","modified":1461221735868},{"_id":"source/about/index.md","shasum":"beeb5a8f3d60678e89264151c824ca04a1593050","modified":1470379160078},{"_id":"source/all-archives/index.md","shasum":"b9f96aa410754a59ef868fb7f93d069bd8ffbe69","modified":1470367424494},{"_id":"source/all-categories/index.md","shasum":"48c061877e9fd1344922cda0688ebf492235614e","modified":1470367280961},{"_id":"source/all-tags/index.md","shasum":"234572f4b2efe39f80301f237db334249c90eecd","modified":1470367374925},{"_id":"source/categories/index.md","shasum":"499cf30f1d2ef9de8001a8d51730215fa4e48699","modified":1458175446366},{"_id":"source/favicon.ico","shasum":"004d513dd38ee41400290acadc298e879ff45f6e","modified":1458175446367},{"_id":"source/friendslinks/index.md","shasum":"5aa14765449cc18833c33c61075b71660c90a6a2","modified":1467343154589},{"_id":"source/qq/index.md","shasum":"c877f1fc6079a3709e6fe60e13a246ad99b98c9f","modified":1458175446368},{"_id":"source/tags/index.md","shasum":"18eed98b1ab27bf0f7306bb08ecbbef2be9cbff4","modified":1458175446368},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/acorn_loose.js","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/modules/ignore.txt","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441966648000},{"_id":"themes/tranquilpeak/Gruntfile.js","shasum":"b2b078651cf8c5dcde2e847169ce242ad3319ca3","modified":1468554328000},{"_id":"themes/tranquilpeak/LICENSE","shasum":"7a3b30ddb56760b35a6b7cd210aeb271cd292b60","modified":1468554328000},{"_id":"themes/tranquilpeak/README.md","shasum":"761ca7e21c14b94a1da979cf425d4543361eb4ee","modified":1469980336000},{"_id":"themes/tranquilpeak/_config.yml","shasum":"61a822ed1f8c84ceaa402f6ea17302514d588a12","modified":1470379566335},{"_id":"themes/tranquilpeak/bower.json","shasum":"c388c02af8dd50e981c259f8fd45d678c800c4e0","modified":1469980342000},{"_id":"themes/tranquilpeak/docs/developer.md","shasum":"484551811ae12c72a5b6d1f7552125a76e280fb7","modified":1469980360000},{"_id":"themes/tranquilpeak/docs/user.md","shasum":"bad67e584cd2a0f1ed86c7ad020a47cb194cf919","modified":1469980356000},{"_id":"themes/tranquilpeak/languages/en.yml","shasum":"cc16e0f638a97013df74b7fa9d4e99d3a8693352","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/es.yml","shasum":"024b71430c8df1377de0128e8dbf0a7dcd88e906","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/fr-FR.yml","shasum":"b68be8ca6e8dac2304be173e91ed18af0e2d9f87","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/ja.yml","shasum":"dc6969ee508efdd408f0ad7d765029787796f7ee","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/ru.yml","shasum":"f503bb8cb07d5b227202ef9475e7d209880c7771","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/pt-br.yml","shasum":"4e90a7b0fc3e74a48c9996382ce21b04bc3937cd","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/zh-cn.yml","shasum":"a0ee166907f5ba2a1c45f1b436b27ae3ba07fdcf","modified":1469980250000},{"_id":"themes/tranquilpeak/languages/zh-tw.yml","shasum":"c1a73bf4f2731296d8ead0f865107ef5b1476ea9","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/_partial/about.ejs","shasum":"3e16c7ab5d2036576e92b618f735aca24b820a43","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/_partial/archive-post.ejs","shasum":"024a503be84a6ed184eee600dfcffa5deeaaca5b","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/archive.ejs","shasum":"bdd73d1f70bd91533863943f940f8193d44e0fdd","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/baidu-analytics.ejs","shasum":"736eca2ecf6fdeea032d47c02c51688f006cafb4","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/cover.ejs","shasum":"18b9a620fca9b648fd59467a66b3f4fdbba42613","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/google-analytics.ejs","shasum":"32b08ea4fed728a0dc403bbd0311d13570c25cf5","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/footer.ejs","shasum":"67962257d9e3cb6a4d56e3f0263f192ba9a413dd","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/head.ejs","shasum":"2854ffb51ac101fa0e5591f316f59451b0776098","modified":1469980408000},{"_id":"themes/tranquilpeak/layout/_partial/index.ejs","shasum":"004f3b9b272c024cc8f02e99a3a2cc95ed1af876","modified":1469877350000},{"_id":"themes/tranquilpeak/layout/_partial/pagination.ejs","shasum":"5386a784764731f9b36de5bef97b70179bad5095","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/category.ejs","shasum":"d4b26aa8c66aa8dbfae7a4aafed874745efb2f8e","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/actions.ejs","shasum":"597a4a875a5502db88a5bb18285ce178c3e849f1","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/disqus.ejs","shasum":"9e0d238ed918e3138d5a9bb23a90408669e19169","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/duoshuo.ejs","shasum":"992368f8863f34d1dccf90c0cabc33d5dcdbe92a","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/gallery.ejs","shasum":"730ecd0fb021ac48beb2fe6ff4a4fd29b30b5a48","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/header.ejs","shasum":"9439c8d94771744303174475706137ceac69e3c4","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/_partial/post/header-cover.ejs","shasum":"4d3a73d0c6f26769f778d02a559e5055ef1ee0ca","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/header.ejs","shasum":"7b69fe5ecba7acb584b603d6bbda00b090b4f99f","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/meta.ejs","shasum":"709aeec54313eae49c335714e39c2849952a56db","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post/share-options.ejs","shasum":"e5ac6e327bc205fa1ca09d2c3e415e0e96819bb4","modified":1470380444729},{"_id":"themes/tranquilpeak/layout/_partial/post/tag.ejs","shasum":"2a52f38fa359f8ec8ae776e44e92c48795e31272","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/post.ejs","shasum":"a280b2660101e15e2ec8aff222d3a39cb8bf4389","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/_partial/script.ejs","shasum":"f1bfb0a9fa77adf981fd522acd83fd6238256f99","modified":1469980408000},{"_id":"themes/tranquilpeak/layout/_partial/search.ejs","shasum":"6fe94449318b009f7d16d166d375b5a533850d0d","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/_partial/sidebar.ejs","shasum":"13429124f5be2dfa811d2cfc6e76f5b12e6b0f84","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/all-archives.ejs","shasum":"74b03a0a995f0b315fc92fc364a03e169d3b8066","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/all-categories.ejs","shasum":"cdc327fd317819aaf6198c577c52f1821f2ee283","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/all-tags.ejs","shasum":"261d3b2974091d726d023277c853b2b4e5a24cfe","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/archive.ejs","shasum":"0df1edf4ed40b316715ef1949b09aa9c98d22359","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/category.ejs","shasum":"67902c418e299399133fe2a7ebc39cadd17de861","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/layout.ejs","shasum":"84d8f23e44c45cc13bd0ec44f41fea6c9fd146da","modified":1469980250000},{"_id":"themes/tranquilpeak/layout/index.ejs","shasum":"36e89b37f520533bef85fb32b714214257fad1d0","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/page.ejs","shasum":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1468554328000},{"_id":"themes/tranquilpeak/layout/post.ejs","shasum":"ae761feddc98f4d3260e7591ed9fc91d9a49d0ab","modified":1468554328000},{"_id":"themes/tranquilpeak/node_modules/abab/CHANGELOG.md","shasum":"f4ba102ca38b51868f5af07cd93dd26ba1f24962","modified":1452536546000},{"_id":"themes/tranquilpeak/layout/tag.ejs","shasum":"72bff1ae241fbe2ddca0537e8ed77c791a7d1766","modified":1468554328000},{"_id":"themes/tranquilpeak/node_modules/abab/README.md","shasum":"3dd81380844ea60d27d89589d648df685f411f4e","modified":1451480508000},{"_id":"themes/tranquilpeak/node_modules/abab/index.js","shasum":"3e14bbc1d5a0d7f5d81b65ee4e368027c63ba8ad","modified":1451480202000},{"_id":"themes/tranquilpeak/node_modules/abab/lib/atob.js","shasum":"109fab4513b54f8893a6f22e843c12791ce98968","modified":1444052958000},{"_id":"themes/tranquilpeak/node_modules/abab/lib/btoa.js","shasum":"11acd3ce99cd56feddba76e097165608168e6b2d","modified":1452536298000},{"_id":"themes/tranquilpeak/node_modules/abab/package.json","shasum":"8a5b68363e14b6d7bed1867a99ce6ddc7d057032","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/acorn/AUTHORS","shasum":"69f89267b1aee3a0f60c6282f24dc81ca24048a7","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/LICENSE","shasum":"8c20bc370f498b8aa6b4a3c3f747ed808200497e","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/README.md","shasum":"26bdf02bda9fdf2795c13034ee6bde2a37c6098e","modified":1449478116000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/acorn","shasum":"1ff2144e3637292253ec823504712fcd9f0bb40e","modified":1451878274000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/build-acorn.js","shasum":"ade20464941db1d8b18325aaa1784c4bade6d197","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/generate-identifier-regex.js","shasum":"99f17c26bd4d1cc1913820d939b91d8ed3fcf9c7","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/bin/update_authors.sh","shasum":"c2f1703783cc9bb9dc9a6de7abda2e1398b05158","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn_loose.js","shasum":"6c6df5230b93b9721ac0ea47f4d34ba7ec1f5dea","modified":1451878278000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/walk.js","shasum":"5ea11ea9f48af4879d8b04c4b8b3641f351b1aeb","modified":1451878274000},{"_id":"themes/tranquilpeak/node_modules/acorn/package.json","shasum":"e3b4abac44cb7d8c2046f17eeb5d88d474aa5aaa","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/identifier.js","shasum":"905391ff20a8d37cac5fcb7fb449ce2ef89e1cd2","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/bin/acorn.js","shasum":"478c3e3299f5e0080fa298e43ce6b0c0737f7f84","modified":1449111274000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/expression.js","shasum":"4ee00ffbc6541da356e93e7e17ab66b5dc308429","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/location.js","shasum":"126a576335df1fd671a197be954f642f56681e8f","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/index.js","shasum":"20a50d8aa04c64f63f1b4a8b55df45673847d9be","modified":1451878250000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/locutil.js","shasum":"5af635eb913b99e028a83b11e0ecc90caf1697d2","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/expression.js","shasum":"245e606fea55f398dafedc583a188a92a62b096d","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/index.js","shasum":"9ce9703b62ad6ae6937225e1d0addf7816316591","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/parseutil.js","shasum":"a6de5494b5f08813b6ef1578c0ac0707cbc8fe16","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/state.js","shasum":"6f9b5dd845310820a8f159c1493cd124552cc921","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/statement.js","shasum":"bf057a426fa081854884dc3398faa7e32fd7d4cc","modified":1449495010000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/loose/tokenize.js","shasum":"0abfc77d276a43216a77e090c29ed5a6920e04cc","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/lval.js","shasum":"60268ba4127b758601fcd17d00bec93208725027","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/node.js","shasum":"412c4d8f2aa070cd978a4f99c15324c6e6954df2","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/options.js","shasum":"0bdbe471973eab37daa3d0224900481611ef2680","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/parseutil.js","shasum":"2f77dbb7bcc7e19a545729932f691496895f14b2","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/tokencontext.js","shasum":"da15fcc346628f1674d0c3750ddabb9fdcf9611d","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/statement.js","shasum":"4313a7298633f8334b900299c5742a2004a1ccad","modified":1451877846000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/tokenize.js","shasum":"9584675253afe3095222ea5d163ae331fec85ee4","modified":1451878050000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/tokentype.js","shasum":"73326ea73d3f8c10327440cd0651dd680ca328e3","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/state.js","shasum":"9cdab704037930c89be804de9cc52adff9fb0d69","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/util.js","shasum":"5469fade9cbe53b7e044d20c5806c8ff190017a6","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/walk/index.js","shasum":"2767b6900896d3be1df9f603c3da41fef9ac680f","modified":1449111222000},{"_id":"themes/tranquilpeak/node_modules/acorn/src/whitespace.js","shasum":"56f58e06afe0dedfac798c45d48a0ba16fc4c5d6","modified":1448266394000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/LICENSE","shasum":"c10025d9f88d74d08d60f8e092ac3e038ce180c4","modified":1428327756000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/README.md","shasum":"db9e6a11b0a15a15244286a11cf99d0e71747030","modified":1441540958000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/index.js","shasum":"4eff2a5906666b33d247519b7d1b7bbd52ce9217","modified":1446445400000},{"_id":"themes/tranquilpeak/node_modules/acorn-globals/package.json","shasum":"90c58836b9a60420b3deaf48bdc53b51897112eb","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/amdefine/LICENSE","shasum":"251e0955d44f1b04e601affdcdf4b7d932d12078","modified":1436551284000},{"_id":"themes/tranquilpeak/node_modules/amdefine/README.md","shasum":"fbdf2971012978e1f4f85adda4a9ec996f99f98a","modified":1381791244000},{"_id":"themes/tranquilpeak/node_modules/amdefine/intercept.js","shasum":"7c6b54f49a2ebe4648a9a9fb653bb47fbba0b2c2","modified":1381783232000},{"_id":"themes/tranquilpeak/node_modules/amdefine/amdefine.js","shasum":"b4b7c5b02bad41a868e81139e663ade46556a713","modified":1436551252000},{"_id":"themes/tranquilpeak/node_modules/amdefine/package.json","shasum":"752fccdc71c36c0ff0a870248df4f7ff1b90c478","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ansi-regex/index.js","shasum":"03d6a4cc534cbb9a855b01b372a17bfa2b830442","modified":1435658268000},{"_id":"themes/tranquilpeak/node_modules/ansi-regex/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/ansi-regex/package.json","shasum":"b821faaa53c3c95d4ae718c71b6847874cc24518","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ansi-regex/readme.md","shasum":"76c119f1cf0605a0409f9c2756de3e55a1398fc2","modified":1435658316000},{"_id":"themes/tranquilpeak/node_modules/ansi-styles/index.js","shasum":"7e89eee4c6711e897597268d129348b685cc6548","modified":1459175540000},{"_id":"themes/tranquilpeak/node_modules/ansi-styles/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/ansi-styles/package.json","shasum":"ec1fcd4e263d6c73bd981f81dc9f14669c74ba6b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ansi-styles/readme.md","shasum":"b12348b9ea14a18112719b1aad4cdf7e52f4b35f","modified":1459175540000},{"_id":"themes/tranquilpeak/node_modules/argparse/CHANGELOG.md","shasum":"d2a6a67fcfd6af60aeca7504d39df4b49da81a29","modified":1458201286000},{"_id":"themes/tranquilpeak/node_modules/argparse/LICENSE","shasum":"dbbafd9d668fb6b582e4b4e3c5f3e893a353f5ef","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/README.md","shasum":"3ed542c463a3283aa9ddcf54a6e339cd5fc0cf96","modified":1458200974000},{"_id":"themes/tranquilpeak/node_modules/argparse/index.js","shasum":"a1498d012d4a7db85555a18606487d4a7ec379d0","modified":1452992208000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/append/constant.js","shasum":"81c1abd5bae67b59b7e881036cdb63b5e3634113","modified":1454724436000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/append.js","shasum":"65faa0e421d708696f307bbdef47c0a32c90c587","modified":1454650934000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/count.js","shasum":"dcfbf45e6885e5bed742d231a14f8559ef353d33","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/help.js","shasum":"341e8d059f186227dc437baf3e122215714d545b","modified":1454724454000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/store/constant.js","shasum":"7ce2e16789498e50b65363d0d8fc4efc898c54cd","modified":1454724486000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/store/false.js","shasum":"69eba4ce33b3a5b01def86bb7f8bc6e8064b5026","modified":1454720738000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/store/true.js","shasum":"ea0ee5f7c71884164b79c348cfa460e778757edd","modified":1454720738000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/store.js","shasum":"4c8db63d16506bd8c2fe5cabb47e984436e6df49","modified":1454724472000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/subparsers.js","shasum":"b44469c5f513138f10e077a29b0aa721248b0da9","modified":1454724662000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action/version.js","shasum":"266cc320868c85e5ccd008f0c56b51c58b8b3565","modified":1454724682000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action.js","shasum":"4576e8f1a71dc241fb42b65563356d7eef79c46f","modified":1454724404000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/action_container.js","shasum":"0f4c32b1655dc281ad1ac356a75396ae0c68c9a7","modified":1458200974000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/argparse.js","shasum":"8c53af72750678f55eaabc57d5e26056081514fe","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/argument/error.js","shasum":"ebbd30aee8c24eca5643fa73dbf0963244d3bdb7","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/argument/exclusive.js","shasum":"c38a1586d7e145698239ccfd20c1645858d8ca6f","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/argument/group.js","shasum":"ea26a609a1b4f0308b672c507880495689629ebd","modified":1424126150000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/argument_parser.js","shasum":"66c0d157e91745f6f2f2496712bc89272d522a3c","modified":1454725622000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/const.js","shasum":"77bdd566a871b894895aae626a4a5baada8b8001","modified":1452992208000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/help/added_formatters.js","shasum":"4ba377a334b9150778bfa128f090113ab69521c2","modified":1454723550000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/help/formatter.js","shasum":"2a5e4ee7a3cf0746dbbd90aafeae3d3a9b258345","modified":1454726616000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/namespace.js","shasum":"bafd49e54122c7da05f0458457878bda7018c937","modified":1454722646000},{"_id":"themes/tranquilpeak/node_modules/argparse/lib/utils.js","shasum":"a5b7106ce25ba7feed190fd1a2474b0ec3421ffe","modified":1454651416000},{"_id":"themes/tranquilpeak/node_modules/argparse/package.json","shasum":"009bc68bb5f0b33f68bfb32d0b3077284b8f7b44","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/array-equal/LICENSE","shasum":"b559c45c8d07f2679620d9771e68696ee3d5964b","modified":1398741328000},{"_id":"themes/tranquilpeak/node_modules/array-equal/README.md","shasum":"a0dc601039e6014ad76404c61de273592a013705","modified":1398741416000},{"_id":"themes/tranquilpeak/node_modules/array-equal/component.json","shasum":"8550fcbb9ff1c9dab0c0851f2e1385154c706078","modified":1398741368000},{"_id":"themes/tranquilpeak/node_modules/array-equal/index.js","shasum":"8ff8d3fe9c77d8ddac6d2b6f6380bf38585515bb","modified":1398741302000},{"_id":"themes/tranquilpeak/node_modules/array-equal/package.json","shasum":"9dc07868ea4fbd50dc180b211d37c652654a5da3","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/asn1/LICENSE","shasum":"724e48cfc739674999ff82b4e49d76d5376818e9","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/README.md","shasum":"71e6a47944ebaefe5d5357a7b6f46df9c389316f","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/errors.js","shasum":"556bbb1b810ede9292493a70ad9a8644e5c4fb7a","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/index.js","shasum":"1ab39535ed24903d0f9e2a4bf74333702842080b","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/reader.js","shasum":"3cfcdc9225bb43dd8413dc3f1f05d4fcd32d0b30","modified":1443624516000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/types.js","shasum":"8a41886747dc1f7cde7e4e5cb60e1a3b8a4c813c","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/ber/writer.js","shasum":"bdad4a0bb12fb5f91b789329fc4e4a45ecf87e64","modified":1443624516000},{"_id":"themes/tranquilpeak/node_modules/asn1/lib/index.js","shasum":"cbff145d47fb41eb1262f012a7024e7b0e527d6c","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/package.json","shasum":"1055a3de15e6ec3bd41c412d992f0311f4c7ed26","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/asn1/tst/ber/reader.test.js","shasum":"de84b2d7317393c6e6a0cdef04bfbff82ba78237","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/asn1/tst/ber/writer.test.js","shasum":"59892680384339812688163b346d12cc05e979fd","modified":1401959620000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/AUTHORS","shasum":"d1d14de8fc8c21f9f86c2231df2531381f6a9194","modified":1446927776000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/CHANGES.md","shasum":"b64b8d16f3858a1c3d55538c5bfee934437af75b","modified":1447116460000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/README.md","shasum":"79988e7cb3bb80b7cc20dc420ee2a7f86ab3d3e0","modified":1446927776000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/assert.js","shasum":"8f3f85bae8edd30db24882766a5c8c4df8357462","modified":1447115468000},{"_id":"themes/tranquilpeak/node_modules/assert-plus/package.json","shasum":"23d5c1ba3a9f6ed262b79edee4081f13744ce6fe","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/async/CHANGELOG.md","shasum":"f6dbdbec1d4babb8661eae69a9d35700ca89bfb1","modified":1452186210000},{"_id":"themes/tranquilpeak/node_modules/async/LICENSE","shasum":"e452de6c5360ba269a3bda17cca33f0bf51035f5","modified":1432047808000},{"_id":"themes/tranquilpeak/node_modules/async/README.md","shasum":"1e5c0380861222c007090d0c0a1d8ca4f5272dc5","modified":1452183488000},{"_id":"themes/tranquilpeak/node_modules/async/dist/async.js","shasum":"a410bed1e8c6a19be68101c293ff66c4961076ae","modified":1452186252000},{"_id":"themes/tranquilpeak/node_modules/async/dist/async.min.js","shasum":"487f1a1adb0bf6b00233edb64e64f2fb305ce5a3","modified":1452186252000},{"_id":"themes/tranquilpeak/node_modules/async/lib/async.js","shasum":"a410bed1e8c6a19be68101c293ff66c4961076ae","modified":1452182356000},{"_id":"themes/tranquilpeak/node_modules/async/package.json","shasum":"c0fbb41ff436fcd8cc7c0ed131c0807add62f25a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/LICENSE","shasum":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1366586020000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/README.md","shasum":"5e8e0e7c811b1f319c0e94ff08f38ecf4896e3c9","modified":1366586020000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/index.js","shasum":"b380be041c204108febb8f32b19431a54aaed4a6","modified":1444562632000},{"_id":"themes/tranquilpeak/node_modules/aws-sign2/package.json","shasum":"fe346a038f2125a3c3f3c651dcfec8e8e8409daf","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/aws4/LICENSE","shasum":"9ba903f14c37d0ab0250a8e6920e7269bdc5b294","modified":1384206984000},{"_id":"themes/tranquilpeak/node_modules/aws4/README.md","shasum":"715985b16620684a70441f3a86746f2c03cc717d","modified":1456846010000},{"_id":"themes/tranquilpeak/node_modules/aws4/aws4.js","shasum":"688b405e13e60ba7add727f82c1ee71cf7c18de8","modified":1462543272000},{"_id":"themes/tranquilpeak/node_modules/aws4/lru.js","shasum":"015965230b90e69906f66fca1792c4557336336f","modified":1462621552000},{"_id":"themes/tranquilpeak/node_modules/aws4/package.json","shasum":"2df54c09816c26cad23fa9073d3feb95df2e9c99","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/balanced-match/LICENSE.md","shasum":"09013c002fbdd686da2ec13c5a6d014f0a294ba9","modified":1468812698000},{"_id":"themes/tranquilpeak/node_modules/balanced-match/README.md","shasum":"1386baac658274264e12701b085143357d817bb1","modified":1468812864000},{"_id":"themes/tranquilpeak/node_modules/balanced-match/index.js","shasum":"d21b9b828ab5ebb248d8973602f036f1ab301fcf","modified":1468812750000},{"_id":"themes/tranquilpeak/node_modules/balanced-match/package.json","shasum":"41fc87dc4d1ac6441b825b0edf58e8b5b7e277d0","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/bl/LICENSE.md","shasum":"d068ae801f9277b4b248f0c2aad7f50181dacaad","modified":1410292074000},{"_id":"themes/tranquilpeak/node_modules/bl/README.md","shasum":"df67850ad3963a7ba6409a14e22d3727a63b7839","modified":1455220938000},{"_id":"themes/tranquilpeak/node_modules/bl/bl.js","shasum":"2969db3736e9ec3869daed5cbd16ec8e329987c1","modified":1455221378000},{"_id":"themes/tranquilpeak/node_modules/bl/package.json","shasum":"a7332a5c0a6331c63928e1b7d28d49965a5774ed","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/bl/test/test.js","shasum":"078dd45753c62f6411ab48fe217959731b0e40dd","modified":1455220938000},{"_id":"themes/tranquilpeak/node_modules/bluebird/LICENSE","shasum":"914158dfad0452ceb55ea5e1822605ca05984bd9","modified":1455291000000},{"_id":"themes/tranquilpeak/node_modules/bluebird/README.md","shasum":"c61dc638bacfcdcd29172fff3c5d5c1f21431805","modified":1456412188000},{"_id":"themes/tranquilpeak/node_modules/bluebird/changelog.md","shasum":"bc6df7caea3b83fa361fa0a96c9b34c09465a93a","modified":1455291000000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/any.js","shasum":"424dfe2a1afeaad729ca2be5ccfd443311716c41","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/assert.js","shasum":"da909f13035601fbcdc3a28937dd44e3008327ee","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/async.js","shasum":"a3c430aa989a1d0050eba133b0e4bbcec9993014","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/bind.js","shasum":"6ba64f83e985a1cb7dcf945490e4c280460ccb25","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.core.min.js","shasum":"f3aea602566ccd507f16effe2e0f8d3575e19782","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/bluebird.js","shasum":"f68f4e491f49be5a5a3c5d04fafcd8abaf02fc2a","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/call_get.js","shasum":"b53dcc39da361dbc72a49ced90d5290d94c70b80","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/cancel.js","shasum":"307b92b9575bc60d4f2c809b39690384cc324fa8","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/catch_filter.js","shasum":"cbdedec0db19fe2af76d5594ed8bf819000d7c79","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/context.js","shasum":"ea7eb1ab2c8231fa6bfa8446cf730736735396e0","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/debuggability.js","shasum":"29c910fff5e5592d66878f510817a8128a9c0334","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/direct_resolve.js","shasum":"470ca4d9a7e387ceceb383bc2640202f5fa6bda2","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/each.js","shasum":"5118806b7208aa64317717392af157db042293c1","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/errors.js","shasum":"98deaaee17f36851937108257e028a7e237b3f5e","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/es5.js","shasum":"019c4e8b62031ea49aedc86dedd20318c6122698","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/filter.js","shasum":"a5f3aee4afbc67d372e5b4fbaeac047d0d9c779b","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/finally.js","shasum":"4b0cea33e6afb07456cd370ce0e9519314ff0c88","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/generators.js","shasum":"8f6a3f144a2f38297df9f87eb8405254f658f3f9","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/join.js","shasum":"669e0cb20fbd709fad37ccd05c5d68594135113c","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/map.js","shasum":"e29b13be7a9464a7b847b4cf72293bdc877921e1","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/method.js","shasum":"02a5a493c2cf2045fbb20b2751381e4b4e29dbe8","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/nodeback.js","shasum":"46fc87ede6ca68434439a5216fe8e6f89d8d8a1f","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/nodeify.js","shasum":"ebd75c010fcf1c4f709f4b444e62b80cfcde2a0f","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promise.js","shasum":"8d549d783ede681cc6c9545aef15602d26742ef4","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promise_array.js","shasum":"0712bdda0498dfa8641c19c80c22b9472878f169","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/promisify.js","shasum":"3831be99120a57a3c07406f7012467f02346e92c","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/props.js","shasum":"af5fc480eacd6cce94f3239729689e0899f6cd5c","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/queue.js","shasum":"6c24c68f716db1a6c18b5cad2a951f0df6ee76ec","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/race.js","shasum":"5f5b5403be19793dec5658af27fe996173eb4990","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/reduce.js","shasum":"5c1ef0e38b20065851c1784ed4f8a4c9699574cc","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/schedule.js","shasum":"38a1aa2ceb96ed01a3c9f713349b50d53a5339b3","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/settle.js","shasum":"36f97c3732ae907af622fd4c859d29da1255fdfa","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/some.js","shasum":"b548ddd7eb6b35ae6e97d931e0a8ef6dd512b3b5","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/synchronous_inspection.js","shasum":"e9dc1fa033797719d2f4227d86f02806e0574755","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/thenables.js","shasum":"b06e617f4b1e5c9c33c9c4e0baabe709550154b1","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/timers.js","shasum":"6b92ddefb82954c53019788ed1489fb3c39e9e9f","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/using.js","shasum":"5b287a7d967647d38091aec63f880abc46caeb4f","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/release/util.js","shasum":"44b36b8bb4c9e591128079adeb56edc79b8ac625","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/package.json","shasum":"1a241a265f9ea92ca733c388fe76c780e7cd8a3e","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/boom/CONTRIBUTING.md","shasum":"61998267d75f17fdd423c1c742edc20a1561c1e2","modified":1411456504000},{"_id":"themes/tranquilpeak/node_modules/boom/LICENSE","shasum":"53ded9fedb90236c92321a45d1ab00fa35f282d8","modified":1407484406000},{"_id":"themes/tranquilpeak/node_modules/boom/README.md","shasum":"2d7368cd181df38d42b300f04f7323cc16f9b7d2","modified":1446207106000},{"_id":"themes/tranquilpeak/node_modules/boom/images/boom.png","shasum":"126fe71d237c4939338507417d5f5e172773be3e","modified":1407484406000},{"_id":"themes/tranquilpeak/node_modules/boom/lib/index.js","shasum":"a894f6f39fc0bf0f8a82a420d8a2a5018e9dcdbe","modified":1446207106000},{"_id":"themes/tranquilpeak/node_modules/boom/package.json","shasum":"84945a8243d8118ac3c5c020aea88d3fdc33c15e","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/brace-expansion/README.md","shasum":"3ed262742cc9e8e0db93c5f1d729127af1ffbe82","modified":1468999718000},{"_id":"themes/tranquilpeak/node_modules/boom/test/index.js","shasum":"62d76a920212e160acf6894f1ee3e981e6aaa8b1","modified":1446207106000},{"_id":"themes/tranquilpeak/node_modules/brace-expansion/index.js","shasum":"ca6eef16d70a99ded935606f7b62f97be1033323","modified":1468999718000},{"_id":"themes/tranquilpeak/node_modules/brace-expansion/package.json","shasum":"f6dcd531e3a1f2fde9948fc0de7366eefb2025b2","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/camel-case/LICENSE","shasum":"3a7f886b632d2197676a40020d354e84b7860604","modified":1450200570000},{"_id":"themes/tranquilpeak/node_modules/camel-case/README.md","shasum":"7617bd3ea11b319627b6e870adbbe4a3dd9a8096","modified":1450200616000},{"_id":"themes/tranquilpeak/node_modules/camel-case/camel-case.d.ts","shasum":"30e10eb66736cbb97c906af8b2ceb7b4755e6259","modified":1450200704000},{"_id":"themes/tranquilpeak/node_modules/camel-case/camel-case.js","shasum":"e704154f7178c7fa70d430a693f28a26a2d4e00c","modified":1450200570000},{"_id":"themes/tranquilpeak/node_modules/camel-case/package.json","shasum":"60d64fee150e909cf143d769b5134063b9f1275a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/caseless/LICENSE","shasum":"48f9e0a4c07f36c07d47962212fe022d0417c90f","modified":1435246730000},{"_id":"themes/tranquilpeak/node_modules/caseless/README.md","shasum":"5770b9496fb480f7c403b6c38759a27d6170e882","modified":1414583570000},{"_id":"themes/tranquilpeak/node_modules/caseless/index.js","shasum":"326fc25f6edec25f7d239314ed6e75259147088a","modified":1424946876000},{"_id":"themes/tranquilpeak/node_modules/caseless/package.json","shasum":"e61190443161eb20e66d71e28b70a6e1495cab8f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/caseless/test.js","shasum":"73948ff77c144352fb9d9615079ee35cab781912","modified":1414583810000},{"_id":"themes/tranquilpeak/node_modules/chalk/index.js","shasum":"08315806beaa18a4eb58052e8e7182b2d8bddf8f","modified":1459188842000},{"_id":"themes/tranquilpeak/node_modules/chalk/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1459174176000},{"_id":"themes/tranquilpeak/node_modules/chalk/package.json","shasum":"2bfc2df3025b29338e7fad77854a5b6e1cc55d4e","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/chalk/readme.md","shasum":"a10251893e1a61957a4c7238001e682d20d46d47","modified":1459188842000},{"_id":"themes/tranquilpeak/node_modules/colors/LICENSE","shasum":"341480159e4c6e291a492a441fe69081d671e85d","modified":1430269338000},{"_id":"themes/tranquilpeak/node_modules/colors/ReadMe.md","shasum":"3e22ae665134396b6dcd45ec5c2c750ad98c00d9","modified":1434524226000},{"_id":"themes/tranquilpeak/node_modules/colors/examples/normal-usage.js","shasum":"8da0b32e0ce469a8fbadf4d3fe93c259447368e4","modified":1434523664000},{"_id":"themes/tranquilpeak/node_modules/colors/examples/safe-string.js","shasum":"60552d817643905fde3839ae9d93f7c933f8af89","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/colors.js","shasum":"856e1a49d90ba1d9a53bbff307e27ecb677ecff9","modified":1434523920000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/custom/trap.js","shasum":"391f769b8dd1a77b7c8ea1a76817b4e265cc6f38","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/custom/zalgo.js","shasum":"73b50e3646fb82e15b321067d3e0353529fbcc6c","modified":1434523920000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/extendStringPrototype.js","shasum":"cbb6181b5cbccd38a97457cf58716781fa9f32d8","modified":1434524244000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/maps/america.js","shasum":"45f3d39d744cc14040d4d62757b412b169cf2efc","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/maps/random.js","shasum":"50ac05ea88379162110f19cf3c441fa282956e73","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/maps/rainbow.js","shasum":"014697741d559ea1dce3a5a27b9ba27b7241355c","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/maps/zebra.js","shasum":"5f6caffb4012ae13e8f36302a03cf27a7e593d89","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/index.js","shasum":"55f38c877985406790f063965cb600ae2a6f1492","modified":1434523920000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/styles.js","shasum":"a06697bab0a191e7961b855e767bbafacb25737a","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/lib/system/supports-colors.js","shasum":"65ce27a33eccf3e698c49de9c94b6ffef349ca97","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/package.json","shasum":"a50102ce92259fb444adcffe6d11e0e9fad53068","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/colors/safe.js","shasum":"65698ffe95c229962bb1c212eb971401eaeb0b62","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/colors/themes/generic-logging.js","shasum":"ea9fb8f704581e751d85767563a3dcd826ead0e6","modified":1416848062000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/License","shasum":"04e7b761eee5270ea8914303516852faf990394b","modified":1403573362000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/Readme.md","shasum":"9a4115c7973388087b21e93e1c538371e5f94ce9","modified":1434272912000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/lib/combined_stream.js","shasum":"5d3a85a28a463dc2949fbb974919598e00183d24","modified":1434272912000},{"_id":"themes/tranquilpeak/node_modules/combined-stream/package.json","shasum":"d3adc9d0c802dda052cc0e310900d43f607c7601","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/commander/History.md","shasum":"386cc2f8d7b3b54307b7056a57fc4516402aa894","modified":1444728120000},{"_id":"themes/tranquilpeak/node_modules/commander/LICENSE","shasum":"63513188251d15fcdc716703fbee89be4a3a20e6","modified":1444509474000},{"_id":"themes/tranquilpeak/node_modules/commander/Readme.md","shasum":"af810334e87894faf80bd73d9e207c9d5f2b3c90","modified":1444509474000},{"_id":"themes/tranquilpeak/node_modules/commander/index.js","shasum":"5adc820ea125a479f7fa597cfe2083eeede0dd2b","modified":1444726808000},{"_id":"themes/tranquilpeak/node_modules/commander/package.json","shasum":"09a6c7ed8488eaccdf589c699c1db11f76a07f5f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/concat-map/example/map.js","shasum":"022a614b8d9f5ccb67b6ce1f478b1efd7aff298e","modified":1339102434000},{"_id":"themes/tranquilpeak/node_modules/concat-map/index.js","shasum":"a3063f014cc693b320dbd64de3243a79247c1e05","modified":1354914570000},{"_id":"themes/tranquilpeak/node_modules/concat-map/README.markdown","shasum":"132e6e8fd1d19ec2422fdcde00840d8237e44094","modified":1354074076000},{"_id":"themes/tranquilpeak/node_modules/concat-map/package.json","shasum":"c6f7051b715815ba884ffb634b8422a840259147","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/concat-map/test/map.js","shasum":"162cce32c23628192cef64924a1ce768af399a4b","modified":1354073976000},{"_id":"themes/tranquilpeak/node_modules/concat-map/LICENSE","shasum":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1391025786000},{"_id":"themes/tranquilpeak/node_modules/concat-stream/LICENSE","shasum":"3ff8cf88cab3a26fc89c43bc829bbbb6161389d7","modified":1394017184000},{"_id":"themes/tranquilpeak/node_modules/concat-stream/index.js","shasum":"cc3ca95d3f2f04d241efa33ecc76a6d512324b46","modified":1428084862000},{"_id":"themes/tranquilpeak/node_modules/concat-stream/package.json","shasum":"3cf89bce3f13be24dead5a115135187e8940f006","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/concat-stream/readme.md","shasum":"cce7a35033ddf1f21cb5cbb697d02e230f1066fe","modified":1445184608000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/LICENSE","shasum":"a95471326a84657b0e164f84e1285685f63011e0","modified":1447953868000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/README.md","shasum":"d4987293f1078d937454a14a5ca6f386d227679d","modified":1447953800000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/float.patch","shasum":"d7f073ceb05c6f6dd1bb852fc00f5379a3e41301","modified":1447953800000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/lib/util.js","shasum":"7d34435928ee9228995c04eaa7bdcef875c41e65","modified":1447954640000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/package.json","shasum":"48339ea14d57a14cb836f2bd81cba5e25e3523c1","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/core-util-is/test.js","shasum":"2837ee1d57f385943ba5ccc7fd0ec4ed1cb8cfdd","modified":1447954158000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/LICENSE","shasum":"45c1476739d0c028c845b2c90c401c3a4435de04","modified":1435822624000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/README.md","shasum":"36262690f4aa6703a683e887d97c557dd63930a3","modified":1459954092000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/index.js","shasum":"d3e69307b9648c5c66ed21347cc41b11f710e40f","modified":1435846708000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/appveyor.yml","shasum":"dd7c480b06028d3919635583b62e66ad1c82ee81","modified":1459955194000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn/package.json","shasum":"06b00d62134de3fbc16fdd3287c35357164a8314","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/LICENSE","shasum":"ca5287b71c0661edaa850d1d2daab2b717101dde","modified":1435817562000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/README.md","shasum":"87dbe9886977124891a98f365f5c1da1041b0ac0","modified":1463550536000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/appveyor.yml","shasum":"28a740c0c299785cf9020003fdc6b035cd9f02ff","modified":1463535798000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/index.js","shasum":"7039833132528e8eb1e2571edf0d5a7712cf9be0","modified":1463550536000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/lib/enoent.js","shasum":"d3d4ef0e673ba2bb1d1a135b4d4945cb346764b4","modified":1463550536000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/lib/parse.js","shasum":"09b00a1570ff6306b17f50febd0cc1ad9bf2cb2d","modified":1463550536000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/lib/resolveCommand.js","shasum":"e21deca0a70843d228db2ca586459319fa9282de","modified":1463550536000},{"_id":"themes/tranquilpeak/node_modules/cross-spawn-async/package.json","shasum":"d0bcce0d8efd1af8be28a74e6f1ccce2cdd92df6","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/cryptiles/LICENSE","shasum":"2d1840f1b4088e3a370317c82e7b443321f2b2eb","modified":1441757292000},{"_id":"themes/tranquilpeak/node_modules/cryptiles/README.md","shasum":"52c9561e75f66870d194d12ac07c05bc0484df18","modified":1441757292000},{"_id":"themes/tranquilpeak/node_modules/cryptiles/lib/index.js","shasum":"e5c479d1d0966b82298d86669aaa5ed4bcee4fb7","modified":1441757292000},{"_id":"themes/tranquilpeak/node_modules/cryptiles/package.json","shasum":"3be20687be9f55818d68bf3f144a25e6f6033054","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/cryptiles/test/index.js","shasum":"c4d4151097d486ade0ee21bfd91297dafda16e88","modified":1441757292000},{"_id":"themes/tranquilpeak/node_modules/cssom/LICENSE.txt","shasum":"efc03835c50d60940a3c8cdc0f2f3e3ea1215905","modified":1454261806000},{"_id":"themes/tranquilpeak/node_modules/cssom/README.mdown","shasum":"710822e0b75faf3387ebc35b9de7ea69cd75cefb","modified":1454261458000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSDocumentRule.js","shasum":"0ee1f0b41c721f75eed11c4f7fb1e87f585edc5b","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSFontFaceRule.js","shasum":"f1e699079b71a477dc9fc46a1f1bb9007017d0ae","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSImportRule.js","shasum":"1081c7a454a5ec42e04aa8e7f9cba5906b4f6bbb","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSKeyframeRule.js","shasum":"f5d25f1a629f3a82f9de69af784fa18ee5e58045","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSKeyframesRule.js","shasum":"56c4495b14eebac5959c5535b35922382ecf12cd","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSMediaRule.js","shasum":"8b11323965629b2ba9aedda39e647ea6d08730ff","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSRule.js","shasum":"483fe6b20de46c2badf3c4f91c5ee34bc5ff4758","modified":1454261458000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleDeclaration.js","shasum":"411e93b4e4b050ef2a563eb10527ab2afaa734a5","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleRule.js","shasum":"3cb2d96d5b34e38eb010c11f91ab4ecc3f347a92","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSStyleSheet.js","shasum":"9d17a8969e2b4a1e99d9797faf01f9adda9a0928","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSValue.js","shasum":"0e3fb84d1cae4ada0688ea12f9f53449214ae05b","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/CSSValueExpression.js","shasum":"3331e6fa0a0e1434772b11fade8cce0dbc9c866c","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/MatcherList.js","shasum":"31523605a86e9f7ed2ee1ef5ad8f2afd2104e103","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/MediaList.js","shasum":"96d0254ca720a8ad15134de3dce2cc1218902ee1","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/StyleSheet.js","shasum":"2a58c6d74043ac82e4b92a3ba689441e4205553b","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/clone.js","shasum":"796ddf9440b55a5503fd07476d1244786ed0712b","modified":1454261376000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/index.js","shasum":"23722a9628d04faf81a75819f09509e7c60dc510","modified":1454261890000},{"_id":"themes/tranquilpeak/node_modules/cssom/lib/parse.js","shasum":"e2fa8735bc04972035851de604fba1328e74add6","modified":1454261458000},{"_id":"themes/tranquilpeak/node_modules/cssom/package.json","shasum":"14f2d8c449e5a1520c0d3db5b188ff3dbe5c20a4","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/MIT-LICENSE.txt","shasum":"b55f34bb984c002888a386201ed49df4b3514750","modified":1393838992000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/README.md","shasum":"5c4db2fa72c331ca976db638c9e7351eeaf7badf","modified":1385911662000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/CSSStyleDeclaration.js","shasum":"4d19555e852a9b7b179506002a39bf34ec8be618","modified":1464134994000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/parsers.js","shasum":"3fffc495ed77b6e3671bc239e618662e4ccc0df1","modified":1464134994000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/alignmentBaseline.js","shasum":"3667c629a77826ad624ccec259d2473d2d2be503","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/azimuth.js","shasum":"3fb1fbbc937b38ad4425c0f96a78284ca1b6b121","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/background.js","shasum":"0920ad7e8f695b80fa8520809de0889d84c76d1d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundAttachment.js","shasum":"0199568a1af2d059c6dabb3aa0faa5efc0c1a52a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundClip.js","shasum":"4b0392e4a2261eda91c5b8ff3d607d8e79110dcb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundColor.js","shasum":"fd04a1eb43d3d12578ff1dbc3c61b190ec1e11e4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundImage.js","shasum":"91c5f7865809bfb05d4176384da5dcd555445ecc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundOrigin.js","shasum":"667131085aa8557fc935b0a2e35810ec2ab94e82","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPosition.js","shasum":"8d2cb71708ea0d964052c3ce094a27d2cccbd968","modified":1464134994000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPositionX.js","shasum":"d26f2efeccd3cb9fda9a368c3181ec9c7ac9858f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundPositionY.js","shasum":"35e569b83f36cb8c3eb49649b8b9cccd0feb0c63","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeat.js","shasum":"1c88300ad76926e05f901da899e440848ffdaa39","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeatY.js","shasum":"c923cdc6250004644cfcd80eb92fe1a82c8acf8f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundSize.js","shasum":"6854e493b5264db5c3936dcfd4d438882ed30cf6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/backgroundRepeatX.js","shasum":"ec5bdf649e51ba966063b468bacac5d2b30400d5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/baselineShift.js","shasum":"b507cefb3cda6fb75797b084151e9498b18a4a82","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/border.js","shasum":"a148d708d50bcacf798f281043f268ee7a242d4f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottom.js","shasum":"cecaf24c586b7cc83634cd269bf6241d14fd92af","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomColor.js","shasum":"a1ff4cc10c219e5ce386b0b9f533faf5ae561ba6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomLeftRadius.js","shasum":"ad34d703a19fba80c6474d7b660c745bc14acc5f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomRightRadius.js","shasum":"4516e251fbe124bfa05b4a54ff00ed6da507d6bf","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomStyle.js","shasum":"2ee4c7b0f67a7f0ab56758412ed591cfeb061cbd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderBottomWidth.js","shasum":"b2089fc4c6a4d3973499457b020967bf0997d356","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderCollapse.js","shasum":"3c4a64be81ddad8519aef7c30f256431dda01b68","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderColor.js","shasum":"ab244931c0bc6c4e8c90c53cc5bae0e0e88752f7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImage.js","shasum":"6f29feb485bbdf8a91bc5dbbfadbe1f202bdf718","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageOutset.js","shasum":"d7274722f694db2cdae4cf3967746bd96ecb547f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageRepeat.js","shasum":"33360ab3a6a71c1eede3d14ab68156485c322693","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageSource.js","shasum":"fae49bcf1561c694211e96ee4b6c2a33020174ff","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageWidth.js","shasum":"7b5cf5b02ccfb20d4b75863e6ec562f5c556a3cb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderImageSlice.js","shasum":"b53374f1ea2ee31f47078d1541f5e15ac49b0a21","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeft.js","shasum":"8e901349577666448d45b7c11112ff2e0bfa89fe","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftColor.js","shasum":"4a69b709dd9375e14a1985c2c42be8f61648b406","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftStyle.js","shasum":"836d4bcd4abd0ca7a31cc6f7acf957fd1f1c927e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderLeftWidth.js","shasum":"ec8594dfdcd20af531dfda53937be0b6ba4493b9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRadius.js","shasum":"3a283a4f413fc1b1e3b5d895f78e62a4673bf7d4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRight.js","shasum":"ab4c68940da19e0e6559acc10cd776197ed7f482","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightColor.js","shasum":"e3de08cc471fd716a11de1a4a22c9d1f8d483a32","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightWidth.js","shasum":"32f36e08029500679222385c573803f172dfbee2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderRightStyle.js","shasum":"8a9c6b952d9d9c0ca2927a9a26e8bfdd14b88fc2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderSpacing.js","shasum":"ccd5868fc2ff04f57fc177ef03cbeb8968bd389b","modified":1464134994000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderStyle.js","shasum":"f13de2e15287bee645879c8e2114ca4e3f061f83","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTop.js","shasum":"4d34eff53207b1ec4a2f91e42a9449070931c8d5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopColor.js","shasum":"40258fcb91f663ac93836c773380d88271797462","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopLeftRadius.js","shasum":"50fab673daa9d55a7fb7e263b1a1dd410a5005a4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopRightRadius.js","shasum":"27e391ac7b0bdaacf09292ecdbcfa943fa7a017c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopStyle.js","shasum":"9bdb995d309ee73621aa9c90d136d31a509bb3bf","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderTopWidth.js","shasum":"8435a1e5ad950dbf3a7d9fb26247767ee4c14a04","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/borderWidth.js","shasum":"70e137b6880934f5f0f43d97f6c989ef63633936","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/bottom.js","shasum":"551135c851563c6e9eca973dd09a2aafff486636","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/boxShadow.js","shasum":"292df9a478bdd15d17672855baf3e2b6c97bd8e0","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/boxSizing.js","shasum":"3d65f52789e6ff90e7de488d3e7c3d2dffd170b5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/captionSide.js","shasum":"9e334fb891a224577d7651c30f85833926e0a710","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/clear.js","shasum":"2e758c9c424afd4ab4e60ace15e4bb2c5148e6ee","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/clip.js","shasum":"4d6e70f70bfaa2374240c90dead58fa6b2110285","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/color.js","shasum":"95184e6323e21e4859a89ad9c4f8e8c6d010db95","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorInterpolation.js","shasum":"0d44228fff8db938f4746c84727fb64141e8629f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorInterpolationFilters.js","shasum":"a8a3289e5b1d132c0df03a8475a67fe4390c8826","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorProfile.js","shasum":"f877b03985c383e458c16496e508f108aca5c880","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/colorRendering.js","shasum":"bf0bd598a714eadd7ce9d4dbbba3dfa63de6d928","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/content.js","shasum":"8d6584cef93e2c4d5592084d20f5859a4e887a78","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/counterIncrement.js","shasum":"6206c2b58d20b5ff2de566826b53aa6ccf3fd918","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/counterReset.js","shasum":"2252fdf4b4c784d7f2207b2722efc11f469256a6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cssFloat.js","shasum":"f235e47404f33740a01d0d092c3215867e62f264","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cue.js","shasum":"45db449b66bb6ba867873e89431bbebadd7d1457","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cueAfter.js","shasum":"2243b024778df0dd2b1d136921acb096d675b7d0","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cueBefore.js","shasum":"859fcdf975464c92d7da1ec100a3cc741d260669","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/cursor.js","shasum":"901c80196c2c1ee11141604e458c85242bbe69f0","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/direction.js","shasum":"1aa20d76ddff7871bf5fc955032c1589d2c6cd24","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/display.js","shasum":"085141c7b264087fd4867a06a1de66be4ceca636","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/dominantBaseline.js","shasum":"ce4f3fd8a95ae46c7dc76ba06c6c22f12b439099","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/elevation.js","shasum":"0c2423d93d115fdc0ba59fa5bfc33690b2bc5cd4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/emptyCells.js","shasum":"efe96c7408cda5644171269f9cec3e6384fc7b64","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/enableBackground.js","shasum":"035c218703f9da2d62edb76a2443f5f8e5cdcc50","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fill.js","shasum":"c4002cbba74f4bcec58f2721e92163896ebfd5ee","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fillOpacity.js","shasum":"ffb077edd6bb1588c8d9859859e991512a500b94","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fillRule.js","shasum":"8933f22457131d851697e37dc3ae3d61b0f6800d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/filter.js","shasum":"451d2bd1ca2177e7b23d855aa136db4c80f4a700","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/floodColor.js","shasum":"c2fda7d686405752cef3c9b5139c887efc009f82","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/floodOpacity.js","shasum":"5c7222d64c9f11c5c9a90b412da4863c99c75ed2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/font.js","shasum":"c8fba3bfb369896f5cd2d5409092256cc4a4e0ec","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontFamily.js","shasum":"19dea64e8853ecf0c0f9fb2a33cdbe2a30de837b","modified":1464134994000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontSize.js","shasum":"8100b3a02899c01008655e69349095495cb74413","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontSizeAdjust.js","shasum":"163632d0fbfe69c7bf893c7e4f7362e539e57a2f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontStretch.js","shasum":"ef73f116950894de7cf7b3ecdb3938419f4b966a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontStyle.js","shasum":"4b22e186dd27643dbac627e9ebdb7eb34d26daa7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontVariant.js","shasum":"b1c491791d9c4c5d7badea93b6a0041a26dc3cfc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/fontWeight.js","shasum":"1cb235a39b04bf483b5f4907d3800861373b5335","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/glyphOrientationHorizontal.js","shasum":"02ec7ac759540d65c3436b437052214ff919d2b4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/height.js","shasum":"7cf9d1a852bbd3bf1904a5f42b773669df60c778","modified":1464135618000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/glyphOrientationVertical.js","shasum":"bba0fba0b3ed95366719492466198fe0b290ebe2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/imageRendering.js","shasum":"3b1f83841c202d14780da7973fd921274be16c59","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/kerning.js","shasum":"f2efb72046f5de515e765b156bb94b01e2b579e6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/left.js","shasum":"a335c4cc29a7107e8f89f3a88485f76be62dcae9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/letterSpacing.js","shasum":"fd24f918aa28da729c011a3cf367936ee045dbdc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/lineHeight.js","shasum":"471f25140a2c3414e009f3b68d7e0781a691154b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/lightingColor.js","shasum":"365a779204051235c792334cc4ccd81790ce7a8f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyleImage.js","shasum":"c93426025c869a258626f6f3944ecf2bf1807973","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStylePosition.js","shasum":"683c3ac2b8de29d1105f2a843929c24615855c45","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyle.js","shasum":"ca0d02d1c98b756910cfaabf97f9755510062712","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/listStyleType.js","shasum":"6d5223f9159c9240be026257f306515b5d21f9aa","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/margin.js","shasum":"58d9d458a91a0ea0335053c42213a88f089674c1","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginBottom.js","shasum":"82183de5478e6c15f948bf54fd95e00f25f7e92c","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginLeft.js","shasum":"40fa4277edb4d9d2abc601989347c38bd631abf7","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginRight.js","shasum":"abdfe19b961af2bbb3fb707764f41d6f46b87e79","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marginTop.js","shasum":"6f18c7e3f3c457c1d8a7b2f466f5ab8393f091dc","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marker.js","shasum":"72e1c91e2f9f6e1c558901e5fd77c00272cafc84","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerEnd.js","shasum":"27eee0de8e2497eb991918613d850da514d7303e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerMid.js","shasum":"c44a5c703efaa1a4f6ae27f7090b9c3c739545da","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerOffset.js","shasum":"2c0635ca7aba3e367d30be36d43b4890e201c9c2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/markerStart.js","shasum":"f3d3104e06d44257d0d90d2121a2836ec0143292","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/marks.js","shasum":"586ce5f8a56abaddea061fb7e9259c2678612073","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/mask.js","shasum":"7480c08a361f835a73121aea2a8b583a763cf46f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/maxHeight.js","shasum":"a4308b20dbafe37a5b36906c409ed18cfa6862ab","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/maxWidth.js","shasum":"c99700d7cf2b9a6d6cf94f6d52a77c037a1b30a2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/minHeight.js","shasum":"84e4fb3b7e879dd65256676c9f05e06b88d822d2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/minWidth.js","shasum":"14c845736187f328270dc5eb553d44c770bd9601","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/opacity.js","shasum":"4d2e1f6dcdde9be82602b3fbab3c0e1d59d1b432","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/orphans.js","shasum":"03dcf905535a3c1a8ee350679102bf49c3eb291e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outline.js","shasum":"18f8026f81d8b1b46fb56596a0ff51c1c7dc0c39","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineColor.js","shasum":"87c2881a3b8a4a356151467c67e8a4a6fe5cb635","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineOffset.js","shasum":"5dc00d9351548df36f005c30bc05fb6c60d42ebd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineStyle.js","shasum":"9d3fe1e52da2a895a3a3f94068e2b927c8efd3ea","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/outlineWidth.js","shasum":"450d957676a4433db69d61b401b979626f8f52c2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflow.js","shasum":"e35e4994fa3fb7707ad6fade94f9f11e0897bfba","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflowX.js","shasum":"7621be75856c3372200ebec14bf1fc9642282374","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/overflowY.js","shasum":"37745eba7d47e357fdd9009f1b27673d3839f158","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/padding.js","shasum":"3c55f479def28041a750e45afcab1e3522232753","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingBottom.js","shasum":"8b6e0fea8158ea8bdf15329f6b6b2c1bd5736888","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingLeft.js","shasum":"87bcd44d85200c6b22d09ceae7419ce50f88a677","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingRight.js","shasum":"4d54a3802e6ca1563ff4389625cf0f97d36f2256","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/paddingTop.js","shasum":"d9fb6be95ed84bfbdab8753b5fdbfd92e711fafd","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/page.js","shasum":"95d5e887c064ca729cc12ceca2ab5c9b60429cc7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakAfter.js","shasum":"422348b4bd3e2a528c5ca6b5e227a04383f71614","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakBefore.js","shasum":"717315be402186d0e6701dc1bd25147987b5770c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pageBreakInside.js","shasum":"c7020c23d1a3558048202fe1e3a3d71f15370a97","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pause.js","shasum":"9a319bbbe4d254feb8c4e2bdf5b722fca291791d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pauseAfter.js","shasum":"38e1f663a6b141db92afe28b98c50b397f91c503","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pauseBefore.js","shasum":"4ed1fac61c4daf285c9d186967a5df1bce9705eb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pitch.js","shasum":"5a86ddcf3540d2b2a1fc0956c21717137e3114b6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pitchRange.js","shasum":"17f7772baca02dfa8f3ba51e43f5eaba0db83b62","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/playDuring.js","shasum":"2d430df1eabeff1a3a54bc55de1e7789852fac42","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/pointerEvents.js","shasum":"7bcb331cb27d3e93b514548c1b813062b3a4bb09","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/position.js","shasum":"c3b26e18e3834325b93b06192841bb7e7659c7b1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/quotes.js","shasum":"1ab1e303b558a6c667c1907048b5b9e524f7a30a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/resize.js","shasum":"03e35f68133c450f2e1cca1c324fb61ae1846eeb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/richness.js","shasum":"ca769f89d425924e8c474757d1b3ce40e9ba5905","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/right.js","shasum":"0f0953521a28d040dc2c7ac63301e34aa4115475","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/shapeRendering.js","shasum":"54dbdbd8fb55ce4c042397d478396fb2218ca427","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/size.js","shasum":"850afb747c59dc8b4c200f7e1979b2371a19e95a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speak.js","shasum":"c440affecec54ccd7b683de77219443e5b77072e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakHeader.js","shasum":"f91aa3489ea14adafe6d9758c2a98191051c5705","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakNumeral.js","shasum":"12f955f17d30a7e518075d096d436257d2062fd4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speakPunctuation.js","shasum":"95e2f871fce44c92703f14bcd132d5d0f18d6846","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/speechRate.js","shasum":"74e355d74675849f90bc992c7b2788ab7adf4c0c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/src.js","shasum":"85f2c55e7856695e67b52e249a7f8b23c599efdf","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stopColor.js","shasum":"c58fb33ad3edafe54a564856d4d4698cd67ae48e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stopOpacity.js","shasum":"de4b30bd35f35a2c0a520210b9e5d26fb5a432fe","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stress.js","shasum":"8ed2a03f27227a40fcc9a32a904293211e9d69ee","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/stroke.js","shasum":"a4884a3304ae76c07b81c52f4082343dba50fdb1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeDasharray.js","shasum":"bfc87d7a5f725aa9cbcf14e302b962fe5e535344","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeDashoffset.js","shasum":"04130bce44da796dd021a0e9c442b5c2843979c2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeLinecap.js","shasum":"b4136eee0e7d34c9aa1244e667624932d39b3c02","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeLinejoin.js","shasum":"0abf16b1b4e85d9920055453de40e57ba8264543","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeMiterlimit.js","shasum":"c33171a7086caab2970b2fc0fc7c071284050860","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeOpacity.js","shasum":"93808538b96b4489a772b6908367f1138071920d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/strokeWidth.js","shasum":"e6289496bf1b4c940430a76bb19b7bb66e7d8d15","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/tableLayout.js","shasum":"8ae059eb43f73fe895c159afb499ef375e280e23","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textAlign.js","shasum":"ea376d3c86f79b05121f8753724ab04eb1d78c82","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textAnchor.js","shasum":"4906cd3baffa51d5e0750123516b41ce581cbf16","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textDecoration.js","shasum":"83df5b26b64483f8ce62db98dd5a25d75808ff58","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textIndent.js","shasum":"a68b443cef2f1f7973f5c2b66a327d155c27a6a8","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThrough.js","shasum":"26fc798b46213c1b2468e06d4dce105311389480","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughColor.js","shasum":"644107c2a7f6090e216495a9597caae4ad1823c7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughMode.js","shasum":"dd775e36adb1d648165b149fa3d8e2799c6c26cc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughStyle.js","shasum":"52c73eedb46e353bc43ffe864ac3391553db4183","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textLineThroughWidth.js","shasum":"f76135f5a86c67c422468323c45a8d6c4712b56d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverflow.js","shasum":"51339379c121304d94a167a6b54a79a94587682b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverline.js","shasum":"3a40da4e76b011b5af6a8d46729b8aef59a9c178","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineColor.js","shasum":"c4afb60c243d004a1cfb23adc19ca50975a5e27f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineMode.js","shasum":"7736538e27daf9489531b7bf7795b4fa16e09d15","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineStyle.js","shasum":"0f3ca319ba2dcda26a2783ec1794cb9795df2e95","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textOverlineWidth.js","shasum":"403525f477dc4dea04b855a8ccd691c8e51cb914","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textRendering.js","shasum":"c8bf0d6887696a03c1c3b6f6ce85c3cf350f01fc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textShadow.js","shasum":"9853ecf6aa2c1ecf18e86a6d6c8aa850c2e02037","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textTransform.js","shasum":"44e9c5378ef4d081b752a06a4d9f1a528ce9c9e0","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderline.js","shasum":"b1120ff95c9777199a5f47ee51c79818bf424ee8","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineColor.js","shasum":"c0828a84f34193a6c9b539aefe2789fe5d0f7e17","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineMode.js","shasum":"6149c009727445cc1d4837c2e543ac8c9c2c07ba","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineStyle.js","shasum":"b52011af8e5383d223a92e3d1649f0493bd14ee6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/textUnderlineWidth.js","shasum":"8cd2d9f66fa8ae77532454efaa05eab10080bad4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/top.js","shasum":"632eb761d0c99ad8d58cde8bac592ceda8ae212f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/unicodeBidi.js","shasum":"76b97d3cbf75139c7fce66f682a2d4cef5515e60","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/unicodeRange.js","shasum":"b3831b839f264d0b1cd367802fbab0367fc3a56a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/vectorEffect.js","shasum":"0ba136d3b623cfa3eb6b08763df4c0450c26cf16","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/verticalAlign.js","shasum":"02fe517d87d630b1d775bc9efac31b03f7862a1a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/visibility.js","shasum":"cdd798d2b250e72794cfefdc76c98b3682ce8c50","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/voiceFamily.js","shasum":"6f77248a52a97c05ff8d484ccabd7bb61bce40ec","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/volume.js","shasum":"361e62a8363ed7d9d5a2f3884e557ce078a085ed","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimation.js","shasum":"f5f23b09f4fc8c905a1dfbde0f28a77f3b1a9d6b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDelay.js","shasum":"1eb7827b9a8befb42c9c01347b591e4b4ba1663d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDirection.js","shasum":"ceeece00da8dbdaa295b8125a840911e95581c3e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationDuration.js","shasum":"988cda9786304497f58d15cf693335a949a90626","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationFillMode.js","shasum":"90a9a1c1ef4772b55160d793661786068f8d2443","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationIterationCount.js","shasum":"56159cb27f3506fa72ff2a97c1417798296b9503","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationName.js","shasum":"c7214886fff87bdaad6dc22cae90e8e74c4b9c8f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationPlayState.js","shasum":"7ccee340d9a5bea935035690c594aafec2a739e1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAnimationTimingFunction.js","shasum":"b3610f03bc401d4adb20486b63d6ac176bb37aa2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAppearance.js","shasum":"02a7d3cf936b8b8bb3939f2e6f73b7680ee02e97","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitAspectRatio.js","shasum":"fc8fa3f8f8b1d320c0717c57b46d35834ae56fdc","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackfaceVisibility.js","shasum":"475456cd27cd3b32ed98d4139023b74741ea9ecf","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundComposite.js","shasum":"7e05d46514ab0e8c3214ad5d99ea67dccef3655b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundClip.js","shasum":"473f49088b4e571c294b9a7a7c4c852e1615281a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundOrigin.js","shasum":"f0aefa510c314998b688f0c59a89d524ba3a1a9f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBackgroundSize.js","shasum":"97b0c05a0c6db8700707234836bbd0dbb1d87158","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfter.js","shasum":"c653539660a50c2307dea28c9a216294dce17697","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterColor.js","shasum":"f97c7000479959aa97f8205ec8175e9de737a04d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterStyle.js","shasum":"de7f23d444aabd538af048143107bd5c018ee801","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderAfterWidth.js","shasum":"48cfcdf15d94cf0dc4ddd82a47edc2f87345630b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBefore.js","shasum":"857bb838f98f19d8ea561a01e522082244c83eca","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeColor.js","shasum":"c215a7b044e113a36167ed36a31612dcb7011192","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeStyle.js","shasum":"aa9025717973fb5e1b83d13ea7fb4273e429e6b3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderBeforeWidth.js","shasum":"6ee4f1ba11c2dd06cf7f0392ce23a8597d668de9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEnd.js","shasum":"676724a23ac599c7ed2966fcf4228266b5943b37","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndColor.js","shasum":"610f83a255283c152f710289a99dac9a1d191f1f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndStyle.js","shasum":"c73959ead0f68f1cf9ddde3c9fc4c004be469d6a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderEndWidth.js","shasum":"23b52548966a69071e19bd9e69d105bf7716a884","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderFit.js","shasum":"bab3013f106a449f4f70f3c4e15e0a898f9c0fc5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderImage.js","shasum":"0bb3a09d7d7d61f7cfd92d80798d50c3c2655fb7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderRadius.js","shasum":"4b47798d24a051384bd9c58ef278f80f6c87705e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderHorizontalSpacing.js","shasum":"e1a467ecfa516c7592054a3bd809c00a3f90da60","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStart.js","shasum":"7808ada36b6a88a576829589e63032e667c46114","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartColor.js","shasum":"3abdd6a8a07f974200efc2a14fca19ec4b3273e1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartStyle.js","shasum":"1e6c13ff5442d38b21bef478897f3de46f82018f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderStartWidth.js","shasum":"08ea78d87be09a01915a2f682479192aa92d9629","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBorderVerticalSpacing.js","shasum":"02c36d3b792c05a4194b901eaf926eac44314990","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxAlign.js","shasum":"a225dad69b37564c6d02d7b5fe6be8453f9ab903","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxDirection.js","shasum":"5e0c34d782e592246b7e1f55c1219382d57bf6d4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxFlex.js","shasum":"841d0c2a7a8e5405c57f64480b46ecb39b784bc2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxFlexGroup.js","shasum":"76d5ed8a4b17385b8d23f8c0244d48154ec6b9a4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxLines.js","shasum":"3a65f3f657aeebe1f9bbf94c6a921d9a0cd3628a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxOrdinalGroup.js","shasum":"4a4a2419ce6402c3ab4a53dfd9007124011ce1fb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxOrient.js","shasum":"18675e2a5cb79a09ce0ec0b62bccaeec7615b6df","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxPack.js","shasum":"02bf50195bc8d6d43e5baf197a408c937e0a9bce","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxReflect.js","shasum":"c6b47334e0987af105edf9f687d39113b15a92a2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitBoxShadow.js","shasum":"8e9c45c91d47f598370d77bca15c98e64e6a7094","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColorCorrection.js","shasum":"64f047599c5be9e26ecf0c8e710dd6c7878284f2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnAxis.js","shasum":"48b48c2cc953d5806ed878b5b8446fd5d1b31e22","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakAfter.js","shasum":"4355d5c294a7fe8d93e8301671dd68a57082613d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakBefore.js","shasum":"bcd8d6cf38da48675dea4f45d9c5ef2c2648da94","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnBreakInside.js","shasum":"f98ad16c9b038a3a998b0817b7ac261bf34f7468","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnCount.js","shasum":"ac6e8d87b81afe226605181f175f042474e192dd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnGap.js","shasum":"4d84eaaab0af84132a4339b20d3826f267cbe33a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRule.js","shasum":"de43b8a55f57a61bb57ef14e1c250635db467efd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleColor.js","shasum":"8bc29b7c9f72b7d47f565a66d99845c1b6266bb3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleStyle.js","shasum":"94ff37cdf687ce63511c5b5f9df929fa20c29b51","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnRuleWidth.js","shasum":"e4c08dac0b934a0555f07880f0f67bcb6641f756","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnSpan.js","shasum":"723ff16a562b724df00097de0e04c2d796063931","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumns.js","shasum":"06ce3210a7d3efab6df5aff1d56f2838e784fb5d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFilter.js","shasum":"fc45685c1301425d4bd499171bcc5362732257f1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitColumnWidth.js","shasum":"7f86b86d02a71b699414fffd525e731050a647b4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexAlign.js","shasum":"ece0127a3d064d0b76cd1fa71b8c0bef822f0fa2","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexDirection.js","shasum":"17e14fbc0fe1865dcad3eeedda5cecc09666cecd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexFlow.js","shasum":"976713849c845662694e07808d48b9a2b63a7e58","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexItemAlign.js","shasum":"e8cdc435368cea493dd2e8a20fc65f5b6a09fba9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexLinePack.js","shasum":"01ca7589fdb58fd9a172d2c3eb9f7d6e5436a0e5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexOrder.js","shasum":"c1d4192fe74bb4e3460708c33778ab4ad45dadec","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexPack.js","shasum":"5561efc9a9f2b3a57fee542904ca410c41c2af39","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlexWrap.js","shasum":"f61bedf0d8bee5cbc77df5c570ad19a265f74d96","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlowFrom.js","shasum":"3640ee5f9be1b1c186420d48b63362b6e46f0509","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFlowInto.js","shasum":"60f5695a6efa9eb0150710b4a4a55af052de429a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontFeatureSettings.js","shasum":"59f68db7fab3d44f21653f9142804f6376142b3f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontKerning.js","shasum":"c104da9b323667145d7f4a927fad787b24775ae4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontSizeDelta.js","shasum":"4d006b76d4ec81798a849ce966b76b7e5d0f7143","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontSmoothing.js","shasum":"683e08744b9b72fadd37e7447a73f4f021fb8fb9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitFontVariantLigatures.js","shasum":"72af0328bf304a461b6f9a91ec0ba345d647920a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHighlight.js","shasum":"47f581096debb18b147488bc8575a253ab7fd3d9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateCharacter.js","shasum":"dc8f8b81ea4b1260cc59c9c8f321a2fb9da8902c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitAfter.js","shasum":"a4bce1681dcbd0be579ae2780c31fdb19f713d80","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitBefore.js","shasum":"2c6a2768ebf7ac205b717a5a56eadadf7f9a10f7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphenateLimitLines.js","shasum":"84ac5cdbeae7fc240218995fe971fdf864a4af98","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitHyphens.js","shasum":"02556eef9f55f09d02468be185b6537532bea2a3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineAlign.js","shasum":"898974f0ab8e779edbca22bccd9eaf9db338dfda","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineBoxContain.js","shasum":"4e242b1560e169d8e2981146d6f64465657b9ea3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineBreak.js","shasum":"7edf265a6535224e37908e95538bf0439ef1c08a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineClamp.js","shasum":"bd9f490191ec72d9e0a6f7d8d1bd8bd3a84a5a1a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineGrid.js","shasum":"7c3e563c3d0de68d3c79d287a6dd6bc63f897dbd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLineSnap.js","shasum":"0f710024885490f454ed01c1b4b81b4094af854c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLocale.js","shasum":"d9616dbbad2cc8e171641c9df52bee3835f87a9c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLogicalHeight.js","shasum":"9f23e2e2f552925798efbdf17eefd838c5abb948","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitLogicalWidth.js","shasum":"be34de2daa0b3161847ce6f3a125efaf09e2e02e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginAfter.js","shasum":"e35da84f2da44b3ba707319c95b45dcff547dde9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginAfterCollapse.js","shasum":"b16f9761f21a76b592df0dfff951bc6bb4ade7bb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBefore.js","shasum":"6e0897079bfbf21bfe11f1cdebd8c4372b0d4549","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBeforeCollapse.js","shasum":"7a8f82883f24bb5e19461259776fd55a17f0812d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginBottomCollapse.js","shasum":"a87511e848cb1a7ccd2f0b2791394f1615b7f99a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginCollapse.js","shasum":"299e4f7685626ccf00fbc96fbb4b383d96fb9231","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginEnd.js","shasum":"fb0760295dff882a62381cecdd196763eb07684f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginStart.js","shasum":"1d45c47699b7290b4b1420944824c015fb164a11","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarginTopCollapse.js","shasum":"e5be1438618eafa952ecd179626bc6619b88c52f","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarquee.js","shasum":"d9ed8ab33127879ea6e0016fe02781aa275707b9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeDirection.js","shasum":"36d70f7f66e2a03793c3145e9b8981a3c077f442","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeIncrement.js","shasum":"1e720f16b247dd8e84577113304a7162de6dcb79","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeRepetition.js","shasum":"22d10644c2baafbd0457b9571ab81de6b14018f4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeSpeed.js","shasum":"054382ffd49b01838eddc69bc0b243f116b70ff9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMarqueeStyle.js","shasum":"49819a83cbfe38a0e41572541272a202fd90734c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMask.js","shasum":"4b7fb52a15910884afb46cc08be9464a10e45f3a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskAttachment.js","shasum":"c6acd0b3475a6170c1e889c507416c9f813495c9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImage.js","shasum":"993e853701db03529be22e74c6f1d1d8e3f7a862","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageOutset.js","shasum":"3dc0fac40a26d197121896b834bb9d60aafdc366","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageRepeat.js","shasum":"fc4fd887a95b4ecf50e327d590027386396206a1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageSlice.js","shasum":"c7c978ed4d92cc0ebe001a4cba2227cf8a86b7e7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageSource.js","shasum":"a505a20c3e8ff6cc8bb5f779d94ef83fbbabb3f8","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskBoxImageWidth.js","shasum":"d90d368b59729c8b65e2069f05c3bbc519df9288","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskClip.js","shasum":"660ed67d251ec9b3f4231d1c27d16a9e57a1c015","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskComposite.js","shasum":"5528b32fe0dd3c1080c30b5c97a082c0073a7170","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskImage.js","shasum":"e8055ef35bfff64ef3ee4de6bffd838cf5c058da","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskOrigin.js","shasum":"71ef4ca594d448fb2db105c21643ef76785b1ca3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPosition.js","shasum":"941b437edfb9bd7691afdff0f85eec4ac6579de8","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPositionX.js","shasum":"220e86160b2c8bc8260dfe101731e90be175a1fb","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskPositionY.js","shasum":"f7acb23d84d6559fec78dfaee73de692b2e385c1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeat.js","shasum":"293155ad49a63642767a9797de22e850a1b9c680","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeatX.js","shasum":"cc47f7175de2ec427f194ed85a0aa61f237193b3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskRepeatY.js","shasum":"919ad24fc964acdd4dbb02f3e976907d71dd43f5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaskSize.js","shasum":"48a6d759014f634b8bb8a00be70a13505f57c44a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMatchNearestMailBlockquoteColor.js","shasum":"6af7558bcecaff28ce276b2ed4e447a43386ea44","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaxLogicalHeight.js","shasum":"4a0229db39e7f4459446487df09fae255df9336b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMaxLogicalWidth.js","shasum":"583fcd40f15d24702ac754b5d4a80ed297d315c5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMinLogicalHeight.js","shasum":"1dc7f8415cdedbbe4e320a0b57d51f7172142780","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitMinLogicalWidth.js","shasum":"bdd8a6e713b67cca5dfd6c95d684c6606df06ec6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitNbspMode.js","shasum":"00fd56ef4775f3c5b8989737863d1e3f623e0ba4","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitOverflowScrolling.js","shasum":"02ea1c5176bc5c9b09234b592e3360166787f77d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingAfter.js","shasum":"e4e27246919a74aa836db91f186822148bb8a908","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingBefore.js","shasum":"c39d5a403f909f5e9062e4addecf5ece9fbf45da","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingEnd.js","shasum":"dd582921b95bea4b7dbe204df8ae641c039f7735","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPaddingStart.js","shasum":"2d799fb2e2724b7ac02789dd9d46205431dc5f77","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspective.js","shasum":"d285bd0b58334df3747af4bb09d7e1c34079c6ed","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOrigin.js","shasum":"c024b52dfdf8c9107961117e9edd0fb3f9e45943","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOriginX.js","shasum":"9f945410cd71ee792b251b5efb69bfa1af12dcad","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPerspectiveOriginY.js","shasum":"ae8673175e082a3d99900218fbc917dc7e99c1e7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitPrintColorAdjust.js","shasum":"937e268ee229239ac1be6e72aa13d0bbfadbd9f3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakAfter.js","shasum":"bb48e387eaee86d3f7350fc27c405acc450c1b22","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakBefore.js","shasum":"cba167aa7c0b0a09be80e4a69a1172031cb1e0a7","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionBreakInside.js","shasum":"a4d2b75f6514b954e6a4e34fdbe3f5fd8200b577","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRegionOverflow.js","shasum":"8e6887422388fefda3763dcf763de59f52db622a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitRtlOrdering.js","shasum":"692a652c450b7eb610f6e3a78dfbc271ddf22a4b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitSvgShadow.js","shasum":"6ab4cd6e794b32be7b046e404a8e11bd3c632a88","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTapHighlightColor.js","shasum":"219749cf12488bdf4be689aa50e2e5994abd1c0e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextCombine.js","shasum":"c55f537052b2b953f3406dac4d298b0b11992d03","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextDecorationsInEffect.js","shasum":"6ba7df69c2d0f44bfcaee6f582b865074ea0cbd3","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasis.js","shasum":"2a71753ac9fa303fca2c9b5ed4d27483c9051b11","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisColor.js","shasum":"8b8826c530f9e37480de48006403c4d51a7c750d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisPosition.js","shasum":"1ef660ae1efba0e4d08514776aef0d2506a7d409","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextEmphasisStyle.js","shasum":"98fc9acd744fee6adb2eef769d9d27e2cd70c8e1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextFillColor.js","shasum":"ca8c14f54d01df4b1a22057945c2e9e084178e55","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextOrientation.js","shasum":"eb5336f1752c9a4ca9207c08c34a6654a558ce4d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextSecurity.js","shasum":"00a676b398f0bffc899c703717df81a24b732be6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextSizeAdjust.js","shasum":"df9fff309e88cb6c950f1a857cdaf7b9db61b06e","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStroke.js","shasum":"4d2ba0c327be7814f8def04e3d5a88d8cfbe7276","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStrokeColor.js","shasum":"30865a9e8be43ff22898b16a52d5b86bedc48d09","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTextStrokeWidth.js","shasum":"b44b0a701c7aa8aa951033058c068f3590004a4b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransform.js","shasum":"cc521781975567b9b5cff4775f40b7550dbd2c81","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOrigin.js","shasum":"c97940b559384c32d56e3c85d84e935c9c56f849","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginX.js","shasum":"263ce0c02f12238cae7f225af1f5ba5fc7501156","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginY.js","shasum":"e1e53e263d896c685fbdc75f64900e1d07d4955a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformOriginZ.js","shasum":"d7baf7c9c9a5948106f90f9300179a7492248e50","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransformStyle.js","shasum":"6b67f7bc0460b06b6767eedbdbdb359efa90ccae","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransition.js","shasum":"83aed9f07eea7e0d1e7cf31133066c3f17caceb1","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionDelay.js","shasum":"e5ca962a4d4e7d65658029ec5dc2e1bd672e8608","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionDuration.js","shasum":"36d53f20c2f9b75ebd9ab3605f3dc750487dda24","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionProperty.js","shasum":"ec4824a5bcf57edf3b2fc0bb411dce4a1160c616","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitTransitionTimingFunction.js","shasum":"13debd6976f4e9914d87abc8189248079abb2421","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserDrag.js","shasum":"f531379ab58dc06ec2e76efa9a8c79383eff568b","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserModify.js","shasum":"eea1745ff1da161f7460ba621f5ffabf7670cc2a","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitUserSelect.js","shasum":"e167070aeb6518962fc5dcd184b28ffb7e5c3a71","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrap.js","shasum":"6a9211510c88ae4483292254405edade8673872c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapFlow.js","shasum":"2dd8e6459aad7316481661ce90ec20223874bd4c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapMargin.js","shasum":"8eeebbbb84e1c85863b9546bf62e34431f2eb1dd","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapPadding.js","shasum":"048645ff4d56e2475728784f495ac8f8fc2acdc6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapShapeInside.js","shasum":"24b3abdca29295074f30ac4be86cfaabcae4a9b6","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapShapeOutside.js","shasum":"6ba4f08725802371f4148cea324f23d3231625d0","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWrapThrough.js","shasum":"9eb2c939e4c51c79b2cde733d2cb3492e755a5df","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/webkitWritingMode.js","shasum":"86669b75c9eb9113ad20f48abf504e18c787ec84","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/whiteSpace.js","shasum":"4da9a9ebfa4f2d9ac332e57d44e3a69ebf5fa4a5","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/width.js","shasum":"c5cfbf13d8f8bf7717c975dae4cfd07efafa4e76","modified":1464135618000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/widows.js","shasum":"b49e084ea3c82263153da21a5ab2a2e3d2caae91","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordBreak.js","shasum":"d84f4cf6a8c0fa03dfbad16d851aaaa6398cf8cf","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordSpacing.js","shasum":"50cb18e42615f4428fcd51cf823daf87b8b489b9","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/wordWrap.js","shasum":"8c074a273924b0167bd68cfc4a8db4da145c3f08","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/writingMode.js","shasum":"2270aec8cdbf90daa7ba43efcb2957162f19314d","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/zIndex.js","shasum":"082b3987818047fb51fbf8086e99c8706b85d882","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties/zoom.js","shasum":"8c5224c5ff3cfee0dc64e2b2f309d73fa2aab75c","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/package.json","shasum":"f02fcd3f71834f2e3258794121ad377e7458f503","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/scripts/generate_properties.js","shasum":"24975fa704e94e6ee614ad9d4194e9c65c27657a","modified":1464133146000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/scripts/run_tests.sh","shasum":"103fcadde5c5652110f44563b7ea096762fc1eea","modified":1454657976000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/tests/tests.js","shasum":"de1d2beb9a9305fdb358aef4f7a3d8caddc73859","modified":1464135618000},{"_id":"themes/tranquilpeak/node_modules/cycle/README.md","shasum":"b579008a4cebdcf2dc528223186d0c2748735846","modified":1387192750000},{"_id":"themes/tranquilpeak/node_modules/cycle/cycle.js","shasum":"7e2bd0ad8feb33881cabb7f9ad915ce69abfb2d9","modified":1387192808000},{"_id":"themes/tranquilpeak/node_modules/cycle/package.json","shasum":"e8a5a83ea87eb777e86d4699708ae763a0261ed0","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/dashdash/README.md","shasum":"e40739349732594d5d96438bd27aa444915d3f79","modified":1453119486000},{"_id":"themes/tranquilpeak/node_modules/dashdash/etc/dashdash.bash_completion.in","shasum":"cbb2d2c1c856735b5555384080853f896aac9c61","modified":1453119486000},{"_id":"themes/tranquilpeak/node_modules/dashdash/lib/dashdash.js","shasum":"bcac2fce732aa9b1084e924d9ea49189d20cf60c","modified":1464825554000},{"_id":"themes/tranquilpeak/node_modules/dashdash/node_modules/assert-plus/AUTHORS","shasum":"d1d14de8fc8c21f9f86c2231df2531381f6a9194","modified":1453893288000},{"_id":"themes/tranquilpeak/node_modules/dashdash/node_modules/assert-plus/CHANGES.md","shasum":"b27cef2253f8ff8a83584bf1a55cec9d4dfbf517","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/dashdash/node_modules/assert-plus/README.md","shasum":"d6771de291034391f0ec79175fff3428ed6d82b8","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/dashdash/node_modules/assert-plus/assert.js","shasum":"8103ced007b61b3e45a420607de576faf7e1e0e4","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/dashdash/node_modules/assert-plus/package.json","shasum":"f58313d7c1cbaac4a12403eff9bb8e66be517e9e","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/dashdash/package.json","shasum":"87152975357998914559a10ffd38fc08e22d3e1c","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/LICENSE","shasum":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1423307866000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/example/cmp.js","shasum":"1425f9e4b03be1f7749131d0faa996e4fa9c5fb5","modified":1423307866000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/index.js","shasum":"d8b1d803b9a40a0c9ecf9d4bfdffb3bbbe16ef6a","modified":1423307898000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/lib/is_arguments.js","shasum":"fa2d8c56cf75bb7ac67844e15e377cdf7effe007","modified":1423307866000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/lib/keys.js","shasum":"461f18916cabb7f4bb541177f9c89ee1ef777e6f","modified":1423307866000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/package.json","shasum":"f84f9968ea3d1fa5cbe35b17026d0000c22d8021","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/readme.markdown","shasum":"b2b8c2c530e290899ffc7525a0df85fb48e055fe","modified":1423307866000},{"_id":"themes/tranquilpeak/node_modules/deep-equal/test/cmp.js","shasum":"ddfddad003d0d39d79c0ede73cb6f063a9a3047a","modified":1423307898000},{"_id":"themes/tranquilpeak/node_modules/deep-is/LICENSE","shasum":"4c5d1ca79ad3d544442c39f03be407dfa4788fd7","modified":1408888974000},{"_id":"themes/tranquilpeak/node_modules/deep-is/README.markdown","shasum":"d534a29d57b10d8ab4f60aa900de96fa94f7e4d0","modified":1408888974000},{"_id":"themes/tranquilpeak/node_modules/deep-is/example/cmp.js","shasum":"1425f9e4b03be1f7749131d0faa996e4fa9c5fb5","modified":1408888880000},{"_id":"themes/tranquilpeak/node_modules/deep-is/index.js","shasum":"51b4b7a1952ea939b7ac8cd5fd6ce6b62fa52f7a","modified":1408888880000},{"_id":"themes/tranquilpeak/node_modules/deep-is/package.json","shasum":"574b72fcde24fb0e354a56ad840d71b3a20bd7c4","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/NaN.js","shasum":"f910aeb95568f18c50e23a8abba0c3501109c730","modified":1408888880000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/cmp.js","shasum":"b90e11d68471e025811f705870bf50b57e158126","modified":1408888880000},{"_id":"themes/tranquilpeak/node_modules/deep-is/test/neg-vs-pos-0.js","shasum":"87116cb7972211ca6c25d48045941cae2bc46c54","modified":1408888880000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/License","shasum":"04e7b761eee5270ea8914303516852faf990394b","modified":1430138612000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/Makefile","shasum":"1d88cf18c0fef56e91425a086590e31271a7c4d5","modified":1430138612000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/Readme.md","shasum":"21db9b7ec97b7028a031a18867aab00575b09850","modified":1430138612000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/lib/delayed_stream.js","shasum":"097ab12e3837896d11d3f1d2c7a891d177b493c4","modified":1430138944000},{"_id":"themes/tranquilpeak/node_modules/delayed-stream/package.json","shasum":"b2098305c4460e25e395aefbc7fdc89f484e6a94","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/LICENSE","shasum":"d9dddd103d636dbaa178cd222de612fd923f62da","modified":1393953206000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/README.md","shasum":"97cb1bdec48ebb5e46e64fc5441c79d3d38a3c82","modified":1408831844000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/index.js","shasum":"13c052ad0b0507a4203d5d1274fdfa049a6c1339","modified":1448263082000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/LICENSE-jsbn","shasum":"4f94910918b5e57f3e55c7387f43b0d6293a4319","modified":1394050612000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/ec.js","shasum":"d9a60c831fe91bd2c62ff3e3c9675b0379ef504c","modified":1448262964000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/lib/sec.js","shasum":"b1632526290dfddc063f05ac6ed29cc40bd9e221","modified":1448263100000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/package.json","shasum":"ab00c776bc84258ecb8ecfe9fa45819edca4b039","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ecc-jsbn/test.js","shasum":"9709f584f556ceb8acaa0fd746029dcb58390eb4","modified":1408831886000},{"_id":"themes/tranquilpeak/node_modules/escape-string-regexp/index.js","shasum":"17b40cc4dc8a455277994ab351c0650215394042","modified":1456031832000},{"_id":"themes/tranquilpeak/node_modules/escape-string-regexp/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1403624054000},{"_id":"themes/tranquilpeak/node_modules/escape-string-regexp/package.json","shasum":"6170e3fb47432e65e83ca1a2299278e546e9c166","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/escape-string-regexp/readme.md","shasum":"b693d3ddaf0a2edac02f8dc9b60382f7a818083e","modified":1456031832000},{"_id":"themes/tranquilpeak/node_modules/escodegen/LICENSE.BSD","shasum":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":1432730400000},{"_id":"themes/tranquilpeak/node_modules/escodegen/LICENSE.source-map","shasum":"bfd553231306d8e24714480c4c47e20eb5911fc1","modified":1432730400000},{"_id":"themes/tranquilpeak/node_modules/escodegen/bin/escodegen.js","shasum":"ea70dd92f7321b01fd3aea944059dfc7ab7ff82e","modified":1432730400000},{"_id":"themes/tranquilpeak/node_modules/escodegen/bin/esgenerate.js","shasum":"00b8be70a2983d1dffae6c1395a70ea39f0f3a53","modified":1432730400000},{"_id":"themes/tranquilpeak/node_modules/escodegen/package.json","shasum":"7a1de32ec19668b39bf856ab84b2c943e7c8ec65","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/esprima/ChangeLog","shasum":"65e08751fc4065302178202c16f2ebaf9271ac93","modified":1454452006000},{"_id":"themes/tranquilpeak/node_modules/esprima/LICENSE.BSD","shasum":"9706f99c85a781c016a22fd23313e55257e7b3e8","modified":1435055994000},{"_id":"themes/tranquilpeak/node_modules/esprima/README.md","shasum":"0db752599b67b64dd1bdeff77ed9f5aa5437d027","modified":1445559230000},{"_id":"themes/tranquilpeak/node_modules/esprima/bin/esparse.js","shasum":"b2f60873fd2c0feaf21eaccaf7ba052ceb12b146","modified":1446846410000},{"_id":"themes/tranquilpeak/node_modules/esprima/bin/esvalidate.js","shasum":"e77075d2fb2cdeb4406538d9b33d00fd823a527a","modified":1446846410000},{"_id":"themes/tranquilpeak/node_modules/esprima/package.json","shasum":"78fe0c98571d389f42bf10168d18aa41fe566cfd","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/estraverse/LICENSE.BSD","shasum":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":1360142708000},{"_id":"themes/tranquilpeak/node_modules/estraverse/README.md","shasum":"d688d002feaa7c032c4a209687cb97ccef5ccfe3","modified":1425544898000},{"_id":"themes/tranquilpeak/node_modules/estraverse/estraverse.js","shasum":"c0d5a517ff482c4df2f226608d83f9e101e16942","modified":1425544898000},{"_id":"themes/tranquilpeak/node_modules/estraverse/gulpfile.js","shasum":"1b430ab8fe6438e61ac5f3585a9243b2db260748","modified":1425545398000},{"_id":"themes/tranquilpeak/node_modules/estraverse/package.json","shasum":"d8223f024ca0202118a9963b55ec2f105aee4473","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/esutils/LICENSE.BSD","shasum":"e74ff75ee8a455b69f308ecaeef9804e6c9c8fd8","modified":1403603316000},{"_id":"themes/tranquilpeak/node_modules/esutils/README.md","shasum":"969462acf211c83f3f10b9ae323b330f796959e3","modified":1426061516000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/ast.js","shasum":"646109f8189f1a1b89e7a14354413dcdd7c6a5af","modified":1426061516000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/code.js","shasum":"dafc933c43857065c4f3fb9239efdd5c0d4aebb8","modified":1426327326000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/keyword.js","shasum":"12efd22a7f3c5b9718de1ba4d0e10c432bed524a","modified":1426236546000},{"_id":"themes/tranquilpeak/node_modules/esutils/lib/utils.js","shasum":"e5d06e7c38a9578a0d95375acab763b5b8e0480c","modified":1426061516000},{"_id":"themes/tranquilpeak/node_modules/esutils/package.json","shasum":"7c3e55c713e4b2713b1b55a47552bc0305c80723","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/extend/CHANGELOG.md","shasum":"782aabec0278f6500fbedf61e29a5a0d748c78fb","modified":1435761918000},{"_id":"themes/tranquilpeak/node_modules/extend/LICENSE","shasum":"bed93ae1abcd71e5d1c9c363595dd24bb1b9016c","modified":1435759228000},{"_id":"themes/tranquilpeak/node_modules/extend/README.md","shasum":"4bce70a4b2e7dda8a760418301a4622c0557bae9","modified":1435759228000},{"_id":"themes/tranquilpeak/node_modules/extend/index.js","shasum":"9154a195afa931672ff49f30d5fdf0c5a10614bc","modified":1435759228000},{"_id":"themes/tranquilpeak/node_modules/extend/component.json","shasum":"07af5d609ee23647ce3238a0e1322c35b385fc45","modified":1435761932000},{"_id":"themes/tranquilpeak/node_modules/extend/package.json","shasum":"a199e1cbc7efc65f5b7856f467579abdc142683b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/LICENSE","shasum":"772b18147b3bf826978f984f8e01562a9e3cc254","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/Makefile","shasum":"88eff1bf9d8152cf847e0720e384a4a84418082f","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/Makefile.deps","shasum":"f27b6650501f14e21f8ce186476537d0e2f3e026","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/Makefile.targ","shasum":"f66e38899fc918aac830c478ae402c66d8793bc7","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/README.md","shasum":"e06a0c86165e03cf3170be3f4e5b7dfd5c7eca5f","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/examples/simple.js","shasum":"5e7b4892b3625f689d9dcb5fd2e43140f21d66a4","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/jsl.node.conf","shasum":"7197578b829d6c93d8356bf114c7f3d26722ec0b","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/lib/extsprintf.js","shasum":"cfe80b99a5d428a0f357ae11e0a067c46ebdbb2c","modified":1360150038000},{"_id":"themes/tranquilpeak/node_modules/extsprintf/package.json","shasum":"8ca2c633372620e1aa08d264e8531dbcfcf2c59d","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/eyes/LICENSE","shasum":"48de9eef704f2e23ec665052283a6ac648cf0a8a","modified":1323363348000},{"_id":"themes/tranquilpeak/node_modules/eyes/Makefile","shasum":"02ac3fae703f34097145129a61ae04bffd66fb05","modified":1323363348000},{"_id":"themes/tranquilpeak/node_modules/eyes/README.md","shasum":"a1a127072084b5367717dd0507b75ada703caf63","modified":1345811110000},{"_id":"themes/tranquilpeak/node_modules/eyes/lib/eyes.js","shasum":"5d0e7f8aff61e1a432a3febb66bc943a7b451412","modified":1323363814000},{"_id":"themes/tranquilpeak/node_modules/eyes/package.json","shasum":"86307405a219ef85eb9355211ab6bd2dffb23685","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/eyes/test/eyes-test.js","shasum":"53dd896312efe52b3a5a6e156a48f6be8e910cc3","modified":1323363842000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/LICENSE.md","shasum":"f4d345fe51b02cb9554b5abf0456a9d3dd3c33b4","modified":1417809390000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/README.md","shasum":"b6c31c63f767332303872bb6d6dcae6b8bd27c84","modified":1417809390000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/levenshtein.js","shasum":"37f1e2f95e5d89defe6b81fc62b54ab69ab00ed3","modified":1469147222000},{"_id":"themes/tranquilpeak/node_modules/fast-levenshtein/package.json","shasum":"b0f2cfe392704daa4c46789cd476c37ca2d405e7","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/LICENSE","shasum":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1426913322000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/README.md","shasum":"fd2b1d08b55284aa2abc72d199e3c487744a0c31","modified":1426913322000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/index.js","shasum":"a96917d5912eef5a8ed12a4b1f3a41400eac80d1","modified":1428404546000},{"_id":"themes/tranquilpeak/node_modules/forever-agent/package.json","shasum":"b00e1921e20879f7593e6d7d380d31abcc1e4be8","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/form-data/License","shasum":"1d11381521bdc7e7df9bb1d7bf85341ffca266d9","modified":1354663792000},{"_id":"themes/tranquilpeak/node_modules/form-data/README.md","shasum":"3c05cc44ec45fc1a7b48eef5b725b69ff71a2a4a","modified":1451603052000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/browser.js","shasum":"917325358c1a3c40dc7c955264a1d4d74dc73ff1","modified":1451399276000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/form_data.js","shasum":"896f6c6fbb1374dbefb85d995431adf8f42c5e3f","modified":1458005068000},{"_id":"themes/tranquilpeak/node_modules/form-data/lib/populate.js","shasum":"9dd4fc7be303bc7cba2bc94255d8cfcbde69db9d","modified":1440060720000},{"_id":"themes/tranquilpeak/node_modules/form-data/package.json","shasum":"7e882c09abe85cc6d545d446f02c60bb4b25d7a9","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/form-data/wercker.yml","shasum":"ee5a8c67838bc047be3527b2b0994aad9786ac77","modified":1451606750000},{"_id":"themes/tranquilpeak/node_modules/fs.realpath/LICENSE","shasum":"cdf711a72ab90a1b193aea27e96cccf491e157e2","modified":1465993488000},{"_id":"themes/tranquilpeak/node_modules/fs.realpath/README.md","shasum":"325af4f63ad42821a34e8df60f6e3b502f1a3f64","modified":1465993646000},{"_id":"themes/tranquilpeak/node_modules/fs.realpath/index.js","shasum":"9b5cdf4ef79264959ed0a23e4c35efbe6d64b0df","modified":1465994124000},{"_id":"themes/tranquilpeak/node_modules/fs.realpath/old.js","shasum":"d2d656e98e4d0735902068408824f8d08aaea84c","modified":1465990304000},{"_id":"themes/tranquilpeak/node_modules/fs.realpath/package.json","shasum":"243355fe6286921ef4828500b886c5c2447d2c7b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/generate-function/README.md","shasum":"d9255d9f65aeed364e61715ce43392b237dd10a7","modified":1406719756000},{"_id":"themes/tranquilpeak/node_modules/generate-function/example.js","shasum":"677d763dc7b82f9d69585388ff04094107481e4d","modified":1406719730000},{"_id":"themes/tranquilpeak/node_modules/generate-function/index.js","shasum":"2942e1c63f5a2013a70196110b4859029d09c48d","modified":1408618284000},{"_id":"themes/tranquilpeak/node_modules/generate-function/package.json","shasum":"561001fd65e5e0dbffc038f14247a1b2c56ceee9","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/generate-function/test.js","shasum":"9bb3d8f4f20a97f1af0ef033d8dbe32693f9fb3a","modified":1406719070000},{"_id":"themes/tranquilpeak/node_modules/generate-object-property/LICENSE","shasum":"a95ab3a4b0e4bd978897f09b3b430a449da20a08","modified":1427440196000},{"_id":"themes/tranquilpeak/node_modules/generate-object-property/README.md","shasum":"e300730218d5bbf519653e5d19cfbd5857b78796","modified":1427440196000},{"_id":"themes/tranquilpeak/node_modules/generate-object-property/index.js","shasum":"47eacac5534f58609e9f3ccc3a1c5879c20f9add","modified":1431872072000},{"_id":"themes/tranquilpeak/node_modules/generate-object-property/package.json","shasum":"bc5b1169666ab4c8fafdad2dd4379b1eca5b7d49","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/generate-object-property/test.js","shasum":"b738cbfd474028baa30f5b003e228356d61c6a58","modified":1427440196000},{"_id":"themes/tranquilpeak/node_modules/get-stdin/index.js","shasum":"d2a3722d41b11b6c0783046b1657b5aa0c56e536","modified":1421735710000},{"_id":"themes/tranquilpeak/node_modules/get-stdin/package.json","shasum":"c77d99c04ffcab985cbd388f5d1d81f69390f891","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/get-stdin/readme.md","shasum":"463253693f496ad1b7e3d7504489d24625a33859","modified":1408281376000},{"_id":"themes/tranquilpeak/node_modules/getpass/LICENSE","shasum":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1461885310000},{"_id":"themes/tranquilpeak/node_modules/getpass/README.md","shasum":"72706fc471e2713656e5dbc049a4c1a2c418b2e7","modified":1461885280000},{"_id":"themes/tranquilpeak/node_modules/getpass/lib/index.js","shasum":"3e1d47c5742292c6964267fe3b1ef54a5918f419","modified":1461885454000},{"_id":"themes/tranquilpeak/node_modules/getpass/node_modules/assert-plus/AUTHORS","shasum":"d1d14de8fc8c21f9f86c2231df2531381f6a9194","modified":1453893288000},{"_id":"themes/tranquilpeak/node_modules/getpass/node_modules/assert-plus/CHANGES.md","shasum":"b27cef2253f8ff8a83584bf1a55cec9d4dfbf517","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/getpass/node_modules/assert-plus/README.md","shasum":"d6771de291034391f0ec79175fff3428ed6d82b8","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/getpass/node_modules/assert-plus/assert.js","shasum":"8103ced007b61b3e45a420607de576faf7e1e0e4","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/getpass/node_modules/assert-plus/package.json","shasum":"95ac6aa63bb755de34c9a0b7afc3db75e17846c6","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/getpass/package.json","shasum":"57639f44de16ac8cac4b4c7cc2b9ace9655b96b6","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/glob/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1406561466000},{"_id":"themes/tranquilpeak/node_modules/glob/README.md","shasum":"0085fbce10be11548134260e6ced6583a032f19a","modified":1455107372000},{"_id":"themes/tranquilpeak/node_modules/glob/changelog.md","shasum":"97bfa68176e50777c07a7ba58f98ff7a1730ac00","modified":1455146606000},{"_id":"themes/tranquilpeak/node_modules/glob/common.js","shasum":"05025adbb5e84ef5aed1bb7029d1ac7178bcf174","modified":1457216346000},{"_id":"themes/tranquilpeak/node_modules/glob/glob.js","shasum":"aa74284989812f9704490e011fd301f35d3690e6","modified":1466076358000},{"_id":"themes/tranquilpeak/node_modules/glob/package.json","shasum":"39411b8c7018082e7d35971e0e8afc60530dd371","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/glob/sync.js","shasum":"9197b768cd7b245346fc3550f25353c1d259c312","modified":1466076410000},{"_id":"themes/tranquilpeak/node_modules/graceful-readlink/LICENSE","shasum":"e9f4a5c36ecaa401588e457af96e7a85d53a98f0","modified":1423640220000},{"_id":"themes/tranquilpeak/node_modules/graceful-readlink/README.md","shasum":"a3e9fe045614e9dc2473a75cd9a7e9a6315043c9","modified":1423688884000},{"_id":"themes/tranquilpeak/node_modules/graceful-readlink/index.js","shasum":"3ecfe7f28912aa64161b8a6e4129c2b4fbcf50a0","modified":1423688896000},{"_id":"themes/tranquilpeak/node_modules/graceful-readlink/package.json","shasum":"3fdf51f3060dc789b6d431350a30422539e607d4","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/har-validator/LICENSE","shasum":"57fc502455231f1d10c4d2e67c261f0fc56bb17d","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/README.md","shasum":"43ef10fa75b3eb5369012ac32654ab907a79fb14","modified":1453219356000},{"_id":"themes/tranquilpeak/node_modules/har-validator/bin/har-validator","shasum":"702b45900cba1bd2ee74c4df1a5b51db0aeab0d7","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/async.js","shasum":"864f1787c6e6521d6495d337d7894d844dba24b6","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/error.js","shasum":"e08730fe6ce867fea7b32e8e7c6f9266b7fce592","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/index.js","shasum":"099021ac86914964d97afb35a9594e29c136bd0e","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/runner.js","shasum":"c0c49bddac013682d52bfff6065cceae67474fb2","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/cache.json","shasum":"24dd76d544e1c3c4be343e1a88e9ffad19705021","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/cacheEntry.json","shasum":"abb6d0b052b7f624f2e9efd5508c0614c4831b36","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/content.json","shasum":"896c9f34e3f38c5687255edcec798bedc98221a0","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/cookie.json","shasum":"fc6b61b7f65667ebd270e2daadfc21e6b6aec452","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/creator.json","shasum":"b0096cca448769435a9a1dfc8835bc560957fa97","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/entry.json","shasum":"161d6c3ab62b4fc423c5aa1d3ee1f67d98c008ca","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/har.json","shasum":"9b5debe33b9aa8c6055bb950ca5f19b1a1d82a42","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/index.js","shasum":"1bab9e9eb0c54be915c5303ee23cba4faaff0194","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/log.json","shasum":"9c72f7600e6fad2818459e76de0140ed9cb67422","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/page.json","shasum":"d3ca0cf8dbcc30f33b91b8e8db85982b01cc5986","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/pageTimings.json","shasum":"2661f2488c8bfaec68b30b4e9dee25089277e448","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/postData.json","shasum":"123d9c6853b0e1a33147e2c04404aa33cf53a1ff","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/record.json","shasum":"23a2f8245bfef93b6b87696af51c1e9d4a0302df","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/request.json","shasum":"ecdaba295ca01aeaa9f3f9779d1c94a051af5578","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/response.json","shasum":"e01a380eeb0b3c87c37f936ebf4888eae55dc3b1","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/lib/schemas/timings.json","shasum":"4879ffeb448af68307aa46910bd2d3ac2fde9246","modified":1448348088000},{"_id":"themes/tranquilpeak/node_modules/har-validator/package.json","shasum":"4d9951ed3849a80838561e356db080281987bad4","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/has-ansi/index.js","shasum":"e7305f641b51be9dc463cdfc1e6b7afb8d03576e","modified":1402752538000},{"_id":"themes/tranquilpeak/node_modules/has-ansi/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/has-ansi/package.json","shasum":"85fa53b47934eaea637663d77106b8a41251970a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/has-ansi/readme.md","shasum":"8f5dd99e33b07d2f4abaff2410728acca335ebfc","modified":1435659190000},{"_id":"themes/tranquilpeak/node_modules/hawk/LICENSE","shasum":"23dc309f4a3614d359884bbc4a64d0ca20e41d68","modified":1453207948000},{"_id":"themes/tranquilpeak/node_modules/hawk/README.md","shasum":"332080064c5f554a1ad68a43ab48a68d2b49a1a4","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/bower.json","shasum":"0394736479292c80f177ca8d29263d9162d489b3","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/component.json","shasum":"004be58031f7d1cbdbff8ca684b464df449cde8c","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/dist/client.js","shasum":"78e967c19bffde7606b06c595c41e83cde6c0d53","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/example/usage.js","shasum":"9c61ce5a46828c4c26b93e06141dbee8679c33a2","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/images/hawk.png","shasum":"756c85c7133e66dc5c119c47081f7f890d046f77","modified":1447943728000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/browser.js","shasum":"d4f08ffcfa0012fdb1a304d0fdda5586cf959af3","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/client.js","shasum":"781eb260241b46515df2f2f009969a772aa9dbcc","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/crypto.js","shasum":"06d65d9f325d49f11a0bf223dc683648f6fac977","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/index.js","shasum":"64f1cfdf834d8d679d020071124865b83a6cae72","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/server.js","shasum":"ecde371bb849aa221cd138ba993f5fb19fff160e","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/lib/utils.js","shasum":"befb760ea6a14654fcce187b2b790f8292b404b2","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/package.json","shasum":"b2ec0bcab458e065564f3d5730aa9b06ba04944e","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/browser.js","shasum":"fda1c8242cc48078540c30464da1d36a64d223a6","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/client.js","shasum":"fabb1388ee6f94ffe25870f2152d1a46c480dde3","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/crypto.js","shasum":"222fe636eb910e343a0dd0db76224fac92a47647","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/index.js","shasum":"9e790c1104e148298687c0ed87fd48ee14a943a4","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/readme.js","shasum":"e8743507f0a6c8d261e1d037e8aadc11cda3ac82","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/server.js","shasum":"45a0a16ecee59114ad2765a73af25443125278ba","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/utils.js","shasum":"042ec97613b298b257e409d54eeca7a84ef3f84b","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hexo-front-matter/README.md","shasum":"96701507a635ae3d9cce1408125cd91d5dda9cc1","modified":1423611772000},{"_id":"themes/tranquilpeak/node_modules/hawk/test/uri.js","shasum":"a7037450a234ee97c7bce23dc5c2f295fcddbd47","modified":1453375206000},{"_id":"themes/tranquilpeak/node_modules/hexo-front-matter/lib/front_matter.js","shasum":"20b1df2f443eb75a102e0ccddc0525e7f6cf6f5e","modified":1449283878000},{"_id":"themes/tranquilpeak/node_modules/hexo-front-matter/package.json","shasum":"19025f691bbccb958a1a50b03722eec90feeee52","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/LICENSE","shasum":"fecd013bdadc9ead2732027f06bf8fc19761efcb","modified":1417849562000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/README.md","shasum":"1079641dc5026d8c8ead9e7f8212d7a3c1a105fa","modified":1449985774000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/highlight_alias.json","shasum":"55ad576919cc985a4fb86dd84c3cd6f25322c2ca","modified":1469980558000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/cache_stream.js","shasum":"9346587fa9871e9a4529592e91a997e5b0a41ae9","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_diacritic.js","shasum":"9b62a42bde7671daba738e6652baee44ba30d6ba","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_html.js","shasum":"f3c3f1a422cd2e519a805fbdbf5f20b63a10fd9a","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/escape_regexp.js","shasum":"c74fc0d14a2930007336aa11e8af4224cefac86c","modified":1455175336000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/camel_case_keys.js","shasum":"0e506d8ee3dfae6ab57d1a04c7e6e4d82287b1db","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/hash.js","shasum":"95b9f5fe38c62a76eff26c6e9771a4267a0e284d","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/highlight.js","shasum":"99846bb00882a5e0d4f6d218480b818bf2ae9ba0","modified":1455246104000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/html_tag.js","shasum":"38f1df0d200011332249bf599980f1476f723d9c","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/index.js","shasum":"721f908f2c5e561a11cbee61f2f3b753066c1618","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/pattern.js","shasum":"384485bf36b97513c7b61bff21af43570ca2c8fb","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/permalink.js","shasum":"0ac9bb1eb47dcb79cff07a6631fe2714eac5fe1c","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/slugize.js","shasum":"662f671305418218da6c22af093dafa90b21c674","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/spawn.js","shasum":"8f3edb5b5268cf7d3abc1c86989d01da95f8a8f5","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/strip_html.js","shasum":"f20be4f49702fd241dcbf65fa73f01ff42028550","modified":1455174238000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/truncate.js","shasum":"102d57d757c88853ccc57e81747a843a0acb7eb7","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/lib/word_wrap.js","shasum":"68a9e133470558981bf038a75ef9f11c5145955b","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/scripts/build_highlight_alias.js","shasum":"8a999b74cd11da29e6092a26469b29a770981436","modified":1455160384000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/LICENSE","shasum":"cd25196630fe891662ad77810f0f6dee5bc85ddc","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/README.md","shasum":"087887d419ba2c138058e6fac56c24d838bb4114","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/api.rst","shasum":"7ea61691713b45ca2bba06ccd64d382d05296ccd","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/hexo-util/package.json","shasum":"ceaab8c857a6d7b2605e9beac4fc142ef760af24","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/building-testing.rst","shasum":"435f8700ad54ebdc199fea29bd5709cb50c16356","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/css-classes-reference.rst","shasum":"5e8cd7da3b1abcf9c04c60cd68692f8aa7c76dac","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/index.rst","shasum":"64ff5bc891f7cc8bf28d987efe64328d981c6f25","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-contribution.rst","shasum":"755e23f46a3ff5d2f59ebef2a6c6d7a5317bcc40","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-guide.rst","shasum":"5a7cf267ab1661bef71913c7d16167043e3d2657","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/language-requests.rst","shasum":"d5de8f9936fa7450384696c4d2454e28c5102a6f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/line-numbers.rst","shasum":"fb2b891ec631ba4e18214d467114bfb026e42c5c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/reference.rst","shasum":"e43d2d965426401ff22c72b60fcfe77a08b745ed","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/release-process.rst","shasum":"f33baf124c0d5fc87b00ba4d6a391ee8eff0900e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/docs/style-guide.rst","shasum":"f55813c25dd13e14040d71479ff340054d6de29e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/highlight.js","shasum":"204431b2fab5e6e7dc78a110db3f6f538989f4ff","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/index.js","shasum":"6b3340208ca462d1739740055a486c3ad3b57400","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/1c.js","shasum":"31a645e9d1b863add65b020a347f94fdffb95c94","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/accesslog.js","shasum":"348d234c7253b8b308b74376fd92824d7788e745","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/actionscript.js","shasum":"0ea1dbcc03123f7d61ac0d69cfe55bfbc517d2a9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ada.js","shasum":"f03675f08c9750f48c33ea202894cd3b13d8600e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/apache.js","shasum":"c60412ca3c2543b47727c8915286750873a24c09","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/applescript.js","shasum":"64c56abbca58a0881b736a5b7519a178a0a1d782","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/arduino.js","shasum":"873698f166f498133260f60b37b8c2fea4bbc55b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/armasm.js","shasum":"d49048f28a92ae394e0c2fdddad8e46a53732513","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/asciidoc.js","shasum":"b7e01e2d240ff73a8695ed1447a47c4a0be7b62d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/aspectj.js","shasum":"2cfac0e340d3ce8172a129c409b17599871bb092","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/autohotkey.js","shasum":"951f24817084840b56ea98066f24a36629a1cbfa","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/autoit.js","shasum":"5a765d8c3d147df67badc2e4135b8e5df56337ce","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/avrasm.js","shasum":"474db1f6917d9ee3b1679286ec1583f1bbd19c2c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/axapta.js","shasum":"0f0f21ccab8b6874e965d53791465ed89e3aa13b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/bash.js","shasum":"e94801e16d4d5cc00c2b2b29a99953d02337d961","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/basic.js","shasum":"78824065536502064ecceaf75d9571d3380d9642","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/bnf.js","shasum":"ef775edcfecec203e6c67fa994ceb6d7d81d90eb","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cal.js","shasum":"7d7b9e510ad2ead900b097c38074f755378647e1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/brainfuck.js","shasum":"b6d4f266923cc946678a9060be5ad4a02a358db8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/capnproto.js","shasum":"0d947410d260600d3b110c4c427545b2a97f7947","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ceylon.js","shasum":"586cc177a3c7dee9836e9f474bc3947e93424ab4","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/clojure-repl.js","shasum":"1e9b837580d563935b9e4a2314e1c618c42cf052","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/clojure.js","shasum":"216f43777af0fcee770f98d85b91c95e6b6562c1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cmake.js","shasum":"72aef704f3645ffc6cbfb8d534fa31c0181e1455","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/coffeescript.js","shasum":"501bac94b9fe45e20d23e6f4c4c5ae3c845ed707","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/coq.js","shasum":"f0d48985501355c966a12d54ce236c2c92982b03","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cos.js","shasum":"112dc8b9329863653b8e9d648b8eec0f7f0cb45d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cpp.js","shasum":"e336809edc8401a23c5dbd90edb375592cdfe71f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/crmsh.js","shasum":"c8ad2da6b6603b62172e2865eea4add11fd79800","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/crystal.js","shasum":"53e6826083ba99130621c6ad6015304ef59299e2","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/cs.js","shasum":"740b95dd46684d2894ef0280a056f0e3556f60c9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/csp.js","shasum":"8a4c03add8f3c7815fbbe8dbc28748e6fd19cb1a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/css.js","shasum":"e3e285a4fde1eeed5120211054b1e5f0e4cbf92b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/d.js","shasum":"229d02046adf47a87e6229917998b564a0726ea5","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dart.js","shasum":"06e74990e6dabb0d55b90bfa1e32786b26ed49b6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/delphi.js","shasum":"466b4c696e3f8d76013fe38dbbcdf4cac01b16bd","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/diff.js","shasum":"ce359050293199c8667739f88ecb435a4d08111b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/django.js","shasum":"f2fdd57b3a4aad786b3cb81aaa1151abbac9de2f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dns.js","shasum":"de0553c09bac9edacdb1c492dd05960cc7cf971f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dockerfile.js","shasum":"c0478dc1900c263809dfcff2b26db1f15f8ef495","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dos.js","shasum":"bed63b430d0245c8b6c3e430d849c64a8e40db4a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dsconfig.js","shasum":"e1b080939fb6e23065003841f1b81e84cbd9f411","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dts.js","shasum":"23612dd62fc09eb91bff8e7eafd684d469ef3392","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/dust.js","shasum":"2996fd8585906dd1ae8f1dc9e8b8abd7ccd568fc","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/elixir.js","shasum":"4d352797253b7fd81a0836ad9d590e515f79d0c6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/elm.js","shasum":"9396a2d9603322d31c0da444bb5a2a65d7094d6e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erb.js","shasum":"3e67ebd4a54e38f7c4352facbb0114b914df773d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erlang-repl.js","shasum":"b40072b8f60479a3b2fda37c6ffa5c6065e160bb","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/erlang.js","shasum":"eab318990e71134e5ffb248663d141dc418a43f7","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/excel.js","shasum":"741ee6d1f9ddbf7614a75d90f30c4afd6278b9e9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fix.js","shasum":"225c32c97aad884ad5c3d256b13aac89ab7b3569","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fortran.js","shasum":"a9d0aa92cb7a7ee12ae3b89233ef4e3f68a1b5ea","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/fsharp.js","shasum":"51446ecccedbe24c8477af70d4fbf15d5f090ce5","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gams.js","shasum":"cdf2b1e632b78e22f5fa9fe013839b911b1c02e1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gauss.js","shasum":"577daee3093d72739d4800316f5c48c82bd5b43b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gcode.js","shasum":"1c35a95ccd30d0949d1f09f586989e036c97187b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gherkin.js","shasum":"68eddb4dc9b866bad4fc3b555be92199716489d8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/glsl.js","shasum":"341d47a7ba40daf718c6aa4a7dcaab9e17076944","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/go.js","shasum":"b4b17b3d63424736f00c4b58afdc313e9094dd7b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/golo.js","shasum":"8d53d68e90a908e33670d075a3727bc3bac48f12","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/gradle.js","shasum":"3c7ba57616e77ac59b59810515bb6d2bebd6b6f2","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/groovy.js","shasum":"cb9e4ed4363a68859e7fd8365b7024835691d669","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haml.js","shasum":"84491f05df1fc74d1084fb253dc12d2bed0a2fca","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/handlebars.js","shasum":"3586163cb9c029239185209044f91567bc9388a6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haskell.js","shasum":"65d0e2f2dd60d21107438f98bf06b5673a0e395c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/haxe.js","shasum":"f5b1c2bdc5c4e772c8491f486735c4652152bcb8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/hsp.js","shasum":"ace444817c7832f9947752ae72f51329502c8d53","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/htmlbars.js","shasum":"2b42fc812e7bb39a5e69e2c5a0365a6952689e18","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/inform7.js","shasum":"f7019518299290c408b65cae8a5d9a2170f260b8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/http.js","shasum":"202176d2e4fc551d11162a797c1f2ec002412b28","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ini.js","shasum":"ff3f6c019db17271a60c0110d1c0d8bb4b20ecfb","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/irpf90.js","shasum":"25b18b62a7eac03d7cd196c12480437ddd957196","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/java.js","shasum":"3281e70c4a8be736f4bc28a8454dee07bff5e66c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/javascript.js","shasum":"78d8bfca1c70476f7025944383d7de51faf14c18","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/json.js","shasum":"75b75bff84a88d6b0b630442d4b588719e3ccf22","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/julia.js","shasum":"67e252d67fdc75715ccae67895ef3197b770a9e1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/kotlin.js","shasum":"e430d3608590c1a6b4467a1433e74a79bd69b17d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lasso.js","shasum":"dd7c75e2c0c51b7efa5c652ebf62d130a2dd2917","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ldif.js","shasum":"2f6f2bf8d3ff343e8f3d661fb7b97333a84615a0","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/less.js","shasum":"d01b1fb5cac57747edf9bdd148ad1e83502dc514","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lisp.js","shasum":"b6d09c4efc9f62bd400d3b4e3a830e86433b3650","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/livecodeserver.js","shasum":"7966dc033093c1555cbf626b58b9cbbd5f889614","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/livescript.js","shasum":"b3a1310bf1b1c812fc28467c136bbd77610c50e8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lsl.js","shasum":"460ee52b1bc77438274d2a4b7dde478e52798c2f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/lua.js","shasum":"be1579ced5e9cc73c3121d254fc8ef6632ab6f70","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/makefile.js","shasum":"d63df98a46aa7f7d9f9b2467e1098476cbb75fea","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/markdown.js","shasum":"226a75a5d3bae188408a8d388ddaa8d702a38194","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/matlab.js","shasum":"08d33bc43836283c2181a1077c117c77fc8cc8c9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/maxima.js","shasum":"3522fa58e0e93d36c3267dea5172e33fe64cc843","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mel.js","shasum":"6f19c9f0b7e78725e6391a1e2d3990610cf8c006","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mercury.js","shasum":"154f4ac390a395eae2bb4246c93c18b7412b3bd5","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mipsasm.js","shasum":"adfac05b0dbabb7a5053abdeb7f25b0a2b8df178","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mizar.js","shasum":"009acb028481b4f3ad95bec4d0386bb2184e7acf","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mojolicious.js","shasum":"7edb53b8770a591523bbe90601a1097d589a5dc0","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/monkey.js","shasum":"64fc8e856e773939f5f50fb03b3e207e77ae5ea6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/moonscript.js","shasum":"485510191b2c8d67c96710cb85dc1a37ebb05af8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nginx.js","shasum":"2d35617087edad25bec36f549a82ae574e6c9a45","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nimrod.js","shasum":"e892415387bd17ed7f62205b11704e5f0751943d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nix.js","shasum":"0e799905fad5eb9a7e86b07654d540eb67d74529","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/nsis.js","shasum":"78dbce6bec80362d296f4ad47fee375b3afe8032","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/objectivec.js","shasum":"b7b8e950fc63070c2187bba4e00439b492f1af5a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ocaml.js","shasum":"03e65e7f07732e214a0d32a0b539e76012ed3970","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/openscad.js","shasum":"a732c333aa1adaeea2f125e086012305382b674e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/oxygene.js","shasum":"a8e62344bc5a3d7db691bcf28d53fc305f790cef","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/parser3.js","shasum":"ac15e9d440ec885a71761109fe40ba8a06c7b933","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/perl.js","shasum":"c1872392209d696ab1ec8a34d5a9a2e8ba51ec35","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/pf.js","shasum":"a7b05b0bce721379a7c5245ab2e87f887d64c100","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/php.js","shasum":"a4f9f78b7786797c7f8488220525209393d76c11","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/pony.js","shasum":"ebf4ae15519e16eb80c3ab984c648155109ad52b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/powershell.js","shasum":"5038c5a17a9b36418309ae86833d60cbc1afe005","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/processing.js","shasum":"d13b510492292fb16f8d8a8ca7787b5fdf83f9d3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/profile.js","shasum":"2199270f25b8e1c6e934f44111d3654d7d1b3c00","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/prolog.js","shasum":"16087064562b8ee336c7373f2f3f377904a7809a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/protobuf.js","shasum":"abbcec351964992b81f75caade03b077850c3949","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/puppet.js","shasum":"2b7644a72813e256632310ec9edef0459727f096","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/purebasic.js","shasum":"684640f179954b84907545c0039460e35da287c6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/python.js","shasum":"2b1f5e2c3ff65dd26e6366903046af8c6376784a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/q.js","shasum":"7228dbc817b650907d60ee957a8303d53f727f80","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/qml.js","shasum":"69f233e3b6d37347c77070a35e3420a796a7187e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/r.js","shasum":"d4e0224fa019df6fbfdf32173aa6667748e9ea11","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rib.js","shasum":"6ac4095f443d77730802603b2b9161a9bcf72100","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/roboconf.js","shasum":"f39efee84c9b8c3308746c82176ff6a305da7eea","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rsl.js","shasum":"ab3dfe5e601148d016c76aab50fb17afb794c435","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ruby.js","shasum":"39cb5f77b4216638bf3cdc57607909ba57cf3d22","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/ruleslanguage.js","shasum":"5600035cd1c59e034c8b710276ec4029e1594da8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/rust.js","shasum":"c1b961cf99c4ce835a7ecae2bedb5dcf2403e154","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scala.js","shasum":"fc8d7c529fd4be604eea90cd0a12358fad5f49b9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scheme.js","shasum":"f0650177c3c4f44494e840d11718ebe0b90c8ad4","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scilab.js","shasum":"1ff368f39960bba8051de0706aa97d46ffdeb94d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/scss.js","shasum":"3e770e661b2c57b9ee3ead36ef1f358f1a87d6e2","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/smali.js","shasum":"9a8ccd28ca3405e5ba86f86d2fcbe82095d81391","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/smalltalk.js","shasum":"45d649415c43d5989bc9bb2548885f0820bfa119","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sml.js","shasum":"03e1e7cf2041103f55d57dda1624ff0fba83d47a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sqf.js","shasum":"4020b37b384a78f24a6118dfd4a4f2a29dc68b58","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/sql.js","shasum":"5a017346f0666223417fe7ca5df468dd3184645a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stan.js","shasum":"305e8b20c4ac5762dfb13892f87b1127e65ad2cd","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stata.js","shasum":"52b5b3f4bf075e3d31df1b6c432cd48f5af2071a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/step21.js","shasum":"f9c30d58ef59c96f151a74736dfe48260fa90ebe","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/stylus.js","shasum":"a6260a532b4ee8ffcbcace1bbbf502a587f56628","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/swift.js","shasum":"0de562640220da5bcb4674f8083424777d94392b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/taggerscript.js","shasum":"7fc8221bb34ff42d867a68a98f93a33e11cac11f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tap.js","shasum":"986dce0e93f335db4c120876daf523904ba84922","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tcl.js","shasum":"fae3052ea5a3ecb70f4a12d38f2d7fb387cefc94","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tex.js","shasum":"956a6f3ac9e1e2bc40a49191a4f7558f267008eb","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/thrift.js","shasum":"47c807c1cc33a57f6f2ecb9e609f56ae74d5ef77","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/tp.js","shasum":"7690f71ab4b1616b96873b43116e8ae936b1590c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/twig.js","shasum":"30b6777246eec12be33ba24fc5dfc95565491edc","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/typescript.js","shasum":"baf7192ba357604467a70b4d681802c694f903e5","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vala.js","shasum":"8cf4daa0d64e112a0eede09353cfc4c95be37619","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbnet.js","shasum":"b95eecf676909dab14be6fbbe03d4a4ffd2cdd8f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbscript-html.js","shasum":"af6c349a4ce7cabf9e94168aa75dfa350664a021","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vbscript.js","shasum":"29df599716e626e26b384e259f052c9a68fd29f0","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/verilog.js","shasum":"2385a8df75d73b3a1aebc591432a53d2e58c41c3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vhdl.js","shasum":"aff7f69aeb9096046e818e3188cab40ea7a33cd4","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/vim.js","shasum":"a726fda2007d43cd0734e96e1530056f32cd0033","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/x86asm.js","shasum":"5eef051aad64bac3c549311cea1f76521f890580","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xl.js","shasum":"51b7b4ec88350dbaf8bd115e4c9f4a3c3cee32d4","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xml.js","shasum":"9d6ec52a3d002850caff607948da16e7888979d3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/xquery.js","shasum":"ee7fee4c24dd6112e16b513dd26ca5937d9d637f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/yaml.js","shasum":"361cf904fe887095407d61860ec8511f02c3939d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/zephir.js","shasum":"fc7c87476ff8fe68e51d159eddb99d8421505a3e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/package.json","shasum":"b70b60023f544d8f881cb6164185b20456dbe3c2","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/agate.css","shasum":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/androidstudio.css","shasum":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/arduino-light.css","shasum":"c6e05580b51b755e229e99eb156940ad2cab192b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/arta.css","shasum":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ascetic.css","shasum":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-cave-dark.css","shasum":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-cave-light.css","shasum":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-dune-dark.css","shasum":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-dune-light.css","shasum":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-estuary-dark.css","shasum":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-estuary-light.css","shasum":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-forest-dark.css","shasum":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-forest-light.css","shasum":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-heath-dark.css","shasum":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-heath-light.css","shasum":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-lakeside-dark.css","shasum":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-lakeside-light.css","shasum":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-plateau-dark.css","shasum":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-plateau-light.css","shasum":"9731db1052f23351c983210701edd3f5ceed343f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-savanna-dark.css","shasum":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-savanna-light.css","shasum":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-seaside-dark.css","shasum":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-seaside-light.css","shasum":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-sulphurpool-dark.css","shasum":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/atelier-sulphurpool-light.css","shasum":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/brown-paper.css","shasum":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/brown-papersq.png","shasum":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/codepen-embed.css","shasum":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/color-brewer.css","shasum":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/dark.css","shasum":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/darkula.css","shasum":"98e2c777fb1b7a3c63dd68b5b2c4ed5fee2349a9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/default.css","shasum":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/docco.css","shasum":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/dracula.css","shasum":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/far.css","shasum":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/foundation.css","shasum":"75b0674dd1ed35d61977bd5c35dc29ca35835a7b","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/github-gist.css","shasum":"77cf684fda415812d6279a52f299c84850244778","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/github.css","shasum":"ee593952684a791317ee8b77ad096e729dec649e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/googlecode.css","shasum":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/grayscale.css","shasum":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/gruvbox-dark.css","shasum":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/gruvbox-light.css","shasum":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/hopscotch.css","shasum":"03e7b9ec74bbd375db8d476836aac3729a6c86e8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/hybrid.css","shasum":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/idea.css","shasum":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ir-black.css","shasum":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/kimbie.dark.css","shasum":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/kimbie.light.css","shasum":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/magula.css","shasum":"ebc291f90e456abeeccb16937e7f51735733f4f7","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/mono-blue.css","shasum":"fd0f39cd4c93ccb8d0bb2f6a1f359522e15a89cb","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/monokai-sublime.css","shasum":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/monokai.css","shasum":"f69df92e3ccdce28e6f811ec84f11698f2811198","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/obsidian.css","shasum":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/ocean.css","shasum":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/paraiso-dark.css","shasum":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/paraiso-light.css","shasum":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/pojoaque.css","shasum":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/pojoaque.jpg","shasum":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/purebasic.css","shasum":"f353a2cedf3f261a0676fce7c824bdd2e8197775","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/qtcreator_dark.css","shasum":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/qtcreator_light.css","shasum":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/railscasts.css","shasum":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/rainbow.css","shasum":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/school-book.css","shasum":"60fe3d8063b1acc4d52de02033095adb0a2b35a9","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/school-book.png","shasum":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/solarized-dark.css","shasum":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/solarized-light.css","shasum":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/sunburst.css","shasum":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-blue.css","shasum":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-bright.css","shasum":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night-eighties.css","shasum":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow-night.css","shasum":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/tomorrow.css","shasum":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/xcode.css","shasum":"65d775a7e11e238c91e0d3c7370547348c92d6b3","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/vs.css","shasum":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/xt256.css","shasum":"bbe28ec69177699cb6300d777598adf6323f7861","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/styles/zenburn.css","shasum":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/hoek/CONTRIBUTING.md","shasum":"61998267d75f17fdd423c1c742edc20a1561c1e2","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/LICENSE","shasum":"8798f9342afed7351f4aa459b96e4d1062c1dd89","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/README.md","shasum":"fa10590d10b5c14546e9124bf634621583235285","modified":1442406562000},{"_id":"themes/tranquilpeak/node_modules/hoek/lib/escape.js","shasum":"5ccf43b55ca0fbbc307a91235127af5601bd1187","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/images/hoek.png","shasum":"61fce871b635b32957b3c8c4e3c523eb2b2ac58f","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/lib/index.js","shasum":"cfd3b556015082fc786d83c3e85ade81f448aafb","modified":1442835632000},{"_id":"themes/tranquilpeak/node_modules/hoek/package.json","shasum":"4c003f701455e3faa647425372e61cab6a1b9dad","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/escaper.js","shasum":"206886beb62a1d9d907b3838b20eb2037826167a","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/modules/test1.js","shasum":"32aceae0ba03e9116b108f41d74bea7d163bb56f","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/modules/test2.js","shasum":"31071671a8bdb854825c1cd90e29c30e9203b9fc","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/modules/test3.js","shasum":"4b695a807655475e7d89966828af28b7dee15ec5","modified":1441966648000},{"_id":"themes/tranquilpeak/node_modules/html-entities/LICENSE","shasum":"f10f3a5e9b16a526fbf6abc4be406e6f07ecad93","modified":1408381604000},{"_id":"themes/tranquilpeak/node_modules/html-entities/README.md","shasum":"c7fac7bcffcb689b87be76cbd84c784b680eee76","modified":1440585846000},{"_id":"themes/tranquilpeak/node_modules/html-entities/index.js","shasum":"eb15b4fed782c7736a02ad14c97901080ab85f44","modified":1421032046000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/html4-entities.js","shasum":"eb793b1708bd3305c33b0db77a15d04d330a6d95","modified":1444313476000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/html5-entities.js","shasum":"ec6bfa76b6e8f84c13b96f7af392d212abe71e59","modified":1444313476000},{"_id":"themes/tranquilpeak/node_modules/html-entities/lib/xml-entities.js","shasum":"f7a40c06be6bdb504476f1c864db0fb49898e8ee","modified":1444313476000},{"_id":"themes/tranquilpeak/node_modules/html-entities/package.json","shasum":"86c0096e184ba87ec5dc02f3f7d3289c8e235817","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/http-signature/CHANGES.md","shasum":"59a2ab5cc1ac7f7691560038beb2349e628eeacc","modified":1453734188000},{"_id":"themes/tranquilpeak/node_modules/http-signature/LICENSE","shasum":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1442579322000},{"_id":"themes/tranquilpeak/node_modules/http-signature/README.md","shasum":"5847fa2ec86a2ca744776acd5528fdfd6c3377fc","modified":1444836028000},{"_id":"themes/tranquilpeak/node_modules/http-signature/http_signing.md","shasum":"945eb22661d1c43e547371ac8d354a4b761eab09","modified":1453734068000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/index.js","shasum":"996c8efa1d7896034c980e498bec866824662d52","modified":1444837048000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/parser.js","shasum":"c47fbe5cb6f1be3c5a5d62f9085273f3403ff401","modified":1444837048000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/signer.js","shasum":"5e312acbe0c57117dad754fa369a36dca4569bbd","modified":1453734072000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/utils.js","shasum":"dce96d033869c424854178ae71991fe39b7c58b5","modified":1444837048000},{"_id":"themes/tranquilpeak/node_modules/http-signature/lib/verify.js","shasum":"f0603457d003b72d484d608b266566e771644438","modified":1447864870000},{"_id":"themes/tranquilpeak/node_modules/http-signature/package.json","shasum":"08b6be84ae5fbc2159382e9caab9c543870f238f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/i/LICENSE","shasum":"c0955b5351b1dcafdd0b9bb2d7e84fe0e3d731ca","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/README.md","shasum":"7f2d67981a2745190dec179196c11e56c3fceea5","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/lib/defaults.js","shasum":"40b611b31463820647c1171034d4909a5f5755b0","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/lib/inflect.js","shasum":"3a643c54834322e8a57aaf95d11bd5ae129812c3","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/lib/inflections.js","shasum":"efe36a0f7dbca9f2f3c770158cc157e8c528ac6d","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/lib/methods.js","shasum":"11efb961860b71840c816b373b22c07d0f578dad","modified":1462334054000},{"_id":"themes/tranquilpeak/node_modules/i/lib/native.js","shasum":"9f2a857fe944ac17888672c8fbe38e8938578b8e","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/lib/util.js","shasum":"414bb3f1c308779cc89215279feb7b58c7a59acf","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/package.json","shasum":"02fdc349d7f33ce89c4491388699db7f1b6c26b5","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/i/test/inflector/cases.js","shasum":"7093fad2711cd8bf92199317e74a79e74fea74ed","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/test/inflector/inflections-test.js","shasum":"02332c8370e890661f2357dfdaa3b64ba1570526","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/test/inflector/methods-test.js","shasum":"d2e1f3795cbe906e1915c0d4dd1701727a123b06","modified":1462334054000},{"_id":"themes/tranquilpeak/node_modules/i/test/utils/array-test.js","shasum":"f0b9aeae2b0253fb363a874aed33c7390740ac93","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/i/test/utils/string-test.js","shasum":"5b1ad0ff37d49caacbdea0c1b1b88519af8ce40c","modified":1452776640000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/Changelog.md","shasum":"262e4c71c3014df771cb1956eed84a9cc026e57e","modified":1443737004000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/LICENSE","shasum":"4f3ca49a793f6bb8465a3731fd965a128757b8ce","modified":1320832706000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/README.md","shasum":"b533378b2a02fc4b5aecbc0014b521952dcb946c","modified":1443279000000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/dbcs-codec.js","shasum":"c7b3220a27937e886328783f0b35a2cea1fa41d6","modified":1432448132000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/dbcs-data.js","shasum":"7533988067a056545f0ee0eecdb3e7a634c319e6","modified":1432448144000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/index.js","shasum":"90ba3f84810ccde6f33f1824dd5621e0d738456d","modified":1432446172000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/internal.js","shasum":"7e48a2438820d62d128bc4aff14436f381dc4591","modified":1443230878000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-codec.js","shasum":"73ed1ab91eb4fa0d267a9e5a4c0286a7a69de723","modified":1432446420000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-data-generated.js","shasum":"ae187f8f59b3a1c22d11ec023e2b616f20b39f44","modified":1432446172000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/sbcs-data.js","shasum":"478c67be9c008958f35567e7954762a96b6daf30","modified":1432446172000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/big5-added.json","shasum":"e61b2d77a36bce976f563f659300e06a33c9e6e9","modified":1401261408000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp936.json","shasum":"22b95ce3e9743dc8df815b8a6b9c13d1a9f7c229","modified":1401261410000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp949.json","shasum":"a3a6e6f61a78b50e54947f11ce8daebb8756209d","modified":1401261410000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/cp950.json","shasum":"33ad3790a0660cd2b7c0c599a7f5d3c147596bec","modified":1401261410000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/eucjp.json","shasum":"9beb6afa39229a044fd6935a92ca5e997f6fac78","modified":1401261408000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/gb18030-ranges.json","shasum":"bfce88fc92e98c19910fbef1b02b85fb5d2cf2f9","modified":1401261408000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/gbk-added.json","shasum":"918eecca2f76db2aa3fe0bf8634816584bf31d78","modified":1401261408000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/tables/shiftjis.json","shasum":"e02d26e47a7b295222c3ca70015024ca163e7381","modified":1401261408000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/utf16.js","shasum":"7667e018b166dec0d98642c58eb4dc29b92b7d01","modified":1432685136000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/encodings/utf7.js","shasum":"27502c8633714af444ae2f72e90d4aa2be1a47a3","modified":1432446420000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/bom-handling.js","shasum":"4f40e63c9b5246cb2e980d143eecb8a296021863","modified":1432446420000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/extend-node.js","shasum":"99f15072701c811fca1c40594b123aab67cb3eb8","modified":1443736934000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/index.js","shasum":"2f250c4e8a61544dc5231f1a2af345f01aa90ae1","modified":1432446420000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/lib/streams.js","shasum":"52efb2d50b155682e1500451ab2dee1755a1b40f","modified":1432446172000},{"_id":"themes/tranquilpeak/node_modules/iconv-lite/package.json","shasum":"863a87e25fe44edb60f9176b0db79c9df8525a5e","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/inflight/LICENSE","shasum":"515ec4469197395143dd4bfe9b1bc4e0d9b6b12a","modified":1463507772000},{"_id":"themes/tranquilpeak/node_modules/inflight/README.md","shasum":"cabcd4da1794331188da1f8f864ea1aa0ca68657","modified":1463507772000},{"_id":"themes/tranquilpeak/node_modules/inflight/inflight.js","shasum":"be7331b58b1433b0fa179d7a99ad9aca50f9d573","modified":1463507772000},{"_id":"themes/tranquilpeak/node_modules/inflight/package.json","shasum":"217b6c38ac539093f58aab7dcbc44058e47a81dc","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/inherits/LICENSE","shasum":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":1376928572000},{"_id":"themes/tranquilpeak/node_modules/inherits/README.md","shasum":"f2f8d26f1cf5fb1e3a68aa225221b064f999fefb","modified":1368692678000},{"_id":"themes/tranquilpeak/node_modules/inherits/inherits.js","shasum":"3146ed5f0e6053ad30398afdbd5a0d6a4133a4cb","modified":1368692578000},{"_id":"themes/tranquilpeak/node_modules/inherits/inherits_browser.js","shasum":"7c13eacf36e79e5e7dd257d80ec25846e4df7eb3","modified":1368693598000},{"_id":"themes/tranquilpeak/node_modules/inherits/package.json","shasum":"e4038db353a08f6e25964324fcecb628f0f0b3de","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/inherits/test.js","shasum":"ba3f458c9b47c1bcd3fdf5dd9289b7aa0ae90b1c","modified":1368693788000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/LICENSE","shasum":"a95ab3a4b0e4bd978897f09b3b430a449da20a08","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/README.md","shasum":"f2703730d556b550b13e00597a8ccb2f43eb1941","modified":1456155052000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/example.js","shasum":"cee9de4194e0c4ba372b5678983d6d701385d355","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/formats.js","shasum":"2d511859d3d654f3bf604a47e13f98e9b1bc305c","modified":1453042468000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/index.js","shasum":"6c62fa78f5375a9db47f9006b883e049ebe700bb","modified":1456155052000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/package.json","shasum":"5ddaf665fce726a1f472753729b90719dd03a049","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/fixtures/cosmic.js","shasum":"94a2af635cae7d0491fce9767a67d06f651e0244","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/require.js","shasum":"24081d202d91cdd0b4910b57dfd434ab41543b07","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json","shasum":"75644b309367675ce21d8b35b9baee049a58e159","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json","shasum":"34478026a586b1ff8b96dbe54efdf7515099da7d","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/allOf.json","shasum":"e98aea1d36d932870561f0c32c32fc5858f251f9","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/anyOf.json","shasum":"8081feb305d328878b37a7cc3b296eb5544c239d","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json","shasum":"32b70fb2c2156c979702eec5c18a86c1fe6d0bd7","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/default.json","shasum":"17c051cc94a9fb40ad627b04a41d7dce9150e3b5","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/definitions.json","shasum":"0963ac4f014a0faf6ad37554c9af03f63dad9b02","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/dependencies.json","shasum":"d239f1bb8cfffb7487335c73e02c6cda10d4ef5b","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/enum.json","shasum":"4b96cc24245950f9fad0916113a5056d9f51c2e5","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/format.json","shasum":"3d60bdb3fbb2d47da991e99e51bb9ab241703c44","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/items.json","shasum":"873828cf8ad5d2701022650e99367cb0a89624b0","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/maxItems.json","shasum":"580cdb7c89cd07b45f3fdadb2279bb13108b79b4","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/maxLength.json","shasum":"3f6273e86c31605607384559df5ee9c92201c5bc","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/maxProperties.json","shasum":"1703d6ef976a74eae8ea6cd21c131853c6ca5f6c","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/maximum.json","shasum":"c205edb4c5bd171c9e1f4955f5cc3b94ca78cb0c","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/minItems.json","shasum":"176fedc074768c6ec5c7ceb979f23a6a4bd0be58","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/minLength.json","shasum":"99eb79755bf43df641900a01e8ac9ff5becec8d5","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/minProperties.json","shasum":"b61b2829899d8a5f6bbc8bde2b694b69bb35d38a","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/minimum.json","shasum":"1a849968c80db05a9ad0a92481edd93dee567804","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json","shasum":"e8c9555c09db80f5398d2d73840358a0aec80529","modified":1456155052000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/not.json","shasum":"5b9567e8409e28b256f3704ca83447f0d0abb707","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/nullAndFormat.json","shasum":"8682b818844ecab9f69642d3f121eea59877f6e0","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/nullAndObject.json","shasum":"dc0ff1a9b5740271c3e92436a697a50ee8168046","modified":1437918610000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/oneOf.json","shasum":"6772cacb066e5458a7fca9a47cfee27b56110d6b","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/pattern.json","shasum":"5b09d287b8d5170ba4442429bf5309eae1f3cec8","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/patternProperties.json","shasum":"e0080348b213f1d004af7d5c43c2f3f29375224b","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/properties.json","shasum":"1aacdf890a9b844c7275f6ad2f3acc2f9100219c","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/ref.json","shasum":"a9dd881b0a9d5272897be0cc8550c5a64841fc8c","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json","shasum":"ef0c43623cad9a3ceb7b407272062ca55c1c9c7e","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/required.json","shasum":"35b980ec46ea56c7c7c38afc63c84a863d4b3132","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/type.json","shasum":"e2e4371fb68d01ecbc7a5022348c0ffd05d1fd9b","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema-draft4/uniqueItems.json","shasum":"8c9909ffd2abf8f625f81c18a43c789efa369e34","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/json-schema.js","shasum":"c5ef8e3da495a6ca1c7cc9dd0cb8d8c415dcc245","modified":1434009784000},{"_id":"themes/tranquilpeak/node_modules/is-my-json-valid/test/misc.js","shasum":"b87118a5e1a59dad1e6c7cc97d3f21f1791affcc","modified":1455754774000},{"_id":"themes/tranquilpeak/node_modules/is-property/LICENSE","shasum":"50fe55ab192fa4860c14bd57bcec5d090904eb97","modified":1374134964000},{"_id":"themes/tranquilpeak/node_modules/is-property/README.md","shasum":"dc4d53b5d6c1d1387fd41fb6bf3597d9642540a4","modified":1374134668000},{"_id":"themes/tranquilpeak/node_modules/is-property/is-property.js","shasum":"d09cd64e2bcead412c4d3be1d95f76fe1e315794","modified":1419493694000},{"_id":"themes/tranquilpeak/node_modules/is-property/package.json","shasum":"70ae97b03bd12f5e308be466de50530148260e86","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/LICENSE.md","shasum":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1401628084000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/README.md","shasum":"8f33b0dd445cfa2ab6712dee34df082f480a5a76","modified":1401628186000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/index.js","shasum":"b7ff45ac41fdcb4bb75dd771d6cb9bfbd129e56d","modified":1431803002000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/package.json","shasum":"8e355918e84e4b33610b16f3c60bc4e1ffc7eaaa","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/is-typedarray/test.js","shasum":"c3aa563061f8d086aaf066b389b0e811444e3913","modified":1401628240000},{"_id":"themes/tranquilpeak/node_modules/isarray/Makefile","shasum":"6ab383baa5dc5f695793d66f5b30f0c271e15807","modified":1449716646000},{"_id":"themes/tranquilpeak/node_modules/isarray/README.md","shasum":"b4a604915101db16bb5aebc51cb5385b40c709b6","modified":1449716646000},{"_id":"themes/tranquilpeak/node_modules/isarray/component.json","shasum":"88615028e91d7872104932a02b78a75f04df8465","modified":1449716646000},{"_id":"themes/tranquilpeak/node_modules/isarray/index.js","shasum":"5c3d1f3ad38be1bded1ec4e065f9463c9bbe359d","modified":1449716682000},{"_id":"themes/tranquilpeak/node_modules/isarray/package.json","shasum":"4d8cb1d7a2525744a804947adf277ee11d58fdb2","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/isarray/test.js","shasum":"d822e1a795c5658736d31abdaed0608e01d25183","modified":1449716646000},{"_id":"themes/tranquilpeak/node_modules/isexe/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1454967566000},{"_id":"themes/tranquilpeak/node_modules/isexe/README.md","shasum":"59d02c0354fd7d5da52783976038003d940525bf","modified":1453748738000},{"_id":"themes/tranquilpeak/node_modules/isexe/access.js","shasum":"b9e0d3355dd35037a45023b198664a230994e1fa","modified":1453746470000},{"_id":"themes/tranquilpeak/node_modules/isexe/index.js","shasum":"3bf4b638355aae1a2d37ce7349aa4c85a69bd0f8","modified":1453746702000},{"_id":"themes/tranquilpeak/node_modules/isexe/mode.js","shasum":"0ff34b943491989ff0c89b9fd88ab591cb39980b","modified":1453746622000},{"_id":"themes/tranquilpeak/node_modules/isexe/package.json","shasum":"3683461ba02f8c9eddc32de8cfdd40d2196947a6","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/isexe/test/basic.js","shasum":"bbcbe17965674921369eb7036d112a99763d2c79","modified":1454108396000},{"_id":"themes/tranquilpeak/node_modules/isexe/windows.js","shasum":"800422a4c5d1957e62da0cff8b1e990d0e1f5403","modified":1453748568000},{"_id":"themes/tranquilpeak/node_modules/isstream/LICENSE.md","shasum":"3fc5bd6825a9d8fd53c0cd8de0bd16d1c1a7f37a","modified":1425662072000},{"_id":"themes/tranquilpeak/node_modules/isstream/README.md","shasum":"0563c8dd8178c335de8d882a14c0408ba179789b","modified":1425662092000},{"_id":"themes/tranquilpeak/node_modules/isstream/isstream.js","shasum":"db3d8708d100bdb66fd33e1eeb6d2b232016934b","modified":1396805640000},{"_id":"themes/tranquilpeak/node_modules/isstream/package.json","shasum":"2b256c5e498f76f0494adde63cb2ecdfe0a28d7d","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/isstream/test.js","shasum":"3c3c171729a3738bd73b12d311265c7fcfb2a9fa","modified":1396809546000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/AUTHORS.md","shasum":"cc3f12565134b1da757450b40b5f3fa80c7fc132","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/LICENSE","shasum":"4fe6ded38ad123523792104dcf60f28badd905f2","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/README.md","shasum":"3a28ce7b2aa6b6343508cfe28eadec9733fd14e7","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/almond.0","shasum":"216d893df0f002babc23e63d4c98005db5e8104e","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/almond.1","shasum":"157b7bc54f90865debe5b1f817a8c1155b580dd8","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/index.js","shasum":"29e0b96fa095b35ecac9be6c2afde6c9b769e73b","modified":1445860764000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/jsdoc.json","shasum":"5a3782a2b7072783e0e5aa3b74d9c87c423818dc","modified":1445856298000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/lib/core.js","shasum":"55894ff0a71a08de470029f7689b3967c2ce9233","modified":1446477768000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/lib/curve255.js","shasum":"fdc3f9501dbda3945b6478cecaab0b0e1ecd2d63","modified":1446477768000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/lib/dh.js","shasum":"e9a0561e419e956f953570d7121e65c84fa72488","modified":1446477768000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/lib/eddsa.js","shasum":"bacec5f12e7d5303cee9b0493e22b3743a19ef1e","modified":1446477768000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/lib/utils.js","shasum":"5b4e9a60c9f4758bf714e52f9064df0d33fd019a","modified":1446477768000},{"_id":"themes/tranquilpeak/node_modules/jquery/AUTHORS.txt","shasum":"404a86538890606ca7530e09e02f9fb734f99d3b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/LICENSE.txt","shasum":"1238983d71130d0d96aad2acc946818007c77734","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jodid25519/package.json","shasum":"6bd0a528d8177e92fea1db861d131c9e8bf3685b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/jquery/README.md","shasum":"b91d306aab52418fd7bb2320ffcbcb1d4a4d0836","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/bower.json","shasum":"000530ba7ab5ff636b103baf460e5fb7035ee5d0","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/LICENSE.txt","shasum":"110c24a955d57b1c1efa2fc3d8ea93319e908b07","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.js","shasum":"5969d8bfeee263e6c584cf0a9b2d3ec04fe4f97e","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.min.js","shasum":"aa38440d60d778065dd21082732b0e6354d0aab2","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/external/sizzle/dist/sizzle.min.map","shasum":"648c9b9e00ce528fb257321a01d24c660d6847e1","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/package.json","shasum":"f59b4f42e8945741e85e856bf152a1515f820946","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/jsonp.js","shasum":"76a4da893a423668154dff82679caea44479324f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/load.js","shasum":"529e4620573e39f67774668cd912e95ad30439b8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/parseJSON.js","shasum":"c8eeee7383c3164a6c862dbf25730c9acaec0b2b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/parseXML.js","shasum":"f99050b6daba6d116a919b884faf781e46f95c5e","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/script.js","shasum":"d9094a0741e8c1b2d8b0a07dad25663143f8a2f3","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/location.js","shasum":"76acb3fe9a46b3e5f0621020f04880c46abf1260","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/nonce.js","shasum":"85635e9ff0f1eaf0568d634956c83907c39a3e91","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/var/rquery.js","shasum":"07b65034f136a691aefb2eda181510922ee0ba6f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax/xhr.js","shasum":"6c8c86935c18c88af1ea0727fb65ccf542f83459","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/ajax.js","shasum":"c5026730850f9ca0db3b1a6d3614d23c95407cf6","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/attr.js","shasum":"6017f40fa14e144aab682a52c1b5517910ffb1f4","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/prop.js","shasum":"c4a2fb3f50703ea845c0680de86d34c2acf79c16","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/support.js","shasum":"4bc920e96c23d3727e55dc40f9ec70c1ab42f7ba","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/val.js","shasum":"dbe4130262241a1945c3557e3ed6125605d7c72a","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/callbacks.js","shasum":"980e5ee9e2b551ef86198d02f34959554873ba96","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes.js","shasum":"56a390b8cb7bfe171f7f051e968cdef91e62401c","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/attributes/classes.js","shasum":"327d2f0cd1fba945190fe18940f85b612ad63e87","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/access.js","shasum":"7bda50ba2514584e7bf641ddaac6c3d5ea558b54","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/init.js","shasum":"74bcaf1486760d71062982e88ecf31b797ee2173","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/parseHTML.js","shasum":"b7ba9682aad3a7d6aedde1ae17f62cb71b55e88b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/ready.js","shasum":"f0257d0bcd5dc6151e014cd2cbe3e1337916e706","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core/var/rsingleTag.js","shasum":"6ff648618ba9dd303d7d5b01d45546b9c110ecb7","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/core.js","shasum":"a6ff96d458b00ab32cfa9c0392772a2d6e55b7e4","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/addGetHookIf.js","shasum":"e8464fa70d3990fc53d77a4016d9403b3ca63a46","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/adjustCSS.js","shasum":"f3d9ed5d13b981423e84f1fb529788d2f5e8f40a","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/curCSS.js","shasum":"03fc0d3bfea447d2286792c6e62ab90ce01552e8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/defaultDisplay.js","shasum":"f84cc1c9631ea9beb50cda5630c8e8d1ae7283ae","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/hiddenVisibleSelectors.js","shasum":"7ec0a9f9decd97c8a0cae692cb03dc6753dc273d","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/showHide.js","shasum":"d8b0d5424ed5811e5d7d77c789d1b934031ceee9","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/support.js","shasum":"156eb59846696587d4c3e23af916bc242db9f88a","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/cssExpand.js","shasum":"7d42a4637073445d938340bb8dc8ebad100a2c9c","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/getStyles.js","shasum":"d1f1c49c5055decaab92f446f7e96c200d31ffe8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/isHidden.js","shasum":"5b7fcbd2918518a9dce26f852539f75d66770894","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/rmargin.js","shasum":"9d14cc54e075445743148cf714a8a12b480dbca5","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/rnumnonpx.js","shasum":"f3ebf3f3283504c6c7cedfa5558bbe198f760b58","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css/var/swap.js","shasum":"a6df8c0e605218f353879c5f79334b79afe7fb52","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/css.js","shasum":"011fae5d043e596f875cee40b81f61510c5bb8d4","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/Data.js","shasum":"507be24327c52efcc91d5d98de4e6ded1fdc8c44","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/acceptData.js","shasum":"587312e5811b5b91e6b2efcb53b4b733e44471f2","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/dataPriv.js","shasum":"0daf0513f2c97538da4ae62bf58fe6ced5421d15","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data/var/dataUser.js","shasum":"0daf0513f2c97538da4ae62bf58fe6ced5421d15","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/data.js","shasum":"bcf59ce8c4413b2a2b37787ff5bab0280d846c22","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/deferred.js","shasum":"53c29f5f96f43fa85914b76e721316bfbb73cb22","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/deprecated.js","shasum":"a59a8c1c106653f49d9ae222230cde26ace9c1f6","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/dimensions.js","shasum":"c4dbcd50d2035326187325a5c9c13b2b7827a93f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects/Tween.js","shasum":"c7143aa1883e6e6a19dc3889821064a15cfa3ade","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects/animatedSelector.js","shasum":"dc482a995962e06e4468fe0e020f505f43a85d5b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/effects.js","shasum":"694a42706f4a7727d1f8ea0ab3637608154d37f4","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/ajax.js","shasum":"a38941aa209308e4b821cb3d585d44cc07fe51bd","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/alias.js","shasum":"28ae529242e9a4558201e459af998a11e89a28f6","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/focusin.js","shasum":"d694a1d9f7991ba80571f5a8d15ba5f49114ffad","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/support.js","shasum":"08ade687745b603728ce3b2eba13d3845f192511","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event/trigger.js","shasum":"5da2087870229ff2f0fcd5b55352b694fc2b01b6","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/event.js","shasum":"f35853197b1071f9ad55366ac5f3df2bc7522313","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/exports/amd.js","shasum":"0d5d70039ef8959fdb6b8bfa0ff2487b54ac8c9f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/exports/global.js","shasum":"3214fd234db39316a46197957ca3abcc4105a7e9","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/intro.js","shasum":"93fca21dc5f7f20683eab46f23614a6e09277fbd","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/jquery.js","shasum":"d9585ac89869ccb8455de69c66ed8a4e8b8828bd","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/_evalUrl.js","shasum":"6c00b70497f906386828579b0ae7a24a36f67635","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/buildFragment.js","shasum":"7c9937e8c881c1a812be5dfcaa03a98fb3f32424","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/getAll.js","shasum":"e49905366bf58694032b574168271563258aa53f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/setGlobalEval.js","shasum":"9da2d4c2e7e1505c9fd7004d166f34b058133130","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/support.js","shasum":"fc497f1ddae8fe502f77171b45066d67f5761421","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rcheckableType.js","shasum":"83b28fb61a9b1ab6b20c5295af3394778a89bcfe","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rscriptType.js","shasum":"0437530bbf8c193fcf944cb90545d1168374f6e1","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/wrapMap.js","shasum":"0251dbb1a82aa757ab07c43b41f42b2275e40bc1","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation/var/rtagName.js","shasum":"bf6022ca9c6d5450df43bb8c7df86f9e7227eef8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/manipulation.js","shasum":"2821549de5fa93f3ea35cccb51d8a712b0bde223","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/offset.js","shasum":"1703b10e2eafed9eaa1352ae0707d2955844a252","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/outro.js","shasum":"441afc5cf0deab1bb4762f857556983e3f4c8fee","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/queue/delay.js","shasum":"78a62e0251fa12303d894e071aeb869056222156","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/queue.js","shasum":"fa4f8a631d563015b698f948132a06702fff6ab8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector-native.js","shasum":"1dd0aad3e7eb1d2f572265de0b5ad4e244b3488f","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector-sizzle.js","shasum":"60a058b2bc1748d439e118e1f505e9bb61bc67da","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/selector.js","shasum":"648508417c2d535d26d08b074793618df3540440","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/serialize.js","shasum":"4a3d354bd0ef1d1bf131e0b33d683d6a94354111","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/findFilter.js","shasum":"8613e466c3da471b981f485bf49830cda45da202","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/dir.js","shasum":"9adb7681c4a4c7241b160fc6e13e4e0483ac83d9","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/rneedsContext.js","shasum":"ca886fed91240e1ec038fc421a765cd882870959","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing/var/siblings.js","shasum":"a2ef6aa5d378275265c78cc696070c0607b26fc1","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/traversing.js","shasum":"bc89e2fe4600cb83abb654dbc82f9e12da095ae5","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/arr.js","shasum":"2491e061330cef1d6c42ba05d500b3b472ea8db8","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/class2type.js","shasum":"6482d0421ef9c09b578b69dbcbad20feffd3a651","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/concat.js","shasum":"23bd99023e88717ea35526d5685845265855ac73","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/document.js","shasum":"ed1075ce4ed94472571cbe558b86b70867ef4e35","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/documentElement.js","shasum":"849a6fc924ddee713db9197d19773fd0b3f0855d","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/hasOwn.js","shasum":"083779ebb82cad2d52bb89098b64b660536334e5","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/indexOf.js","shasum":"9da4dda802925fcc1ded688626706cdee9f0847b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/pnum.js","shasum":"41dadd0db563cb2530b315478a62450353a066ee","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/push.js","shasum":"dbd740489125a0ad0d0ce2dfaeb69934c5b5bc3b","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/rcssNum.js","shasum":"0690411ad27903b758b61fbc009b85d9c543ee5e","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/rnotwhite.js","shasum":"3a2faeaae1a30d5957131fbb939570883258535c","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/slice.js","shasum":"d922f6614750f61d10c8a14e230cc43bdb1e401e","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/support.js","shasum":"bc7d319948516ca474ad6a5e86250eeb6505c443","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/var/toString.js","shasum":"f4f40136d3f3b4fd1ae32751d1dabff39c02036c","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/src/wrap.js","shasum":"9dcc461e1f22a9edd702b3a6b21838ed211358fd","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/CHANGELOG.md","shasum":"7fdfd5764c6f37e7216bf7484d069201609d693d","modified":1462973062000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/LICENSE","shasum":"cf1619aed46c3c608c54e1e4bdec5e7e38e436a7","modified":1424314960000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/README.md","shasum":"8daa12b88166db4477e22fafc46f47aff4055fde","modified":1457522252000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/bin/js-yaml.js","shasum":"d8d9dd979cb7920bc3cb49825dbca749754c0ca6","modified":1462972880000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/dist/js-yaml.min.js","shasum":"db4883ed4bfa7c9d689bf1f4d47c2120d30fe672","modified":1462973824000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/index.js","shasum":"1782c208617a1e4a087c61d82da6efd86d04cb82","modified":1404698290000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/common.js","shasum":"f98f5657b7f32c09d39b720d18d07fab29b09c05","modified":1455120652000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/dumper.js","shasum":"937d2a4c40c93117814fa0475eda1fb1b4042dea","modified":1460729804000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/exception.js","shasum":"52be5273180e8363d1afc784c31f127e9dbdd66c","modified":1452450086000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/loader.js","shasum":"6302d342ae2446b9076126506835a25ec351bf93","modified":1462973562000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/mark.js","shasum":"9bf058de26980a50acf01c4d257f8c66060bbf99","modified":1455146694000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema/core.js","shasum":"3942b19d860daad732f574c060535ef03e77bf4e","modified":1402439100000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema/default_full.js","shasum":"f49d934b90306c570d932a837ff4d8b5620b65c8","modified":1448519070000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","shasum":"4e6038ca3bd2862b87aeac97d58f72f13bd1dcb2","modified":1448519074000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","shasum":"93b94b7577f2529bd0fbbb9115df58d994204b8f","modified":1402439100000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema/json.js","shasum":"83b3938255db10353d6cb92bd8a8fc72490277fd","modified":1402777578000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/schema.js","shasum":"4baae806b9a3f0431fd5aef6077b8f84eec5273c","modified":1455146632000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/binary.js","shasum":"f87adeb6048549a3335625aa1a645d8336f8cdc2","modified":1459726194000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/bool.js","shasum":"2524fe24d6dcd4e4a14b62696a5fd16e54d8f3f4","modified":1455146322000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/float.js","shasum":"2c1307eb6e37e02cdb7fe0fded4cd42611975792","modified":1455146484000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/int.js","shasum":"acfdc2b49a36157a5946495719737357d35dbe08","modified":1455146286000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/js/function.js","shasum":"ae2bb2cb7f07be7ef047a8b32c26a184533cfade","modified":1455146142000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","shasum":"fa2f404f30b0588703ca112e9ef53eee3d61ad6f","modified":1455145890000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","shasum":"6ceced3a6cd321903999162508c5ba156a08d3f3","modified":1455145610000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/map.js","shasum":"2c6bd8f6087b3ba90952279dc4b40e283a6a4b7d","modified":1455145590000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/merge.js","shasum":"5b5d2be0a4ec4ca47376d88c872a2772bd876ffa","modified":1455145560000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/null.js","shasum":"5a1ca7a1f393f1a831dac6021bec81614cf483cd","modified":1455145502000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/omap.js","shasum":"27ae167ab147e1a9a155440eef86c78a6776999e","modified":1455145466000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/pairs.js","shasum":"a62980f470f956a1102ddc33a533dd356d964342","modified":1455145350000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/seq.js","shasum":"02deef81e8770ec42adf39e0ac93a8efcae87cf2","modified":1455145208000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/set.js","shasum":"54bd5eec6a8a57a8792d540f30343513077fe7e8","modified":1455145184000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/str.js","shasum":"efd9f046c952cd16f88e8b5dcdcf25f612f6974f","modified":1455145112000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type/timestamp.js","shasum":"1746736bdaee28bf5cb426370fd6d1d609721fdc","modified":1458198272000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml/type.js","shasum":"844dd1243c2b6a6cac723f50da8699c089ff14a5","modified":1455146594000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/lib/js-yaml.js","shasum":"faf3ec71c84b29e43e20adc783933d3aaf2c03e0","modified":1448519912000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/package.json","shasum":"b6bdad0df820daa74415a8b40e271f97c52162f9","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/jsbn/LICENSE","shasum":"d9b1b910dfea689402ffdb75f5467ec263f8480d","modified":1446116466000},{"_id":"themes/tranquilpeak/node_modules/jsbn/README.md","shasum":"6db673c03e15b4e75f95e25ba87177799511ad0c","modified":1446116402000},{"_id":"themes/tranquilpeak/node_modules/jsbn/example.html","shasum":"ec1f94b093e0f1457642f8647294be35d4af033f","modified":1446116402000},{"_id":"themes/tranquilpeak/node_modules/jsbn/example.js","shasum":"ba7f33b1196eca41a007177372fe237ac7a85c1b","modified":1446116402000},{"_id":"themes/tranquilpeak/node_modules/jsbn/package.json","shasum":"53923df497c906509761a501d24422c5b6674928","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/jsbn/index.js","shasum":"f53a89111c54f03ab39eab110c924b560b877051","modified":1446116402000},{"_id":"themes/tranquilpeak/node_modules/jsdom/LICENSE.txt","shasum":"0e478f455cef14d7d2ff25d4d620a4a9233f3bcf","modified":1442332924000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/Window.js","shasum":"4d017c3a039614c7d67fbb9da21b1230d6edfd53","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/default-stylesheet.js","shasum":"50e6fb4588f9234d2fe7926b6be07c445a899af2","modified":1442332924000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/documentAdapter.js","shasum":"2da832eb560b8294e9be0689fe4341a1e3471ff1","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/documentfeatures.js","shasum":"0783cd07ffddb7d212b72a92f148f8b3f9b2db0c","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/domtohtml.js","shasum":"01a481ba4d720aea22b826e7c2d5384fcff66496","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/htmltodom.js","shasum":"3ed183f1319012c11f9526acaaba2b4ca94a37c5","modified":1460303232000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/not-implemented.js","shasum":"a3e8f05c0fccc9d085c10912a93e15aa0d7d6a4e","modified":1442332924000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/browser/resource-loader.js","shasum":"8ab08b3bd18617e77d6936a840cc0a82ce5c0916","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/level2/style.js","shasum":"5eeeb5202eb877ca4796b7f7dfca443c329ac412","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes/Attr-impl.js","shasum":"12dbf07267f76e7e35c2228fb1a726a5bd818468","modified":1456341776000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/attributes.js","shasum":"c554efaba75881034f2b55b16d433a0805e58b5f","modified":1456773060000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/blob-symbols.js","shasum":"ced188a3e23fa538b8b8be0276eee16ee697a2fa","modified":1447407036000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/blob.js","shasum":"0ed6eec37b7d7b1381d00dd83ba5f3057692a34d","modified":1462028894000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/dom-token-list.js","shasum":"940df7d71e3549b62ca60606f5d4143339422d36","modified":1462028894000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/CustomEvent-impl.js","shasum":"2192497ad5248adfcaab7c3216d2a340a31d60c0","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ErrorEvent-impl.js","shasum":"475405b5df7527536253ac44169cfcef9da73d5b","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/Event-impl.js","shasum":"9fe0fdade90e740368240bfc76978adf7af4ea74","modified":1452974708000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js","shasum":"6c11f46323c90e96f08ea1a152d68f2f3a7db43d","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/HashChangeEvent-impl.js","shasum":"41ceac61185461b2ce73a6e5d25618210e58d17c","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/KeyboardEvent-impl.js","shasum":"a78009cfeafc3828c7980453fbf9da95711b21d9","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MessageEvent-impl.js","shasum":"06822873164dee32d76fee1828b146d19f6a7d32","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MouseEvent-impl.js","shasum":"231bd965129eca88c63c890d75e53a6f4a8e606a","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/MutationEvent-impl.js","shasum":"a247e273d506244f0c96081c8c9c7cb93e365372","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/PopStateEvent-impl.js","shasum":"8718e9e63348c5ff26143367a415d6ce979a5246","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/ProgressEvent-impl.js","shasum":"b872d2030b36cad4ca20e502c9557ccac5ecb771","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/TouchEvent-impl.js","shasum":"e46159962deae1437510b3a8fed888afd6c24c1a","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/events/UIEvent-impl.js","shasum":"848c2690adddf00f3c27f44dcddf12b63ea68ba3","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-reader.js","shasum":"9f9c817975223f3a05fea6225455f18380227a7d","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file-symbols.js","shasum":"feeb7205f4e7baf1f934f9c97d2aeb22ed57b08a","modified":1447407036000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/file.js","shasum":"dfd222c9b84d834790e8a0c311774c19c272cca2","modified":1447407036000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/filelist-symbols.js","shasum":"b301e69341689e9d0ea32cf1679281342c9cc91c","modified":1447407036000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/filelist.js","shasum":"732fafe285dc1c056160adb0ee75264f48c3bbde","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/form-data-symbols.js","shasum":"b29b3fa77eb881e0715ed2be0cb62208f5f74f3e","modified":1447407036000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/form-data.js","shasum":"c38353bf47f8058d1b956606360d46d7f40bea23","modified":1459101878000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Attr.js","shasum":"dfbe475a2f7b23453d73abbd8dcf00f829245e5f","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CharacterData.js","shasum":"d51b75b8f000e50a61fe8bf1d3880d3c938e2f5b","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ChildNode.js","shasum":"97b36673d5a01304e8866595e4d311b19106791d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Comment.js","shasum":"d1febadbb7444a51bacdfb6de71f3b084ba895c0","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CustomEvent.js","shasum":"293b947aed332ec73849400c899a31315939c7a9","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/CustomEventInit.js","shasum":"919b4f8222169a72a5539530e27f7553d432e54a","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DOMImplementation.js","shasum":"6bb203e8d2bcfce16129e5a796a10501041662e6","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Document.js","shasum":"2c6477a955b9b4b33b892c9c9814df198565e2c5","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DocumentFragment.js","shasum":"7bf380eafde0143f1ec7f0f87d0130effb6e0931","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/DocumentType.js","shasum":"b08330ca64c17260ff8121cbb12da9203f3d9d6c","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Element.js","shasum":"d61295b7828afdce05766e3027cf331cdcd73634","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ElementCSSInlineStyle.js","shasum":"bea450ab8b604de7ec81b4ed2726346deb4f76eb","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ElementContentEditable.js","shasum":"e8f6ead988399e69ac824afa3f86da8952fc755f","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ErrorEvent.js","shasum":"036617ce0ca8a2060ed779c30c28d4679844fd62","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ErrorEventInit.js","shasum":"11706a9e3c3a75bd83bd9ad5bf8af3a969bb1811","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Event.js","shasum":"32989c0202a4a2646f123bc6fee93a0edccf3310","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventInit.js","shasum":"f418e8a97e903ffb30decc45fe713b7a83776610","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventModifierInit.js","shasum":"fadca00809b95bb648c8b36a1028116d557460ab","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js","shasum":"78d8a2592015424655153e620adaef85456b2c45","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/GlobalEventHandlers.js","shasum":"f018f34a6eb8cf7118bd3cc4be07a682a2ac9c85","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAnchorElement.js","shasum":"d2852db69daa00356367be009fdd23b2e18eab62","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAppletElement.js","shasum":"fadda0603a83f9a3128f22d96f978a1fd116ca51","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAreaElement.js","shasum":"93620382746faf3498fedc08641639851b58318f","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLAudioElement.js","shasum":"44ed5302fabb51d026750dff7739c1d914ba4e2e","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBRElement.js","shasum":"f019e9eb84e53a28b03a6285b5a839cf04c6c370","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBaseElement.js","shasum":"66ec0bfc9ead354df027c941b829ba4b86966e14","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLBodyElement.js","shasum":"ddf78cbb2a07cf44572da0397acc0a74444b0eda","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLButtonElement.js","shasum":"19a7354065613203c2e21001e4351f8dd371f985","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLCanvasElement.js","shasum":"8e258f78454a00dd46c9e26c0ff190b4d9015440","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDListElement.js","shasum":"57989fd83f74fef115ccf474a322a57796643225","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDataElement.js","shasum":"edae3ad763249f76bda26f24a0dfc6d8169afa9d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDataListElement.js","shasum":"af5739288701d3cd3d291c439e6f9a9634ceb679","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDialogElement.js","shasum":"d0fd58aa114bc11c22a95d7351c155e3e7285add","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDirectoryElement.js","shasum":"7c554b48e7f3f39c56aa2d86e952bbaf5bf73efb","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLDivElement.js","shasum":"f2a3a2a2b7ec2bdfcbb30967e839b61349120689","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js","shasum":"d603f63bd0a28dc0842d5068cb99cfa27f4256ce","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLEmbedElement.js","shasum":"9ca53059c048211a097cee38568da0f85671525d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFieldSetElement.js","shasum":"f3bb9cf1b8667ab2e952e4c599ba3ec647a97d35","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFontElement.js","shasum":"7ecdacf8dceaef0d17885b58394d63fe4a2c18a5","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFormElement.js","shasum":"dcdba1a0b580fca5d775717f1598b4bbe47330ca","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFrameElement.js","shasum":"4d7710dd0a15d23af959e6e53871920c9a09c2dd","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLFrameSetElement.js","shasum":"3862aae1b9dca6730a2275bd0617e56ec55d7fd8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHRElement.js","shasum":"7674a3e1215a0e3a640444a08ad221f724c25e23","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHeadElement.js","shasum":"7c18cbd98068c909859d7cc6ce10fac733281792","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHeadingElement.js","shasum":"4ebc5a5ff68a83363fdc5d8b513d6a58a2ebc8ba","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHtmlElement.js","shasum":"ce1e962828afd4f60a3144aadf8eeada376595e4","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLHyperlinkElementUtils.js","shasum":"995e44131045abc956400fe574d32ee6e1ec0e2b","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLIFrameElement.js","shasum":"2cbf889d947e14e2afec1371aae0e3c13a78d5c5","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLImageElement.js","shasum":"63e1045605bd3873c25fdd94f16c1fbee6c9cc77","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLInputElement.js","shasum":"7569de7214c904d5940df08e3121c0fa6b5df203","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLIElement.js","shasum":"2b76196fa49969bc5e8ffa2a0eb1739238fda57d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLabelElement.js","shasum":"2a49ba63cc85c7ff4dd3176d6de1e9cf1c862e23","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLegendElement.js","shasum":"cb8750417cc6385936885881a6c3c2fcc4c0b1dd","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLLinkElement.js","shasum":"1f93149b64ef3c5d9e342219433af2a7f5243d3e","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMapElement.js","shasum":"07a87e43c22647e40263fd84bf6a7cd82b3a8cc5","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMediaElement.js","shasum":"3f75d19317e8dcaf171467c8ccf1674aebac6646","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMenuElement.js","shasum":"befbd261d5cdb6b2301bada7ef361ba06e52123d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMetaElement.js","shasum":"abe3f204b25f4479109db25e3965cbdb49b3eef8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLMeterElement.js","shasum":"e7b3a6ed57b4eb22d6f7beebe32cc78d2f74c88f","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLModElement.js","shasum":"90fde32d901787ec4c8e8c56bf980e8f08a3f75e","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOListElement.js","shasum":"fef7fb26eb09da5b34bff7751758c2f79352f00d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLObjectElement.js","shasum":"dfaf7c7ad05d81330cc87e95479b27ff2c0f6f2d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptGroupElement.js","shasum":"a9027a5ddb9dcdd16604fc567d531500d39566f8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOptionElement.js","shasum":"53a59aeebdfad03920e9ccfb2e94e442e616ae47","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLOutputElement.js","shasum":"4c500418d25686cca08e659a92369a08cc77ec55","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLParagraphElement.js","shasum":"1ac35cdae4c8c3a9082eda446af4c0ea0a250d64","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLParamElement.js","shasum":"5322d7ab336ab1b5de8f392c1ecb254f1009d1ff","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLPreElement.js","shasum":"2ffad2a6893d981d36a1427819ce03ddf8e7cec8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLProgressElement.js","shasum":"74141285ac28cec6d301b37c19165803a3121a0c","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLQuoteElement.js","shasum":"b8bd9441f59a2bc428be8de5992ea70c6cfe7035","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLScriptElement.js","shasum":"6ca9db8f7fd4492b86938031db7da7029b9ae8db","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSelectElement.js","shasum":"13461acb34808d5891044f837950ca78924236fa","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSourceElement.js","shasum":"70e9f119141a6c6dcf759d30de526b481bf76a85","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLSpanElement.js","shasum":"fcad015947b67ad6348782693df8511a57663fe2","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLStyleElement.js","shasum":"f5dc5e4abc4f3ba9a1401344b1431f17a0f6bded","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCaptionElement.js","shasum":"ee2c398fc9fa59561982fac5a9bb8985d125d0e9","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableCellElement.js","shasum":"d892e104f7345acd683e1e4b8ef52050c5389db1","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableColElement.js","shasum":"2fc9e3da655bcb2ed1c340d845ccc59869353b6b","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableDataCellElement.js","shasum":"f9dd7bff04d3ae8571b81ce1274f9914950c2577","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableElement.js","shasum":"9ff68f433a76b3361f8d58065624f9bb02764464","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableHeaderCellElement.js","shasum":"54d9441c6251cf04f2cd386f88213076cfdf2f12","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableRowElement.js","shasum":"6af8eb20eeb1ea565a28cc851e1681e410b6788a","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTableSectionElement.js","shasum":"377454796414d88c1e2e9530e6303b8b47c63cf8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTemplateElement.js","shasum":"67c5d3055bcb9290c1049df7775739d2a7e395b7","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTextAreaElement.js","shasum":"fd88992f4ab640a7f0ca885fc63dd32b4c04f78d","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTimeElement.js","shasum":"b67e5b1413fcdc6e69ebab58afb4e09855af2d2a","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTitleElement.js","shasum":"d72eb33d6db446261faaecceccde8fc985208a61","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLTrackElement.js","shasum":"243915f07edc07f02200355a84cad5f492877377","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLUListElement.js","shasum":"d5415e032c80b19db4fce46022049efc32e7c9d9","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLUnknownElement.js","shasum":"2e39f2e3c38e2cfa416b107d36d845178dafff2c","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HTMLVideoElement.js","shasum":"3c63166c7595a3126e739a01ffee2ed8ad1c9e48","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HashChangeEvent.js","shasum":"41a3028b9af938d33a72581cefc4b6c0d2fcebbc","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/HashChangeEventInit.js","shasum":"110ea4640303e81c471b778a2edc02214351b931","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/History.js","shasum":"ee45cd492e066d19e927f9f1e75a88c816a26131","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/KeyboardEvent.js","shasum":"c2afbb829efbc487426e5c75dcae7b0c3c0de275","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/KeyboardEventInit.js","shasum":"5adfa03eeab051a3f8a9c8810287557b71af33c1","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/LinkStyle.js","shasum":"f4a4a004e0394209bda018ac51a4b46b1a8920e8","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Location.js","shasum":"f5eb71ddf0362f3c49c8f9b8d0af2eca30bf4bef","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MessageEvent.js","shasum":"de123d830e5ca5e77ffaacd57aefb90d0c6d0fe6","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MessageEventInit.js","shasum":"219551a97e746d52e086a0ff702f0c2ab211ce00","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MouseEvent.js","shasum":"7492ba10a0328b4c10d60fb8ba65f86feabc0039","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MouseEventInit.js","shasum":"cd07254d7e21a16c0b4deb31bf48ae79e5f2ff36","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/MutationEvent.js","shasum":"c74c4812d0fe681c0b2a5d5bf1e423bbed5c3513","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Navigator.js","shasum":"fa6b0dfa1759aa65e8b6674f962de481d70a8057","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorConcurrentHardware.js","shasum":"fa04ff27b951267b1875327aec6b5c082fef2d89","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorCookies.js","shasum":"fc5b1e946fe10093638bc3178fe4c4a81535c1a9","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorID.js","shasum":"72b056671a90490278dbc75b5dd9277cb0b49493","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorLanguage.js","shasum":"33f37698d5c2c4646a8b3bb42615614ae4e49241","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorOnLine.js","shasum":"ae13988852a26c4d5b94b149e20221109ab9d933","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NavigatorPlugins.js","shasum":"b763a51590116130fc63f59aa3573690e7b3b71c","modified":1462030498000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Node.js","shasum":"1810f15e0f5718507d03fad0a8654b373c2e9919","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NonDocumentTypeChildNode.js","shasum":"541f4a9474c85abd4a5c7b8b91cb2f8c480148b2","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/NonElementParentNode.js","shasum":"281240cce6ff2dd6f092e0e8d3d784427d821412","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ParentNode.js","shasum":"cccad0a7a6713b5783170feddd8878d74cf2532b","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/PopStateEvent.js","shasum":"d5fac50fd32d620d74b5f4d4a47a44d83a7ebad5","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/PopStateEventInit.js","shasum":"ca9300c8f063be1199583ec9ce41f100a3096550","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProcessingInstruction.js","shasum":"67c1241ad739a81a3630bb1306220725f8fbc0e1","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProgressEvent.js","shasum":"c570354e2b4bb7c44decddd572d6740b340ccfd9","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollIntoViewOptions.js","shasum":"5a7fb54a8f49dd42052992f917032272eaa1df72","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ScrollOptions.js","shasum":"77e47661e9c7921fa87d893d7ccf6099456f298f","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/ProgressEventInit.js","shasum":"93ac586c53864b65cbedc0ca72256cbd5d5bbdc4","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/Text.js","shasum":"3cac015b0ad3b9a10e113be9b86ee4b85f0e39dc","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TouchEvent.js","shasum":"56ecc09509d21074e61ba484314ad5442fd229e3","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js","shasum":"08b77cc15370770793f6ee95a956bd87c53f40db","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/UIEvent.js","shasum":"6c5e4c12f7dbb3645e0c89aee36d0487cdefb7a3","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/UIEventInit.js","shasum":"697752e519a79a74d1570308f4193eecac3fb090","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/WindowEventHandlers.js","shasum":"79551b8aa6cba33f9a2de475746ea41cd46a3596","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/generated/utils.js","shasum":"c5fd30261bc3000d3f0729efe029ac65153b0bbd","modified":1462125164000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/document-base-url.js","shasum":"9a6a330b38241cddbe23dd1039e4c779c937c178","modified":1456767718000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/encoding.js","shasum":"40afbf8a1504107dc04779781735629ef9ff086f","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/encodings.json","shasum":"7236972cfebc62d12048759b2312e65331a517ee","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/headers.js","shasum":"19cc1aa2ba15d40b76709f5e8886ec5eb1a9bc6f","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/internal-constants.js","shasum":"a80011a5a4781bf282ec9b549bdba5b90ec6e069","modified":1459101878000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/ordered-set-parser.js","shasum":"80a68e028c4154d079817985d69c971b55e5b27c","modified":1443808180000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/proxied-window-event-handlers.js","shasum":"483dd04f78176ed639472dfbd8caf80c1b636656","modified":1442332924000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js","shasum":"95685364d488f4e451c0bf4f42a753d5e545b23c","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/selectors.js","shasum":"63cef4f0fa4def2cd1ad549bd4a26a5fb2417479","modified":1456768198000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/traversal.js","shasum":"f2aa19ccede8f0bfb4fa52a8af08de544fbd2834","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js","shasum":"077aef21bb1d00d3e1eb14d80b918b168475e856","modified":1452172582000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/html-collection.js","shasum":"5a8105c9785387902faecf62a56d989b1e77b4ef","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/index.js","shasum":"670ef7afd0c459633d087f26ada2392df11e2c90","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/named-properties-window.js","shasum":"20eb69ea8204ab7231bbd6dc02ab050f8bd468b7","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-document-position.js","shasum":"592e5f4576379ce2636fa02ae07aded9773fbbcd","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-filter.js","shasum":"f740154f0d72cff4424f2e5c766ceec2eaa990de","modified":1445096648000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-iterator.js","shasum":"6d855101e8495094122744d0c4a85eceb404ee62","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-list.js","shasum":"9d406497f63a5b445dc32008b9f5b0f281448bc1","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node-type.js","shasum":"41293df4016041192957df8af36489dcaae90eeb","modified":1442332926000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/node.js","shasum":"ce5999ac40e11f05f2766ccc0a20e8a133ab640e","modified":1456349318000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/CharacterData-impl.js","shasum":"dcc17589a296dbef4f0190996dc56577889b1aa9","modified":1459101878000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ChildNode-impl.js","shasum":"b1023c0ff482fb00bc783990f225522e045ea7a9","modified":1459101878000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Comment-impl.js","shasum":"7331b27821199bc4dc6cb0a7c197c0b614179ee5","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DOMImplementation-impl.js","shasum":"2015f6e2b3ce68f1e0d96827f8e01f4ee3572809","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Document-impl.js","shasum":"c63f3db747efd3b28c10a433de293d75370ec35d","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment-impl.js","shasum":"a748b337b7a6180921713afe83f66813c89475ad","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/DocumentType-impl.js","shasum":"8ea622c92f0cf207702edc731f341bdb8abbe505","modified":1459101878000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Element-impl.js","shasum":"75686d9eb392f6c9c2b3ea7765074e8ff9c678c5","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementCSSInlineStyle-impl.js","shasum":"27474ffaec986f57e6a16103160168f632dd6baa","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ElementContentEditable-impl.js","shasum":"c3619ff0b3bad09c36209340bf6978ac78037d5c","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/GlobalEventHandlers-impl.js","shasum":"4b5c11638bb14954f5ebf23109c5c4547e607f12","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAnchorElement-impl.js","shasum":"45de44b53c742c117b365fe1cec5527a8b1cbca3","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAppletElement-impl.js","shasum":"036be4242db78a33dc4b9bce7bee389acfb7622e","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAreaElement-impl.js","shasum":"e60282640641e907cd431f6311a037669363104c","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAudioElement-impl.js","shasum":"10ef14c0afc3652302c4778237f19cccc9e06564","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBRElement-impl.js","shasum":"e1fc8dc55f846bb2d66eb933a541ed3c44b6825a","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBaseElement-impl.js","shasum":"7a80f2f0c93b0eb426c216942a3f67275619df60","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLBodyElement-impl.js","shasum":"758a89b40bca86d2486093c0ebf7c9453cd1c1c1","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLButtonElement-impl.js","shasum":"16b7ce1085914d4a06d80b0dd99529edb161a6f4","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCanvasElement-impl.js","shasum":"258ab917f8d9b906351182897472e6beaa6a368b","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDListElement-impl.js","shasum":"5745c42732be20bffda1f9a6c4c21cbac6878f7e","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataElement-impl.js","shasum":"7e91b7a7ed1419ff1e6984ea15249e6a45d46953","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDataListElement-impl.js","shasum":"af927134d2bd697e52bbd5bc571613404dd831c2","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDialogElement-impl.js","shasum":"9f31788eaf6ce49d46774da5692965902ee810c8","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDirectoryElement-impl.js","shasum":"fd905ded23db5050ff4c8f1ed76edb15978dbfc7","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDivElement-impl.js","shasum":"f0a69c856b283cc459aaf0afd33220bae6ddaa7b","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js","shasum":"b4ced7750e36ce7465330f2e8c91778c89133f60","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLEmbedElement-impl.js","shasum":"3ebb2f88d475ae103ec3512f9af3ad99800598f8","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFieldSetElement-impl.js","shasum":"03ac863944c38bc49a7de08b137b90c050b2fac4","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFontElement-impl.js","shasum":"793ecb91687b5a50543c97eba7a0d8a7ba15f6ee","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js","shasum":"e19270657c35663f14bfb2cd58e01fe6c88004cf","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement-impl.js","shasum":"ea276c8affbd698481396296dc2058e9c881ce15","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameSetElement-impl.js","shasum":"69ce5243f85a8ea71a0c503c6b5e824c8cd3cf49","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHRElement-impl.js","shasum":"522c797970ee672ee643126c76dc9793bfab78e6","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadElement-impl.js","shasum":"2bbb27a5521fad3f5f005759ee459dbe5a68383e","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHeadingElement-impl.js","shasum":"c7a7e816d36404d52806c08419ca3733c2cd541d","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils-impl.js","shasum":"c934f11f64ffd88b525c6ea7c540d3252e303c4e","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHtmlElement-impl.js","shasum":"84f2328b8627fe8ad57ca86ddb792699ed0bf3a8","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLIFrameElement-impl.js","shasum":"6a328dcb608e279b9765007916331ad8e9db1435","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement-impl.js","shasum":"b273c71e73c5ac0268e32aaacf8298f4c6c233f0","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js","shasum":"fdc52c2bc8d0cd18dd77a6031c9f50af6c3fe88c","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLIElement-impl.js","shasum":"0de9b191217dab95b971b16b8a434fa68ca05754","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement-impl.js","shasum":"e872c25daaac0551a3b217b27681d5c769226c0d","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLegendElement-impl.js","shasum":"bd735cf259ad2b60699a31272cba663d45850b44","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLinkElement-impl.js","shasum":"3f4545b0baf05cf7770207e0e9498940c60a53b1","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMapElement-impl.js","shasum":"e837967275436a0f8472b7882073ad6fbb7640b9","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement-impl.js","shasum":"c54d6eed1565f232f5f34eeaca9922e77cdb6431","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMenuElement-impl.js","shasum":"b197cebd03a3f8b82d1e04b7b45a17ad81fb5d63","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMetaElement-impl.js","shasum":"a8565f2cf7e547503bba3384468e93ae12232b9a","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMeterElement-impl.js","shasum":"713ac414ffaf309a442012bd170bf80320ad89cd","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOListElement-impl.js","shasum":"71ae32c167fba61cc8fd84eac0f8d9516ecdbe68","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLObjectElement-impl.js","shasum":"cbd1932ffe495a6be7a71406f2f3819da86ed7cf","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLModElement-impl.js","shasum":"3b0ade9f9a70899a2655b3bf4c4006a0779a75ab","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptionElement-impl.js","shasum":"4adeea7e02e3892bb218d99c985aa7d9853fd00c","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOutputElement-impl.js","shasum":"b6f7cc308c41fea7b85f549816164db23331b399","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParagraphElement-impl.js","shasum":"91789409b7df92ff1eda307e249d2e938d2e4aa5","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLParamElement-impl.js","shasum":"8a93e6414dcb7b744b06ebdb75e69ef76c74cf7a","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLPreElement-impl.js","shasum":"cd8d14f01925fe9a17aa479d22b7e7001920b4c3","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js","shasum":"4ece1b78f2e36c4b3ebfa02820d287a26ce13b29","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOptGroupElement-impl.js","shasum":"36378a95447fc107cd82ee379a24117b60ca0242","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLQuoteElement-impl.js","shasum":"3cfbf13d84be80e6d08e2b38c7faf7ab26fbfcfe","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLScriptElement-impl.js","shasum":"06bab498ea963dde4f1883080db9a86f69260302","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSelectElement-impl.js","shasum":"98533dcdcb51e6d28892774695269d3d274928f1","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSourceElement-impl.js","shasum":"612dce739a72688fc1ed6ebebe0e8f89fb7bcd9a","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSpanElement-impl.js","shasum":"dce2f95d89a49bf7f016c6c467d64da0a758b0bc","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCaptionElement-impl.js","shasum":"495dc7ffe10fc0ff26a7005fff8eb8c8574922de","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLStyleElement-impl.js","shasum":"2428a963631705fe26b848b7d045deb37f2d1b88","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableCellElement-impl.js","shasum":"28a155e17ec7d0d84b155010409861a9100adfb9","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableColElement-impl.js","shasum":"43b95465e274b8f06b53921c844d8f2b8d0f3023","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableDataCellElement-impl.js","shasum":"792dc8a6615a6542654af29b1bb95d2233763eb5","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableElement-impl.js","shasum":"66c4521c3362561f62c9494382f255151d56e0a0","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableHeaderCellElement-impl.js","shasum":"8ae6117c2d7e1ec864f546b22750ec33ef02d3bf","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableRowElement-impl.js","shasum":"c50360f8132335d68d85f6e8af498851c009b1de","modified":1456774762000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement-impl.js","shasum":"528b151751413721b36f600c74b5dc33b0be0e49","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTemplateElement-impl.js","shasum":"fd9b1fd1aea1ea19418ea2d3aad2e6a8530f8b12","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js","shasum":"aec9e2598d8bae858bdd9665d72e52d45b5dc478","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTimeElement-impl.js","shasum":"d273d82b6e145604fa47b12c25f20714e3258e3e","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTitleElement-impl.js","shasum":"e354e03a0de0940bbb76606f5e4784f352d8eaba","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTrackElement-impl.js","shasum":"96a4d25df733132190d721c361cd1943e97de8e3","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUListElement-impl.js","shasum":"dc1352274136e33447df34a0ea7a8764efbf600d","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLUnknownElement-impl.js","shasum":"11d82895fba655d6d6b79aba217dbcca8988296b","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/LinkStyle-impl.js","shasum":"ef561f0f35ba155cdd34a5f0eafb8ae56b4b37c6","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonDocumentTypeChildNode-impl.js","shasum":"aa41884c28e31841cfb4f687d6e752ec72a899a6","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/HTMLVideoElement-impl.js","shasum":"58452c14f36194121808bd89f13773feeb27afa9","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Node-impl.js","shasum":"a05479b2eb417a6dcdb896736f230649cced6873","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/NonElementParentNode-impl.js","shasum":"9c5fa37f1510a4231b95b3fb0acca08b24bafcf7","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js","shasum":"9ade75699c2041c1c2d03e7130f0009a1a9ed077","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/ProcessingInstruction-impl.js","shasum":"fc62596d80d42577ded289f8260b4877021d1a99","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/Text-impl.js","shasum":"81db6568a3cb1249f3f3f71caf100e3ed43ec31e","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/nodes/WindowEventHandlers-impl.js","shasum":"48b1382e6cc4f5039a31a7c0363d9b91e24df096","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/post-message.js","shasum":"926e61c0ec0dac944e51f88da85dd80c5e228ed4","modified":1445096648000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/register-elements.js","shasum":"bc1e82032d8de7c0f2cf3fe3645daf974874eec9","modified":1452798242000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/traversal/TreeWalker-impl.js","shasum":"03533df07354f5e2f39f9b6e45cc2958c95d4748","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/History-impl.js","shasum":"70e9db4531b266a52b3b939656bdad7d06480f6b","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/History.idl","shasum":"0b024ed0ac1fed36fc0008826c3091e9780242d4","modified":1455608828000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/Location-impl.js","shasum":"7a02384f86b84933c79fc8048896320ced7ca597","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/window/navigation.js","shasum":"8bd827613782c407f73f19af1a15c2db0e504e13","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr-sync-worker.js","shasum":"211143acd1e28e34e72367c53ac61c4405c94d7a","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xhr-utils.js","shasum":"a143b1f17688ca90e4d0531fffb8157d8790d096","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest-event-target.js","shasum":"b540432340b0814e9f289385120ebe8a9e7d4dfb","modified":1452172584000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest-symbols.js","shasum":"f6b724ba33b614eaa43b0b7e696e2ef28668aac8","modified":1447407038000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest-upload.js","shasum":"877af155d12fe69804b5df6a1a3948331d3358ab","modified":1447407038000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/living/xmlhttprequest.js","shasum":"6bb972bc856bf0153f9fe02c0fe4b70d6a0f0f02","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/named-properties-tracker.js","shasum":"f8953594c2ac67bb35c8e7f97b520d7c79f0eee3","modified":1445096648000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/utils.js","shasum":"41afc719e9bf665eb2266dc8f5fa1dce885771b6","modified":1462120844000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/virtual-console.js","shasum":"b848e3e1adae4764a1ace5f8e9620c191282151e","modified":1445185350000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/vm-shim.js","shasum":"b4ede6c392ac45d71c89f02ae372c233ab815f37","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/web-idl/DOMException.js","shasum":"496c95fccb43d24a264b70b13fa5fb7fd82165cb","modified":1456773332000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/web-idl/dom-exception-table.json","shasum":"d93a3251516cbdece0e729cc28f3993bb4f59c8d","modified":1442332926000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom.js","shasum":"f77a4f912b5569879d11de3981ff5fc53556114e","modified":1462124748000},{"_id":"themes/tranquilpeak/node_modules/jsdom/package.json","shasum":"74597b35dd54a9be8730413e1408b11321a3c1b1","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/json-schema/README.md","shasum":"9065e9ab354ce910706716a42584222674fe1470","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/hyper-schema","shasum":"a5972bcc99abc4936ff350f116a69390f8ac99e8","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/json-ref","shasum":"b5f7e93c3edc2eb501e913441ddfdeef0c04386a","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/links","shasum":"490c91fb104a16a76290377797a5411d21379614","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-00/schema","shasum":"253c4fcfccaf49023c10a1a92d81cc3d21344e8a","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/hyper-schema","shasum":"51802f7884c813fe2a002776aa97a440c7442d9a","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/json-ref","shasum":"2132a5a9319f8bf190040b49150e005e0916ed22","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/links","shasum":"09b2131c15d754a61a1baf1158a8e6c73644287f","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-01/schema","shasum":"10942d74811e1e16425e6219b0ba808b493321ab","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/hyper-schema","shasum":"117eb70efaa120edeb97caa6ca7e53eae8f761e2","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/json-ref","shasum":"31b76b211e24e56b0ff5ae3ba739835039cd96b8","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/links","shasum":"f8a835ea08959ceca9682cf1c30df6d5cf9ff033","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-02/schema","shasum":"ba84a3e7e9332328db986a1123084f2a6dba57f7","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/address","shasum":"b6e70440f5faf725b978da4e92f6f39100377674","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/calendar","shasum":"3e53cb296ba1799f39c5a00bc4627fa10e26e165","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/card","shasum":"c1405e471f81bbb4eea94c2ef85fa07195a8ad80","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/geo","shasum":"74d8c66f1ba74c6cd330b8acd5948efb5f2879e4","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/examples/interfaces","shasum":"9666b12a3d05e526886aa2650f0439d32b25f0dd","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/hyper-schema","shasum":"552aaa9921cbeb19c2c9b485e64965f7a98e22fc","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/json-ref","shasum":"9f121cedcda14cbdd55e2fd80a96e289d9a1f2f9","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/links","shasum":"5f1601142843a6028beb35cef8b851413a4dfa91","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-03/schema","shasum":"4b500e66b7c4a36bc4d3ff6da089d6228c54f94c","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/hyper-schema","shasum":"362194bf4c6690db17b848c1a796ef747bf7a6c1","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/links","shasum":"92cd269ccdfe3f3bc673205133cb9940afa465c4","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-04/schema","shasum":"7a6839ef21cf49fd6bdc687be7dbfbb92c97ac7c","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-zyp-json-schema-03.xml","shasum":"da15453583b019a448fae4b857fe29a583bc1a38","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/draft-zyp-json-schema-04.xml","shasum":"02845f4b0406bffb06ff5cb01eca43f492db6901","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/lib/links.js","shasum":"9d0d0289e4dd2840778b88834f17bad854b013b5","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/lib/validate.js","shasum":"97195ad80d4a217293a8bc240ee44c0c89a7fe79","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-schema/package.json","shasum":"72165f000df0fb97a03e398a299c76015af97f78","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/json-schema/test/tests.js","shasum":"f3f322d2cec777f57df41b071818a05e97d35f2a","modified":1345729210000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/CHANGELOG.md","shasum":"d9b3407ce2eef8d2dadc6b2839a8b16b783eef47","modified":1431978090000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431978120000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/Makefile","shasum":"589819e00a30573f50fa4a11ddb22fb45b372a65","modified":1431978090000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/README.md","shasum":"a2972dd72d8ec7c8b1f229f7732f911ed721dbca","modified":1431978090000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/package.json","shasum":"420de219e682dcf393e88af5163bfe557a7dcd43","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/stringify.js","shasum":"b36a3a8d0f794fae13dc8e1c93bd4a8cae311bf2","modified":1431978108000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/test/mocha.opts","shasum":"98216b4fbc2e0c1c17ee946b02272a26fcc1f4c1","modified":1431978090000},{"_id":"themes/tranquilpeak/node_modules/json-stringify-safe/test/stringify_test.js","shasum":"4760401b04513ae7eb79fff0e1239a9947a8af78","modified":1431978090000},{"_id":"themes/tranquilpeak/node_modules/jsonpointer/README.md","shasum":"7b05e3bfb84beb3a5e7607912fc47ccc8d2b1e33","modified":1430436730000},{"_id":"themes/tranquilpeak/node_modules/jsonpointer/jsonpointer.js","shasum":"cd510cab1d95a07efc733965dd2533a3fad50e51","modified":1432600588000},{"_id":"themes/tranquilpeak/node_modules/jsonpointer/package.json","shasum":"c2125cd7e156c70ef20505de3c9e838359247342","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/jsonpointer/test.js","shasum":"ac5befd353f47b170e2efececbf1ef6d82bc6ade","modified":1432601160000},{"_id":"themes/tranquilpeak/node_modules/jsprim/CHANGES.md","shasum":"78408bb8134cf04a31cdef822b3152d65fe2c157","modified":1466686360000},{"_id":"themes/tranquilpeak/node_modules/jsprim/LICENSE","shasum":"772b18147b3bf826978f984f8e01562a9e3cc254","modified":1466615538000},{"_id":"themes/tranquilpeak/node_modules/jsprim/README.md","shasum":"1e6321c157fbec42de91c8c1e9606d6da0d65d62","modified":1466617210000},{"_id":"themes/tranquilpeak/node_modules/jsprim/lib/jsprim.js","shasum":"4c80b47c4ea9b0c9997ed3c9bf020d3e05b1b4a9","modified":1466616826000},{"_id":"themes/tranquilpeak/node_modules/jsprim/package.json","shasum":"2bd43cbab4ad8abdc3732b7c464a2c024616205b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/levn/LICENSE","shasum":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1428772038000},{"_id":"themes/tranquilpeak/node_modules/levn/README.md","shasum":"2cf8339d3d22e4da8301490886198be36bc5df7f","modified":1451343160000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/cast.js","shasum":"9c71da793fbc3afb65fee1771e43af53fafbf9f5","modified":1451341816000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/coerce.js","shasum":"f1e0c246a58647693045831c4677a4921b55a3ba","modified":1428772038000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/index.js","shasum":"615354af2c1537b9c53e28df01f9ec422806b971","modified":1451343090000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/parse-string.js","shasum":"64ccdc140db4bb86d7efe7514a3cacf2ec535b68","modified":1451341816000},{"_id":"themes/tranquilpeak/node_modules/levn/lib/parse.js","shasum":"417fd1480398bbb329be02a1bbe81afe7284e0aa","modified":1428772038000},{"_id":"themes/tranquilpeak/node_modules/levn/package.json","shasum":"dbcf5f13d7441900ed05738d27e0e3ea090c3fcc","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/lower-case/LICENSE","shasum":"3a7f886b632d2197676a40020d354e84b7860604","modified":1450198532000},{"_id":"themes/tranquilpeak/node_modules/lower-case/README.md","shasum":"02e95bcbe0aea1d158905ef0bf3b50cf81451fb6","modified":1450198666000},{"_id":"themes/tranquilpeak/node_modules/lower-case/lower-case.d.ts","shasum":"8c49066a879ca8a84407d95987a78babdb05779f","modified":1450198576000},{"_id":"themes/tranquilpeak/node_modules/lower-case/lower-case.js","shasum":"6c8e4acdd39af940362a63b3fdd40d98bce5b073","modified":1450198532000},{"_id":"themes/tranquilpeak/node_modules/lower-case/package.json","shasum":"3db52c15ad3784432bb5718ecf99285842e7d4c0","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431977928000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/README.md","shasum":"ddf09419a6e0e9df96d90de752d48d54b4089eba","modified":1458640918000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/lib/lru-cache.js","shasum":"eeb0f7c231e04d00540d0733077c28f1bc122d89","modified":1458641550000},{"_id":"themes/tranquilpeak/node_modules/lru-cache/package.json","shasum":"46c0e053185f4c6ff680e5a0311a3991519bfb44","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/marked/Gulpfile.js","shasum":"4ce77f37ef7aa11fdf5108e30cdf23729afa26ab","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/LICENSE","shasum":"5ddde30228c2d459718a64a71f7df5cef833fa1a","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/Makefile","shasum":"db2881743b9bb2561dee28907f21e45fa5101542","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/README.md","shasum":"974bb940928021e878477e8cddb62a35f9940d8d","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/bin/marked","shasum":"c321c5f1bb4a3eebbcd9567d3fa21a4371371377","modified":1460778522000},{"_id":"themes/tranquilpeak/node_modules/marked/bower.json","shasum":"6e7d9f189e42c11b7dc07928b92b8fe101a7fc4d","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/component.json","shasum":"bffa556684a1314c9ca9974c95d2d19e9104cf32","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/doc/broken.md","shasum":"71e1adf7a9fb5363f49207d73dcbdcecf637487c","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/doc/todo.md","shasum":"b9c6e90df6c81da9945bc385ff81dc5782b30932","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/index.js","shasum":"5ddf7807f931d19f61fa3405dd8e3d77b883c746","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/lib/marked.js","shasum":"f4fc785713cf23a80aa20ca35103c55b0f506a8f","modified":1469826550000},{"_id":"themes/tranquilpeak/node_modules/marked/man/marked.1","shasum":"23982feb562b1f3ee3781feed17e873989363549","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/marked.min.js","shasum":"37f3186f93ec854f56bf745a5988a89225e8da6c","modified":1460778494000},{"_id":"themes/tranquilpeak/node_modules/marked/package.json","shasum":"962cf0900f183a7e16cf4f0190e85c8dbcf68b75","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/mime-db/HISTORY.md","shasum":"bceaa30c9395e7c2ad5e29fc20ddda0d6054bf1b","modified":1462141184000},{"_id":"themes/tranquilpeak/node_modules/mime-db/LICENSE","shasum":"b559c45c8d07f2679620d9771e68696ee3d5964b","modified":1411609788000},{"_id":"themes/tranquilpeak/node_modules/mime-db/README.md","shasum":"1018078c0d9fd0331ca23ac5d97ace15596bf46c","modified":1449696522000},{"_id":"themes/tranquilpeak/node_modules/mime-db/package.json","shasum":"b52f67c1b2fd447e44f558241c679fd2d9d442e7","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/mime-db/index.js","shasum":"31180f8d0ae079b1bee7ee03e77ea5323583eb06","modified":1411609788000},{"_id":"themes/tranquilpeak/node_modules/mime-types/HISTORY.md","shasum":"47b393110db1188fd90dd1e5cb65c3a6f63138c5","modified":1462143330000},{"_id":"themes/tranquilpeak/node_modules/mime-types/README.md","shasum":"bdc1c75e9234d1d6fc56c819cec51f568be5c68b","modified":1455547166000},{"_id":"themes/tranquilpeak/node_modules/mime-types/LICENSE","shasum":"f027af3e61af3880fd7f7b8ba9452a85dd215738","modified":1455543904000},{"_id":"themes/tranquilpeak/node_modules/mime-types/index.js","shasum":"d1983bb9d10cc678f693be62ef05e1b8c2638ef0","modified":1455543904000},{"_id":"themes/tranquilpeak/node_modules/mime-types/package.json","shasum":"718430dd8c0de352916fb726b63b41e899ea2af4","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/minimatch/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431977866000},{"_id":"themes/tranquilpeak/node_modules/minimatch/README.md","shasum":"c5acb4041ec3730165d4d6ce835a6bd801c8ccec","modified":1455981022000},{"_id":"themes/tranquilpeak/node_modules/minimatch/minimatch.js","shasum":"2570f41a05bb9ce73241912c6266926236a95c36","modified":1466157486000},{"_id":"themes/tranquilpeak/node_modules/minimatch/package.json","shasum":"4e635b772904082c8f9ee68845ab4a82eaeb0ed1","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/minimist/LICENSE","shasum":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1372123820000},{"_id":"themes/tranquilpeak/node_modules/minimist/example/parse.js","shasum":"7684d952ceaa32a8c9e3cd21ba26a62e7ee14387","modified":1372125706000},{"_id":"themes/tranquilpeak/node_modules/minimist/index.js","shasum":"c69b3860fa8b40337db188fdfb201077df93ef5b","modified":1392932762000},{"_id":"themes/tranquilpeak/node_modules/minimist/package.json","shasum":"951bfee2d5d7d63487e9080022d52fe03b33c56b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/minimist/readme.markdown","shasum":"b037b8453fa008383cf7495b3736aa7cc217deb1","modified":1372126596000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/dash.js","shasum":"27fa6e19e26916edd7fd46ccc2d0b2301b3042a3","modified":1389353198000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/default_bool.js","shasum":"ecdb759c4275fb23bd5d072c3c6a7baa74b407c7","modified":1372125472000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/dotted.js","shasum":"51664f4efb36d519b2e439f1156e05e917c08bda","modified":1377709080000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/long.js","shasum":"f0ccd5d55358f78efbc928753264e4a32f7724fc","modified":1372121546000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/parse.js","shasum":"e240ae50a049d7b4b4b625467df34bcfaef7dceb","modified":1392932762000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/parse_modified.js","shasum":"5c3cf170e2a2476e0f5bfee9af78556a1958d503","modified":1372123756000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/short.js","shasum":"2ce00fdfe4906fc504286974c143c4ced6a11b12","modified":1391892346000},{"_id":"themes/tranquilpeak/node_modules/minimist/test/whitespace.js","shasum":"ea3a87137fa34c00a7d84a4d0350770e8d85ed9c","modified":1372126560000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/LICENSE","shasum":"35d8442a9599f876c805b2c7d31178ecfa18c829","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/bin/usage.txt","shasum":"682ca66d4def0ba4af814be4e6363eff5fcede0d","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/bin/cmd.js","shasum":"0dbed17e23d62e8dc9893f9459768531b300c95c","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/examples/pow.js","shasum":"6d34dfc0f5f17a971dee0f5ba40eba5219bdd803","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/index.js","shasum":"e4aca996fb54ff20c3dad61f1fa7807fcb44409f","modified":1431549094000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/package.json","shasum":"1f7a16388c59780102f27d146453ac243af15798","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/readme.markdown","shasum":"e4ffd1099773d1e612dc9ecea76dbb791ef355f5","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/chmod.js","shasum":"ee02690748279a5bad6179dd3feeb66a48d330c8","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/clobber.js","shasum":"4d00dc55c23f21600adbceb6760587b3ca861626","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/mkdirp.js","shasum":"628f2dbd4137f64e69454708ba513870b85af4c8","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/opts_fs.js","shasum":"8dd756971f7443eb340b846acee0c17cbadbcb87","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/opts_fs_sync.js","shasum":"0f949a29099c6206e617d6e9e39cb3a41d0daab4","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/perm.js","shasum":"11382491d90f70fce17e9d183765c343c7870c3c","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/perm_sync.js","shasum":"1759536f89220a608a3987a3038cbaaa0e7458ac","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/race.js","shasum":"237f49a5262bc2c668653897e8cc1af8eaa5bd89","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/rel.js","shasum":"2488c0b77bc0419a4646c7d0bcfaaef5651995a5","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/return.js","shasum":"dc2bf5dd5eff2e6a914fc1f731f50ac887ef9d31","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/return_sync.js","shasum":"ef9a789aeb65bafbbb7bceb048dc33ec24a41e3b","modified":1419601642000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/root.js","shasum":"b034b5fdf0da3932263437d9d52b53642a2b40ad","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/sync.js","shasum":"22a3775a59d8994c368e5574ba8ffbe19c8b8648","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/umask.js","shasum":"d08a2f100ddc37e563e548fd9f7730599009824c","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/mkdirp/test/umask_sync.js","shasum":"917a95e95427eecd9a0cb7807e0ab6ab3c653fcc","modified":1431547196000},{"_id":"themes/tranquilpeak/node_modules/moment/CHANGELOG.md","shasum":"d7757e1072f1a799849dae37e196ebfb2f3e376f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/LICENSE","shasum":"7f9ee3de6737e2e37f2936f432c5ad029c966a3c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/README.md","shasum":"9109da3a08855d73337baa4dd0c4e19b437ab5da","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/ender.js","shasum":"f26dfccd69e35b733a945a083bb64b20bf968bb3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/af.js","shasum":"8b1531153d3ac03635b25b22b2bf2d6f9b1605fd","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ar-ma.js","shasum":"a84bc50022c85f90c586e1e375c58a17bbe38db6","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ar-sa.js","shasum":"8e6983f910fa1e660dcf0a30cf4df6e402efc566","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ar-tn.js","shasum":"26175558ab192f87fa95d700d9df17e932d28e60","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ar.js","shasum":"07c5e32b72ecaa66da60877220495bb2fd071270","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/az.js","shasum":"7f0334e4bfb316c7f75ad06d6e86b7fd77f24b2b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/be.js","shasum":"6734eac3b7482309e91ca41100dc5dba10d8182a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/bg.js","shasum":"2044614467b29110c75d0963fdcf56794c9bd9da","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/bn.js","shasum":"0056d08c29e104366826989fe88a6e01c033fee3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/bo.js","shasum":"671ce53c59c8478f1fb42b284ffac96d2ea84a9c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/br.js","shasum":"cbccecafc503c59814fbbd269a104ac7a4973bc4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/bs.js","shasum":"e6836766cd57783115336bbb4ddc90802543b96e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ca.js","shasum":"f6434ea9b62b19f0a35438ad58f4088f9b36d61a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/cs.js","shasum":"282538246b5cd7d8ac5f27a83f65053ea63248ff","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/cv.js","shasum":"db741764ad5bdef1683def232001a07c3f47386a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/cy.js","shasum":"8c3bfa147580a3bda90e5b056c29fdc091d9d70a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/da.js","shasum":"042bae240209148b36f0d19a1e5bf297ba2af4f1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/de-at.js","shasum":"230cc2fe7d6dd4921f10263cd2599c8662d36905","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/de.js","shasum":"097b38f94f0b29d691cdffc4215e71085ff0ff04","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/dv.js","shasum":"9d1baeabac0cbdd670745c110e9d531dc67ab531","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/el.js","shasum":"d0a7096a32659f200d004fef6ec61271e25ce57e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/en-au.js","shasum":"afe16be0c15ea83592bded77ddb84d09ed3b779e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/en-ca.js","shasum":"2c2ab66ae4fb2fafa7b01996c6795e1cb75a2557","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/en-gb.js","shasum":"c2fb8777b6062feea78e522ef647a1b2435af755","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/en-ie.js","shasum":"6fb8d7401e8453e7c98752684c0f50f4977ab9bb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/en-nz.js","shasum":"447ab6455e352ea1f2b117caa4f94bcf31e8843d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/eo.js","shasum":"9b3f5488c46ae9e45b98abc265a4c25a82dbad9d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/es-do.js","shasum":"eb19e360a692b59ebebaea1eeaa4f6de937efde9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/es.js","shasum":"730071022361685c48ebc4e94bc29cc5363f22a9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/et.js","shasum":"033f7fb7bfd2210e8021e39b923af88562a29704","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/eu.js","shasum":"8054d25cdbc0b0bde6cf3348dcb79b4cbdb63b4b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fa.js","shasum":"ee619ea0932f0a66d141d5aa8a467f2220917918","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fi.js","shasum":"6b4e40b2c8c7d0e4e5ca47d9deb0d69604a41c67","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fo.js","shasum":"f431d74ab3905a1ae2f3f0a2e79e175af276783e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fr-ca.js","shasum":"ac0777f0afe9a3fa23388bf64bcd6a986437d5ec","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fr-ch.js","shasum":"42e65a1b84ede7d78c7238798242ee09b30a69d8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fr.js","shasum":"a36234051bb8abcf5324a2f66947d2498f896651","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/fy.js","shasum":"f3f21e46d83e92b77f270ee90812bc01e3a47f6a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/gd.js","shasum":"5277f7f27d1731de53edbbeed415c2e610ab6278","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/gl.js","shasum":"f22643064758aab1549feb9e38cc189574efdff4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/he.js","shasum":"4dcee93b8e690cda199c125f9b2c8f6dc5f42385","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/hi.js","shasum":"4dfe4c0487a427bb3e5ae570f1c20596c2eb9a70","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/hr.js","shasum":"69ca575a114468f708f19eb23d93ed4419f07ea0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/hu.js","shasum":"4ee352663a8a195d126fe87b9c5914e66e8881b2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/hy-am.js","shasum":"5b13d5b442031b65c5ad7e37ab99f66991c1ca54","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/id.js","shasum":"88c33d9e461ac425f9038ff9c51171a1f7689cb1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/is.js","shasum":"375eb09f0309fe58b65b686a6431a28c427a977b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/it.js","shasum":"cb0374b40d1d2c89dc8717ec1a06e71988c51fd5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ja.js","shasum":"2cd70a5c96236e42be4e9ef470b9ecd54473fd25","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/jv.js","shasum":"29280ec877aca54eac5a57fb2858158fdc12a9e6","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ka.js","shasum":"86c59b4b85c8d33294753ad760529593c5dec249","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/kk.js","shasum":"44775614ae3fa8eaa3de93ac14ad7711d87225cb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/km.js","shasum":"cfbcd1e8ed45561d259fc25e289b22db5ad6f55e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ko.js","shasum":"82724bb00d4dd5b88edbd96c3afd86257107683e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ky.js","shasum":"ca509981c84e6fc9ab0fff12835e41f4d21f7eb2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/lo.js","shasum":"39d2a68fb4a688885af047813a936a425ba6af35","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/lb.js","shasum":"7fa019dc3b837682746cfe2f5c0f6127e118bcc2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/lt.js","shasum":"a1412427580c65cb9869f4c7e7eebddc5b2645ed","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/lv.js","shasum":"24b323355ca74824dae39ec815acac26be29323f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/me.js","shasum":"e03cd6cb42e72710ca5403a79d039efbe4747a07","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/mk.js","shasum":"651c5901b9de7a4820bf990dee3c344facc487ec","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ml.js","shasum":"82917b8f08e42bbdd8f3abc208aaaecdf3d82977","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/mr.js","shasum":"f60eae472c4ef2a094ae88da9446959462de2b41","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ms-my.js","shasum":"29257306e28d40982d4a1b5fbefe38548f6440e5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ms.js","shasum":"cdd2ac0187d4ed7d598a85251104e78aeb026dc7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/my.js","shasum":"84c8789bf1490ec72fd4b23c56baafe170cc6bee","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/nb.js","shasum":"da6251d1381c2a423112e28c3cc37b7b85540c57","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ne.js","shasum":"c6fb124e1c42b8dcf2eed5146a8b7cf7fb4dcda8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/nl.js","shasum":"d855d17d7ef12e7beee25a05c2013ab57a2b0ce4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/nn.js","shasum":"b78381e43637d987a2e19d122be23ebd9ce435f8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/pa-in.js","shasum":"e77f6645ace7d0e02a056b8015b7257246481d84","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/pl.js","shasum":"fde03f62082dbc24a1df33cb67706a14fe1b227c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/pt-br.js","shasum":"72e6d50adb2fac076bd5c5107dc680fee7ff1405","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/pt.js","shasum":"6beff96b09453f4017daefe05a11b394962fc0d4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ro.js","shasum":"cdae08e287d7b51645fa810f4b0767d1220aef1f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ru.js","shasum":"46fc632cad03ba3fd9294509ce4f90881b652dfe","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/se.js","shasum":"d21240b6aa1968f026bbc2dac9ad58c31268a04e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/si.js","shasum":"e32db2f793bb06924fcd24f355cc0ceec182b0a7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sk.js","shasum":"c0391ae0a72e6d4a4509023806716ddd45a6617e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sl.js","shasum":"9647e5318e155cca1e3e83e4d2154d2470e4e0c9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sq.js","shasum":"05d74ead5ac9e735772c22b656c7309b07fb15fa","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sr-cyrl.js","shasum":"3f6b201972e66c4644b5011fbe537716d31149b5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sr.js","shasum":"329cd6fae7a2b9c9716271ee984960f84a868115","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ss.js","shasum":"589caec1d2e33e8e5da31d312d82db9fe85f4277","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sv.js","shasum":"c65478ff3357499cc0f88820a7066bdd61f5d6ba","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/sw.js","shasum":"5405966aead08de13fdd8e229e0870ee91e393b2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/ta.js","shasum":"5d998d4f81a1d8f3bc3e8975dd4842f1797f6bc9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/te.js","shasum":"d2a33b662de1896b556027360ecf61b5ebbe5fa7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/th.js","shasum":"047af80bb50f84cc4b4944b4fd133e837c357b28","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tl-ph.js","shasum":"4793951513c0af58d1a190f7017b3dcc2e2636af","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tlh.js","shasum":"5f9107f23658031dd0c80ba29aa817352bcfa8de","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tr.js","shasum":"ec3d16eec018302d152ea3bded18a3988783ff56","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tzl.js","shasum":"d20f43fade993d7cef88c01009d791209ec433c5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tzm-latn.js","shasum":"68c45574a9247b24fee14f272d8959be88b05bde","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/acorn/dist/acorn.js","shasum":"4c76936dfc3bc81dc764ee9d86d18a290640364f","modified":1451878278000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.core.js","shasum":"d12f5463e4c6ffd4baf2ec50f7cafc095eee7195","modified":1466171020000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.min.js","shasum":"eab4525cdce5ce8d34ec19d81bd2fab360820cb5","modified":1466171022000},{"_id":"themes/tranquilpeak/node_modules/cssstyle/lib/properties.js","shasum":"1c861b6e496dc3aee365966ed2f4a043280fa14c","modified":1464135630000},{"_id":"themes/tranquilpeak/node_modules/escodegen/escodegen.js","shasum":"f8f6a70fc5bf24a1bf77b1e02484cf2c94d93b5f","modified":1451754704000},{"_id":"themes/tranquilpeak/node_modules/hawk/images/logo.png","shasum":"7b9844914960e180d2f243d74a50f2b4fa23fbdb","modified":1447943728000},{"_id":"themes/tranquilpeak/node_modules/highlight.js/lib/languages/mathematica.js","shasum":"78cee2f480b2ddb3e23dc7cebfb0bc07b60e0869","modified":1467128756000},{"_id":"themes/tranquilpeak/node_modules/hoek/test/index.js","shasum":"f9112be27168572ac86d62b7abfdfbf94661c8b6","modified":1442835956000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.min.js","shasum":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.min.map","shasum":"2c278f6b68f7555e35f18c792860f25453dad407","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/js-yaml/dist/js-yaml.js","shasum":"eb5914bbc20757a40300180a15a85efa8a516b1b","modified":1462973822000},{"_id":"themes/tranquilpeak/node_modules/jsdom/Changelog.md","shasum":"5791cb5f21c9436c88b04c25386a704856bbd35b","modified":1462125114000},{"_id":"themes/tranquilpeak/node_modules/jsdom/lib/jsdom/level3/xpath.js","shasum":"2d7ceeaaac284af2f1755aaeb9dd891e89370d50","modified":1452798240000},{"_id":"themes/tranquilpeak/node_modules/bluebird/js/browser/bluebird.js","shasum":"af0daca47da0705a1df5de6be0c9566583d9acc1","modified":1466171022000},{"_id":"themes/tranquilpeak/node_modules/esprima/esprima.js","shasum":"236467528a5f921640ba628ae54014cc738c4e72","modified":1454452006000},{"_id":"themes/tranquilpeak/node_modules/mime-db/db.json","shasum":"439412370cbfad3a0b40d96dc8c1a058ee1efc97","modified":1462141000000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/tzm.js","shasum":"d0bda945e13b25905db652f40c4e0236ce076e0f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/d","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/e","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/f","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/sub/b","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/c","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/test/test-empty.js","shasum":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1423069020000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/uk.js","shasum":"28a9057d39636c9e7da5e46cdcece77a1d1e4ea5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/jquery/dist/jquery.js","shasum":"26e6b63b81813d8ad942c90d369df2673602b812","modified":1463743482000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/uz.js","shasum":"b6d0e8918af20835f0e2a4a06e49852bcdb1e8e9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/x-pseudo.js","shasum":"d06f571fa56b6bc18bc2aff56e198a0c6739744b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/vi.js","shasum":"766a49721890d0003559bbe655a70a8443cb3116","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/zh-cn.js","shasum":"c59db52687e4f0cfe20ab7d55dad0e6469b231df","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/locale/zh-tw.js","shasum":"84b41a7efc6c0a7a92559cdb9dfa938da6195604","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/min/moment.min.js","shasum":"b765a4ad85bdef6c639116aaadc8acf3fada958d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/moment.d.ts","shasum":"5c8fdcef13b14980a059a062790d65a1ad6156de","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/package.js","shasum":"ea880b139fa5aad30129356d4c2b61c7acad7452","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/package.json","shasum":"fce83c21ec181e80777412b394a995b43da12875","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/check-overflow.js","shasum":"5eca9703243cdaaf5648cce596d5d9964eb94c98","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-anything.js","shasum":"c5bb906e7881748656ff4ee73e17208a790d7ad8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/date-from-array.js","shasum":"c000dcf404cca94192f3af7c3741c3d78c53bc1d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-array.js","shasum":"0da77703061e91ab237783d477b78478112651fc","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-object.js","shasum":"dcb90c6dcfaa874ccb1dda84424137aaf565a244","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-string-and-array.js","shasum":"0dd8f1960db97f65ac71395c5c627327ebe7b769","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-string-and-format.js","shasum":"d9ea6ed284c977f51eb8d62cd7aad4873f200190","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/from-string.js","shasum":"2ccbf1d6f48fa5d9ebcbfdf36bff139bc8bdba8b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/parsing-flags.js","shasum":"6d048b1043038408f1dc865568e3d79a5bb561c8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/local.js","shasum":"6b7c65e9ca16eba14ddddeecc1b003b984c78fde","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/utc.js","shasum":"7b05ddc73ee99b7f13f526adbe5ef6d25b87b8b9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/create/valid.js","shasum":"32711500677c5704a38122c4443b7a4d6732cebb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/abs.js","shasum":"7970d96eb35228bb3ecb4603b63b27d3756367ad","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/add-subtract.js","shasum":"0fd8c21e60721fe9945b83988cd2b47122f45c6f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/as.js","shasum":"c06a643c21e7053fd8a9e2dcb652dd88c97c2b35","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/bubble.js","shasum":"fd42b8707944aca1780433a52b74ce2f2889fd41","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/constructor.js","shasum":"9760c6809f019345a39c3f4693e8709b535f53af","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/create.js","shasum":"90d8eae7485693cfcc086624d9ed696c465bf567","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/duration.js","shasum":"31e369b9d7179286568d61783bcf491e13b85f3c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/get.js","shasum":"e5ced6b4aeaca1002e8cebe2ea75d34d783af3f7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/humanize.js","shasum":"2466d676e8019b26ba574fff9ad8ffd23d182f34","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/iso-string.js","shasum":"a38e12ec46129eb0cf757133dc1c3e505b825040","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/duration/prototype.js","shasum":"6f1c3dc5ed984ebaa7ecc02c307e28e099d3588b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/format/format.js","shasum":"663f2e86e4f3c5531bc7d7b52ca6211441f40d2c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/base-config.js","shasum":"62107b58cb729cb61a4c110b05d7c00e203fe8b4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/calendar.js","shasum":"422e8f0d039ab047c6e94cde981fcf4afd48179e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/constructor.js","shasum":"4c99dfd1739fa75db2c2fd920dd5defbdd1f0030","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/en.js","shasum":"627ab4f844168511b96e94413f51602ea4f280d0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/formats.js","shasum":"745faed207ad9922484cf0b551ca0faf45e2cbb0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/lists.js","shasum":"62dd41e111a03c25b0ef4ec92c1d57185c70b74f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/invalid.js","shasum":"f719dd1276dceb5593675314c1bd3c4afb33f3c0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/locale.js","shasum":"2e00925beeb939bef0a1fac476b6c76f9b58c180","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/locales.js","shasum":"c49ef189b2f1e5758e7255d6a996fef9a99733c7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/ordinal.js","shasum":"4fbf81fd71d0e2ca7340db27e1a958599e8de422","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/pre-post-format.js","shasum":"da591dacc6f6be5e6a38dd204a2c3aba8ebff07f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/relative.js","shasum":"988bde5e483952ae03f882f9f8d160695a837adc","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/prototype.js","shasum":"22a17915e51aa0eeda3e13fffc76762822fa32a1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/locale/set.js","shasum":"4da968052ec395117d4ee3b030a238838f7416c4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/calendar.js","shasum":"757c364df57f2948148d1d41f7db9bc5cf5cdfb9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/add-subtract.js","shasum":"ec42edca925baa1466f472f07caba7b71e5de247","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/clone.js","shasum":"28653ed90f185af48a3f59fe843b7691bde47ce2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/constructor.js","shasum":"64360a4c894a8da23bf408d39f904cefc46d87c3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/diff.js","shasum":"2673615fe3f16eb1cb77f9b038466f60b0f33938","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/creation-data.js","shasum":"4673ff4ae13812dd63731aefa0f98fdb58d08bd7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/format.js","shasum":"b81dc7335cecd9880abd68728206782772fcde4e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/get-set.js","shasum":"16296e75de52771fd8ead8d2f0730ece3fc00c67","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/compare.js","shasum":"11baed31ee42bd8a8436cd1a403208bdc46963ca","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/from.js","shasum":"76885ca5df3fa448d85db79d21417328c47a7526","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/moment.js","shasum":"87ec5cd2be62750d3d911d7fa48bed7e65d58b72","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/min-max.js","shasum":"8fc7d30f7ccfc15fbfab5b340b9349434cbad7ac","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/locale.js","shasum":"65a2e75f9d3aba7873ab65c5ce2ff635aa161676","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/prototype.js","shasum":"0ae3284d4a314c82ea709953cb3178fcf1648d77","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/now.js","shasum":"693a36ace148dca0c85c462e8807c754bc5a1826","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/start-end-of.js","shasum":"9998dca34d44284857ef3de6d069c2a6c1ef526a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/to-type.js","shasum":"eb9e331061cdfe96224c395ee32cd13ba01c291f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/to.js","shasum":"c783783792c1e65861196899493580d99e7f5ed9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/parse/regex.js","shasum":"ecca165102b92e953a35c9e8cdd19d917cfbcc8a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/parse/token.js","shasum":"d7aaad7c614985abb9c089ff050dca153940ade9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/moment/valid.js","shasum":"358c8898e1991e71977230a26ef5f96aa4ca03e3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/aliases.js","shasum":"d05738b4a8499cac86c552907da325391b84c0aa","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/constants.js","shasum":"191bac7e3f512f7c878840d9ac4142f83be90ec6","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/day-of-month.js","shasum":"df2aecfc4f46b37a0357f6b26de137fe4eb7f697","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/day-of-week.js","shasum":"432022b2159f26d53145243a81663ff7d3b66374","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/day-of-year.js","shasum":"3332403b269764733b11b74570f7878b548ddcdd","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/hour.js","shasum":"b6a9374c06144e24b4ec6f5d765c316cca6e396c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/minute.js","shasum":"f8a800a3077d4ac78af3ac0ac80f2cb1bb8d3cf1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/month.js","shasum":"f2b24ab355e2f94d98a259f0027fcd3bdffc97ac","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/offset.js","shasum":"c389e459329709355316fd46fb9f78c9cbe7460a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/priorities.js","shasum":"055a4899805f6d3b40504072426e146e666f9cc2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/quarter.js","shasum":"482e071ff9d870d4f0db66ff97d957f4175fd790","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/millisecond.js","shasum":"821ccd1797c28cc384cd21a871913c484ff2611e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/second.js","shasum":"ed0266435250c25609ad62c4fc2b578ba719015a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/timestamp.js","shasum":"f88f2f7a738c12ac183a8a6c75529c99390c892e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/timezone.js","shasum":"6003686691e1b58e7a5704077d597c403f01a72a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/units.js","shasum":"44ff48f40c6c72cc04eae845d963653d758ff130","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/week-calendar-utils.js","shasum":"a75e6aa3798c251dff8205a98667462c9ab6b3aa","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/week-year.js","shasum":"876efd2a0d40a20d1f29fd8dbc96deba5796ecf4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/week.js","shasum":"fca9262205c450e5045cd59e211950df412ecc8e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/units/year.js","shasum":"eb633bb67c8b88440f2c8b65aba9f6dd45d917fa","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/abs-ceil.js","shasum":"cbe89a30190bc1ed24d22f97c4cf824d9ecfe22c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/abs-floor.js","shasum":"14e835a73463b7638602313a8bb999abd879dc1e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/abs-round.js","shasum":"ab565f07682ac2f9526861c3714925d0d516f3a8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/compare-arrays.js","shasum":"98362fe208ec6819fb10c1377e4c29f60df2cd67","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/deprecate.js","shasum":"5e4edd68b47aad0c2e116f8c434d7455de369397","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/extend.js","shasum":"8ddf09c4d51a5cca4a7f389a13530a97abf9267f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/defaults.js","shasum":"23d889aa1c1ebf29489955df68ee0863df09325d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/has-own-prop.js","shasum":"29cad3d80496e33e738306d8e33d76ef6f52fafd","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/hooks.js","shasum":"83fde0451f1c8d15c73978bbb8d941b083a0177a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/index-of.js","shasum":"b8060c497bbd6f76364bfeffccfab2ef55776ef8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-array.js","shasum":"fefa05cb72285be0bdd3bbcd667ef4c4fc007a41","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-date.js","shasum":"de623e76e5abbc4a989105530cb3ea56a7d358ca","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-function.js","shasum":"0129d069077b5c9ea4e0b39281a0554489372c23","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-object-empty.js","shasum":"1cb3371ad7e1d766933141a39c70758cba57a291","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-object.js","shasum":"3b679016b221cd8a23cc2890894b1958a101b17b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/is-undefined.js","shasum":"073c7156a8b0a1580ef38bed126f0b981ea025bb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/keys.js","shasum":"2a83c998133df29806128760f38e07f9e8540695","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/map.js","shasum":"76a82ff4dfdb612ce4233339372b902fbef84768","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/some.js","shasum":"f3f99788200e51c767a85fe41efd40409fc817e7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/to-int.js","shasum":"2584cdc4e7102dfa932a8ba84d4051d4f3dde5ed","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/lib/utils/zero-fill.js","shasum":"19208d299f6befe694591fd2912306e0f28f1e0d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ar-ma.js","shasum":"f9f75888e7c1f15b014b1577164a5ab49d3b9307","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/af.js","shasum":"4c41617ccc5d65b1ce729af5574f813f471c7d1d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ar-sa.js","shasum":"c8e922fc31022f2f373fc6dabc77f302a3a515e2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ar-tn.js","shasum":"0d58ab28ef48fa715e46dcef1668dec780a81bf1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ar.js","shasum":"c46f94ba2e987ab64ec91f54aab43520ccaf4a12","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/az.js","shasum":"02ed97eac19a3b7fefd506b1279f580e863c4fb7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/be.js","shasum":"d1a8836900cd2c6c0549cf6f6b2fd0d3094dcd49","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/bn.js","shasum":"ee3ff0723aa9d805c5988796e80950928999a51e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/bg.js","shasum":"2e6fafd939d65518da4ba299cf31e12c1c1ea128","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/bs.js","shasum":"37984ceba1b7dfb16ff06042d00cda3a7ed2cf4b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/br.js","shasum":"0ce94b07ffaf42d7f2d6f9f303aa9a9266df70f1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/bo.js","shasum":"f2cf9226f6385fa8acdc424f16b849f862b4d513","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ca.js","shasum":"54d975bbc8c5d5446642830af6b3a674604bad56","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/cs.js","shasum":"8ae2d939ca864fb72787906d44be8b181f101254","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/cv.js","shasum":"31441ec6272cccd180aed1d34983fe67e54945d7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/cy.js","shasum":"d91fba16b61c41fd5dca82a7961189f664a1d74f","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/da.js","shasum":"9ee9770eb7ddb451111cd31196d3cb8025731c6d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/de-at.js","shasum":"27cfb9137d3498ab6bd1907b7eccc6ba3b1051be","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/de.js","shasum":"e74d6da49d40e88241fbbe0c9e5538aa2ce7b766","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/dv.js","shasum":"5a2ae7f9c13be2a61123a7e8934819ccf93d9088","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/el.js","shasum":"e3163aa4cbe407df168f6273c3c7bf8d17daa46b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/en-au.js","shasum":"599b0537672882d476ec5a75c14add23f52c6c91","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/en-ca.js","shasum":"fc0782aa37f15a30850c127b8b123c13b74ad0b3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/en-gb.js","shasum":"21059152a8c2c6047a0059ec6c5fff3ccd6ba366","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/en-ie.js","shasum":"83e588fa4b4bd49487274700beed944a70fc366d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/eo.js","shasum":"b9259e1982dae1695afd36ad4177e3929c86dce2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/en-nz.js","shasum":"fcf6af3dab6b84430dc84a4258efe04493c3f042","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/es-do.js","shasum":"ce3be03c6a7279f84ce8602319f1a638e962f717","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/es.js","shasum":"63ace42910707fe15814a7fc4a1907ec398c4a5e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/et.js","shasum":"348df9a029f9095df13787a2c77cc622f5f653a0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/eu.js","shasum":"51c7226194a6ccb3d7bc4b7febd31862e0c48d73","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fa.js","shasum":"46c0ad2a13c59cf31dd3881b843039b6709471f3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fi.js","shasum":"4b7d3a21c1c6950064b7e8584ac83f4d7cc25f75","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fo.js","shasum":"72b83cdf3f4bc065f77f789bc8680dbaf33325d4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fr-ca.js","shasum":"d8b7117effacd7872cd84116ff657a9d0253aa01","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fr-ch.js","shasum":"8a87cde935a47d88df81153bca709efbb42cdc3a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fr.js","shasum":"e81a4739b16a55e2ff6815251341346535d723fb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/gd.js","shasum":"35b087e776f75beef4e1e78c346d2e54dd4b5ba2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/fy.js","shasum":"3da9fca142ae55db590e1e725bbe47501b7e10e3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/gl.js","shasum":"3ad0449cce65a44c548f52ff88c64b7b693fdbed","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/he.js","shasum":"029de6398abbf44a0b5231cd5fd798c9c4875449","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/hi.js","shasum":"0c2fe04b188b98b743811813608f120caac46d3a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/hr.js","shasum":"6f057d12a97db5c477d8910341c5adff13115db1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/hu.js","shasum":"87fc03829612694fdba4f825d1fec5ffc328526b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/hy-am.js","shasum":"8f5c8402fccf0a445de6ef905cb03d2fd2a14a82","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/id.js","shasum":"a9934bdbbde8dbfbe6f726b78ccb72fcac336f4b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/is.js","shasum":"0765070bdc63d99cc4398c324d63098344ab4a81","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/it.js","shasum":"f252db1fe50e65fbe08ce536d4a54d5a164c9d4d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/jv.js","shasum":"b86a0987ee86f0a631a6bd540136a4e37b952159","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ja.js","shasum":"cc9ff99e1dce845dc2b5d99e718a27354e2f0829","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ka.js","shasum":"00c8941f36ec50cc31bd5857d1b61dac1d889036","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/kk.js","shasum":"86eb564b2a871c81816cf083657a7150bc7f2df1","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ko.js","shasum":"ab2081d3f84a903c839debcb658335f0396ef31c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/km.js","shasum":"fbb53364ba64afc00a07d410e2f61218ea68e8a4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ky.js","shasum":"6a46b7fc82bc5d3881a611f1ce3d56812afe7051","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/lt.js","shasum":"f9848510132e8e65ce78868f466b873ea797cd2e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/lb.js","shasum":"93909a5212ba06f7532abd1d5ceb1582e99f3618","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/lo.js","shasum":"daae5102f912d0281e9a6c19581b92151cdd53f3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/lv.js","shasum":"b479a4ba52aeebf9744d005b36870185353bf22d","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/me.js","shasum":"50e224a86baaffa4ddc5e29f8b2988eed8a8a9fe","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/mk.js","shasum":"2018860bab9e3c513bfd687fdad3c1225a32a89a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ml.js","shasum":"0eaa45a2b4ac824989e56a67c0901743369750bb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/mr.js","shasum":"53bcae00338f8720af7e68bbd1ded193c57c7913","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ms.js","shasum":"d178b91d316036ace16ab2c2758e2fa89f05cc7e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ms-my.js","shasum":"2e5e65e225bc28681ae47ad37eea46132e5d02d5","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/my.js","shasum":"17df49243d6ab0e01853e07678ba92f8eb72dc66","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/nb.js","shasum":"ec677ba8dd1793cfa2d340c5505d2c0cdbc3e498","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ne.js","shasum":"a8f602b084d1fe029e1ce4f0cab16ea9d2a56c5e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/nl.js","shasum":"545be76a6a2b08fd812a4ccc47fa66ef789b9a3e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/nn.js","shasum":"fbede69c3ea612eebafca9b2ffe9a402370ad1d7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/pa-in.js","shasum":"159a7ef8e0d27327610d4aeafcddd0d4ce0bfff7","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/pl.js","shasum":"377d521f98733e97a3eac6aedc28abb8bfe03089","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/pt.js","shasum":"360f5989d2d507e037cdac53b3fe7b9aac7504fd","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/pt-br.js","shasum":"8cdd8eb36ec9f4a53c84c9c780ccfa28f4aa4f65","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ro.js","shasum":"cecc5f6236df0887839f70873bd9bbf887554099","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ru.js","shasum":"a3ab6612f2bf8aab2060d282f122a62ae64eba63","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/se.js","shasum":"95430e73bcac86c2c4edf7edc7c840b00fff414c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/si.js","shasum":"8919987c399a54dd5ae2eb1758a7aad145ac6eb3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sk.js","shasum":"fdbc92e08c9c0b626b0f1ffa778b0d8316155575","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sl.js","shasum":"9c819151fc790817d57c01b14f665f9002494a2c","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sq.js","shasum":"7b6c3b0e2ac84c6253ffbe814ae7d33a72ce4698","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sr-cyrl.js","shasum":"5d570e9ffdc133b53577f91ee90e5e0a21226870","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sr.js","shasum":"68f82b54ab73a66d980e1e14371c482879369185","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ss.js","shasum":"5f7227bf928c19d93ad9b7618dd5a9b0b1dd0f40","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sw.js","shasum":"126d55ce905a46e79e4639fee65279423666b191","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/sv.js","shasum":"d0efaf020d7dd405085a8e59bc4b07bc5a4124bb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/te.js","shasum":"423d2ccd6d88f54714fab100247fcf745aeeb62b","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/ta.js","shasum":"594a2b3e9e7f1f1b18b0894251467ce7405df3f8","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/th.js","shasum":"784e2c3c2b6fb1e82d7b60bf2d246f2fc34e26c3","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tlh.js","shasum":"5e0d3443d85594c4f16fb5d79e5697535cd87dca","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tr.js","shasum":"0752b901c7a25dff15e5db27367746e0bdf5ca4a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tl-ph.js","shasum":"b65f6ab4c5e4abd5bf52dabe147e5606d9aa1ab2","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tzl.js","shasum":"fb06e70aab67c87733ae4a6056346bf1d0ea0715","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tzm.js","shasum":"9d3973a2d07d814919dc89a26d0376a48a0965a4","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/vi.js","shasum":"570c60680ac59136748fd55f16479dc5902aa703","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/uk.js","shasum":"b72cb58b647d9c24455886b0c64572879eb8bb93","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/tzm-latn.js","shasum":"00ee20b3f5ff4d4fe54e95c95473aadfcbd3c1d0","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/uz.js","shasum":"9e611db6c27fd88124071a5af9c9fcfb56a626d9","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/zh-cn.js","shasum":"ea474b2129a7979dc5e41af4ba2dcaeedf54448a","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/zh-tw.js","shasum":"d3148c36e8efe861774fd9571c30b460c6063f21","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/src/moment.js","shasum":"52b71a66be07a290cf413ff70a0671d3b4673531","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/mute-stream/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1432084306000},{"_id":"themes/tranquilpeak/node_modules/mute-stream/README.md","shasum":"59f2a095ba744fa8ca8fc805d34ef328f082d0d6","modified":1373829246000},{"_id":"themes/tranquilpeak/node_modules/mute-stream/mute.js","shasum":"8181d603c298233f334b5145582406b68daa90dd","modified":1455318074000},{"_id":"themes/tranquilpeak/node_modules/mute-stream/package.json","shasum":"e3f22c1bacc55e50baf884097a28359a98979819","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/mute-stream/test/basic.js","shasum":"b6e157f65456a4e39998cc3f59083a81f671d94d","modified":1358421890000},{"_id":"themes/tranquilpeak/node_modules/ncp/LICENSE.md","shasum":"548e1333c6a6e69810ac5d59bf89dbb133ab67fa","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/README.md","shasum":"d6f5a171d9ed85e3fc2666d16a4eb730cfc9414b","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/bin/ncp","shasum":"ea624fd3449b5788e13d7147dee34e33fbae16b1","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/lib/ncp.js","shasum":"db1dfd8032389ab6b6531e130525056d0005fb68","modified":1412208104000},{"_id":"themes/tranquilpeak/node_modules/ncp/package.json","shasum":"9a9d4eaff69580fab7e22fd06e18646074f12153","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/modified-files/out/a","shasum":"3ebfa301dc59196f18593c45e519287a23297589","modified":1420063200000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/modified-files/src/a","shasum":"3ebfa301dc59196f18593c45e519287a23297589","modified":1420063200000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/ncp.js","shasum":"40ea2d3097d284c8897f057296784dbb5b083bff","modified":1412208104000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/a","shasum":"33ab5639bfd8e7b95eb1d8d0b87781d4ffea4d5d","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/b","shasum":"fb5daf630041e068b84f4da56445e48967684408","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/moment/src/locale/x-pseudo.js","shasum":"aa6cd0148db776a3bb82b16f50eb9627086950cb","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/regular-fixtures/src/sub/a","shasum":"4f29946bcf4013788060778fbbc2f7c25ffe21d4","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/symlink-fixtures/src/foo","shasum":"8a44735524900cdc94460b8999b581836535470e","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/LICENSE.md","shasum":"09bedf3eb387e2883ded96ee501d16262350c9cd","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/README.md","shasum":"7ca0c673b27c3c4c50167b5077bb421711c2518b","modified":1447420468000},{"_id":"themes/tranquilpeak/node_modules/ncp/test/symlink-fixtures/src/dir/bar","shasum":"4acccb318abb44e0b8c4ba5e4e4a7fafa40243dd","modified":1411546818000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/benchmark/README.md","shasum":"783d814c48583b086ffd8b701a53844f799e7d0d","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/benchmark/bench.gnu","shasum":"26bd5d465f2588f4ebda09b9aa28f3fecffb9f4a","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/benchmark/bench.sh","shasum":"3f8daeb462ad5609c63fb8915efc4fa870a8fde5","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/benchmark/benchmark-native.c","shasum":"8d999ba3178ae2683a7ed30b9ff115fe9d9f41bd","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/benchmark/benchmark.js","shasum":"82dfd78c7f35bd52a84259e9afc36018f41bf58e","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/bower.json","shasum":"6d521f86833c6d9a6a75af623529479fcf89f917","modified":1447421468000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/component.json","shasum":"7e1d6df157d7075438267019c90f5cb158b26983","modified":1447421468000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/bin/uuid","shasum":"cc4874ec4258ffff8b743227a3619f895941b563","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/package.json","shasum":"6c7a42af237be5a06abfe858f2679d8fc8b1fab5","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/test/compare_v1.js","shasum":"ac9c80da67f4b232b0aff05c4160deda00dda2e6","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/test/test.html","shasum":"287decf793ae25e5cffda0f5a118a41ccf54fca0","modified":1425558576000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/test/test.js","shasum":"bd765f9091cfd101f0679e45330ce04a62266453","modified":1447266012000},{"_id":"themes/tranquilpeak/node_modules/node-uuid/uuid.js","shasum":"91f473812e7748b91d6adb32ac704c4f8cdea13a","modified":1447421292000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/LICENSE","shasum":"712593b77abacebc199ff2c58f1ee0b5232f8ff5","modified":1465784266000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/package.json","shasum":"417573de1e243d69622913bd4c0d7d1f0cd3faa5","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-cache.js","shasum":"b11a9d2bd57db265e5248712d71a8e269a3dba98","modified":1465784286000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/README.md","shasum":"a09880013aee3f8da953eb1c7c3270a2f806a180","modified":1446560398000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-jquery.js","shasum":"452b94cef29e1883cab54e4029c01d2c81ea69be","modified":1465784302000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-pseudos.js","shasum":"0fee17a5027752d6308d404c1bf8347624aae009","modified":1465784318000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-shortcuts.js","shasum":"792a7fe28de517899eb31a4dc418528f3fe07e2b","modified":1465790816000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-traversal.js","shasum":"0203541901fb0177414d18aea943f86013df1a20","modified":1465790816000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/modules/nwmatcher-webforms.js","shasum":"ccdf15110146bac7a130f5c8c9e1f47937871162","modified":1465784334000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher-base.js","shasum":"52ac22267586d69ff50428a9c6d9ac7a26941853","modified":1465791656000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher-noqsa.js","shasum":"531cf0e7cb9b02785ee133ce679c29bfe2dc40b5","modified":1465791694000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/LICENSE","shasum":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1462374652000},{"_id":"themes/tranquilpeak/node_modules/nwmatcher/src/nwmatcher.js","shasum":"c791374489f58affc456e5b400c5a1435feddd10","modified":1465791728000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/README.md","shasum":"9f943ef5e4c1e530314bee287c8fd5b8addbc808","modified":1462374652000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/index.js","shasum":"fb3d1f2193e77b18089fad077d3133143811f554","modified":1462374652000},{"_id":"themes/tranquilpeak/node_modules/once/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1430759386000},{"_id":"themes/tranquilpeak/node_modules/oauth-sign/package.json","shasum":"c468f13329591f8b5b2fab3545ae53a4470e1181","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/once/README.md","shasum":"f980f2811a57fb0732e9fa9bc43c9e8a2d6b0011","modified":1382574422000},{"_id":"themes/tranquilpeak/node_modules/once/once.js","shasum":"67e1e2cfe1a08a3cc9636382beab2e3cba80d9b6","modified":1448030700000},{"_id":"themes/tranquilpeak/node_modules/once/package.json","shasum":"04da4dd31b98b606d6256a1c656a342439f1dced","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/optionator/LICENSE","shasum":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1412105804000},{"_id":"themes/tranquilpeak/node_modules/optionator/CHANGELOG.md","shasum":"bfd570fd3f83cb6e2a623efb28d38c7534ee2560","modified":1451591050000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/coerce.js","shasum":"7a1ee102f01050a7ea3b0ea8dc50904334be3ae3","modified":1412105804000},{"_id":"themes/tranquilpeak/node_modules/optionator/README.md","shasum":"f24864f7d4e3af15f8bba135cc6ec1e226abe560","modified":1451591000000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/help.js","shasum":"4956d9d6ff5d1f48573d7d31dd703e36140e9996","modified":1437177674000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/index.js","shasum":"d53ebd70d24b959816a10af3a432d5f5cec71f34","modified":1451590988000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/parse-type.js","shasum":"1b08c65d7d97b13727739cd44376f9567b0cda96","modified":1412105804000},{"_id":"themes/tranquilpeak/node_modules/optionator/lib/util.js","shasum":"9d6cae4a495a304117b0e016d7675fb2f501e45f","modified":1437580878000},{"_id":"themes/tranquilpeak/node_modules/optionator/package.json","shasum":"f21cd4472c704d2ba0e9d7ab5fedac291c84b2cc","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/os-shim/LICENSE","shasum":"27bbf494715ab733aabd390979a226ed3de633f5","modified":1438882408000},{"_id":"themes/tranquilpeak/node_modules/os-shim/Makefile","shasum":"1a3d4deb966e08575b3a2bb6fc12ae1b239885c6","modified":1438882408000},{"_id":"themes/tranquilpeak/node_modules/os-shim/README.md","shasum":"c6eb9294bfdca0cd441642aedc94710f3c03d9c5","modified":1438882562000},{"_id":"themes/tranquilpeak/node_modules/os-shim/package.json","shasum":"99bee35ec7a2cd470f9b1f7e5054667540a26ebb","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/os-shim/lib/os.js","shasum":"0f769e2d0d3d4e1303313b57c5c4816ee18bf630","modified":1438882410000},{"_id":"themes/tranquilpeak/node_modules/os-shim/test/osSpec.js","shasum":"0baaab3e97486e430648ae7ceb9a358ec9a982cb","modified":1438882410000},{"_id":"themes/tranquilpeak/node_modules/parse5/CHANGELOG.md","shasum":"51cc021185751a2a717ddba96e8d5c771395bd75","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/LICENSE","shasum":"d02a9dd48f9a9c3c45630373975a1a137f8ba2e3","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/README.md","shasum":"0ac097abbd80bd53b15232b1a6f986feee689441","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/docs/build/index.md","shasum":"a75aa2772c30c33eed3469dc597122dc9c443f3f","modified":1448004994000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/doctype.js","shasum":"30ab21dc1ebe9ec761c440a05b98ae6a3411d4e3","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/index.js","shasum":"e42904f7ee729ad244cbca0988113fa8a9004d1f","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/foreign_content.js","shasum":"92be441b987016466765ed0309e05ece6844ab17","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/html.js","shasum":"bdfed97e358cef27ab6095124ada99148a142447","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/unicode.js","shasum":"a1ec77e01b46b4631d32db1271ef219f10f58ee5","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/common/utils.js","shasum":"1303361d80746006c94097bacf5d5f080ae5c8cb","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/jsdom/jsdom_parser.js","shasum":"550a5b967dd75d4fcb2742f2d505b749b96def23","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/jsdom/parsing_unit.js","shasum":"8cc2066b841c7f5f0c9308d98d626d7180903654","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/serialization/serializer.js","shasum":"91ddf0bd736389f566927a1457a409bed79f8d4e","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/simple_api/simple_api_parser.js","shasum":"1f65a788d4df20cb4dad28e69daf69c3bcc33c1a","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/simple_api/tokenizer_proxy.js","shasum":"795b06045f20d50bcd816c4130bfa303eaec97a4","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenization/location_info_mixin.js","shasum":"eba632881c5200e4a195797037fa46ee2dd91db1","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenization/preprocessor.js","shasum":"2927004f83e63052bdb392a8cddc744fa06f27a5","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_adapters/default.js","shasum":"87145bdee3b2b318cb0cd34072c8f363dba93c59","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_adapters/htmlparser2.js","shasum":"64ded03cb130545df52bc236df5db433f377e1e9","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_construction/formatting_element_list.js","shasum":"9bdf74059bdab7491170d0f4f7a763b61a118da4","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_construction/location_info_mixin.js","shasum":"c701b446da2a26a0a170270b603d1aa874e47dec","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_construction/open_element_stack.js","shasum":"2403264bd1ddddf4ea302db0fc233b991e3ed2ed","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/package.json","shasum":"0e06fe6346bfbff86f214a5c6f9da613015f7dc8","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/path-is-absolute/index.js","shasum":"71259da8cc05832088437dd2d385b7eee54eab71","modified":1424116650000},{"_id":"themes/tranquilpeak/node_modules/path-is-absolute/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/path-is-absolute/package.json","shasum":"154d759710ed0bc8ceb75856869c5319ce0b0daf","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/path-is-absolute/readme.md","shasum":"bbe564e38bd40bd0f8c6f503d3064ebce4e6e87c","modified":1424116786000},{"_id":"themes/tranquilpeak/node_modules/pinkie/index.js","shasum":"4ed6d8988b13d2c29cfa99c99cedb43fa6b51ee7","modified":1454299662000},{"_id":"themes/tranquilpeak/node_modules/pinkie/license","shasum":"91c700b5dac5967632cf497f1f3316352b1b45ce","modified":1454192770000},{"_id":"themes/tranquilpeak/node_modules/pinkie/package.json","shasum":"80237d0d040556caf968589b26fb17d3335b940d","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/pinkie/readme.md","shasum":"1673aa52b8f81f6ebf1c2e5ca0184a6f63522f78","modified":1454297304000},{"_id":"themes/tranquilpeak/node_modules/pinkie-promise/index.js","shasum":"830ad9dad341dc74b12a7af106c9e97c07e44a02","modified":1460288222000},{"_id":"themes/tranquilpeak/node_modules/pinkie-promise/license","shasum":"91c700b5dac5967632cf497f1f3316352b1b45ce","modified":1460288222000},{"_id":"themes/tranquilpeak/node_modules/pinkie-promise/package.json","shasum":"c442552208fbe233452ff61d560479b108bb42ce","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/pinkie-promise/readme.md","shasum":"450859283a97df6ee0918789a485d26786329eb1","modified":1460288222000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/LICENSE","shasum":"cd04de9a6651aafa2355c573bf733d2f46a91541","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/README.md","shasum":"db0a22da1f93c3d0c2f944a131827b42527a9caa","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/docs/pkginfo.html","shasum":"17dfb51fb19ae1a419a232a2ca72bad1bf48259e","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/docs/docco.css","shasum":"d447289834a901691f2d7805c8e6242a4f3f78c0","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/array-argument.js","shasum":"4213abea65875b678e9e7bf73ef24e4e984792de","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/multiple-properties.js","shasum":"e52c859d2aeee5c63a377a1dd88e4a49ae65cd5f","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/package.json","shasum":"1795a6d0cf6c1fdab9b0cd2e535eba1adafcee1a","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/all-properties.js","shasum":"5eb6e7c7a23c9c952c7ec2718e1d0035aac4e256","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/subdir/package.json","shasum":"473b2ccf00b82e7865f4dbb096f3e5f57eb80f7e","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/single-property.js","shasum":"d4fbfbe9c907a8b6a90eeb9445cd989387ac8d6a","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/target-dir.js","shasum":"b3844b056cadbeed20e7f31fe4d0a4bd0cc2c93f","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/package.json","shasum":"7df137839bc9cad6efc64ebf63e77678e3ff53fb","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/lib/pkginfo.js","shasum":"fbf31d45355b3591540053405a8adc83595df08f","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/LICENSE","shasum":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1412106178000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/examples/object-argument.js","shasum":"cb27674be4c0337b9f6f700ddb9ffe3ad6b14b57","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/README.md","shasum":"dcc23563003f5a244fa3d10243f50a46d8313f11","modified":1412106178000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Func.js","shasum":"4c289807a465b74b25084d2fedc089c27b66153e","modified":1431635918000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/List.js","shasum":"b12c13c83cae0d58bcc3c1aba002499a0a001590","modified":1431635918000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Num.js","shasum":"acd641a345a8fd7afea30ea99f5351f5bd6d77c4","modified":1431635918000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Obj.js","shasum":"50a5fd13253ff7571cb49eb580a7c8b80bf00b54","modified":1431635920000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/Str.js","shasum":"24856515dc284d9d93512f693d56eebff760e649","modified":1431635920000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/lib/index.js","shasum":"1967d27b2aaa07151cfab1016a8d20fd850d646d","modified":1431636010000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/package.json","shasum":"64d67c01fc489053188a7219f1749cf7a296901f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/process-nextick-args/index.js","shasum":"19704cf1716bd11b5fd95e20a35506b764aa541e","modified":1462372630000},{"_id":"themes/tranquilpeak/node_modules/process-nextick-args/license.md","shasum":"9def7167175d2ac68505dd2ae0c7b8dd63bc4c3d","modified":1441802416000},{"_id":"themes/tranquilpeak/node_modules/process-nextick-args/package.json","shasum":"662a399e4642a048a3ac8b32c64512dafc933a31","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/process-nextick-args/readme.md","shasum":"3eba0a30f0a115fd767a0c8c9761d60d1dc768c0","modified":1441802416000},{"_id":"themes/tranquilpeak/node_modules/process-nextick-args/test.js","shasum":"279a062028d86a4ee0ab2ab800ecf7ca29f4905e","modified":1441802586000},{"_id":"themes/tranquilpeak/node_modules/prompt/CHANGELOG.md","shasum":"833195a4221f7592e097256802486ce587db5ec9","modified":1355689834000},{"_id":"themes/tranquilpeak/node_modules/prompt/LICENSE","shasum":"e4496138553fd62f6cac746a9d6ceca166407b1d","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/pkginfo/test/pkginfo-test.js","shasum":"3cc449ad2843053d28e3efadeacd333e0724debc","modified":1456863460000},{"_id":"themes/tranquilpeak/node_modules/prompt/README.md","shasum":"6a008439f7515afd3ae292d895d64b6328b03e9e","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prelude-ls/CHANGELOG.md","shasum":"7ae87fdbd050fa1fa16729c490de36f7c6f9489c","modified":1431635968000},{"_id":"themes/tranquilpeak/node_modules/prompt/docs/prompt.html","shasum":"d6341612b5f62162e17f9e52cdcf68702ebaa7ff","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/add-properties.js","shasum":"1deeac31cc5ec0c26b74aaf20cdbb6534f4f3d35","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/color.js","shasum":"0172e86639cea32d7fec805908e8f38abb7d143d","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/existing-properties.js","shasum":"a4d4ec35a2affe5c76b1e3d1c23c8ff4ae2a2d3a","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/dynamic-ask-prompt.js","shasum":"d80ca14fa948fca6e6c3c28cdc76f89d376ecdbc","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/docs/docco.css","shasum":"d447289834a901691f2d7805c8e6242a4f3f78c0","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/history.js","shasum":"c794491e59d687c5f84d3927e49e0d45c2bb3e80","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/override-validation.js","shasum":"82eca44d1da507c296b62e64c6ba8d65976ca7f7","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/nested-properties-prompt.js","shasum":"d8a5a8f833eb80d7589a7ec5562e81e6897685e4","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/password.js","shasum":"d9f2d3f894f99f47ecb13744d529068d3e4d9c0e","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/prompt-streamline._js","shasum":"63544faa01b0a959ac15e464418f48e72fc5c3f2","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/old-schema.js","shasum":"5eecc515848252da8b6e05a54df1bdd143b5b052","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/prompt-override.js","shasum":"20cc8a40e662979d4f26816bebd7bc43f12848c9","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/property-prompt.js","shasum":"ff09afbe28e91f7dacff39cb8dae5d811fc04afe","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/yes-or-no-prompt.js","shasum":"482813fdd551db9f83029e4f2e80a9a3b2853500","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/simple-prompt.js","shasum":"710615d5aa157e4289d1b058de5fd20207aa9d61","modified":1355689832000},{"_id":"themes/tranquilpeak/node_modules/prompt/lib/prompt.js","shasum":"2c74c1d5c76449cae23cc9c210e6818f9fe75f94","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/package.json","shasum":"11a3bc8528bcb661ba49c94b52537592eeb510cc","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/prompt/test/helpers.js","shasum":"b22bee7c31532e092b8f43ae5ae2f1b8847fb440","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/test/macros.js","shasum":"cf31a3d0919b617eb19884c35a014a8bfee16e36","modified":1355689834000},{"_id":"themes/tranquilpeak/node_modules/prompt/examples/types.js","shasum":"56e94ed8f7349c4376b6bb96bb1a0e3c5ec5c1da","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/prompt/test/prompt-test.js","shasum":"048d620656a9ff3bd2a3b82db526e8566282ff85","modified":1455068530000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/README.md","shasum":"93ca8dd88b562f1cd856143e500bdb679419e088","modified":1448724320000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1448634788000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/map.js","shasum":"f0d63208dec47fe1d9c69ab74fdf54298406dce4","modified":1451937810000},{"_id":"themes/tranquilpeak/node_modules/prompt/test/interactive-prompt-test.js","shasum":"a65725814bd758e7b2c73d35948ebbb1d73d8ebe","modified":1355689834000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/pseudomap.js","shasum":"34cddc0bc6daaf6c7092d2659612969b8700d8fa","modified":1451937810000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/test/basic.js","shasum":"dccd686c9c0f397d56318e99c89fa29fe4db84c2","modified":1448637958000},{"_id":"themes/tranquilpeak/node_modules/qs/CHANGELOG.md","shasum":"52c1c65748692a6d430282d94185e01dcceb0136","modified":1469021956000},{"_id":"themes/tranquilpeak/node_modules/qs/CONTRIBUTING.md","shasum":"61998267d75f17fdd423c1c742edc20a1561c1e2","modified":1450831230000},{"_id":"themes/tranquilpeak/node_modules/qs/README.md","shasum":"937ecd00ea99c12f2a598566df705c6be3d9654f","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/dist/qs.js","shasum":"3aaa8f954396c7537eaae2ad2d30dc5e05b4bc23","modified":1469023330000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/index.js","shasum":"227523195233e42a48c20f75a1ae350c6bcc5b47","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/LICENSE","shasum":"ddf13f1b7345d730677237125bc2e46fbbfbbf32","modified":1450831230000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/parse.js","shasum":"5814a71a5214cb13eef073129a97841361bfea5e","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/stringify.js","shasum":"333b167015714924e496db431b2768461d2582f4","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/package.json","shasum":"4503cfc957c0e0b5ae9acd6ea5006d382420cbbf","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/qs/lib/utils.js","shasum":"eb22491a7b63e5529e70c14598184c2ccee97fbe","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/test/index.js","shasum":"3d9a66ca5549d2dd32f6a56c4ba0472498fb68a8","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/test/parse.js","shasum":"d6d47f2353b02dc342505cac2d139eba1b769b00","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/test/stringify.js","shasum":"f5792957547c22059dcec4d75f0017a0b4be8ee1","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/qs/test/utils.js","shasum":"5f25e2ef762a18cff8719d88a1748840c1626d89","modified":1469021864000},{"_id":"themes/tranquilpeak/node_modules/read/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1440600980000},{"_id":"themes/tranquilpeak/node_modules/read/README.md","shasum":"7e9c516c1c0aa9f070d0f8bd44ca89a434a3bc62","modified":1359485988000},{"_id":"themes/tranquilpeak/node_modules/read/package.json","shasum":"986e7ac4a3d1a5dae80e1aba72227ab102269cdf","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/read/lib/read.js","shasum":"fb378f0c1067b6293a598bf98600f6f0d23f2b8c","modified":1373831134000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/README.md","shasum":"91831f48f5af8150b55e5dc8611b71885ed5591e","modified":1457851028000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/LICENSE","shasum":"73efe5bda3791d234730ab0dcc48eb619a2e0ec6","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/doc/stream.markdown","shasum":"10432335bea3230f59e7d889246b5e891360f163","modified":1457851028000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md","shasum":"1fafe6e2e28a4404db90ae6dc867199b74468ca4","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/duplex.js","shasum":"5ff8b0af1efbb8ed54ac1b3f57167447cb902344","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/lib/_stream_duplex.js","shasum":"df22a616d3108766d7537b9985b7cd8cd729f1d0","modified":1457764930000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/lib/_stream_passthrough.js","shasum":"493a4cf1bf1927d8a2bf5936b7d50b72bdafa378","modified":1457764930000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/lib/_stream_transform.js","shasum":"e9b4761816194578f90bc065a405d3ce09b204d9","modified":1457764930000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/lib/_stream_writable.js","shasum":"de86cccbe828e61bcb25bc376c6c107fb577e0ea","modified":1457764930000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/lib/_stream_readable.js","shasum":"9c18555e3832293b79c9437c56d4c5e453f85eee","modified":1457764930000},{"_id":"themes/tranquilpeak/node_modules/pseudomap/package.json","shasum":"68a94f9eba4ea555ccda8915272861a79434dc1c","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/passthrough.js","shasum":"ff1590a9a778dc9d8ed51064670d82426782ee6e","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/transform.js","shasum":"2d31b50e657e5b03ce5abc5ce6b77187e8e876c2","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/writable.js","shasum":"8a7bd86d1803614b9381a924ab9ef0a19fd70e6c","modified":1433869762000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/readable.js","shasum":"f68ae09e1cfcd9f75f8d43cb82724b3dee5d9251","modified":1434914762000},{"_id":"themes/tranquilpeak/node_modules/request/CONTRIBUTING.md","shasum":"b41c03933c727ed6409d7164ecdd474664d1bf27","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/LICENSE","shasum":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/CHANGELOG.md","shasum":"f676eea355aeb912a4e96bcb3f332d724b3c8cb9","modified":1469209442000},{"_id":"themes/tranquilpeak/node_modules/request/README.md","shasum":"c35aba3e016f57825276b69e39db191f610a2418","modified":1467947676000},{"_id":"themes/tranquilpeak/node_modules/readable-stream/package.json","shasum":"09b32c322ee0b01126e3d3a1e556d97ed6426363","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/request/codecov.yml","shasum":"e415e706b0504176f8ff37f4cdd983ff478a6a9d","modified":1467947676000},{"_id":"themes/tranquilpeak/node_modules/request/index.js","shasum":"5c08a0ecdf6ed1375ddb3167bd0cf47304370f46","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/auth.js","shasum":"56bdda40a7df68f69c68cd256258017783e70d12","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/cookies.js","shasum":"0b2a641d706209af1f92176a507f382e06b44379","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/getProxyFromURI.js","shasum":"2e7c16e357f885401208174ad1f341b084965253","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/har.js","shasum":"a4b894d836e3bd947a5d8afffec04128bf934fe5","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/helpers.js","shasum":"5fb7966b0c3aad3bf2054efc3d0605a32ef7d48b","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/multipart.js","shasum":"66acc47cab8b774688502be7752501e4a44d3cda","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/oauth.js","shasum":"8663a55221a216cc32d655f83086979ae9e666a9","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/querystring.js","shasum":"b78be4d88327f11499fbf86610d0612d803b1ff4","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/redirect.js","shasum":"08b710fe22cf8e28b2fecdcaaadb76923361299b","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/lib/tunnel.js","shasum":"97336f00dd29c7fdad5550e9ae4daf57d587d034","modified":1464776660000},{"_id":"themes/tranquilpeak/node_modules/request/package.json","shasum":"4c680104aeb90ccb1761aba531bbd2003da9e5a0","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/request/request.js","shasum":"0d85f88bd66adbcd962dde32b20a4a021de5d7fb","modified":1468028036000},{"_id":"themes/tranquilpeak/node_modules/revalidator/CHANGELOG.md","shasum":"d9524837e72a07f6bdd13618aabc7e006abf09bf","modified":1386938772000},{"_id":"themes/tranquilpeak/node_modules/revalidator/LICENSE","shasum":"033890f4a84912cd4abc6261845b007d94cb42a7","modified":1386938772000},{"_id":"themes/tranquilpeak/node_modules/revalidator/example/webservice.js","shasum":"5f365ac179955a1239af76de179b39d67ddb8f8d","modified":1386938772000},{"_id":"themes/tranquilpeak/node_modules/revalidator/README.md","shasum":"912662304dfa965097d94e345ef648e122608384","modified":1398081538000},{"_id":"themes/tranquilpeak/node_modules/revalidator/lib/revalidator.js","shasum":"11d2d30ec35cdb395f5aeed88da7289670c299ce","modified":1398081538000},{"_id":"themes/tranquilpeak/node_modules/revalidator/package.json","shasum":"1f1c9399fc8ba95d68000854d8fa0da4e3438497","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/revalidator/test/validator-test.js","shasum":"103856f4c1080b330ec6b315fff4da16d2bf56d5","modified":1398081538000},{"_id":"themes/tranquilpeak/node_modules/rimraf/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431977846000},{"_id":"themes/tranquilpeak/node_modules/rimraf/README.md","shasum":"fec5cb034f99088fb8ceec58b6de8ac5f5fc04e7","modified":1450870986000},{"_id":"themes/tranquilpeak/node_modules/rimraf/bin.js","shasum":"366b465d5a8637f94cea9366f505a25fc78c8a83","modified":1447955124000},{"_id":"themes/tranquilpeak/node_modules/rimraf/package.json","shasum":"de01f13b832245eade91f7f15d9a4f5677882afa","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/rimraf/rimraf.js","shasum":"89b9c48d11c6e97026cbf5a496a760f438786cd6","modified":1469185316000},{"_id":"themes/tranquilpeak/node_modules/sax/LICENSE","shasum":"fe4ff75272675c27279ddf101a2d6d7cd1e9ad64","modified":1440606180000},{"_id":"themes/tranquilpeak/node_modules/sax/LICENSE-W3C.html","shasum":"e7bd6462a8b54162846ace2ba32bcb3bad4decd6","modified":1361352708000},{"_id":"themes/tranquilpeak/node_modules/sax/README.md","shasum":"c199b68fe859344fef10880cfbe52793ffbb0d1a","modified":1458331402000},{"_id":"themes/tranquilpeak/node_modules/sax/lib/sax.js","shasum":"ba5de6ccf2596d8fee9005bb8ee6c5f0e602b4a6","modified":1458335180000},{"_id":"themes/tranquilpeak/node_modules/sax/package.json","shasum":"0513294873b83c1fe30b7a0e37faff6027086dcd","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/LICENSE","shasum":"3a7f886b632d2197676a40020d354e84b7860604","modified":1450198212000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/README.md","shasum":"c4d3fe9eae115e2214ffb8ca7a240869193955be","modified":1450198400000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/sentence-case.d.ts","shasum":"bd4f61d09888db9c8e7c94d3964d3ccf3878ea7c","modified":1450198356000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/package.json","shasum":"d7189609fa3a13b3c8b914c744a79d26c26d0f30","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/sentence-case.js","shasum":"787efef47aa339c799d95fc8eecb862f098dde1e","modified":1450198212000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/vendor/camel-case-regexp.js","shasum":"e3dd8fc58b9f06843cc1d0ed4347c11b4f714a6c","modified":1450198212000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/vendor/non-word-regexp.js","shasum":"e1e32a484e823d4d133a481cdbef8202d8e441a1","modified":1450198212000},{"_id":"themes/tranquilpeak/node_modules/sentence-case/vendor/trailing-digit-regexp.js","shasum":"cdcb081e0fa965e45b6c2885e5a11b622277af17","modified":1450198212000},{"_id":"themes/tranquilpeak/node_modules/sntp/LICENSE","shasum":"1583807686100eb3d8287b4e4627818f002aabaf","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/Makefile","shasum":"23079c0b043b0fd2f037fa6272e36d2562425c6d","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/README.md","shasum":"5b5b1348b73a5ba7293f5924937015c6b6350b6d","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/examples/time.js","shasum":"9a7e69f5ee15afc381ce433cfa867bff405ca81d","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/examples/offset.js","shasum":"5b78885677fd2f0eae4c2fb6c04c2d6e2f39bf49","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/index.js","shasum":"fbc929bb3b85e76c25fc52743d325d9f36fb3643","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/lib/index.js","shasum":"eeed7222493e633069fe267f915f7d13b12df094","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/sntp/package.json","shasum":"2e8c13af8ebe7afc0abf3ff83e48ed93d8a6c275","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/sntp/test/index.js","shasum":"bc5aae767cff3fcd90a9a4b2d6ec0e6fea66988f","modified":1409924996000},{"_id":"themes/tranquilpeak/node_modules/source-map/CHANGELOG.md","shasum":"ef0ee1edd7fc0ca15877a37454c446c702f7edac","modified":1422288344000},{"_id":"themes/tranquilpeak/node_modules/source-map/Makefile.dryice.js","shasum":"534e259048f9bad31337245dbae509ae9c33153f","modified":1372337700000},{"_id":"themes/tranquilpeak/node_modules/source-map/LICENSE","shasum":"914d42b13ad394be4aa75b4d93fde94b1e79cbbd","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/assert-shim.js","shasum":"2061107f99642598852f995159e253254bfbcc1c","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/README.md","shasum":"934d9f40a1da74d4a73d636ad49cd56c9bccdccb","modified":1422287994000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/mini-require.js","shasum":"eb4d91ee5e6a93324d7729b02c07e8a300530233","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/prefix-source-map.jsm","shasum":"be60e33c554d3104f8777667f5f57df63f70fcc8","modified":1364315102000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/prefix-utils.jsm","shasum":"4ec59fef889655764d1792bb230f40e94963bfd8","modified":1364315102000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/suffix-browser.js","shasum":"099fcdee304495dd8f12db41879218b72df4596c","modified":1380560188000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/suffix-source-map.jsm","shasum":"32901878be37051259813e771c54f3610030d697","modified":1364380686000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/suffix-utils.jsm","shasum":"f248b23e9aaeb7fa9687ddeffabd10776d02a074","modified":1364380714000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/test-prefix.js","shasum":"eae0886efa2caa339c4025cfcd89abe7b146038d","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/array-set.js","shasum":"4863048915c8e51728740495258eb44cdc634b72","modified":1378491440000},{"_id":"themes/tranquilpeak/node_modules/source-map/build/test-suffix.js","shasum":"39317530bb1baf09adfa63bd25245f87d6034eed","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/base64-vlq.js","shasum":"a89aee60adf523d46800565eef17acb1a846eead","modified":1420033060000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/base64.js","shasum":"91b6582481accd9b27ff9836d8f13eb3e62bc324","modified":1372337700000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/basic-source-map-consumer.js","shasum":"dac941bb4f0d416ef0627c417c230df1043b7e22","modified":1422287442000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/binary-search.js","shasum":"5c714ebdc0a215d74d723980a6618e4b2effa72a","modified":1418818250000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/indexed-source-map-consumer.js","shasum":"abbcf336a1fdfd121de55a04ba3bfd54846e852b","modified":1422287832000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/mapping-list.js","shasum":"53541c926479175b0caadf0a817ebac4550920e6","modified":1420714442000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/source-map-consumer.js","shasum":"7d4ce928365b978fdcdfdbe5ea839418e9484b49","modified":1422287442000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/source-map-generator.js","shasum":"feff9f00c76eb30c570a4367ac1b6ae78a4bfbbc","modified":1420713070000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/source-node.js","shasum":"7674503679d68ca0a6571b261adffd39df73bdea","modified":1420712608000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map/util.js","shasum":"f347aaf7862fed7c99a57b3ed6fddc72d18ce306","modified":1407063160000},{"_id":"themes/tranquilpeak/node_modules/source-map/package.json","shasum":"2772c7b76aa350dad029c4fcbe2860f06f6ba8c7","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/source-map/lib/source-map.js","shasum":"fc52085a91b459c7f0413494d74bdee0490ebc46","modified":1359720646000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/run-tests.js","shasum":"24ae6cdf006466576203eed058decab1f5c88d53","modified":1391785606000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-api.js","shasum":"94e52615f413d1f8e095c61d9bcf2da4b4cca454","modified":1372337700000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-array-set.js","shasum":"6ae348a02dc89b38947ac437c876ac6beb479a59","modified":1377109528000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-base64-vlq.js","shasum":"aedbe91a2397ccbb8cd1ae0ed6690446b4323ec7","modified":1412242130000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-base64.js","shasum":"f1afd0aa62078e453f61c239dc63291dc4e6f5b2","modified":1372337700000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-binary-search.js","shasum":"2cfc8d0ce3dda435a12ff28852f8a4d264c95c78","modified":1418818250000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-dog-fooding.js","shasum":"5a17bd81121257ef50f60a19de5106c92a30029d","modified":1392390900000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-source-map-consumer.js","shasum":"4465e136070dceff6450b79ce0e02368ed1a7661","modified":1422287442000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-source-map-generator.js","shasum":"73397e35249337151a15dcd4a63720fbc24d6435","modified":1420712608000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-source-node.js","shasum":"4169599017248fb7f276e773e017e0e94c005b77","modified":1405077988000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/test-util.js","shasum":"c55847c856cbbbedffcd56846212bb7f8b76dc43","modified":1407063160000},{"_id":"themes/tranquilpeak/node_modules/source-map/test/source-map/util.js","shasum":"7f9ce737abe5c151393adc4b91f66a9d3b630ab6","modified":1422287442000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/LICENSE","shasum":"c10025d9f88d74d08d60f8e092ac3e038ce180c4","modified":1389382382000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/README.md","shasum":"faea2f20e2631a2f4765fd703267befbc0ec1cb8","modified":1451808172000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/appveyor.yml","shasum":"ddb4ba9c9860208bcfc182ee0486916119b63b71","modified":1423633822000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/index.js","shasum":"7e5b000a13fd103df52f976089cc61c761d82138","modified":1423633484000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/lib/json-buffer/LICENSE","shasum":"19a06b8c5c2a7c8fe7fd64231318076c92d05cda","modified":1418813458000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/lib/json-buffer/README.md","shasum":"dda2255200591fc11ea2e4f53b231a0ba87544aa","modified":1418813458000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/lib/json-buffer/index.js","shasum":"343f2b4874f66f08a894f9e891387358de9877fe","modified":1418813458000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/lib/spawn-sync.js","shasum":"608284f0f984e545456783e51bc37877dcce7d8c","modified":1451808172000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/lib/worker.js","shasum":"c14bece4fe41e229e5eb39fe3737080401ba0d38","modified":1451808172000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/postinstall.js","shasum":"c378048db6126097fa2b5338a9b5dc0566cb8f07","modified":1451808172000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/package.json","shasum":"834748c23eceb37b21612112b055d47e7fc06d7d","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/test/index.js","shasum":"35cb05532fafe7d71e91b3a181f08bd9b93d67e5","modified":1451808172000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/test/test-spawn-fail.js","shasum":"5d267c2f1d77c3b0f0d1b35997382a50018f6248","modified":1418813786000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/test/test-spawn-timeout.js","shasum":"73fb8fde314042fd997436efa6a475a994e9db49","modified":1421276762000},{"_id":"themes/tranquilpeak/node_modules/spawn-sync/test/test-spawn.js","shasum":"9365b8d948edc19cf562963d06b9c38186e336e3","modified":1389382258000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/LICENSE","shasum":"424761b2158dd216b5b38a4f45cc29e482eb772e","modified":1420775048000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/README.md","shasum":"176e4688643d0e760f001b1e97b17b37108999d2","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/bower.json","shasum":"5d6555cca822adce55b880d6432b7cb4e986dcb6","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/demo/angular.html","shasum":"ae98e1e4b9fa756c07172c2afdbcdb1a32e307bb","modified":1436513152000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/angular-sprintf.min.js","shasum":"287c4dca7a7db9aededca1786e037937ce9e1475","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/angular-sprintf.min.js.map","shasum":"7e346bf1faac9cf2a443b934627d644c4a2a1e1e","modified":1432705282000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/angular-sprintf.min.map","shasum":"7e346bf1faac9cf2a443b934627d644c4a2a1e1e","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/sprintf.min.js.map","shasum":"0d875e36d27e472bb37a843d31d83a07725a1527","modified":1432705282000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/sprintf.min.js","shasum":"bba7ae9cedfd17c83358b45728e9b21655f74bfe","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/dist/sprintf.min.map","shasum":"e6dba98417a8011e9584864e6cb899d6677c18d7","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/gruntfile.js","shasum":"0bf6fc81a8c6480d3229e8730661260e132df3d0","modified":1412048960000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/package.json","shasum":"1702e4d760b6426ad4eb267ccf0c4b35b522e71f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/src/angular-sprintf.js","shasum":"33839b0e48fe511e144b86148e2a6664653d2f1b","modified":1412048960000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/src/sprintf.js","shasum":"b1104fe9781c80f1e4da70d0b55b442601d5d858","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sprintf-js/test/test.js","shasum":"b873a616683851c9da17c1ce418564a9e0eab157","modified":1436513624000},{"_id":"themes/tranquilpeak/node_modules/sshpk/LICENSE","shasum":"10b8ac49ffb8f7cc8bdca9303209a1b3b2f3587d","modified":1442834418000},{"_id":"themes/tranquilpeak/node_modules/sshpk/README.md","shasum":"9bc448de7b7bc0bd4210db4d4f4e95df2c476cc1","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-conv","shasum":"60a1940e3fbcc7313ebe17be0f79284b71b4cdf1","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-sign","shasum":"75271a4b0392b5549555f50085b991e8d9a3bd0c","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/bin/sshpk-verify","shasum":"a74dd8749820e0a9e9d334bd09665d6e3e4885f2","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/algs.js","shasum":"95cac832aaaa1d70d2a18bd42559a147dafbf11b","modified":1461946688000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/certificate.js","shasum":"a7ee2dd2d823ba690daec72568713b289d8bb9b1","modified":1469707678000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/dhe.js","shasum":"de6f67e80ebce95a5272c75afcf05ea84ac45b3b","modified":1461946688000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/ed-compat.js","shasum":"a05999a5907f0027ba834b8ee4e819380a5108ea","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/errors.js","shasum":"b1492a5f7867af3b22be7135c44764a6e9176d3c","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/fingerprint.js","shasum":"c8d3a671de8f36554c65f02d417069ae8fc706ab","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/auto.js","shasum":"44019767fd8da9cca9b5d7bb2672146d251f4250","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/openssh-cert.js","shasum":"33261822f3d7e5cca5d57d5f9a32e7d451a3e34e","modified":1469707678000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pem.js","shasum":"c8b757deebd40dbf2c4dc9ea3315b98dcfb3adea","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pkcs1.js","shasum":"c38b86621e2fbf889b493c0a40021e2a5eb9a812","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/pkcs8.js","shasum":"53e41ef5cfd8c1638c077ef52e1174689ec9bb62","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/rfc4253.js","shasum":"ce8c2994eea00a91b50360e42b7dd81d69256ae0","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/ssh-private.js","shasum":"55677a94fe6587a9d0cf189341ef597d7e7af74b","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/x509-pem.js","shasum":"3766e5cf45574a710fe2b3db72ab428b7ad22e52","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/ssh.js","shasum":"bb5e99a71b2bb69fdb7324a46a32cf2a959d3740","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/formats/x509.js","shasum":"9048820664815de3c146f1132636bc6059f2c5a7","modified":1469820030000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/identity.js","shasum":"89d5d5816ad43d36199f0a85b5e18fe015221d42","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/index.js","shasum":"1faf8e3e0c1771d6877244794b2bde68a4ab3cdb","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/key.js","shasum":"b431b3bcbb007734c8488e095f2dc30c3cbb8074","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/private-key.js","shasum":"80fe709755a54c117f2b58ce231f37e255744189","modified":1469126208000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/signature.js","shasum":"2220920ed48ef04f86bf5ab129c3baefbf1ba317","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-conv.1","shasum":"a64a4769ca648e2047d255bf5237ce051f6af15a","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/utils.js","shasum":"6a82418114504436ef3f4c8bbbe652956a68ef74","modified":1468945790000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-sign.1","shasum":"742f5bb2986ad635eb081bad695573cd6826c96b","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/man/man1/sshpk-verify.1","shasum":"a5c70f82de5313ee103ba9bf3cfb9774465de370","modified":1461946772000},{"_id":"themes/tranquilpeak/node_modules/sshpk/node_modules/assert-plus/AUTHORS","shasum":"d1d14de8fc8c21f9f86c2231df2531381f6a9194","modified":1453893288000},{"_id":"themes/tranquilpeak/node_modules/sshpk/lib/ssh-buffer.js","shasum":"2054816cb78235b88544615978878386c76ace84","modified":1469622474000},{"_id":"themes/tranquilpeak/node_modules/sshpk/node_modules/assert-plus/CHANGES.md","shasum":"b27cef2253f8ff8a83584bf1a55cec9d4dfbf517","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/sshpk/node_modules/assert-plus/README.md","shasum":"d6771de291034391f0ec79175fff3428ed6d82b8","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/sshpk/node_modules/assert-plus/assert.js","shasum":"8103ced007b61b3e45a420607de576faf7e1e0e4","modified":1453895518000},{"_id":"themes/tranquilpeak/node_modules/sshpk/node_modules/assert-plus/package.json","shasum":"6e883e8a2befb7f2845900c037e9d8c8243b1a10","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/sshpk/package.json","shasum":"44d94f62c291a8fb82cf026098b878a241bfea09","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/stack-trace/License","shasum":"290e5a54591f65d438cc5d862882dccbcede6758","modified":1390533542000},{"_id":"themes/tranquilpeak/node_modules/stack-trace/Makefile","shasum":"c807dad9dfab8715d69d8b6472d866ed5acc6205","modified":1390533542000},{"_id":"themes/tranquilpeak/node_modules/stack-trace/Readme.md","shasum":"7bb6a0892da8e9591aeda134297295ad3a2bbcf5","modified":1390533542000},{"_id":"themes/tranquilpeak/node_modules/stack-trace/lib/stack-trace.js","shasum":"41b61cd9b16415b868138816591eb44b239a0747","modified":1392867550000},{"_id":"themes/tranquilpeak/node_modules/stack-trace/package.json","shasum":"561752ab2400c5126767a1f5f2d916aa828f1d67","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/string_decoder/LICENSE","shasum":"8344f8cf34d06153cd7ffc797c070e00d69eb442","modified":1389987574000},{"_id":"themes/tranquilpeak/node_modules/string_decoder/README.md","shasum":"c8dac065c0a3043936a7c07ea1d698234c3ad159","modified":1389987574000},{"_id":"themes/tranquilpeak/node_modules/string_decoder/index.js","shasum":"91f40da3177881cf70b87520444b755e1d9592ec","modified":1408746280000},{"_id":"themes/tranquilpeak/node_modules/string_decoder/package.json","shasum":"211bfd45000f635798f2c9e908868cb3c5af9a83","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/stringstream/LICENSE.txt","shasum":"e957fbece098eddf6df809165d5e73c2c1b2e10a","modified":1445790422000},{"_id":"themes/tranquilpeak/node_modules/stringstream/README.md","shasum":"33c7843dec1919a17daad5a5ae2fb06d54018b38","modified":1358740050000},{"_id":"themes/tranquilpeak/node_modules/stringstream/example.js","shasum":"17a98e07a319edf8fbeeea49d83515304922b1b4","modified":1361914798000},{"_id":"themes/tranquilpeak/node_modules/stringstream/package.json","shasum":"c11a88bfe1466598c82efdecd9b1968be9903a8e","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/stringstream/stringstream.js","shasum":"400fe756da898736fe0642a709c7f88e21fda352","modified":1363466276000},{"_id":"themes/tranquilpeak/node_modules/strip-ansi/index.js","shasum":"fa7b64a04c5989a1c9b78e83768b90384ac9abcc","modified":1424571814000},{"_id":"themes/tranquilpeak/node_modules/strip-ansi/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1424571814000},{"_id":"themes/tranquilpeak/node_modules/strip-ansi/package.json","shasum":"3c84d8d709dcfa3ff674ee92ba76fe8b49f65f60","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/strip-ansi/readme.md","shasum":"ee19204de1797a46e3101e8b064a3cfd4741fd6c","modified":1456031684000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/cli.js","shasum":"aef33a307f851bb25b1bb7efbe24089df85cf7c8","modified":1407915746000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/index.js","shasum":"dc4f6ac692f8c755e3beb4672e43745c7f453bca","modified":1407915564000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/package.json","shasum":"a722e471bbbb0075744c63480fda11f22e13b7ff","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/strip-indent/readme.md","shasum":"1e953769e18b5a3315b916cc7bd4131539b99917","modified":1407915878000},{"_id":"themes/tranquilpeak/node_modules/striptags/README.md","shasum":"ad4aa7e22c8db2a73081b4ebe8211ebd1699640d","modified":1451668944000},{"_id":"themes/tranquilpeak/node_modules/striptags/package.json","shasum":"8fc2553da47bc6811c4b8b7bbd700672928fa926","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/striptags/striptags.js","shasum":"df67a3707877723eec80d67ec6107bb0ebfe7ed9","modified":1452024166000},{"_id":"themes/tranquilpeak/node_modules/striptags/test/striptags-test.js","shasum":"ce25ec97fadb2b687fae418901d1761a75a54e98","modified":1451668944000},{"_id":"themes/tranquilpeak/node_modules/supports-color/index.js","shasum":"669e4e82e32796eacb16a314bb3db270fb1d8572","modified":1435340724000},{"_id":"themes/tranquilpeak/node_modules/supports-color/license","shasum":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396777392000},{"_id":"themes/tranquilpeak/node_modules/supports-color/package.json","shasum":"9ef2c0c44458bc17560a5ad30b1b8ca66dce6e73","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/supports-color/readme.md","shasum":"a0227e37af9ebe9e998782cf0a1eb75338d68f8e","modified":1435683330000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/LICENSE","shasum":"4a83221ab3d6c912541e94c598d9e6823479641b","modified":1441153518000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/README.md","shasum":"c85795741968e6c45cec8825525b3f40bd34e599","modified":1447038070000},{"_id":"themes/tranquilpeak/node_modules/striptags/LICENSE","shasum":"6d2971720ac56d4343e58518c76b5e9bd0257a83","modified":1451668944000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/api.md","shasum":"05d05f58e44f56727c3270116b53b1e6d5f9b0ae","modified":1447038070000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/SymbolTree.js","shasum":"f106229e3c42e67aa450b12281e1de4510104534","modified":1447038096000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/TreeIterator.js","shasum":"1f1e728fe2757051175d19245228b5a5d8944fd1","modified":1441153518000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/SymbolTreeNode.js","shasum":"f2f4bbf584f1ad93ed586c220fffd0e94806f734","modified":1447038058000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/lib/TreePosition.js","shasum":"2a9fa768f41b219cd912d67b27df6595770029a2","modified":1441153518000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/package.json","shasum":"daad10a96ae198cd7caabbe6c0cd3e241a4c1a86","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/symbol-tree/test/SymbolTree.js","shasum":"e7ee1f4bdb79a7f1f7620bd5d2268bc82db13efd","modified":1447038058000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/README.md","shasum":"aaecf4b3ae1ed8930fc51abd6e70871935da8774","modified":1469473144000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/LICENSE","shasum":"d453b8d6be98bbb6cff7074794f5776ff3a17115","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/cookie.js","shasum":"bccee47eb4f388666a8ee1c9139cbc99fcb75f50","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/memstore.js","shasum":"ecd6269063fe718d5b46d4127ff9d12065660a90","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/pathMatch.js","shasum":"3d403b8aad536db9e97eef4915eb01ef53405323","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/permuteDomain.js","shasum":"700be205b7d0d3b4c4f442b7dc1b3299d47bf55d","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/store.js","shasum":"bcce2205e56bb588b4e6cfcd48a34610a5eccf82","modified":1469112452000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/package.json","shasum":"e1d978c167ec0a7eaeb907098dfe2ff2e96daab8","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/tr46/index.js","shasum":"02c41eea7eb4ce2d32b7faeb4229edaa28b9d8e4","modified":1453230242000},{"_id":"themes/tranquilpeak/node_modules/tr46/package.json","shasum":"de3611d4c69572436f4205e6379ee8a85a08ca01","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/LICENSE","shasum":"05979f0750cf5c2a17bd3aa12450849c151d8b7c","modified":1462374822000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/README.md","shasum":"fab5bff0eba532373f36d827d9775105d64ff719","modified":1462374822000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/index.js","shasum":"e9320bd906e55558d9ba2569f76e92899da8744f","modified":1462374822000},{"_id":"themes/tranquilpeak/node_modules/tunnel-agent/package.json","shasum":"7095f4885464e77945f10cdb1b4aa93de88d6f63","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/README.md","shasum":"040dc46c908d08a230dd2aec8c5dd876b3ef94af","modified":1452096126000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/CHANGELOG.md","shasum":"068180ca96e0a5bf6807d8db5a8297b838b9a293","modified":1442478126000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl-fast.js","shasum":"687e1899d1b4c2d5fbf28469f8ddef1901fd6457","modified":1442477638000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl-fast.min.js","shasum":"f0a5e4246de9ad373cbbc7f74264603856debc68","modified":1442478142000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl.js","shasum":"23a049b84d01bd8e938ac0daca4cfd38e5e48a0a","modified":1442482276000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/nacl.min.js","shasum":"e6984ca5a8a67f259e440598e21e98ab088dd2be","modified":1442478138000},{"_id":"themes/tranquilpeak/node_modules/tweetnacl/package.json","shasum":"a654872d3e9cc34ac640c02a67ca60c887b2b56f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/type-check/LICENSE","shasum":"7bc795bf398cfa51e99e85dc51931c3b0d1b5a79","modified":1428772162000},{"_id":"themes/tranquilpeak/node_modules/type-check/README.md","shasum":"b24649e95ad0b070fbb84aae7a3b25147cad305a","modified":1451342434000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/check.js","shasum":"abe3114c8036a60817a94e77cd027d350adb0151","modified":1451342408000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/index.js","shasum":"7cd3ef26148711328e58244a4a01657e1fabb6c3","modified":1451342408000},{"_id":"themes/tranquilpeak/node_modules/type-check/lib/parse-type.js","shasum":"865b087790b98cc30632918c4d99018a954fecd8","modified":1451342408000},{"_id":"themes/tranquilpeak/node_modules/type-check/package.json","shasum":"4cdb7999f3a79a06ee25373b3ec3294eabff524a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/typedarray/LICENSE","shasum":"c2b6e9dfdcb944a46af4f9b42ff1f3543a2aacce","modified":1386621684000},{"_id":"themes/tranquilpeak/node_modules/typedarray/index.js","shasum":"5d96e918bcecc108565675881bb7aeb15a2c5c92","modified":1386866860000},{"_id":"themes/tranquilpeak/node_modules/typedarray/example/tarray.js","shasum":"2586ece42108d56cd07ac4a74f77c55c2ac886f6","modified":1386621388000},{"_id":"themes/tranquilpeak/node_modules/typedarray/package.json","shasum":"bd51012eac77c2deb8586493763cbb26bcb6aa29","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/typedarray/readme.markdown","shasum":"c3eb3ac1ff7b8322da590b4eeb33920ea2b75419","modified":1400273538000},{"_id":"themes/tranquilpeak/node_modules/typedarray/test/server/undef_globals.js","shasum":"ba4353da7ce4b686c6e6fbe3acfa32dedaa46ef4","modified":1386621808000},{"_id":"themes/tranquilpeak/node_modules/typedarray/test/tarray.js","shasum":"6a61121e85e22cb1a7f4add55aef97d450e3583a","modified":1386606616000},{"_id":"themes/tranquilpeak/node_modules/upper-case/LICENSE","shasum":"3a7f886b632d2197676a40020d354e84b7860604","modified":1450200276000},{"_id":"themes/tranquilpeak/node_modules/upper-case/README.md","shasum":"2eeec02b0cf6dfdd2881c754a3ef3340f7cbc348","modified":1450200314000},{"_id":"themes/tranquilpeak/node_modules/upper-case/package.json","shasum":"a27532cb9367de408c1b7a46b608db317cce8fed","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/upper-case/upper-case.d.ts","shasum":"a5610dcff5a1a1f54b45b84e2f82b8393aeaa682","modified":1450200334000},{"_id":"themes/tranquilpeak/node_modules/upper-case/upper-case.js","shasum":"cc2dbbcf88c099a8c8a4db4c424e663ce9826a5b","modified":1450200276000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/History.md","shasum":"1fc5b9cf603a0b6abeb852b35bec607a411e5b9b","modified":1444221448000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/LICENSE","shasum":"cbde92577cb69b3b45dd33f8dc600732cf9e14cb","modified":1416920742000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/README.md","shasum":"8e590b24df7b037031e571b7b2b9600217b83ae0","modified":1416920742000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/browser.js","shasum":"335965112d6117af8926dce4497a1fb9fca022eb","modified":1444221370000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/package.json","shasum":"9bba5e92050ef394b66b681d72a850470bd03f62","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/util-deprecate/node.js","shasum":"26bb9fcabaf57f0bb50e5e026c13de394bc0c478","modified":1416920742000},{"_id":"themes/tranquilpeak/node_modules/utile/CHANGELOG.md","shasum":"16b6a616f4c94ae0ee6e06e7c94bb499fcb3b679","modified":1352715160000},{"_id":"themes/tranquilpeak/node_modules/utile/LICENSE","shasum":"d73fc0183a4b64b66f79af85e4d558b5c6a861e5","modified":1417968156000},{"_id":"themes/tranquilpeak/node_modules/utile/README.md","shasum":"782883c59e58d9b4394da711c31f9b001bc8e2d6","modified":1417968200000},{"_id":"themes/tranquilpeak/node_modules/utile/lib/args.js","shasum":"7920035695848d2324b1ed8d92495bb0543feb32","modified":1417968150000},{"_id":"themes/tranquilpeak/node_modules/utile/lib/base64.js","shasum":"86b657073c4f8eb0d1bb9a1297a7c9c06c8a58fa","modified":1417968168000},{"_id":"themes/tranquilpeak/node_modules/utile/lib/file.js","shasum":"92ed3353429e3fff29b3a2f07b0d9c9b3a7ddda8","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/lib/format.js","shasum":"5bd19be1bcaf9ded7107ba35acdf012da425728e","modified":1417968150000},{"_id":"themes/tranquilpeak/node_modules/utile/lib/index.js","shasum":"05fdaf5e46ce6b472a0742b6ed5e69418de8b2f9","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/LICENSE","shasum":"e452de6c5360ba269a3bda17cca33f0bf51035f5","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/bower.json","shasum":"309880c673269936910c413841dd9b9ffc912f52","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/README.md","shasum":"3f526cc1f351ec7f19a2834c5ee86b74dcd4347c","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/component.json","shasum":"8aa3891b5741f2a7ee641ce9416249d77f835361","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/lib/async.js","shasum":"f56140f3ba3069087fb29df74f5ce9b501a1131d","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/package.json","shasum":"f57255b7eef14f2a2487f65e6a25d95e8d11653f","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/utile/node_modules/async/support/sync-package-managers.js","shasum":"8cd8745f91bf7127cfa00028593b53ad78207fd9","modified":1432003464000},{"_id":"themes/tranquilpeak/node_modules/utile/package.json","shasum":"a5175205dc63d5a4a7f4c560acd721e111100fd1","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/utile/test/file-test.js","shasum":"f4102ac0b10b49432506ed08725fce9644f911a1","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/test/fixtures/read-json-file/config.json","shasum":"1589b2e9186b61caa765429762d3906224f81f78","modified":1352715156000},{"_id":"themes/tranquilpeak/node_modules/utile/test/fixtures/require-directory/directory/index.js","shasum":"6618d71b74c4428dd7aa331ba121d466dbcc5358","modified":1352715156000},{"_id":"themes/tranquilpeak/node_modules/utile/test/fixtures/require-directory/helloWorld.js","shasum":"9c29bd89d33235176b9cd190c54990cf3960993d","modified":1352715156000},{"_id":"themes/tranquilpeak/node_modules/utile/test/format-test.js","shasum":"6cc63636089b5d89cf58018584e84995ae646913","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/test/function-args-test.js","shasum":"6e1429c2ba5e3880c6c52ce27e5568203501270d","modified":1417968150000},{"_id":"themes/tranquilpeak/node_modules/utile/test/helpers/macros.js","shasum":"30c61e8d0a0c4c24941c3ef53941eabfa312294c","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/test/random-string-test.js","shasum":"47b8f0556736ed561fe961a068f63d497ae93f2b","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/test/require-directory-test.js","shasum":"1825cecbd4d91d6b791ea11ae4b6094fccd2c8da","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/utile/test/utile-test.js","shasum":"5f991764da2227c7a91856ae0abb6c3b733909e8","modified":1417968136000},{"_id":"themes/tranquilpeak/node_modules/verror/LICENSE","shasum":"772b18147b3bf826978f984f8e01562a9e3cc254","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/Makefile","shasum":"89b6506d72bcdd045b63921d0b754227f824c4f1","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/Makefile.targ","shasum":"f66e38899fc918aac830c478ae402c66d8793bc7","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/README.md","shasum":"94a2a13d3e722a3950176fa8ed55a1e7a7fd9d14","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/examples/levels-werror.js","shasum":"e6d95f8c3af86fe246ef883197c28df6b4884eb6","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/examples/levels-verror.js","shasum":"f8e7f3d3dbce6e61b53ea2a49a63111d156cf18e","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/examples/varargs.js","shasum":"67c7570a5aa82ca71690b558a3f3d1d321a7508c","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/examples/verror.js","shasum":"8513abb6a724947494c7513adfa27d76931488d6","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/examples/werror.js","shasum":"10e842ef7ad2e6901398304c963c6ef1f44efcca","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/jsl.node.conf","shasum":"c9a618ebefdabda69fcf47f17406c254f7f07f9f","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/lib/verror.js","shasum":"def5538e73a39e2d14388970751c55e55f9b06fd","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/package.json","shasum":"edf9e586e1f1da1474475472e7c22d4b7ea9ce67","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/verror/tests/tst.inherit.js","shasum":"298dabcdd9eff7081ee06a2b87e1118651190c9c","modified":1360150194000},{"_id":"themes/tranquilpeak/node_modules/verror/tests/tst.verror.js","shasum":"947c77e0a31ea025d156d9323d8a7283bf87871a","modified":1360150100000},{"_id":"themes/tranquilpeak/node_modules/verror/tests/tst.werror.js","shasum":"6b4007d450a8dfb9311ad86f44e3a7817fdeca53","modified":1360150220000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/LICENSE.md","shasum":"60314089ff0e607f8aaf708db9791993dc91ce21","modified":1447009642000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/README.md","shasum":"1eac57139b2c6b3d37f2237cc3b7b14e6eb64834","modified":1447009642000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/package.json","shasum":"bda011d25417509da4c3f259f56a3e74b9a65504","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/webidl-conversions/lib/index.js","shasum":"32a7715cbd092327cb6b40a1ceb0f768c006cfbc","modified":1451862398000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/README.md","shasum":"e928307b7d3760693558f44c3093d7bea437f26f","modified":1459957740000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URL-impl.js","shasum":"872f956a046ef3f7d37fc6ac7e9096732b0e4990","modified":1460736714000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/public-api.js","shasum":"3331f5d5961911f28172282277b1a35893c93506","modified":1453230716000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/LICENSE.txt","shasum":"5cd9badc23e4c735ca1cbb6d65110c93c843b9b0","modified":1459957740000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/url-state-machine.js","shasum":"231adde05572168d496ac13bdf018f608956ef4c","modified":1460736754000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/utils.js","shasum":"e531f22976a3b992693f328ed7bdd4103d87c08e","modified":1460736754000},{"_id":"themes/tranquilpeak/node_modules/which/CHANGELOG.md","shasum":"672bb408bfa35358478a012f1bef2ce451995b79","modified":1465095138000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/lib/URL.js","shasum":"7dc4e8ae485c2a6973e1c49e7779587c97f1a8c1","modified":1460736754000},{"_id":"themes/tranquilpeak/node_modules/which/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1416886460000},{"_id":"themes/tranquilpeak/node_modules/which/bin/which","shasum":"5b6b3e1838316fb3f1b3b4194cdf49db0674eb17","modified":1462386602000},{"_id":"themes/tranquilpeak/node_modules/which/README.md","shasum":"6269a83ac37a211a4f54a0b6d00ca5dfc3e14eaa","modified":1444223924000},{"_id":"themes/tranquilpeak/node_modules/whatwg-url/package.json","shasum":"d7b2427465e25ad55718f43b5734d84a647ac83b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/which/changelog.sh","shasum":"b473f9df79e5dc0508896ac6d9785d75f97c254e","modified":1463569396000},{"_id":"themes/tranquilpeak/node_modules/which/package.json","shasum":"4f7e1f6615c0a920fa18314e241fe39afffb5e9a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/which/which.js","shasum":"9d35d14884eb0ae53c92624e2f7e88e62915fff4","modified":1465095070000},{"_id":"themes/tranquilpeak/node_modules/winston/LICENSE","shasum":"446f0f02b2fb7a70a11d86f6ee3913560019ba52","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/CHANGELOG.md","shasum":"789205bcd627716db056c61a03ccc9e820a9d738","modified":1447858222000},{"_id":"themes/tranquilpeak/node_modules/winston/README.md","shasum":"293e7e3c490c2279f6207db57f3b29edd9aeb98b","modified":1447858002000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/common.js","shasum":"e9cb682741789730efe0ff0cda8cab1b2117b230","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/config/cli-config.js","shasum":"39913f60804957405ef73227f20d51ba175b9398","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/config/npm-config.js","shasum":"8f277d06ddacdfc3551c121ed2c89de65a2dc014","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/config/syslog-config.js","shasum":"775d201fd2a1b888abfd41d28df445e017c38c2f","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/config.js","shasum":"5a5d03e415520ae2ab8d58073cd254952382062e","modified":1447858002000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/container.js","shasum":"8ae7ba368a4ba2d2712e8e38a5e1eab0958318b3","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/exception.js","shasum":"301dc6a835b4f9e63f231d05db5bf7bfc8375bb2","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/logger.js","shasum":"f39a8cb795864b86f76a133f71ed314e07d4cb67","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports/console.js","shasum":"3baa138b1c409494a5ac68088bf38e3cb1cd195a","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports/file.js","shasum":"9ea5baeecd5addeffd18d578d562b72018bdfb64","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports/http.js","shasum":"a1578406d37b5bd8df474e9d2fe8be74fc77054e","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports/memory.js","shasum":"c7b230abb8395eb240e294fdd88d81e6b6c09087","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports/transport.js","shasum":"b42fb94d73b7653230adf70381ff956db903c58c","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston/transports.js","shasum":"e4da7eaaa1b1b8996155d9e9cee160ce849866de","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/lib/winston.js","shasum":"67690322a4bcd9f7c140c2247945d438691d89e6","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/CHANGELOG.md","shasum":"a58e26ddc6fe6b0e24fa3eb2120c28a7f9395504","modified":1432143534000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/LICENSE","shasum":"e452de6c5360ba269a3bda17cca33f0bf51035f5","modified":1432047808000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/README.md","shasum":"1ffff0d95734f76a4491ca2bfea0f4bf2184816c","modified":1432142504000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/component.json","shasum":"67cad73bfcf82619ee4e01466a85fa775f6a060f","modified":1432143610000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/bower.json","shasum":"9a5ce33cb27434cdfe52ad4d92ccc63b89ebafcb","modified":1432143610000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/support/sync-package-managers.js","shasum":"6ca22cd1e09daf68c74525885397fd3359eac609","modified":1432142078000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/lib/async.js","shasum":"7b9e5164cb58da49934d9afd25c7a4c8f279a481","modified":1432142946000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/async/package.json","shasum":"706b37b3b9c370bdb4d3c1a9af8f58537e2de5a6","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/MIT-LICENSE.txt","shasum":"341480159e4c6e291a492a441fe69081d671e85d","modified":1412084094000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/examples/normal-usage.js","shasum":"8da0b32e0ce469a8fbadf4d3fe93c259447368e4","modified":1412827398000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/ReadMe.md","shasum":"7db57c6716b34cf3e1bfdd5de8e1aba714999997","modified":1412258056000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/colors.js","shasum":"e961b71160cc928377079df41bf3d3d501f86772","modified":1412826788000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/examples/safe-string.js","shasum":"60552d817643905fde3839ae9d93f7c933f8af89","modified":1412827398000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/custom/trap.js","shasum":"391f769b8dd1a77b7c8ea1a76817b4e265cc6f38","modified":1412139052000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/custom/zalgo.js","shasum":"2abda34d189eb838e46441e71b30b208cb768c36","modified":1412139408000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/extendStringPrototype.js","shasum":"837850a00e17fa8a19e86421ccfc4ec1551da3aa","modified":1412826948000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/index.js","shasum":"9c98a3b2b82718b917279b55a0dae1ce70d26120","modified":1412084546000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/maps/america.js","shasum":"45f3d39d744cc14040d4d62757b412b169cf2efc","modified":1412063266000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/maps/rainbow.js","shasum":"014697741d559ea1dce3a5a27b9ba27b7241355c","modified":1412063188000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/maps/random.js","shasum":"50ac05ea88379162110f19cf3c441fa282956e73","modified":1412138888000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/maps/zebra.js","shasum":"5f6caffb4012ae13e8f36302a03cf27a7e593d89","modified":1412062888000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/styles.js","shasum":"a06697bab0a191e7961b855e767bbafacb25737a","modified":1412139652000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/lib/system/supports-colors.js","shasum":"65ce27a33eccf3e698c49de9c94b6ffef349ca97","modified":1412084586000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/package.json","shasum":"c07c9e4c59f664c691575c236cce62f05c604ee9","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/safe.js","shasum":"65698ffe95c229962bb1c212eb971401eaeb0b62","modified":1412084748000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/tests/basic-test.js","shasum":"ea00a57fc80d1e288f625ad365cc69061bbcb6dc","modified":1412082988000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/tests/safe-test.js","shasum":"40b6693d2eaedf03855170abc764395872ee5d6a","modified":1412067718000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/themes/generic-logging.js","shasum":"ea9fb8f704581e751d85767563a3dcd826ead0e6","modified":1412084596000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/README.md","shasum":"bf5990a061a939c0e99a2c0224e3fd21e4ec227b","modified":1445331258000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/LICENSE","shasum":"cd04de9a6651aafa2355c573bf733d2f46a91541","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/docs/pkginfo.html","shasum":"17dfb51fb19ae1a419a232a2ca72bad1bf48259e","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/docs/docco.css","shasum":"d447289834a901691f2d7805c8e6242a4f3f78c0","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/all-properties.js","shasum":"5eb6e7c7a23c9c952c7ec2718e1d0035aac4e256","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/array-argument.js","shasum":"4213abea65875b678e9e7bf73ef24e4e984792de","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/multiple-properties.js","shasum":"e52c859d2aeee5c63a377a1dd88e4a49ae65cd5f","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/object-argument.js","shasum":"cb27674be4c0337b9f6f700ddb9ffe3ad6b14b57","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/package.json","shasum":"1795a6d0cf6c1fdab9b0cd2e535eba1adafcee1a","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/single-property.js","shasum":"d4fbfbe9c907a8b6a90eeb9445cd989387ac8d6a","modified":1358467046000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/subdir/package.json","shasum":"473b2ccf00b82e7865f4dbb096f3e5f57eb80f7e","modified":1358467202000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/examples/target-dir.js","shasum":"b3844b056cadbeed20e7f31fe4d0a4bd0cc2c93f","modified":1358467202000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/package.json","shasum":"a8b4558e3e1256d0a12317ed554a9bafbec53e8d","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/lib/pkginfo.js","shasum":"e80bd656ccbc482490bd48ca913aa9a1836ab55b","modified":1358467202000},{"_id":"themes/tranquilpeak/node_modules/winston/package.json","shasum":"e95d26ba348c21e9e8d37bbfce4defa283f2e6e0","modified":1469980556000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/pkginfo/test/pkginfo-test.js","shasum":"3cc449ad2843053d28e3efadeacd333e0724debc","modified":1358467202000},{"_id":"themes/tranquilpeak/node_modules/winston/test/helpers.js","shasum":"5234740e58051041644770b5f419c372a6c15eec","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/console-test.js","shasum":"225ec2bcf93d61565081c294817d916335e79b51","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-archive-test.js","shasum":"79dc27b4466c256fc02029b3e80fabf4bf3a2c37","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-maxfiles-test.js","shasum":"e84f9cd21198da4bce4fd927f0a6e1f43bcd3ca5","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-maxsize-test.js","shasum":"2d3f0c101adfbe89cc5d3225bf5a61ee4e290f44","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-open-test.js","shasum":"84b4582222ed4bbefc4fa847c60e190bbd489211","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-stress-test.js","shasum":"5763669760bdce825b586dfbbb99a0dd2c0d2dfe","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-tailrolling-test.js","shasum":"4054dab0ef15f4cffd08072f3b164d01af47583a","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/file-test.js","shasum":"87e1b081e087fdc527ac77305d0d44bd392af311","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/http-test.js","shasum":"4c06631b30ed0293325e58fc5d99752e16b28c4e","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/memory-test.js","shasum":"501b54602418bf6d680fc1a1350c192a5e145085","modified":1447857996000},{"_id":"themes/tranquilpeak/node_modules/winston/test/transports/transport.js","shasum":"d6672fdbdb6c7dbeb353a7470e531ff77bab14c3","modified":1446592108000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/LICENSE","shasum":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1430996872000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/README.markdown","shasum":"2c6150a823511e8ae14eaa7bc26334a1b8fc49f3","modified":1430996854000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/example/center.js","shasum":"3ed21e5fa4a005f4bedd58d13f0bfd2eee76bc08","modified":1430996854000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/index.js","shasum":"756e8b536a238426b7eb92e4eb6d2e5ef938eccf","modified":1430996854000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/example/meat.js","shasum":"5c14cd287ae470af8c093962d1e26be95558c944","modified":1430996854000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/package.json","shasum":"3317ba0593282e9a1c4dfa503b17458a0af9d97b","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/break.js","shasum":"8c33328b4704520e2d91b2f40179891010c6d29b","modified":1430997046000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/idleness.txt","shasum":"25e2ef694c74c8b9e7d1f2b1d7497ff8cf25c462","modified":1430996854000},{"_id":"themes/tranquilpeak/node_modules/wordwrap/test/wrap.js","shasum":"098d027896cda479c2ca0099797d9dd91093fa78","modified":1430997108000},{"_id":"themes/tranquilpeak/node_modules/wrappy/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1463505328000},{"_id":"themes/tranquilpeak/node_modules/wrappy/README.md","shasum":"582d7139d169b0fc0b1014f2372a0aa26a52cfb8","modified":1463505328000},{"_id":"themes/tranquilpeak/node_modules/wrappy/package.json","shasum":"1b004e4376d0db33ce9525bfd87dd33a0dead2eb","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/wrappy/wrappy.js","shasum":"7d5c1c908664b3df4a9b72400a126652ba0dd905","modified":1463505328000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/LICENSE.txt","shasum":"09aec94825c7dc77fc74431919a9d42842fcfc0f","modified":1424776092000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/README.md","shasum":"1bc8e7409c9f0eb0d0d2d56887389881845c16f5","modified":1424776092000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/generated-parser.js","shasum":"270c7576f2a663d50eb05e829c746c0e830e826a","modified":1424776206000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/grammar.pegjs","shasum":"72bb56b6759cbf422ec8639722197c43e86bf3d3","modified":1424776092000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/lib/xml-name-validator.js","shasum":"e586969f0767edadc4fed51e3d80a394997708a0","modified":1424776092000},{"_id":"themes/tranquilpeak/node_modules/xml-name-validator/package.json","shasum":"883bd1cb55aa515ccb3ff0fcb93878c19337d713","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/xtend/LICENCE","shasum":"c563ca2a6d330b98c2ca9473a0299c4a689bf6b8","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/xtend/Makefile","shasum":"bf249732a0985e13f60552c8a9d6c3894c8fbb44","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/xtend/README.md","shasum":"d7d6f2f31071911d99fef109646867a0b325c8a3","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/xtend/immutable.js","shasum":"3c1de57f8d038e3ebc9e1ab278fe2f683866079c","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/xtend/mutable.js","shasum":"0b00bff9bc925c6c258ef4afb77e7f50640e6555","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/xtend/package.json","shasum":"2ca5409b9e58bce91234bf4959e09a2ff431fdff","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/xtend/test.js","shasum":"3b51ee9fb4c95c82be0bdde62dddb31f4c18e648","modified":1446477546000},{"_id":"themes/tranquilpeak/node_modules/yallist/CONTRIBUTING.md","shasum":"1ea00170c91f88b58f67fc747d452ff2a33db34a","modified":1450400494000},{"_id":"themes/tranquilpeak/node_modules/yallist/LICENSE","shasum":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1450400778000},{"_id":"themes/tranquilpeak/node_modules/yallist/README.md","shasum":"930460a06c3414c2dceeeca378fbe0057779fab5","modified":1450529490000},{"_id":"themes/tranquilpeak/node_modules/yallist/package.json","shasum":"6e23bb1dd25a95fa736d86717902632826b0f35a","modified":1469980554000},{"_id":"themes/tranquilpeak/node_modules/yallist/test/basic.js","shasum":"2a5fec5750c0e572b0766b765630c84c7d0e38bc","modified":1450529532000},{"_id":"themes/tranquilpeak/node_modules/yallist/yallist.js","shasum":"c8c1b4dff11391bb315acbed47e63e4c0968346c","modified":1450529568000},{"_id":"themes/tranquilpeak/package.json","shasum":"4e2aae7eb7141c24a112a2c0ec8dad4eeba9c1af","modified":1469980338000},{"_id":"themes/tranquilpeak/scripts/filters/excerpt.js","shasum":"5e0e473d46f8c7aac988ebf0b25ab2eab0af73bb","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/filters/thumbnail_image_url.js","shasum":"0ad2d9304c991e2989708bdbfa6a59030ee691d3","modified":1469877350000},{"_id":"themes/tranquilpeak/scripts/helpers/absolute_url.js","shasum":"0d520a946b6f0abbac60529017ed3133265aac60","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/helpers/is_remote_url.js","shasum":"471237ea295bcc9a392a5bb6738ef4c6ab673afb","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/helpers/resolve_asset_url.js","shasum":"c813e9daaed374b386b91876923f10c0cf1d624c","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/migrators/1.4.0.js","shasum":"0f04b8cc723002ad5073c1070d1d1d567ca87f41","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/tags/alert.js","shasum":"5b86358dd53c9b0d44c385ec12cf9e76383e229a","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/tags/fancybox.js","shasum":"55ce02f9ef084f43932eb9b0f10db1d5e9c3a250","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/tags/highlight_text.js","shasum":"8e093f21e9a4b10c19be6f300dc90bcc39685ec9","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/tags/image.js","shasum":"214a9d97c7c9b54627101a7a6fbe9739815a85bf","modified":1468554328000},{"_id":"themes/tranquilpeak/scripts/tags/tabbed_codeblock.js","shasum":"480e1c58c8e9d99a8a7cfcfd523171139c32e4e6","modified":1469691160000},{"_id":"themes/tranquilpeak/scripts/tags/wide_image.js","shasum":"d3596c62694548a3a684e8dfeb5372038ef6f450","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/base/_base.scss","shasum":"f0a46b090a0a4dd21edfd89095761895c5278ecb","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_alert.scss","shasum":"3644442dfc16aa8a6894db1a605e325c856d44a9","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_archive.scss","shasum":"6b7be2269d014c6c742a2c29c6a2aca39a383250","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_box.scss","shasum":"eebaacf55234fdaa156edb7dc4d9a4f382eaf4d4","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_button.scss","shasum":"ea9bd41800fe04860f7e892c17010588b2563a06","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_caption.scss","shasum":"dad2683f5f3235b335eebcbda3db59a1cfbb2283","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_code.scss","shasum":"0a14fe197c221a4d4d91ee9d41541ce7969043ca","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_figure.scss","shasum":"01152043de4e23f6595835941732563f09a033f3","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/components/_form.scss","shasum":"368187e0c5f1a57d8c423f2ec23e897ee94a1a27","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/components/_hide.scss","shasum":"c2f5ed51086b9ea5d94ff548bdc4653ea5cd7912","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_highlight-text.scss","shasum":"7a7a8a78f75d6c43a46fd020e2d44546e716751b","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_icon.scss","shasum":"60dc972bcd81b4f95ab2c067ca910a5bf324d907","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_image-gallery.scss","shasum":"f683e80d69a0d5ac4e832d236ff5576cc749858a","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_link.scss","shasum":"7460155ebf7ce0d3e9acd090b6b99673127fd0be","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_main-content.scss","shasum":"90c46c87289a8b3cf7c14d36900f5ced9db36c25","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_markdown.scss","shasum":"ba6d7e8f84b3b6dfef339f28b5c6ae372ead674f","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_media.scss","shasum":"84aa03c01b741bbeb31c6b48122930f30ad40de3","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/components/_modal.scss","shasum":"bc56f823cd67b2ed65b5cf2c3e1851fa3e82f0f9","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/components/_pagination.scss","shasum":"5e1069c3cd066a3139edee0f8c35311cb6dfbd0c","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_post-actions.scss","shasum":"4d4722be969001e33df429e549a934f7cfcb8cf4","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_post-header-cover.scss","shasum":"c4bf950602ccb3fbdad54938979651a7b488236e","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/components/_post.scss","shasum":"1607c8580c110466993bd09362b879a4b1eb1d8a","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_postShorten.scss","shasum":"4b545d89a2c4ce9857c2d83c942b3d78c09d8296","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_pullquote.scss","shasum":"86bc35ba358d1340debc459a344f5f6d34acaa42","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_tag.scss","shasum":"ddd1c2ce17f0116655bdacda598e7f1d6fd18262","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_text.scss","shasum":"7b38858248da2f73cf64c5949fd475a8e0a246ae","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/components/_tooltip.scss","shasum":"f33ad3e677761af1ceb42d337691b8b354ff70bd","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_video.scss","shasum":"f9727fd300d73e8844abf0e2575c45e6c7769333","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/layouts/_about.scss","shasum":"52bdadfccaf3bc2082412348cd419c9da5793530","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/layouts/_blog.scss","shasum":"2450e07594a5e5186170fb5b5b157cc340808a9a","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/layouts/_bottom-bar.scss","shasum":"c7816c7ebc253d46466355860ead6669a3707ac6","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/layouts/_footer.scss","shasum":"645161942c66e6afbd666b4755337a6a6261e5e0","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/layouts/_cover.scss","shasum":"03a951c9b35dd4e35456caa36950e6d6bef77ac3","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/components/_share-options-bar.scss","shasum":"c27b8c5dbad8eafedab74602020cc2cea57f1d32","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/layouts/_header.scss","shasum":"e8c4e66e62edb8ea5a2c98cefc5d62f3e8d5c4ed","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/layouts/_sidebar.scss","shasum":"58b428919154f28bef347dc2afb5a2683330cf58","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/layouts/_main.scss","shasum":"ee4648502b355db51fc6cb7b05375003331f2f6e","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_css/pages/_search.scss","shasum":"5f7cde0b68156ea802c3caf6cd673cab948b09d9","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-tranquilpeak.scss","shasum":"72bb30af91d08dbbd4092271eef288c40eeb7dbb","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/themes/_hljs-custom.scss","shasum":"a0ffab53db35bbd4881aeb077400cba55551f3bd","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/_fonts.scss","shasum":"46f2edf56fb049f6d7289abfd5ad238a2c0c10dd","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/tranquilpeak.scss","shasum":"486dd2235ba54623ca879e2fa17ab893b31d1bb1","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/utils/_variables.scss","shasum":"43da0b6e6cd87e16aa7198795ef4b497bd308c3f","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_bottom-bar.scss","shasum":"ab28b4d66f021e44d7a46a76157c6a2b5fd23496","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_button.scss","shasum":"70c64560144d7d6015bbedeca0531258f9bafa07","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_category.scss","shasum":"8cfc45772365e537949a4cd20cfa2a79e1a75dc8","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_form.scss","shasum":"14026f13b54ef9f2cd7109cf1bca43040816e542","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_header.scss","shasum":"52de2cb5f49a3b5748557fe2d25791ce52457d62","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_main.scss","shasum":"0ad55a6191d0a533917845006ceae329353c0b90","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_opacity.scss","shasum":"cfc9905b6df3b5100a30b5c47fd331068f238f97","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_post-header-cover.scss","shasum":"ecd9078372d8bd1b7f4979bae3251e8efb345a9b","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_prefix.scss","shasum":"5e04cd54ba375f69c97b62b7d4e535118ec78177","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_share-options-bar.scss","shasum":"06f84bceb82df4d3bda64144f6fe4ad8e3e45f89","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_sidebar.scss","shasum":"a28fffd40fe34a9821909a1133961e642b7f9467","modified":1468662354000},{"_id":"themes/tranquilpeak/source/_css/utils/mixins/_tag.scss","shasum":"c8a87e586e27f999ffa46f273f78a812f1cf2f0a","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/archives-filter.js","shasum":"8b8998b0e67c745a20450001c0739f6977b63309","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/fancybox.js","shasum":"31cf6fd9b36bb3cf0936c8f955c9de06ac1623fa","modified":1469877350000},{"_id":"themes/tranquilpeak/source/_js/categories-filter.js","shasum":"a5f3c4b9bbef1c8ec881eb39551060ca95bfbb33","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/codeblock-resizer.js","shasum":"391c2c9135579ea50c2060e0612e7105e06a8ff7","modified":1469691160000},{"_id":"themes/tranquilpeak/source/_js/header.js","shasum":"c274adf8f8010b9f4ba46896063859ae3e413e97","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/image-gallery.js","shasum":"90efc47246af69b7e17fab6e0bd1578043fcc2b0","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/about.js","shasum":"2c2e0bf35c8bbaa2b77df593e3425ab5b1ebcf0e","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/post-bottom-bar.js","shasum":"11502f8c52489350c857b935a1a63f46d7ca5496","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/search-modal.js","shasum":"30b4f47b61ae48543f77be63801e3ecc6e411f3a","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_js/share-options.js","shasum":"0939d28321c8b645ea7cf853dcd7f504528911e6","modified":1468554328000},{"_id":"themes/tranquilpeak/source/_js/sidebar.js","shasum":"18dc623dd237c519bb79ce93283a5446cc11a487","modified":1469980250000},{"_id":"themes/tranquilpeak/source/_js/smartresize.js","shasum":"7342a21f94d7bb0525ccbd917d43a6824d7ae63e","modified":1469691160000},{"_id":"themes/tranquilpeak/source/_js/tabbed-codeblocks.js","shasum":"465a7a60c609a3b2ac182ac164feea2fea00e0ec","modified":1469691160000},{"_id":"themes/tranquilpeak/source/_js/tags-filter.js","shasum":"d33625df51d7b9788eeea338626f04387c96f053","modified":1468554328000},{"_id":"themes/tranquilpeak/source/assets/css/font-awesome.css","shasum":"2148b3dddca54f413e8ba50aa48b53b400bd99b8","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/css/jquery.fancybox.css","shasum":"2cc67cd8606545e140f20a72c0f583dce154fb36","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.eot","shasum":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff2","shasum":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/images/favicon.ico","shasum":"9d45fba67261c3f221a1a9211305331d2033c99f","modified":1470369124892},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox-thumbs.js","shasum":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.fancybox.js","shasum":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1469980406000},{"_id":"themes/tranquilpeak/tasks/config/bower.js","shasum":"f2e24797660dc66b038b87072a7a59e3c23efc88","modified":1468554328000},{"_id":"themes/tranquilpeak/source/assets/js/tranquilpeak.js","shasum":"15cdecf3aa2652c9d24d0bc735f69e498b8bf1cc","modified":1469980406000},{"_id":"themes/tranquilpeak/tasks/config/concat.js","shasum":"0c2c4dbbfac52f20a3035a2f8cd1c24f1759b17e","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/clean.js","shasum":"ea70743eb4ed0d9ead68d6fc8b65b9f936229a00","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/exec.js","shasum":"33c141cf401fff3d1e251fc48dd2145486ef9465","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/replace.js","shasum":"30fbbf51b8b41a70f5e76a335b50565f280f29e0","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/sails-linker.js","shasum":"c1103119ec7d1f04cfbb1cda83b40d11e8f2d218","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/sass.js","shasum":"79d65bad62ca0c2a8a155a76faa2be3b0c361bf0","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/sync.js","shasum":"fbc09d0ed201993bc1918223b8f8ad5b68f50490","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/uglify.js","shasum":"e31cc195decf8676047ac32255f99c0ca9c05f67","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/watch.js","shasum":"933eecd8a2506c627dbb9a1137305a16dd2d9f9a","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/config/cssmin.js","shasum":"352185864437728c9c19169f4fec6fc3308e8b6d","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/pipeline.js","shasum":"22c29f34e8d8dbc1f68f45cf4adb4851862a2de8","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/build.js","shasum":"1d95f8cb31f0f1546f0ccdb6d3b35b6d6c5f7af2","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/buildProd.js","shasum":"65842e2c17e4587dcba5880040a6780a48a06c35","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/compileAssets.js","shasum":"a65122ba0d1a1b6044e3b635a644882577b628ba","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/default.js","shasum":"80174db9b8a729980770e639e70999ce5a816b78","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/eslint.js","shasum":"718cd8a80d060e2587b84e0e20ceaa39c2cc9411","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/linkAssets.js","shasum":"079cd274cb29f9984eb7150d88f61819d2ef6235","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/linkAssetsProd.js","shasum":"d0a1b0252db3fa8904063a592e8e0448a0cee590","modified":1468554328000},{"_id":"themes/tranquilpeak/tasks/register/syncAssets.js","shasum":"ba579eae4f7791aad96c4f0a287079da5dc855a7","modified":1468554328000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenization/named_entity_trie.js","shasum":"33e071b202ac36983caed873f42e42a7f0f0e1f0","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tokenization/tokenizer.js","shasum":"8144a08b6c67e3a315d398d3ffb89b3be5cddbf4","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/parse5/lib/tree_construction/parser.js","shasum":"9ed6d2589518f0ddb3575f01ac110dccadcf4975","modified":1448726486000},{"_id":"themes/tranquilpeak/node_modules/winston/node_modules/colors/screenshots/colors.png","shasum":"e53658cda83d491b97cdd19d89571397109e7a94","modified":1412138734000},{"_id":"themes/tranquilpeak/source/assets/css/style-yrst5vo1nxaxbp2g3v9na2wg1lixlpr3ghbjdvskeixmu79deycecx3rh4bt.min.css","shasum":"034f965d76199d945d8b66c37884a804bd51ff8a","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/css/tranquilpeak.css","shasum":"49078968fc63b9513194fc687441103b6023aebf","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/fonts/FontAwesome.otf","shasum":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.ttf","shasum":"9088143b19979779b2116cef38b661f72d982e19","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.woff","shasum":"56ce13e71c2150d81bc972940584915181bd6081","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/js/script-rt08quwts7iav5x0cfd2ym0gb5qkd1lvrsmwrakxtkhefmaaes4ywkmnjnwf.min.js","shasum":"d5f530b53bdb97030bd94c3eae4943f1e74e6bfb","modified":1469980408000},{"_id":"themes/tranquilpeak/node_modules/moment/min/locales.min.js","shasum":"75b7468c554cdcfb6d39d5856290e51b4e9db267","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/moment/moment.js","shasum":"968eb41bfbb5b76b3328f728dc82d866d515b61e","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/tough-cookie/lib/pubsuffix.js","shasum":"56aac14d8b2dcacfe05e3447a6e4bf9dff2fa0d9","modified":1469112452000},{"_id":"themes/tranquilpeak/source/assets/css/style.css","shasum":"bc3086539f7c2bb2af8e7040856966da95108e10","modified":1469980406000},{"_id":"themes/tranquilpeak/node_modules/moment/min/moment-with-locales.min.js","shasum":"7a203f9ec2b672a4d41259c56cf3a7739414ed28","modified":1467593070000},{"_id":"themes/tranquilpeak/node_modules/tr46/lib/mappingTable.json","shasum":"6e09dfd1d4d65675bba0a9bb69e0bd6393f0d5da","modified":1453230526000},{"_id":"themes/tranquilpeak/source/_images/cover.jpg","shasum":"df915f5b3eeed6bad93a183f65e5c6f536e551fe","modified":1468554328000},{"_id":"themes/tranquilpeak/source/assets/images/cover.jpg","shasum":"df915f5b3eeed6bad93a183f65e5c6f536e551fe","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/js/jquery.js","shasum":"0fed45ad7a48ace869bc725ca474ad86a1ef1562","modified":1469980406000},{"_id":"themes/tranquilpeak/node_modules/moment/min/locales.js","shasum":"99a98a72b0a70d30b1fb274d7023b1c9a3f37a8d","modified":1467593070000},{"_id":"themes/tranquilpeak/source/assets/fonts/fontawesome-webfont.svg","shasum":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1469980406000},{"_id":"themes/tranquilpeak/source/_images/cover-v1.2.0.jpg","shasum":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1468554328000},{"_id":"themes/tranquilpeak/source/assets/images/cover-v1.2.0.jpg","shasum":"a98b9bf4d6be3af0156c0b6e781f067e343a682d","modified":1469980406000},{"_id":"themes/tranquilpeak/source/assets/js/script.js","shasum":"17e2778d8e48144865d1c216cc619653b29c004d","modified":1469980406000},{"_id":"themes/tranquilpeak/node_modules/moment/min/moment-with-locales.js","shasum":"8d57b1ad77a32f9091a22559f822b6ae54ba4adb","modified":1467593070000}],"Category":[{"name":"zxing","_id":"cirhekr6s0009zspkfoj5z5c4"},{"name":"Life","_id":"cirhekr6w000ezspk6a2gvp8g"},{"name":"XMPP","_id":"cirhekr6y000jzspkkv98nbbz"},{"name":"Android","_id":"cirhekr740012zspkq77cuorg"},{"name":"App","_id":"cirhekr760019zspk47dfxn5e"},{"name":"SourceAnalysis","_id":"cirhekr7b001jzspkv586osi1"},{"name":"RxJava","_id":"cirhekr7s002czspk13i2lyeh"},{"name":"Retrofit","_id":"cirhekr7y002nzspklj133alf"},{"name":"github","_id":"cirhekr85002zzspkxhkbrj2f"},{"name":"jcenter","_id":"cirhekr90004ozspk2jomhanr"},{"name":"hexo","_id":"cirhekr990059zspki79l3f92"},{"name":"Gradle","_id":"cirhekr9c005ezspkse3qlzlz"},{"name":"Android Studio","_id":"cirhekra90072zspk4hpcqvob"},{"name":"jekyll","_id":"cirhekraa0076zspkrs3vnz7y"},{"name":"SupportLibrary","_id":"cirhekrag007kzspksmqxmi8g"},{"name":"CustomView","_id":"cirhekrcg00byzspk47h5bp9n"},{"name":"DesignSupportLibrary","_id":"cirhekrd900dlzspku9c00a6e"},{"name":"AndroidSource","_id":"cirhekres00gczspkdzhmjnez"}],"Data":[],"Page":[{"title":"All tags","date":"2015-07-30T09:24:44.000Z","type":"tags","comments":1,"_content":"","source":"tags/index.md","raw":"title: All tags\ndate: 2015-07-30 17:24:44\ntype: \"tags\"\ncomments: true #如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false\n---\n","updated":"2016-03-17T00:44:06.368Z","path":"tags/index.html","layout":"page","_id":"cirhekqog0000zspki4e28jn8","thumbnailImageUrl":null},{"title":"qq","date":"2015-07-31T01:31:26.000Z","_content":"<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n \n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n①群：314447894<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=373a238a1c20659543ce4a66b59bd1f7fa03cecf65af7f979b5fa58e9a643ae9\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王①群\" title=\"剩者为王①群\"></a>\n\n**请勿重复加群，谢谢。**","source":"qq/index.md","raw":"title: qq\ndate: 2015-07-31 09:31:26\n---\n<h1> 剩者为王</h1>\n\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。<br>\n\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n \n \n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=832e7ce9d313be07ed4e3cadb61752bd384b11c63f41728317cfd887f23d09aa\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a>\n\n①群：314447894<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=373a238a1c20659543ce4a66b59bd1f7fa03cecf65af7f979b5fa58e9a643ae9\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王①群\" title=\"剩者为王①群\"></a>\n\n**请勿重复加群，谢谢。**","updated":"2016-03-17T00:44:06.368Z","path":"qq/index.html","comments":1,"layout":"page","_id":"cirhekqoq0001zspkubugrnee","thumbnailImageUrl":null},{"title":"friendslinks","date":"2015-11-27T01:28:39.000Z","_content":"小伙伴们\n* [冯建](http://jayfeng.com/)\n* [咕咚](http://gudong.name/)\n* [Ailurus](http://www.easydone.cn/)\n* [汤奇](http://itangqi.me/)\n* [程序亦非猿](http://yifeiyuan.me/)\n* [Tikitoo](http://tikitoo.me/)\n* [kaedea](http://kaedea.com/)\n* [Coding and Living](http://www.woaitqs.cc/)\n* [江清清的技术专栏](http://www.lcode.org/)\n* [GeorgeYang'Blog](http://georgeyang.cn)\n\n`互换友链，可以联系我（QQ1413129987）`\n\n\n\n","source":"friendslinks/index.md","raw":"title: friendslinks\ndate: 2015-11-27 09:28:39\n---\n小伙伴们\n* [冯建](http://jayfeng.com/)\n* [咕咚](http://gudong.name/)\n* [Ailurus](http://www.easydone.cn/)\n* [汤奇](http://itangqi.me/)\n* [程序亦非猿](http://yifeiyuan.me/)\n* [Tikitoo](http://tikitoo.me/)\n* [kaedea](http://kaedea.com/)\n* [Coding and Living](http://www.woaitqs.cc/)\n* [江清清的技术专栏](http://www.lcode.org/)\n* [GeorgeYang'Blog](http://georgeyang.cn)\n\n`互换友链，可以联系我（QQ1413129987）`\n\n\n\n","updated":"2016-07-01T03:19:14.589Z","path":"friendslinks/index.html","comments":1,"layout":"page","_id":"cirhekr3e0002zspk6zdb7kmt","thumbnailImageUrl":null},{"title":"categories","date":"2015-07-30T09:29:17.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-07-30 17:29:17\ntype: \"categories\"\n---\n","updated":"2016-03-17T00:44:06.366Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cirhekr5j0003zspksvi8j155","thumbnailImageUrl":null},{"title":"all-tags","layout":"all-tags","comments":0,"_content":"","source":"all-tags/index.md","raw":"---\ntitle: \"all-tags\"\nlayout: \"all-tags\"\ncomments: false\n---","date":"2016-08-05T06:44:44.994Z","updated":"2016-08-05T03:22:54.925Z","path":"all-tags/index.html","_id":"cirhekr5n0004zspkvzfertad","thumbnailImageUrl":null},{"title":"all-categories","layout":"all-categories","comments":0,"_content":"","source":"all-categories/index.md","raw":"---\ntitle: \"all-categories\"\nlayout: \"all-categories\"\ncomments: false\n---","date":"2016-08-05T06:44:44.979Z","updated":"2016-08-05T03:21:20.961Z","path":"all-categories/index.html","_id":"cirhekr6k0005zspk6vrhv5k3","thumbnailImageUrl":null},{"title":"all-archives","layout":"all-archives","comments":0,"_content":"","source":"all-archives/index.md","raw":"---\ntitle: \"all-archives\"\nlayout: \"all-archives\"\ncomments: false\n---","date":"2016-08-05T06:44:44.979Z","updated":"2016-08-05T03:23:44.494Z","path":"all-archives/index.html","_id":"cirhekr6l0006zspkz9gw161t","thumbnailImageUrl":null},{"title":"about","date":"2015-07-31T01:28:39.000Z","_content":"![](http://7q5c2h.com1.z0.glb.clouddn.com/me.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n你必须足够的努力，才能看起来毫不费力！专注！精致！\n\n# 关于自己\n姓名吴小龙，性别男，爱好女，性情中人，但有点小闷骚。\nAndroid应用攻城狮，后知后觉，工作之前，还不知何为程序猿。\n2012年2月1日开始实习，还在努力摆脱菜鸟行列。\n\n# 作品展示\n[http://wuxiaolong.me/categories/App/](http://wuxiaolong.me/categories/App/)\n\n# github\n[https://github.com/WuXiaolong](https://github.com/WuXiaolong)\n\n# 微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。公众号和博客将同步更新，欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n[点击查看QQ群](http://wuxiaolong.me/qq/)\n\n# 小额赞助\n如果您喜欢此博客，读后受益匪浅，不妨支付宝扫描以下二维码，小额赞助一下。\n<img src=\"http://7q5c2h.com1.z0.glb.clouddn.com/taobao_qrcode.jpg\" /> \n","source":"about/index.md","raw":"title: about\ndate: 2015-07-31 09:28:39\n---\n![](http://7q5c2h.com1.z0.glb.clouddn.com/me.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n你必须足够的努力，才能看起来毫不费力！专注！精致！\n\n# 关于自己\n姓名吴小龙，性别男，爱好女，性情中人，但有点小闷骚。\nAndroid应用攻城狮，后知后觉，工作之前，还不知何为程序猿。\n2012年2月1日开始实习，还在努力摆脱菜鸟行列。\n\n# 作品展示\n[http://wuxiaolong.me/categories/App/](http://wuxiaolong.me/categories/App/)\n\n# github\n[https://github.com/WuXiaolong](https://github.com/WuXiaolong)\n\n# 微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。公众号和博客将同步更新，欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n[点击查看QQ群](http://wuxiaolong.me/qq/)\n\n# 小额赞助\n如果您喜欢此博客，读后受益匪浅，不妨支付宝扫描以下二维码，小额赞助一下。\n<img src=\"http://7q5c2h.com1.z0.glb.clouddn.com/taobao_qrcode.jpg\" /> \n","updated":"2016-08-05T06:39:20.078Z","path":"about/index.html","comments":1,"layout":"page","_id":"cirhekr6n0007zspk5z6mjnb1","thumbnailImageUrl":null}],"Post":[{"title":"Android zxing","date":"2016-04-22T02:22:51.000Z","_content":"> 二维码一般在项目都会用到，今天分享下我开发二维码的一些心得。\n\n# zxing介绍\ngithub地址：[https://github.com/zxing/zxing](https://github.com/zxing/zxing)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing1.png)\n<!--more-->\n代码很多，官方演示的例子在文件android，一个较为完整的app，导入Android studio，发现少了CameraConfigurationUtils，这个类在文件android-core下。官方效果图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing2.png)\n但是实际开发只需要扫码和生成二维码两个功能就夠了，因此我做了抽离删减，最终我的效果图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing3.png)\n\n# zxing使用\n## 添加依赖\n```\ncompile 'com.google.zxing:core:3.2.1'\n```\n## 扫描二维码\n```\n case R.id.qrcode_dencode: //扫描\n intent = new Intent(MainActivity.this, CaptureActivity.class);\n startActivityForResult(intent, REQUEST_CODE);\n break;\n```\n```\n @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == RESULT_OK) { //RESULT_OK = -1\n            Bundle bundle = data.getExtras();\n            String scanResult = bundle.getString(\"result\");\n            Toast.makeText(MainActivity.this, scanResult, Toast.LENGTH_LONG).show();\n        }\n    }\n\n```\n## 生成二维码\n```\n case R.id.qrcode_encode: //生成\n try {\n        Bitmap mBitmap = QRCodeEncoder.encodeAsBitmap(\"http://wuxiaolong.me/\", 300);\n        qrcodeImg.setImageBitmap(mBitmap);\n\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n     break;\n```\n\n## 识别二维码\n```\n //长按图片识别二维码\n        qrcodeImg.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View v) {\n                qrcodeImg.setDrawingCacheEnabled(true);\n                Bitmap bitmap = Bitmap.createBitmap(qrcodeImg.getDrawingCache());\n                qrcodeImg.setDrawingCacheEnabled(false);\n                decodeQRCode(bitmap);\n                return true;\n            }\n        });\n```\n```\n  /**\n     * 解析二维码图片\n     *\n     * @param bitmap   要解析的二维码图片\n     */\n    public final Map<DecodeHintType, Object> HINTS = new EnumMap<>(DecodeHintType.class);\n\n    public void decodeQRCode(final Bitmap bitmap) {\n        new AsyncTask<Void, Void, String>() {\n            @Override\n            protected String doInBackground(Void... params) {\n                try {\n                    int width = bitmap.getWidth();\n                    int height = bitmap.getHeight();\n                    int[] pixels = new int[width * height];\n                    bitmap.getPixels(pixels, 0, width, 0, 0, width, height);\n                    RGBLuminanceSource source = new RGBLuminanceSource(width, height, pixels);\n                    Result result = new MultiFormatReader().decode(new BinaryBitmap(new HybridBinarizer(source)), HINTS);\n                    return result.getText();\n                } catch (Exception e) {\n                    return null;\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String result) {\n                Log.d(\"wxl\", \"result=\" + result);\n                Toast.makeText(MainActivity.this, result, Toast.LENGTH_LONG).show();\n            }\n        }.execute();\n\n    }\n\n```\n由于时间仓促，抽离的代码可能或多或少有些问题，细节待优化。\n另外，ViewfinderView自定义属性参考了[http://my.oschina.net/smuswc/blog/609413?fromerr=RgSd7WKf](http://my.oschina.net/smuswc/blog/609413?fromerr=RgSd7WKf)\n\n# 官方zxing例子学习\n> 如果代码涉及core-3.2.1，就不在研究，有兴趣可自行深入去学习。\n\n## 扫描二维码\n\n代码调用顺序CaptureActivity -----> CaptureActivityHandler -----> CameraManager -----> PreviewCallback -----> DecodeHandler -----> CaptureActivityHandler  -----> CaptureActivity。下面一一分析。\n\n### CaptureActivity\nCaptureActivity入口类，主要做了Camera，Beep，AmbientLight等初始化。CaptureActivityHandler初始化是在initCamera方法里：\n```\n private void initCamera(SurfaceHolder surfaceHolder) {\n        ……\n            // Creating the handler starts the preview, which can also throw a RuntimeException.\n            if (handler == null) {\n                handler = new CaptureActivityHandler(this, decodeFormats, decodeHints, characterSet, cameraManager);\n       ……\n    }\n\n```\n### CaptureActivityHandler\nCaptureActivityHandler构造方法做了DecodeThread初始化，DecodeThread run方法做了DecodeHandler初始化，然后Camera开始扫码工作。\n```\n  public CaptureActivityHandler(CaptureActivity activity,\n                                  Collection<BarcodeFormat> decodeFormats,\n                                  Map<DecodeHintType, ?> baseHints,\n                                  String characterSet,\n                                  CameraManager cameraManager) {\n        this.activity = activity;\n        decodeThread = new DecodeThread(activity, decodeFormats, baseHints, characterSet,\n                new ViewfinderResultPointCallback(activity.getViewfinderView()));\n        decodeThread.start();\n        state = State.SUCCESS;\n\n        // Start ourselves capturing previews and decoding.\n        this.cameraManager = cameraManager;\n        cameraManager.startPreview();\n        restartPreviewAndDecode();\n    }\n private void restartPreviewAndDecode() {\n        if (state == State.SUCCESS) {\n            state = State.PREVIEW;\n            //decodeThread.getHandler()拿到DecodeHandler\n            cameraManager.requestPreviewFrame(decodeThread.getHandler(), R.id.decode);\n            activity.drawViewfinder();\n        }\n    }\n```\n### CameraManager\n```\npublic synchronized void requestPreviewFrame(Handler handler, int message) {\n        OpenCamera theCamera = camera;\n        if (theCamera != null && previewing) {\n            previewCallback.setHandler(handler, message);\n            theCamera.getCamera().setOneShotPreviewCallback(previewCallback);\n        }\n    }\n```\n### PreviewCallback\n```\n void setHandler(Handler previewHandler, int previewMessage) {\n    this.previewHandler = previewHandler;\n    this.previewMessage = previewMessage;\n  }\n\n  @Override\n  public void onPreviewFrame(byte[] data, Camera camera) {\n    Point cameraResolution = configManager.getCameraResolution();\n    Handler thePreviewHandler = previewHandler;\n    if (cameraResolution != null && thePreviewHandler != null) {\n      //给DecodeHandler发消息\n      Message message = thePreviewHandler.obtainMessage(previewMessage, cameraResolution.x,\n          cameraResolution.y, data);\n      message.sendToTarget();\n      previewHandler = null;\n    } else {\n      Log.d(TAG, \"Got preview callback, but no handler or resolution available\");\n    }\n  }\n```\n### DecodeHandler\n扫码结果，反馈给CaptureActivityHandler\n```\n@Override\n    public void handleMessage(Message message) {\n        if (!running) {\n            return;\n        }\n        int what = message.what;\n        if (what == R.id.decode) {\n            decode((byte[]) message.obj, message.arg1, message.arg2);\n        } else if (what == R.id.quit) {\n            running = false;\n            Looper.myLooper().quit();\n        }\n}\n private void decode(byte[] data, int width, int height) {\n        long start = System.currentTimeMillis();\n        Result rawResult = null;\n        PlanarYUVLuminanceSource source = activity.getCameraManager().buildLuminanceSource(data, width, height);\n        if (source != null) {\n            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));\n            try {\n                rawResult = multiFormatReader.decodeWithState(bitmap);\n            } catch (ReaderException re) {\n                // continue\n            } finally {\n                multiFormatReader.reset();\n            }\n        }\n\n        Handler handler = activity.getHandler();//拿到CaptureActivityHandler\n        if (rawResult != null) {\n            // Don't log the barcode contents for security.\n            long end = System.currentTimeMillis();\n            Log.d(TAG, \"Found barcode in \" + (end - start) + \" ms\");\n            if (handler != null) {\n                //给CaptureActivityHandler发消息\n                Message message = Message.obtain(handler, R.id.decode_succeeded, rawResult);\n                Bundle bundle = new Bundle();\n                bundleThumbnail(source, bundle);\n                message.setData(bundle);\n                message.sendToTarget();\n            }\n        } else {\n            if (handler != null) {\n                Message message = Message.obtain(handler, R.id.decode_failed);\n                message.sendToTarget();\n            }\n        }\n    }\n\n```\n### CaptureActivityHandler\n扫码结果，再反馈给CaptureActivity，这样就走完了扫码过程。\n```\n @Override\n    public void handleMessage(Message message) {\n        int what = message.what;\n        if (what == R.id.restart_preview) {\n            restartPreviewAndDecode();\n        } else if (what == R.id.decode_succeeded) {\n            state = State.SUCCESS;\n            Bundle bundle = message.getData();\n            Bitmap barcode = null;\n            float scaleFactor = 1.0f;\n            if (bundle != null) {\n                byte[] compressedBitmap = bundle.getByteArray(DecodeThread.BARCODE_BITMAP);\n                if (compressedBitmap != null) {\n                    barcode = BitmapFactory.decodeByteArray(compressedBitmap, 0, compressedBitmap.length, null);\n                    // Mutable copy:\n                    barcode = barcode.copy(Bitmap.Config.ARGB_8888, true);\n                }\n                scaleFactor = bundle.getFloat(DecodeThread.BARCODE_SCALED_FACTOR);\n            }\n            activity.handleDecode((Result) message.obj, barcode, scaleFactor);\n        }\n }\n```\n\n## 生成二维码\n只需要以下核心代码：\n```\npublic static Bitmap encodeAsBitmap(String contents, int dimension) throws WriterException {\n\n        String contentsToEncode = contents;\n        if (contentsToEncode == null) {\n            return null;\n        }\n        Map<EncodeHintType, Object> hints = null;\n        String encoding = guessAppropriateEncoding(contentsToEncode);\n        if (encoding != null) {\n            hints = new EnumMap<>(EncodeHintType.class);\n            hints.put(EncodeHintType.CHARACTER_SET, encoding);\n        }\n        BitMatrix result;\n        try {\n            result = new MultiFormatWriter().encode(contentsToEncode, BarcodeFormat.QR_CODE, dimension, dimension, hints);\n        } catch (IllegalArgumentException iae) {\n            // Unsupported format\n            return null;\n        }\n        int width = result.getWidth();\n        int height = result.getHeight();\n        int[] pixels = new int[width * height];\n        for (int y = 0; y < height; y++) {\n            int offset = y * width;\n            for (int x = 0; x < width; x++) {\n                pixels[offset + x] = result.get(x, y) ? BLACK : WHITE;\n            }\n        }\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        bitmap.setPixels(pixels, 0, width, 0, 0, width, height);\n        return bitmap;\n    }\n\n    private static String guessAppropriateEncoding(CharSequence contents) {\n        // Very crude at the moment\n        for (int i = 0; i < contents.length(); i++) {\n            if (contents.charAt(i) > 0xFF) {\n                return \"UTF-8\";\n            }\n        }\n        return null;\n    }\n```\n# 源码\n官方的例子和我自己的抽离出的代码都上传github了，地址：https://github.com/WuXiaolong/zxingSample\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/zxing.md","raw":"title: Android zxing\ndate: 2016-04-22 10:22:51\ntags: zxing\ncategory: zxing\n---\n> 二维码一般在项目都会用到，今天分享下我开发二维码的一些心得。\n\n# zxing介绍\ngithub地址：[https://github.com/zxing/zxing](https://github.com/zxing/zxing)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing1.png)\n<!--more-->\n代码很多，官方演示的例子在文件android，一个较为完整的app，导入Android studio，发现少了CameraConfigurationUtils，这个类在文件android-core下。官方效果图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing2.png)\n但是实际开发只需要扫码和生成二维码两个功能就夠了，因此我做了抽离删减，最终我的效果图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zxing3.png)\n\n# zxing使用\n## 添加依赖\n```\ncompile 'com.google.zxing:core:3.2.1'\n```\n## 扫描二维码\n```\n case R.id.qrcode_dencode: //扫描\n intent = new Intent(MainActivity.this, CaptureActivity.class);\n startActivityForResult(intent, REQUEST_CODE);\n break;\n```\n```\n @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == RESULT_OK) { //RESULT_OK = -1\n            Bundle bundle = data.getExtras();\n            String scanResult = bundle.getString(\"result\");\n            Toast.makeText(MainActivity.this, scanResult, Toast.LENGTH_LONG).show();\n        }\n    }\n\n```\n## 生成二维码\n```\n case R.id.qrcode_encode: //生成\n try {\n        Bitmap mBitmap = QRCodeEncoder.encodeAsBitmap(\"http://wuxiaolong.me/\", 300);\n        qrcodeImg.setImageBitmap(mBitmap);\n\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n     break;\n```\n\n## 识别二维码\n```\n //长按图片识别二维码\n        qrcodeImg.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View v) {\n                qrcodeImg.setDrawingCacheEnabled(true);\n                Bitmap bitmap = Bitmap.createBitmap(qrcodeImg.getDrawingCache());\n                qrcodeImg.setDrawingCacheEnabled(false);\n                decodeQRCode(bitmap);\n                return true;\n            }\n        });\n```\n```\n  /**\n     * 解析二维码图片\n     *\n     * @param bitmap   要解析的二维码图片\n     */\n    public final Map<DecodeHintType, Object> HINTS = new EnumMap<>(DecodeHintType.class);\n\n    public void decodeQRCode(final Bitmap bitmap) {\n        new AsyncTask<Void, Void, String>() {\n            @Override\n            protected String doInBackground(Void... params) {\n                try {\n                    int width = bitmap.getWidth();\n                    int height = bitmap.getHeight();\n                    int[] pixels = new int[width * height];\n                    bitmap.getPixels(pixels, 0, width, 0, 0, width, height);\n                    RGBLuminanceSource source = new RGBLuminanceSource(width, height, pixels);\n                    Result result = new MultiFormatReader().decode(new BinaryBitmap(new HybridBinarizer(source)), HINTS);\n                    return result.getText();\n                } catch (Exception e) {\n                    return null;\n                }\n            }\n\n            @Override\n            protected void onPostExecute(String result) {\n                Log.d(\"wxl\", \"result=\" + result);\n                Toast.makeText(MainActivity.this, result, Toast.LENGTH_LONG).show();\n            }\n        }.execute();\n\n    }\n\n```\n由于时间仓促，抽离的代码可能或多或少有些问题，细节待优化。\n另外，ViewfinderView自定义属性参考了[http://my.oschina.net/smuswc/blog/609413?fromerr=RgSd7WKf](http://my.oschina.net/smuswc/blog/609413?fromerr=RgSd7WKf)\n\n# 官方zxing例子学习\n> 如果代码涉及core-3.2.1，就不在研究，有兴趣可自行深入去学习。\n\n## 扫描二维码\n\n代码调用顺序CaptureActivity -----> CaptureActivityHandler -----> CameraManager -----> PreviewCallback -----> DecodeHandler -----> CaptureActivityHandler  -----> CaptureActivity。下面一一分析。\n\n### CaptureActivity\nCaptureActivity入口类，主要做了Camera，Beep，AmbientLight等初始化。CaptureActivityHandler初始化是在initCamera方法里：\n```\n private void initCamera(SurfaceHolder surfaceHolder) {\n        ……\n            // Creating the handler starts the preview, which can also throw a RuntimeException.\n            if (handler == null) {\n                handler = new CaptureActivityHandler(this, decodeFormats, decodeHints, characterSet, cameraManager);\n       ……\n    }\n\n```\n### CaptureActivityHandler\nCaptureActivityHandler构造方法做了DecodeThread初始化，DecodeThread run方法做了DecodeHandler初始化，然后Camera开始扫码工作。\n```\n  public CaptureActivityHandler(CaptureActivity activity,\n                                  Collection<BarcodeFormat> decodeFormats,\n                                  Map<DecodeHintType, ?> baseHints,\n                                  String characterSet,\n                                  CameraManager cameraManager) {\n        this.activity = activity;\n        decodeThread = new DecodeThread(activity, decodeFormats, baseHints, characterSet,\n                new ViewfinderResultPointCallback(activity.getViewfinderView()));\n        decodeThread.start();\n        state = State.SUCCESS;\n\n        // Start ourselves capturing previews and decoding.\n        this.cameraManager = cameraManager;\n        cameraManager.startPreview();\n        restartPreviewAndDecode();\n    }\n private void restartPreviewAndDecode() {\n        if (state == State.SUCCESS) {\n            state = State.PREVIEW;\n            //decodeThread.getHandler()拿到DecodeHandler\n            cameraManager.requestPreviewFrame(decodeThread.getHandler(), R.id.decode);\n            activity.drawViewfinder();\n        }\n    }\n```\n### CameraManager\n```\npublic synchronized void requestPreviewFrame(Handler handler, int message) {\n        OpenCamera theCamera = camera;\n        if (theCamera != null && previewing) {\n            previewCallback.setHandler(handler, message);\n            theCamera.getCamera().setOneShotPreviewCallback(previewCallback);\n        }\n    }\n```\n### PreviewCallback\n```\n void setHandler(Handler previewHandler, int previewMessage) {\n    this.previewHandler = previewHandler;\n    this.previewMessage = previewMessage;\n  }\n\n  @Override\n  public void onPreviewFrame(byte[] data, Camera camera) {\n    Point cameraResolution = configManager.getCameraResolution();\n    Handler thePreviewHandler = previewHandler;\n    if (cameraResolution != null && thePreviewHandler != null) {\n      //给DecodeHandler发消息\n      Message message = thePreviewHandler.obtainMessage(previewMessage, cameraResolution.x,\n          cameraResolution.y, data);\n      message.sendToTarget();\n      previewHandler = null;\n    } else {\n      Log.d(TAG, \"Got preview callback, but no handler or resolution available\");\n    }\n  }\n```\n### DecodeHandler\n扫码结果，反馈给CaptureActivityHandler\n```\n@Override\n    public void handleMessage(Message message) {\n        if (!running) {\n            return;\n        }\n        int what = message.what;\n        if (what == R.id.decode) {\n            decode((byte[]) message.obj, message.arg1, message.arg2);\n        } else if (what == R.id.quit) {\n            running = false;\n            Looper.myLooper().quit();\n        }\n}\n private void decode(byte[] data, int width, int height) {\n        long start = System.currentTimeMillis();\n        Result rawResult = null;\n        PlanarYUVLuminanceSource source = activity.getCameraManager().buildLuminanceSource(data, width, height);\n        if (source != null) {\n            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));\n            try {\n                rawResult = multiFormatReader.decodeWithState(bitmap);\n            } catch (ReaderException re) {\n                // continue\n            } finally {\n                multiFormatReader.reset();\n            }\n        }\n\n        Handler handler = activity.getHandler();//拿到CaptureActivityHandler\n        if (rawResult != null) {\n            // Don't log the barcode contents for security.\n            long end = System.currentTimeMillis();\n            Log.d(TAG, \"Found barcode in \" + (end - start) + \" ms\");\n            if (handler != null) {\n                //给CaptureActivityHandler发消息\n                Message message = Message.obtain(handler, R.id.decode_succeeded, rawResult);\n                Bundle bundle = new Bundle();\n                bundleThumbnail(source, bundle);\n                message.setData(bundle);\n                message.sendToTarget();\n            }\n        } else {\n            if (handler != null) {\n                Message message = Message.obtain(handler, R.id.decode_failed);\n                message.sendToTarget();\n            }\n        }\n    }\n\n```\n### CaptureActivityHandler\n扫码结果，再反馈给CaptureActivity，这样就走完了扫码过程。\n```\n @Override\n    public void handleMessage(Message message) {\n        int what = message.what;\n        if (what == R.id.restart_preview) {\n            restartPreviewAndDecode();\n        } else if (what == R.id.decode_succeeded) {\n            state = State.SUCCESS;\n            Bundle bundle = message.getData();\n            Bitmap barcode = null;\n            float scaleFactor = 1.0f;\n            if (bundle != null) {\n                byte[] compressedBitmap = bundle.getByteArray(DecodeThread.BARCODE_BITMAP);\n                if (compressedBitmap != null) {\n                    barcode = BitmapFactory.decodeByteArray(compressedBitmap, 0, compressedBitmap.length, null);\n                    // Mutable copy:\n                    barcode = barcode.copy(Bitmap.Config.ARGB_8888, true);\n                }\n                scaleFactor = bundle.getFloat(DecodeThread.BARCODE_SCALED_FACTOR);\n            }\n            activity.handleDecode((Result) message.obj, barcode, scaleFactor);\n        }\n }\n```\n\n## 生成二维码\n只需要以下核心代码：\n```\npublic static Bitmap encodeAsBitmap(String contents, int dimension) throws WriterException {\n\n        String contentsToEncode = contents;\n        if (contentsToEncode == null) {\n            return null;\n        }\n        Map<EncodeHintType, Object> hints = null;\n        String encoding = guessAppropriateEncoding(contentsToEncode);\n        if (encoding != null) {\n            hints = new EnumMap<>(EncodeHintType.class);\n            hints.put(EncodeHintType.CHARACTER_SET, encoding);\n        }\n        BitMatrix result;\n        try {\n            result = new MultiFormatWriter().encode(contentsToEncode, BarcodeFormat.QR_CODE, dimension, dimension, hints);\n        } catch (IllegalArgumentException iae) {\n            // Unsupported format\n            return null;\n        }\n        int width = result.getWidth();\n        int height = result.getHeight();\n        int[] pixels = new int[width * height];\n        for (int y = 0; y < height; y++) {\n            int offset = y * width;\n            for (int x = 0; x < width; x++) {\n                pixels[offset + x] = result.get(x, y) ? BLACK : WHITE;\n            }\n        }\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        bitmap.setPixels(pixels, 0, width, 0, 0, width, height);\n        return bitmap;\n    }\n\n    private static String guessAppropriateEncoding(CharSequence contents) {\n        // Very crude at the moment\n        for (int i = 0; i < contents.length(); i++) {\n            if (contents.charAt(i) > 0xFF) {\n                return \"UTF-8\";\n            }\n        }\n        return null;\n    }\n```\n# 源码\n官方的例子和我自己的抽离出的代码都上传github了，地址：https://github.com/WuXiaolong/zxingSample\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"zxing","published":1,"updated":"2016-04-21T06:55:35.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr6o0008zspk49izviip","thumbnailImageUrl":null},{"title":"不忘初心，方得始终","date":"2016-04-05T10:58:32.000Z","_content":"> 多年后，我竟成了自己曾经讨厌的那种人。\n\n我最讨厌虚伪和装逼的人，近来，流行“这个逼给满分”，于是有了以下一个装逼行为。\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zhuangbi.png)\n\n逼点：1、能谷歌哦；2、搜出都是自己的内容。\n\n我有时候装逼是为了娱乐，是一种`自嘲`。\n\n之前就在思考一个问题：博客该分享什么？到了目前这个阶段，我都不好意思分享一些入门的知识（又在装），是不是分享一些库的使用显得太low，非要一直分享什么什么源码剖析才显得高大上？因而来维持自己“大神”的形象，我又何时那么在乎别人对我的看法？\n\n这些想法其实很搞笑，不要忘记我当初为什么要写东西：俗话说，好记忆不如烂笔头，我不是个聪明的人，但我是个勤奋的人，把工作的经验记录下来，是为了下次再遇到同样的问题，不至于再去谷歌。这就是我初衷，也不要说，写博客为了造福大家，不该装的逼还是少装，当然如果大家从我的博客收益，那最好不过。\n\n另外，千万别把自己当一回事，因为我什么都不是。\n\n时刻提醒自己：`不忘初心，方得始终。 不用太在乎别人的看法，因为过得好不好，自己最清楚。`\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","source":"_posts/zhuangbi.md","raw":"title: 不忘初心，方得始终\ndate: 2016-04-05 18:58:32\ntags: Life\ncategory: Life\n---\n> 多年后，我竟成了自己曾经讨厌的那种人。\n\n我最讨厌虚伪和装逼的人，近来，流行“这个逼给满分”，于是有了以下一个装逼行为。\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/zhuangbi.png)\n\n逼点：1、能谷歌哦；2、搜出都是自己的内容。\n\n我有时候装逼是为了娱乐，是一种`自嘲`。\n\n之前就在思考一个问题：博客该分享什么？到了目前这个阶段，我都不好意思分享一些入门的知识（又在装），是不是分享一些库的使用显得太low，非要一直分享什么什么源码剖析才显得高大上？因而来维持自己“大神”的形象，我又何时那么在乎别人对我的看法？\n\n这些想法其实很搞笑，不要忘记我当初为什么要写东西：俗话说，好记忆不如烂笔头，我不是个聪明的人，但我是个勤奋的人，把工作的经验记录下来，是为了下次再遇到同样的问题，不至于再去谷歌。这就是我初衷，也不要说，写博客为了造福大家，不该装的逼还是少装，当然如果大家从我的博客收益，那最好不过。\n\n另外，千万别把自己当一回事，因为我什么都不是。\n\n时刻提醒自己：`不忘初心，方得始终。 不用太在乎别人的看法，因为过得好不好，自己最清楚。`\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","slug":"zhuangbi","published":1,"updated":"2016-04-06T00:39:40.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr6v000dzspkt1so3x3u","thumbnailImageUrl":null},{"title":"Android基于XMPP开发（三）【注册、登录、修改密码、修改头像】","date":"2016-03-01T11:46:13.000Z","_content":"> [Android基于XMPP开发（一）【openfire服务器配置】](http://wuxiaolong.me/2016/02/24/xmpp1/)\n> [Android基于XMPP开发（二）【连接服务器】](http://wuxiaolong.me/2016/02/25/xmpp2/)\n\n本篇将涉及常用的账号管理，包括：注册、登录、修改密码、修改头像。\n<!-- more -->\n# 注册\n```\n public void register(final String userName, final String password) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n                String registerMsg;\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                \n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    String serviceName = mXMPPTCPConnection.getServiceName();\n                    try {\n                        AccountManager accountManager = AccountManager.getInstance(mXMPPTCPConnection);\n                        Log.i(\"wxl\", \"Register supportsAccountCreation=\" + accountManager.supportsAccountCreation());\n                        if (accountManager.supportsAccountCreation()) {\n                            accountManager.createAccount(userName + \"@\" + serviceName, password);\n                            Log.i(TAG, \"注册成功\");\n                            registerMsg = \"注册成功\";\n                        } else {\n                            Log.i(TAG, \"服务端不能注册\");\n                            registerMsg = \"服务端不能注册\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"注册异常=\" + e.getMessage());\n                        registerMsg = \"注册异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    registerMsg = \"connect failed\";\n                }\n                mXMPPClickListener.register(registerMsg);\n            }\n        }).start();\n    }\n```\n\n\n# 登录\n```\n public void login(final String userName, final String password) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                String loginMsg;\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n               \n                Log.i(\"wxl\", \"XMPPService login connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n                        mXMPPTCPConnection.login(userName, password);\n\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            Log.i(TAG, \"登录成功\");\n                            loginMsg = \"登录成功\";\n                        } else {\n                            Log.i(TAG, \"登录失败\");\n                            loginMsg = \"登录失败\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"登录异常=\" + e.getMessage());\n                        loginMsg = \"登录异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    loginMsg = \"connect failed\";\n                }\n\n                mXMPPClickListener.login(loginMsg);\n            }\n        }).start();\n    }\n```\n\n# 修改密码\n修改密码必须在登录状态下\n```\n  public void changePassword(final String newPassword) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                String changePasswordMsg;\n\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            AccountManager accountManager = AccountManager.getInstance(mXMPPTCPConnection);\n                            accountManager.changePassword(newPassword);\n                            Log.i(TAG, \"修改密码成功\");\n                            changePasswordMsg = \"修改密码成功\";\n                        } else {\n                            Log.i(TAG, \"请先登录\");\n                            changePasswordMsg = \"请先登录\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"修改密码异常=\" + e.getMessage());\n                        changePasswordMsg = \"修改密码异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    changePasswordMsg = \"connect failed\";\n                }\n                mXMPPClickListener.register(changePasswordMsg);\n            }\n        }).start();\n    }\n\n```\n# 修改头像\n```\n  public void setAvatar(final Bitmap bitmap) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            VCardManager vCardManager = VCardManager.getInstanceFor(mXMPPTCPConnection);\n                            VCard vCard = vCardManager.loadVCard();\n                            byte[] bytes = bitmapToByte(bitmap);\n                            String encodedImage = Base64.encodeToString(bytes, Base64.DEFAULT);\n                            vCard.setAvatar(bytes);\n                            vCardManager.saveVCard(vCard);\n                            mXMPPClickListener.setAvatar(\"修改头像成功\");\n                        } else {\n                            mXMPPClickListener.setAvatar(\"请先登录\");\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        mXMPPClickListener.setAvatar(\"修改头像异常=\" + e.getMessage());\n                    }\n                } else {\n                    mXMPPClickListener.setAvatar(\"connect failed\");\n                }\n            }\n        }).start();\n    }\n\n```\nbitmapToByte\n```\n    private byte[] bitmapToByte(Bitmap bitmap) {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);\n        return baos.toByteArray();\n    }\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/WoChat](https://github.com/WuXiaolong/WoChat)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammr.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/xmpp3.md","raw":"title: Android基于XMPP开发（三）【注册、登录、修改密码、修改头像】\ndate: 2016-03-01 19:46:13\ntags: [XMPP,Smack,openfire]\ncategory: XMPP\n---\n> [Android基于XMPP开发（一）【openfire服务器配置】](http://wuxiaolong.me/2016/02/24/xmpp1/)\n> [Android基于XMPP开发（二）【连接服务器】](http://wuxiaolong.me/2016/02/25/xmpp2/)\n\n本篇将涉及常用的账号管理，包括：注册、登录、修改密码、修改头像。\n<!-- more -->\n# 注册\n```\n public void register(final String userName, final String password) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n                String registerMsg;\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                \n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    String serviceName = mXMPPTCPConnection.getServiceName();\n                    try {\n                        AccountManager accountManager = AccountManager.getInstance(mXMPPTCPConnection);\n                        Log.i(\"wxl\", \"Register supportsAccountCreation=\" + accountManager.supportsAccountCreation());\n                        if (accountManager.supportsAccountCreation()) {\n                            accountManager.createAccount(userName + \"@\" + serviceName, password);\n                            Log.i(TAG, \"注册成功\");\n                            registerMsg = \"注册成功\";\n                        } else {\n                            Log.i(TAG, \"服务端不能注册\");\n                            registerMsg = \"服务端不能注册\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"注册异常=\" + e.getMessage());\n                        registerMsg = \"注册异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    registerMsg = \"connect failed\";\n                }\n                mXMPPClickListener.register(registerMsg);\n            }\n        }).start();\n    }\n```\n\n\n# 登录\n```\n public void login(final String userName, final String password) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                String loginMsg;\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n               \n                Log.i(\"wxl\", \"XMPPService login connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n                        mXMPPTCPConnection.login(userName, password);\n\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            Log.i(TAG, \"登录成功\");\n                            loginMsg = \"登录成功\";\n                        } else {\n                            Log.i(TAG, \"登录失败\");\n                            loginMsg = \"登录失败\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"登录异常=\" + e.getMessage());\n                        loginMsg = \"登录异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    loginMsg = \"connect failed\";\n                }\n\n                mXMPPClickListener.login(loginMsg);\n            }\n        }).start();\n    }\n```\n\n# 修改密码\n修改密码必须在登录状态下\n```\n  public void changePassword(final String newPassword) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                String changePasswordMsg;\n\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            AccountManager accountManager = AccountManager.getInstance(mXMPPTCPConnection);\n                            accountManager.changePassword(newPassword);\n                            Log.i(TAG, \"修改密码成功\");\n                            changePasswordMsg = \"修改密码成功\";\n                        } else {\n                            Log.i(TAG, \"请先登录\");\n                            changePasswordMsg = \"请先登录\";\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        Log.i(TAG, \"修改密码异常=\" + e.getMessage());\n                        changePasswordMsg = \"修改密码异常=\" + e.getMessage();\n                    }\n                } else {\n                    Log.i(TAG, \"connect failed\");\n                    changePasswordMsg = \"connect failed\";\n                }\n                mXMPPClickListener.register(changePasswordMsg);\n            }\n        }).start();\n    }\n\n```\n# 修改头像\n```\n  public void setAvatar(final Bitmap bitmap) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                try {\n                    if (!mXMPPTCPConnection.isConnected())\n                        mXMPPTCPConnection.connect();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    mXMPPTCPConnection.disconnect();\n                }\n                Log.i(\"wxl\", \"XMPPService connected=\" + mXMPPTCPConnection.isConnected());\n                if (mXMPPTCPConnection.isConnected()) {\n                    try {\n                        if (mXMPPTCPConnection.isAuthenticated()) {\n                            VCardManager vCardManager = VCardManager.getInstanceFor(mXMPPTCPConnection);\n                            VCard vCard = vCardManager.loadVCard();\n                            byte[] bytes = bitmapToByte(bitmap);\n                            String encodedImage = Base64.encodeToString(bytes, Base64.DEFAULT);\n                            vCard.setAvatar(bytes);\n                            vCardManager.saveVCard(vCard);\n                            mXMPPClickListener.setAvatar(\"修改头像成功\");\n                        } else {\n                            mXMPPClickListener.setAvatar(\"请先登录\");\n                        }\n\n                    } catch (Exception e) {\n                        e.printStackTrace();//\n                        mXMPPClickListener.setAvatar(\"修改头像异常=\" + e.getMessage());\n                    }\n                } else {\n                    mXMPPClickListener.setAvatar(\"connect failed\");\n                }\n            }\n        }).start();\n    }\n\n```\nbitmapToByte\n```\n    private byte[] bitmapToByte(Bitmap bitmap) {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        bitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);\n        return baos.toByteArray();\n    }\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/WoChat](https://github.com/WuXiaolong/WoChat)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammr.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"xmpp3","published":1,"updated":"2016-03-17T00:44:06.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr6x000izspkcys1yylf","thumbnailImageUrl":null},{"title":"Android基于XMPP开发（二）【连接服务器】","date":"2016-02-25T11:34:53.000Z","_content":"> [Android基于XMPP开发（一）【openfire服务器配置】](http://wuxiaolong.me/2016/02/24/xmpp1/)\n\n# 准备阶段\n砍柴不误磨刀工，欲XMPP开发，先引入Smack，具体见[https://github.com/igniterealtime/Smack](https://github.com/igniterealtime/Smack)，引入方式如下：\napp/build.gradle\n```\nrepositories {\n    maven {\n        url 'https://oss.sonatype.org/content/repositories/snapshots'\n    }\n    mavenCentral()\n}\ndependencies {\ncompile \"org.igniterealtime.smack:smack-android-extensions:4.1.6\"\ncompile 'org.igniterealtime.smack:smack-tcp:4.1.6'\ncompile 'org.igniterealtime.smack:smack-experimental:4.1.6'\n}\n```\n<!-- more -->\n\n# 初始化连接\n这里为了更好的演示，我选择是XMPP公共服务器：yax.im\n```\n  private static final String TAG = \"wxl\";\n  public final static String HOST = \"yax.im\";\n  private static final String SERVICE_NAME = \"yax.im\"; //sunchunlei.local labsun.com\n  public final static int PORT = 5222;\n  public static AbstractXMPPConnection mXMPPTCPConnection;\n  private static SSLContext mSSLContext;\n  public AbstractXMPPConnection initXMPPTCPConnection() {\n        SmackConfiguration.DEBUG = true;\n        try {\n            mSSLContext = SSLContext.getInstance(\"TLS\");\n            mSSLContext.init(null, new TrustManager[]{new MyTrustManager()}, null);\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"connecting failed\", e);\n        }\n\n        XMPPTCPConnectionConfiguration.Builder builder = XMPPTCPConnectionConfiguration.builder();\n//        builder.setUsernameAndPassword(USER_NAME, PASSWORD);\n        builder.setHost(HOST);\n        builder.setServiceName(SERVICE_NAME);//此处只能使用域名或PC机器名称\n        builder.setPort(PORT);\n        builder.setCompressionEnabled(false);//连接套将使用流压缩。\n//        builder.setConnectTimeout(5000);\n//        builder.setDebuggerEnabled(true);\n//        builder.setSendPresence(true);//上线通知系统\n        builder.setSecurityMode(ConnectionConfiguration.SecurityMode.required);//安全模式\n        builder.setCustomSSLContext(mSSLContext);////https不验证证书方式（信任所有证书）\n        SASLAuthentication.unBlacklistSASLMechanism(\"PLAIN\");\n        SASLAuthentication.unBlacklistSASLMechanism(\"DIGEST-MD5\");\n        mXMPPTCPConnection = new XMPPTCPConnection(builder.build());\n        return mXMPPTCPConnection;\n    }\n```\nMyTrustManager \n```\n private class MyTrustManager implements X509TrustManager {\n        @Override\n        public void checkClientTrusted(X509Certificate[] x509Certificates, String s)\n                throws CertificateException {\n            Log.i(TAG, \"checkClientTrusted:\" + s);\n        }\n\n        @Override\n        public void checkServerTrusted(X509Certificate[] x509Certificates, String s)\n                throws CertificateException {\n            Log.i(TAG, \"checkServerTrusted:\" + s);\n        }\n\n        @Override\n        public X509Certificate[] getAcceptedIssuers() {\n            Log.i(TAG, \"getAcceptedIssuers\");\n            return new X509Certificate[0];\n        }\n\n    }\n```\n# Connect to the server\n异步处理，不然会android.os.NetworkOnMainThreadException\n\n```\npublic void connect() {\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Message message = new Message();\n                    message.what = AppConstants.CONNECT;\n                    Log.i(TAG, \"connect front\");\n                    if (mXMPPTCPConnection.isConnected()) {\n                        Log.i(TAG, \"connect successfull\");\n                        message.obj = \"connect successfull\";\n                    } else {\n                        mXMPPTCPConnection.connect();\n                        if (mXMPPTCPConnection.isConnected()) {\n                            message.obj = \"connect successfull\";\n                        } else {\n                            message.obj = \"connect failed\";\n                        }\n\n                    }\n\n                    Log.i(TAG, \"connect end=\" + mXMPPTCPConnection.isConnected());\n                    mXMPPHandler.sendMessage(message);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    Log.i(TAG, \"connect e=\" + e.getMessage());\n                }\n            }\n        }\n\n        );\n        thread.start();\n    }\n```\nXMPPHandler\n```\npublic class XMPPHandler extends Handler {\n    public XMPPClickListener mXMPPClickListener;\n    private static final String TAG = \"wxl\";\n\n    @Override\n    public void handleMessage(Message msg) {\n        super.handleMessage(msg);\n        String text = (String) msg.obj;\n        switch (msg.what) {\n            case AppConstants.CONNECT:\n                mXMPPClickListener.connect(text);\n                break;\n            case AppConstants.LOGIN:\n\n                break;\n            case AppConstants.REGISTER:\n\n                break;\n        }\n    }\n\n\n    public void setXMPPClickListener(XMPPClickListener xmppClickListener) {\n        Log.i(TAG, \"setXMPPClickListener=\" + xmppClickListener);\n        this.mXMPPClickListener = xmppClickListener;\n    }\n}\n```\nXMPPClickListener \n```\npublic interface XMPPClickListener {\n    void connect(String msg);\n}\n\n```\nMainActivity\n```\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener, XMPPClickListener {\n    private XMPPService mXMPPService;\n    private XMPPHandler mXMPPHandler = new XMPPHandler();\n    private ProgressDialog mProgressDialog;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mXMPPService = new XMPPService(mXMPPHandler);\n        mXMPPHandler.setXMPPClickListener(this);\n        mXMPPService.initXMPPTCPConnection();\n        mProgressDialog = new ProgressDialog(MainActivity.this);\n        mProgressDialog.setMessage(\"加载中\");\n        findViewById(R.id.connect).setOnClickListener(this);\n    }\n    @Override\n    public void onClick(View v) {\n        progressDialogShow();\n        switch (v.getId()) {\n            case R.id.connect:\n                mXMPPService.connect();\n                break;\n        }\n    }\n\n    @Override\n    public void connect(String msg) {\n        toastShow(msg);\n    }\n\n    private void toastShow(CharSequence text) {\n        progressDialogDismiss();\n        Toast.makeText(MainActivity.this, text, Toast.LENGTH_LONG).show();\n\n    }\n\n\n    private void progressDialogShow() {\n\n        mProgressDialog.show();\n\n    }\n\n    private void progressDialogDismiss() {\n        if (mProgressDialog.isShowing()) mProgressDialog.dismiss();\n\n    }\n}\n```\n# 源码地址\n[https://github.com/WuXiaolong/WoChat](https://github.com/WuXiaolong/WoChat)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammr.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/xmpp2.md","raw":"title: Android基于XMPP开发（二）【连接服务器】\ndate: 2016-02-25 19:34:53\ntags: [XMPP,Smack,openfire]\ncategory: XMPP\n---\n> [Android基于XMPP开发（一）【openfire服务器配置】](http://wuxiaolong.me/2016/02/24/xmpp1/)\n\n# 准备阶段\n砍柴不误磨刀工，欲XMPP开发，先引入Smack，具体见[https://github.com/igniterealtime/Smack](https://github.com/igniterealtime/Smack)，引入方式如下：\napp/build.gradle\n```\nrepositories {\n    maven {\n        url 'https://oss.sonatype.org/content/repositories/snapshots'\n    }\n    mavenCentral()\n}\ndependencies {\ncompile \"org.igniterealtime.smack:smack-android-extensions:4.1.6\"\ncompile 'org.igniterealtime.smack:smack-tcp:4.1.6'\ncompile 'org.igniterealtime.smack:smack-experimental:4.1.6'\n}\n```\n<!-- more -->\n\n# 初始化连接\n这里为了更好的演示，我选择是XMPP公共服务器：yax.im\n```\n  private static final String TAG = \"wxl\";\n  public final static String HOST = \"yax.im\";\n  private static final String SERVICE_NAME = \"yax.im\"; //sunchunlei.local labsun.com\n  public final static int PORT = 5222;\n  public static AbstractXMPPConnection mXMPPTCPConnection;\n  private static SSLContext mSSLContext;\n  public AbstractXMPPConnection initXMPPTCPConnection() {\n        SmackConfiguration.DEBUG = true;\n        try {\n            mSSLContext = SSLContext.getInstance(\"TLS\");\n            mSSLContext.init(null, new TrustManager[]{new MyTrustManager()}, null);\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"connecting failed\", e);\n        }\n\n        XMPPTCPConnectionConfiguration.Builder builder = XMPPTCPConnectionConfiguration.builder();\n//        builder.setUsernameAndPassword(USER_NAME, PASSWORD);\n        builder.setHost(HOST);\n        builder.setServiceName(SERVICE_NAME);//此处只能使用域名或PC机器名称\n        builder.setPort(PORT);\n        builder.setCompressionEnabled(false);//连接套将使用流压缩。\n//        builder.setConnectTimeout(5000);\n//        builder.setDebuggerEnabled(true);\n//        builder.setSendPresence(true);//上线通知系统\n        builder.setSecurityMode(ConnectionConfiguration.SecurityMode.required);//安全模式\n        builder.setCustomSSLContext(mSSLContext);////https不验证证书方式（信任所有证书）\n        SASLAuthentication.unBlacklistSASLMechanism(\"PLAIN\");\n        SASLAuthentication.unBlacklistSASLMechanism(\"DIGEST-MD5\");\n        mXMPPTCPConnection = new XMPPTCPConnection(builder.build());\n        return mXMPPTCPConnection;\n    }\n```\nMyTrustManager \n```\n private class MyTrustManager implements X509TrustManager {\n        @Override\n        public void checkClientTrusted(X509Certificate[] x509Certificates, String s)\n                throws CertificateException {\n            Log.i(TAG, \"checkClientTrusted:\" + s);\n        }\n\n        @Override\n        public void checkServerTrusted(X509Certificate[] x509Certificates, String s)\n                throws CertificateException {\n            Log.i(TAG, \"checkServerTrusted:\" + s);\n        }\n\n        @Override\n        public X509Certificate[] getAcceptedIssuers() {\n            Log.i(TAG, \"getAcceptedIssuers\");\n            return new X509Certificate[0];\n        }\n\n    }\n```\n# Connect to the server\n异步处理，不然会android.os.NetworkOnMainThreadException\n\n```\npublic void connect() {\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Message message = new Message();\n                    message.what = AppConstants.CONNECT;\n                    Log.i(TAG, \"connect front\");\n                    if (mXMPPTCPConnection.isConnected()) {\n                        Log.i(TAG, \"connect successfull\");\n                        message.obj = \"connect successfull\";\n                    } else {\n                        mXMPPTCPConnection.connect();\n                        if (mXMPPTCPConnection.isConnected()) {\n                            message.obj = \"connect successfull\";\n                        } else {\n                            message.obj = \"connect failed\";\n                        }\n\n                    }\n\n                    Log.i(TAG, \"connect end=\" + mXMPPTCPConnection.isConnected());\n                    mXMPPHandler.sendMessage(message);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    Log.i(TAG, \"connect e=\" + e.getMessage());\n                }\n            }\n        }\n\n        );\n        thread.start();\n    }\n```\nXMPPHandler\n```\npublic class XMPPHandler extends Handler {\n    public XMPPClickListener mXMPPClickListener;\n    private static final String TAG = \"wxl\";\n\n    @Override\n    public void handleMessage(Message msg) {\n        super.handleMessage(msg);\n        String text = (String) msg.obj;\n        switch (msg.what) {\n            case AppConstants.CONNECT:\n                mXMPPClickListener.connect(text);\n                break;\n            case AppConstants.LOGIN:\n\n                break;\n            case AppConstants.REGISTER:\n\n                break;\n        }\n    }\n\n\n    public void setXMPPClickListener(XMPPClickListener xmppClickListener) {\n        Log.i(TAG, \"setXMPPClickListener=\" + xmppClickListener);\n        this.mXMPPClickListener = xmppClickListener;\n    }\n}\n```\nXMPPClickListener \n```\npublic interface XMPPClickListener {\n    void connect(String msg);\n}\n\n```\nMainActivity\n```\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener, XMPPClickListener {\n    private XMPPService mXMPPService;\n    private XMPPHandler mXMPPHandler = new XMPPHandler();\n    private ProgressDialog mProgressDialog;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mXMPPService = new XMPPService(mXMPPHandler);\n        mXMPPHandler.setXMPPClickListener(this);\n        mXMPPService.initXMPPTCPConnection();\n        mProgressDialog = new ProgressDialog(MainActivity.this);\n        mProgressDialog.setMessage(\"加载中\");\n        findViewById(R.id.connect).setOnClickListener(this);\n    }\n    @Override\n    public void onClick(View v) {\n        progressDialogShow();\n        switch (v.getId()) {\n            case R.id.connect:\n                mXMPPService.connect();\n                break;\n        }\n    }\n\n    @Override\n    public void connect(String msg) {\n        toastShow(msg);\n    }\n\n    private void toastShow(CharSequence text) {\n        progressDialogDismiss();\n        Toast.makeText(MainActivity.this, text, Toast.LENGTH_LONG).show();\n\n    }\n\n\n    private void progressDialogShow() {\n\n        mProgressDialog.show();\n\n    }\n\n    private void progressDialogDismiss() {\n        if (mProgressDialog.isShowing()) mProgressDialog.dismiss();\n\n    }\n}\n```\n# 源码地址\n[https://github.com/WuXiaolong/WoChat](https://github.com/WuXiaolong/WoChat)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammr.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"xmpp2","published":1,"updated":"2016-03-17T00:44:06.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr70000rzspkhq0lalun","thumbnailImageUrl":null},{"title":"Android基于XMPP开发（一）【openfire服务器配置】","date":"2016-02-24T10:58:28.000Z","_content":"# OpenFire \nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\nOpenFire ——服务器端\nSpark——客户端\nSmack——XMPP 传输协议的实现\n<!-- more -->\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能。\n\n 三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n以上介绍来源网络。\n\n# 配置本地服务器\n## openfire下载\n[点击下载](http://www.igniterealtime.org/downloads/index.jsp)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n# XMPP公共服务器\n这是公共XMPP服务器列表，免费供大家使用。\n[Public XMPP servers](https://list.jabber.at/)\n[Jabber.org](http://www.jabber.org/)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Openfire与XMPP协议](http://www.cnblogs.com/hoojo/archive/2012/06/18/2553975.html)\n[XMPP-RFC3920中文](http://wenku.baidu.com/link?url=OSVHeZETSwiNRJArOxcgU4Ek1MGCu83TPh5aArKtDiIUz6sisSOtpNn4sI9RYTywGkhgJX3pkGpqeJQmeLMf_YdPX3K2VegoxDk0sHwxmCy)","source":"_posts/xmpp1.md","raw":"title: Android基于XMPP开发（一）【openfire服务器配置】\ndate: 2016-02-24 18:58:28\ntags: [XMPP,Smack,openfire]\ncategory: XMPP\n---\n# OpenFire \nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\nOpenFire ——服务器端\nSpark——客户端\nSmack——XMPP 传输协议的实现\n<!-- more -->\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能。\n\n 三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n以上介绍来源网络。\n\n# 配置本地服务器\n## openfire下载\n[点击下载](http://www.igniterealtime.org/downloads/index.jsp)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n# XMPP公共服务器\n这是公共XMPP服务器列表，免费供大家使用。\n[Public XMPP servers](https://list.jabber.at/)\n[Jabber.org](http://www.jabber.org/)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Openfire与XMPP协议](http://www.cnblogs.com/hoojo/archive/2012/06/18/2553975.html)\n[XMPP-RFC3920中文](http://wenku.baidu.com/link?url=OSVHeZETSwiNRJArOxcgU4Ek1MGCu83TPh5aArKtDiIUz6sisSOtpNn4sI9RYTywGkhgJX3pkGpqeJQmeLMf_YdPX3K2VegoxDk0sHwxmCy)","slug":"xmpp1","published":1,"updated":"2016-03-17T00:44:06.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr72000wzspkc7pd3jf8","thumbnailImageUrl":null},{"title":"Android基于XMPP即时通讯应用（一）【openfire服务器配置】","date":"2015-01-13T16:00:00.000Z","_content":"\nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\n\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\n\nOpenFire ——服务器端\nSpark——客户端\n\nSmack——XMPP 传输协议的实现\n\n<!-- more -->\n\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\n\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\n\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\n\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能\n \n三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n\n\n## 准备\nopenfire下载：[http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe](http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n\n\n","source":"_posts/wochat.md","raw":"title: Android基于XMPP即时通讯应用（一）【openfire服务器配置】\ndate: 2015-01-14 \ncategories: [Android]\ntags: [Android,XMPP,openfire]\n---\n\nOpenFire 是采用Java开发的基于XMPP（Jabber）协议，开源实时协作（RTC）服务器。\n\nSmack 是用 Java编 写的XMPP客户端代码库，是 spark 的核心\n\n开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。\n\nOpenFire ——服务器端\nSpark——客户端\n\nSmack——XMPP 传输协议的实现\n\n<!-- more -->\n\n三者都是基于Java 语言的实现，其中XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用。\n\nOpenFire 是基于XMPP 协议的IM 的服务器端的实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。\n\nSpark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低。\n\nSmack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能\n \n三者之间的关系：\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-0.png)\n从上图可知，Client 端和Server端都可以通过插件的方式来进行扩展，Smack是二者传递数据的媒介。\n\n\n## 准备\nopenfire下载：[http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe](http://www.igniterealtime.org/downloads/download-landing.jsp?file=openfire/openfire_3_9_3.exe)\n\n## 配置\n\n* 1、选择中文，continue\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-1.png)\n\n* 2、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-2.png)\n\n* 3、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-3.png)\n\n* 4、本教程数据库MySQL，此步之前先建数据库名为openfire，数据库驱动选项选择MySQL，OK。这里数据库URL替换如图所示，继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-4.png)\n\n* 5、默认继续\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-5.png)\n\n* 6、填写密码，用户名admin，不然密码默认admin\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-6.png)\n\n* 7、登录后台即可\n![](http://wuxiaolong.qiniudn.com/2015-01-14-xchat-7.png)\n\n这样openfire配置到此完成。\n\n\n\n","slug":"wochat","published":1,"updated":"2016-03-17T00:44:06.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr740011zspkjwrwpp7o","thumbnailImageUrl":null},{"title":"微言","date":"2015-04-22T16:00:00.000Z","_content":">微言算我第一个个人App，当初的初衷，想通过这个App达到练手，并熟悉Android项目的创建到发布上线的整个流程。\n>现在我想达到了预期甚至超过了，至今我还在维护这个项目。\n>至于做成什么样子的应用，一开始根本不知道，更不知道“产品”，主观意识做一款励志的，\n>后来认知到产品概念，想把微言做的更好，而不是纯粹地练手，于是形成了现在这个样子的APP([效果预览](http://app.mi.com/detail/25323))。\n>其实其中好多功能不是我凭空想出来的，是用户反馈的。\n>PS:万事开头难，没有行动之前，什么都觉得难！其实没想象的那么难，选准方向，勇往直前吧。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n\n<!--more-->\n\n## 应用介绍\n微言,一款让你每天都有所心得的精微语言应用。\n\n每天花10分钟阅读一篇文章，一个月可以有大约50000字的阅读量，一年有近60万字的阅读量，专注、执着，每天阅读。\n\n微言囊括每日一文、经典语录、人生感悟，为人处世、职场励志、成功励志等等栏目，汇集各类高人经典心得和言论总结，给你无比深刻的智慧启发和人生启迪。\n\n精短良言，微言大义，陶冶情操，励志你我。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 应用市场\n[小米应用市场](http://app.mi.com/detail/25323)\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.weiyan)\n\n## 更新日志\nv3.5\n1、全新Material Design风格,全新体验\n2、新增多彩主题，夜间模式等任您选择\n3、新增每日推荐模块，随机精选优秀文章\n4、新增阅读量，坚持每天阅读\n5、下拉刷新等优化\n\nv3.4\n1、文章评论，分享阅读心得\n2、设置-用户登录\n3、分享、加载等优化\n\nv3.3\n1、新增每日一文模块，每天精选一篇文章\n\n\nv3.2\n1、文章列表排序优化\n2、欢迎页除掉广告\n\nv3.1\n1、文章列表排序修改（最新）\n2、文章详情除掉广告\n\nv3.0\n1、框架重构。\n2、下拉刷新优化。\n3、文章列表新增滑动动画效果。\n\n……","source":"_posts/weiyan.md","raw":"title: 微言\ndate: 2015-04-23\ncategories: App\ntags: [Life,WeiYan]\n---\n>微言算我第一个个人App，当初的初衷，想通过这个App达到练手，并熟悉Android项目的创建到发布上线的整个流程。\n>现在我想达到了预期甚至超过了，至今我还在维护这个项目。\n>至于做成什么样子的应用，一开始根本不知道，更不知道“产品”，主观意识做一款励志的，\n>后来认知到产品概念，想把微言做的更好，而不是纯粹地练手，于是形成了现在这个样子的APP([效果预览](http://app.mi.com/detail/25323))。\n>其实其中好多功能不是我凭空想出来的，是用户反馈的。\n>PS:万事开头难，没有行动之前，什么都觉得难！其实没想象的那么难，选准方向，勇往直前吧。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n\n<!--more-->\n\n## 应用介绍\n微言,一款让你每天都有所心得的精微语言应用。\n\n每天花10分钟阅读一篇文章，一个月可以有大约50000字的阅读量，一年有近60万字的阅读量，专注、执着，每天阅读。\n\n微言囊括每日一文、经典语录、人生感悟，为人处世、职场励志、成功励志等等栏目，汇集各类高人经典心得和言论总结，给你无比深刻的智慧启发和人生启迪。\n\n精短良言，微言大义，陶冶情操，励志你我。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 应用市场\n[小米应用市场](http://app.mi.com/detail/25323)\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.weiyan)\n\n## 更新日志\nv3.5\n1、全新Material Design风格,全新体验\n2、新增多彩主题，夜间模式等任您选择\n3、新增每日推荐模块，随机精选优秀文章\n4、新增阅读量，坚持每天阅读\n5、下拉刷新等优化\n\nv3.4\n1、文章评论，分享阅读心得\n2、设置-用户登录\n3、分享、加载等优化\n\nv3.3\n1、新增每日一文模块，每天精选一篇文章\n\n\nv3.2\n1、文章列表排序优化\n2、欢迎页除掉广告\n\nv3.1\n1、文章列表排序修改（最新）\n2、文章详情除掉广告\n\nv3.0\n1、框架重构。\n2、下拉刷新优化。\n3、文章列表新增滑动动画效果。\n\n……","slug":"weiyan","published":1,"updated":"2016-03-17T00:44:06.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr760018zspkwzsgprlx","thumbnailImageUrl":null},{"title":"微联","date":"2013-12-15T14:30:50.000Z","_content":"\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian5.jpg)\n\n# 应用介绍 \n台州冰蛙信息科技有限公司2013年与温岭微联文化传播有限公司联合推出“微联”移动商旅专用手机APP，集中了台州地区各个领域内不同企业和商家的供应信息、需求信息、联系方式，每天在线及时更新发布企业和商家信息，方便用户浏览、查询以及招商引资。并且在原有功能基础上，针对台州及各地商旅人士推出酒店优惠折扣预订功能。\n\n# 下载地址\n[安智市场](http://www.anzhi.com/soft_1581560.html)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。","source":"_posts/weilian.md","raw":"title: 微联\ndate: 2013-12-15 22:30:50\ntags: weilian\ncategory: App\n---\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weilian5.jpg)\n\n# 应用介绍 \n台州冰蛙信息科技有限公司2013年与温岭微联文化传播有限公司联合推出“微联”移动商旅专用手机APP，集中了台州地区各个领域内不同企业和商家的供应信息、需求信息、联系方式，每天在线及时更新发布企业和商家信息，方便用户浏览、查询以及招商引资。并且在原有功能基础上，针对台州及各地商旅人士推出酒店优惠折扣预订功能。\n\n# 下载地址\n[安智市场](http://www.anzhi.com/soft_1581560.html)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。","slug":"weilian","published":1,"updated":"2016-03-17T00:44:06.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr78001ezspktd99li2d","thumbnailImageUrl":null},{"title":"uCrop使用及源码浅析","date":"2016-06-20T00:52:32.000Z","_content":"# uCrop使用\n\n## github地址\n[https://github.com/Yalantis/uCrop](https://github.com/Yalantis/uCrop)\n然后clone或下载到本地，运行之。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ucrop0.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n<!--more-->\n\n## app/build.gradle\n```java\ncompile 'com.yalantis:ucrop:1.5.0'\n```\n\n## AndroidManifest.xml\n```java\n<activity\n    android:name=\"com.yalantis.ucrop.UCropActivity\"\n    android:screenOrientation=\"portrait\"\n    android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\" />\n```\n这里theme可以改成自己的\n\n## 配置uCrop \n```java\n /**\n  * 启动裁剪\n  * @param activity 上下文\n  * @param sourceFilePath 需要裁剪图片的绝对路径\n  * @param requestCode 比如：UCrop.REQUEST_CROP\n  * @param aspectRatioX 裁剪图片宽高比\n  * @param aspectRatioY 裁剪图片宽高比\n  * @return\n  */\npublic static String startUCrop(Activity activity, String sourceFilePath, \n\tint requestCode, float aspectRatioX, float aspectRatioY) {\n    Uri sourceUri = Uri.fromFile(new File(sourceFilePath));\n    File outDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n    if (!outDir.exists()) {\n        outDir.mkdirs();\n    }\n    File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n    //裁剪后图片的绝对路径\n    String cameraScalePath = outFile.getAbsolutePath();\n    Uri destinationUri = Uri.fromFile(outFile);\n    //初始化，第一个参数：需要裁剪的图片；第二个参数：裁剪后图片\n    UCrop uCrop = UCrop.of(sourceUri, destinationUri);\n    //初始化UCrop配置\n    UCrop.Options options = new UCrop.Options();\n    //设置裁剪图片可操作的手势\n    options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ROTATE, UCropActivity.ALL);\n    //是否隐藏底部容器，默认显示\n    options.setHideBottomControls(true);\n    //设置toolbar颜色\n    options.setToolbarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));\n    //设置状态栏颜色\n    options.setStatusBarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));\n    //是否能调整裁剪框\n    options.setFreeStyleCropEnabled(true);\n    //UCrop配置\n    uCrop.withOptions(options);\n    //设置裁剪图片的宽高比，比如16：9\n    uCrop.withAspectRatio(aspectRatioX, aspectRatioY);\n    //uCrop.useSourceImageAspectRatio();\n    //跳转裁剪页面\n    uCrop.start(activity, requestCode);\n    return cameraScalePath;\n}\n```\n\n## 其他配置\n```java\n//设置Toolbar标题\nvoid setToolbarTitle(@Nullable String text)\n//设置裁剪的图片格式\nvoid setCompressionFormat(@NonNull Bitmap.CompressFormat format)\n//设置裁剪的图片质量，取值0-100\nvoid setCompressionQuality(@IntRange(from = 0) int compressQuality)\n//设置最多缩放的比例尺\nvoid setMaxScaleMultiplier(@FloatRange(from = 1.0, fromInclusive = false) float maxScaleMultiplier)\n//动画时间\nvoid setImageToCropBoundsAnimDuration(@IntRange(from = 100) int durationMillis)\n//设置图片压缩最大值\nvoid setMaxBitmapSize(@IntRange(from = 100) int maxBitmapSize)\n//是否显示椭圆裁剪框阴影\nvoid setOvalDimmedLayer(boolean isOval) \n//设置椭圆裁剪框阴影颜色\nvoid setDimmedLayerColor(@ColorInt int color)\n//是否显示裁剪框\nvoid setShowCropFrame(boolean show)\n//设置裁剪框边的宽度\nvoid setCropFrameStrokeWidth(@IntRange(from = 0) int width)\n//是否显示裁剪框网格\nvoid setShowCropGrid(boolean show) \n//设置裁剪框网格颜色\nvoid setCropGridColor(@ColorInt int color)\n//设置裁剪框网格宽\nvoid setCropGridStrokeWidth(@IntRange(from = 0) int width)\n```\n\n## onActivityResult \n经过裁剪，返回结果，这里我一般只需要裁剪后的图片绝对路径（调用上面startUCrop，即返回图片路径），然后调接口上传服务器。\n```java\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (resultCode == RESULT_OK && requestCode == UCrop.REQUEST_CROP) {\n        final Uri resultUri = UCrop.getOutput(data);\n    } else if (resultCode == UCrop.RESULT_ERROR) {\n        final Throwable cropError = UCrop.getError(data);\n    }\n}\n```\n\n# uCrop源码浅析\nuCrop源码能学习的东西有很多，比如左右滑的标尺，不过我们这里源码浅析只关注裁剪部分。\n\n## 类关系\n首先有个大概了解：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ucrop1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\t\nGestureCropImageView：负责监听各种手势\nCropImageView：主要完成图片裁剪工作，和判断裁剪图片是否充满裁剪框\nTransformImageView：负责图片旋转、缩放、位移操作\n\n## 入口\n由上面的效果图可知，点击右上角，调用裁剪操作，代码如下：\n```java\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    if (item.getItemId() == R.id.menu_crop) {\n        cropAndSaveImage();\n    }\n    return super.onOptionsItemSelected(item);\n}\n//裁剪和保存图片\nprotected void cropAndSaveImage() {\n\t……\n    mGestureCropImageView.cropAndSaveImage(mCompressFormat, mCompressQuality, new BitmapCropCallback() {\n        @Override\n        public void onBitmapCropped(@NonNull Uri resultUri) {\n            setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio());\n            finish();\n        }\n        @Override\n        public void onCropFailure(@NonNull Throwable t) {\n            setResultError(t);\n            finish();\n        }\n    });\n}\n```\n这里调用了GestureCropImageView&cropAndSaveImage方法，如下：\n```java\n/**\n * @param compressFormat  图片压缩格式\n * @param compressQuality 图片压缩质量\n * @param cropCallback    图片压缩回调\n */\npublic void cropAndSaveImage(@NonNull Bitmap.CompressFormat compressFormat, int \t\t\t\t\t\t\t\t\t\t\tcompressQuality,@Nullable BitmapCropCallback cropCallback) {\n    //取消所有动画\n    cancelAllAnimations();\n    //判断裁剪图片是否充满裁剪框\n    setImageToWrapCropBounds(false);\n    //进行裁剪\n    new BitmapCropTask(getViewBitmap(), mCropRect, RectUtils.trapToRect(mCurrentImageCorners),\n            getCurrentScale(), getCurrentAngle(),\n            mMaxResultImageSizeX, mMaxResultImageSizeY,\n            compressFormat, compressQuality,\n            getImageInputPath(), getImageOutputPath(),\n            cropCallback).execute();\n}\n```\n\n## 裁剪之前\n\n### setImageToWrapCropBounds\n裁剪之前，先判断裁剪图片是否充满裁剪框，如果没有，进行移动和缩放让其充满。\n```java\n public void setImageToWrapCropBounds(boolean animate) {\n     //mBitmapLaidOut图片加载OK，isImageWrapCropBounds()检查图片是否充满裁剪框\n     if (mBitmapLaidOut && !isImageWrapCropBounds()) {\n         //当前图片中心X点\n         float currentX = mCurrentImageCenter[0];\n         //当前图片中心Y点\n         float currentY = mCurrentImageCenter[1];\n         //当前图片缩放值\n         float currentScale = getCurrentScale();\n         //差量\n         float deltaX = mCropRect.centerX() - currentX;\n         float deltaY = mCropRect.centerY() - currentY;\n         float deltaScale = 0;\n         //临时矩阵重置\n         mTempMatrix.reset();\n         //临时矩阵移动\n         mTempMatrix.setTranslate(deltaX, deltaY);\n         //复制到新的数组\n         final float[] tempCurrentImageCorners = Arrays.copyOf(mCurrentImageCorners, mCurrentImageCorners.length);\n         //将此矩阵应用于二维点的数组，并编写转换后的指向数组的点\n         mTempMatrix.mapPoints(tempCurrentImageCorners);\n         //再检查图片是否充满裁剪框\n         boolean willImageWrapCropBoundsAfterTranslate = isImageWrapCropBounds(tempCurrentImageCorners);\n         if (willImageWrapCropBoundsAfterTranslate) {\n             //图片缩进的数组\n             final float[] imageIndents = calculateImageIndents();\n             deltaX = -(imageIndents[0] + imageIndents[2]);\n             deltaY = -(imageIndents[1] + imageIndents[3]);\n         } else {\n             RectF tempCropRect = new RectF(mCropRect);\n             mTempMatrix.reset();\n             mTempMatrix.setRotate(getCurrentAngle());\n             mTempMatrix.mapRect(tempCropRect);\n             //获取裁剪图片的边\n             final float[] currentImageSides = RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n             deltaScale = Math.max(tempCropRect.width() / currentImageSides[0],\n                     tempCropRect.height() / currentImageSides[1]);\n             deltaScale = deltaScale * currentScale - currentScale;\n         }\n         if (animate) {\n             //移动或缩放图片（有动画效果）\n             post(mWrapCropBoundsRunnable = new WrapCropBoundsRunnable(\n                     CropImageView.this, mImageToWrapCropBoundsAnimDuration, currentX, currentY, deltaX, deltaY,\n                     currentScale, deltaScale, willImageWrapCropBoundsAfterTranslate));\n         } else {\n             //移动图片\n             postTranslate(deltaX, deltaY);\n             if (!willImageWrapCropBoundsAfterTranslate) {\n                 //缩放图片\n                 zoomInImage(currentScale + deltaScale, mCropRect.centerX(), mCropRect.centerY());\n             }\n         }\n     }\n }\n```\n\n## 进行裁剪\n裁剪放到了异步，即BitmapCropTask继承AsyncTask，先设置原始图片resizeScale值，然后通过ExifInterface保存新的图片，即裁剪后的图片。\n```java\npublic class BitmapCropTask extends AsyncTask<Void, Void, Throwable> {\n\t\n\t……\n\n    /**\n     * @param viewBitmap          裁剪图片bitmap\n     * @param cropRect            裁剪矩形\n     * @param currentImageRect    当前图片矩形\n     * @param currentScale        当前图片缩放值\n     * @param currentAngle        当前图片角度\n     * @param maxResultImageSizeX 图片裁剪后最大宽值\n     * @param maxResultImageSizeY 图片裁剪后最大高值\n     * @param compressFormat      图片裁剪的格式\n     * @param compressQuality     图片裁剪的质量\n     * @param imageInputPath      裁剪图片路径\n     * @param imageOutputPath     图片裁剪后路径\n     * @param cropCallback        裁剪回调\n     */\n    public BitmapCropTask(@Nullable Bitmap viewBitmap,\n                          @NonNull RectF cropRect, @NonNull RectF currentImageRect,\n                          float currentScale, float currentAngle,\n                          int maxResultImageSizeX, int maxResultImageSizeY,\n                          @NonNull Bitmap.CompressFormat compressFormat, int compressQuality,\n                          @NonNull String imageInputPath, @NonNull String imageOutputPath,\n                          @Nullable BitmapCropCallback cropCallback) {\n\n      ……\n    }\n\n    @Override\n    @Nullable\n    protected Throwable doInBackground(Void... params) {\n        if (mViewBitmap == null || mViewBitmap.isRecycled()) {\n            return new NullPointerException(\"ViewBitmap is null or already recycled\");\n        }\n        if (mCurrentImageRect.isEmpty()) {\n            return new NullPointerException(\"CurrentImageRect is empty\");\n        }\n\t\t//设置resizeScale值\n        float resizeScale = resize();\n\n        try {\n\t        //裁剪\n            crop(resizeScale);\n            //回收\n            mViewBitmap.recycle();\n            mViewBitmap = null;\n        } catch (Throwable throwable) {\n            return throwable;\n        }\n\n        return null;\n    }\n\n    private float resize() {\n        //初始Options\n        final BitmapFactory.Options options = new BitmapFactory.Options();\n        //查询该位图，而无需分配存储器，可获取outHeight(图片原始高度)和 outWidth(图片的原始宽度)\n        options.inJustDecodeBounds = true;\n        //裁剪图片解码\n        BitmapFactory.decodeFile(mImageInputPath, options);\n        //原始图片和裁剪后图片比值\n        float scaleX = options.outWidth / mViewBitmap.getWidth();\n        float scaleY = options.outHeight / mViewBitmap.getHeight();\n\n        float resizeScale = Math.min(scaleX, scaleY);\n\n        mCurrentScale /= resizeScale;\n        //初始化值为1\n        resizeScale = 1;\n        if (mMaxResultImageSizeX > 0 && mMaxResultImageSizeY > 0) {\n            float cropWidth = mCropRect.width() / mCurrentScale;\n            float cropHeight = mCropRect.height() / mCurrentScale;\n\n            if (cropWidth > mMaxResultImageSizeX || cropHeight > mMaxResultImageSizeY) {\n\n                scaleX = mMaxResultImageSizeX / cropWidth;\n                scaleY = mMaxResultImageSizeY / cropHeight;\n                //设置resizeScale，如果是2就是高度和宽度都是原始的一半\n                resizeScale = Math.min(scaleX, scaleY);\n\n                mCurrentScale /= resizeScale;\n            }\n        }\n        return resizeScale;\n    }\n\n    private boolean crop(float resizeScale) throws IOException {\n        //ExifInterface这个接口提供了图片文件的旋转，gps，时间等信息，从原始图片读出Exif标签\n        ExifInterface originalExif = new ExifInterface(mImageInputPath);\n\n        int top = Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n        int left = Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n        int width = Math.round(mCropRect.width() / mCurrentScale);\n        int height = Math.round(mCropRect.height() / mCurrentScale);\n\t\t//复制图片\n        boolean cropped = cropCImg(mImageInputPath, mImageOutputPath,\n                left, top, width, height, mCurrentAngle, resizeScale,\n                mCompressFormat.ordinal(), mCompressQuality);\n        if (cropped) {\n\t        //拿到裁剪后图片\n            copyExif(originalExif, width, height);\n        }\n\n        return cropped;\n    }\n\n    @SuppressWarnings(\"JniMissingFunction\")\n    native public boolean cropCImg(String inputPath, String outputPath,\n                                   int left, int top, int width, int height, float angle, float resizeScale,\n                                   int format, int quality) throws IOException, OutOfMemoryError;\n\t/**\n\t * @param originalExif 原始图片Exif\n\t * @param width        裁剪后图片宽\n\t * @param height       裁剪后图片高\n\t * @throws IOException 是否异常\n\t */\n    public void copyExif(ExifInterface originalExif, int width, int height) throws IOException {\n        //Exif标签数组\n        String[] attributes = new String[]{\n                ExifInterface.TAG_APERTURE,\n                ……\n        };\n        //指定裁剪后图片路径，初始化新的ExifInterface\n        ExifInterface newExif = new ExifInterface(mImageOutputPath);\n        String value;\n        for (String attribute : attributes) {\n            value = originalExif.getAttribute(attribute);\n            if (!TextUtils.isEmpty(value)) {\n                //设置Exif标签\n                newExif.setAttribute(attribute, value);\n            }\n        }\n        newExif.setAttribute(ExifInterface.TAG_IMAGE_WIDTH, String.valueOf(width));\n        newExif.setAttribute(ExifInterface.TAG_IMAGE_LENGTH, String.valueOf(height));\n        newExif.setAttribute(ExifInterface.TAG_ORIENTATION, \"0\");\n        //保存\n        newExif.saveAttributes();\n    }\n\n    @Override\n    protected void onPostExecute(@Nullable Throwable t) {\n        if (mCropCallback != null) {\n            if (t == null) {\n                //接口回调，over\n                mCropCallback.onBitmapCropped(Uri.fromFile(new File(mImageOutputPath)));\n            } else {\n                mCropCallback.onCropFailure(t);\n            }\n        }\n    }\n\n}\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 总结\nuCrop功能强大，对于我来说，有很多东西值得学习，难点如Rect包含问题（其实这块还不是很理解），新知识如ExifInterface操作图片，BitmapFactory显示图片的知识点温故等，还有自定义左右滑的标尺，都是不错的学习源码。抛砖引玉至此，over。","source":"_posts/uCrop.md","raw":"title: uCrop使用及源码浅析\ndate: 2016-06-20 08:52:32\ntags: uCrop\ncategory: SourceAnalysis\n---\n# uCrop使用\n\n## github地址\n[https://github.com/Yalantis/uCrop](https://github.com/Yalantis/uCrop)\n然后clone或下载到本地，运行之。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ucrop0.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n<!--more-->\n\n## app/build.gradle\n```java\ncompile 'com.yalantis:ucrop:1.5.0'\n```\n\n## AndroidManifest.xml\n```java\n<activity\n    android:name=\"com.yalantis.ucrop.UCropActivity\"\n    android:screenOrientation=\"portrait\"\n    android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\" />\n```\n这里theme可以改成自己的\n\n## 配置uCrop \n```java\n /**\n  * 启动裁剪\n  * @param activity 上下文\n  * @param sourceFilePath 需要裁剪图片的绝对路径\n  * @param requestCode 比如：UCrop.REQUEST_CROP\n  * @param aspectRatioX 裁剪图片宽高比\n  * @param aspectRatioY 裁剪图片宽高比\n  * @return\n  */\npublic static String startUCrop(Activity activity, String sourceFilePath, \n\tint requestCode, float aspectRatioX, float aspectRatioY) {\n    Uri sourceUri = Uri.fromFile(new File(sourceFilePath));\n    File outDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n    if (!outDir.exists()) {\n        outDir.mkdirs();\n    }\n    File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n    //裁剪后图片的绝对路径\n    String cameraScalePath = outFile.getAbsolutePath();\n    Uri destinationUri = Uri.fromFile(outFile);\n    //初始化，第一个参数：需要裁剪的图片；第二个参数：裁剪后图片\n    UCrop uCrop = UCrop.of(sourceUri, destinationUri);\n    //初始化UCrop配置\n    UCrop.Options options = new UCrop.Options();\n    //设置裁剪图片可操作的手势\n    options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ROTATE, UCropActivity.ALL);\n    //是否隐藏底部容器，默认显示\n    options.setHideBottomControls(true);\n    //设置toolbar颜色\n    options.setToolbarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));\n    //设置状态栏颜色\n    options.setStatusBarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));\n    //是否能调整裁剪框\n    options.setFreeStyleCropEnabled(true);\n    //UCrop配置\n    uCrop.withOptions(options);\n    //设置裁剪图片的宽高比，比如16：9\n    uCrop.withAspectRatio(aspectRatioX, aspectRatioY);\n    //uCrop.useSourceImageAspectRatio();\n    //跳转裁剪页面\n    uCrop.start(activity, requestCode);\n    return cameraScalePath;\n}\n```\n\n## 其他配置\n```java\n//设置Toolbar标题\nvoid setToolbarTitle(@Nullable String text)\n//设置裁剪的图片格式\nvoid setCompressionFormat(@NonNull Bitmap.CompressFormat format)\n//设置裁剪的图片质量，取值0-100\nvoid setCompressionQuality(@IntRange(from = 0) int compressQuality)\n//设置最多缩放的比例尺\nvoid setMaxScaleMultiplier(@FloatRange(from = 1.0, fromInclusive = false) float maxScaleMultiplier)\n//动画时间\nvoid setImageToCropBoundsAnimDuration(@IntRange(from = 100) int durationMillis)\n//设置图片压缩最大值\nvoid setMaxBitmapSize(@IntRange(from = 100) int maxBitmapSize)\n//是否显示椭圆裁剪框阴影\nvoid setOvalDimmedLayer(boolean isOval) \n//设置椭圆裁剪框阴影颜色\nvoid setDimmedLayerColor(@ColorInt int color)\n//是否显示裁剪框\nvoid setShowCropFrame(boolean show)\n//设置裁剪框边的宽度\nvoid setCropFrameStrokeWidth(@IntRange(from = 0) int width)\n//是否显示裁剪框网格\nvoid setShowCropGrid(boolean show) \n//设置裁剪框网格颜色\nvoid setCropGridColor(@ColorInt int color)\n//设置裁剪框网格宽\nvoid setCropGridStrokeWidth(@IntRange(from = 0) int width)\n```\n\n## onActivityResult \n经过裁剪，返回结果，这里我一般只需要裁剪后的图片绝对路径（调用上面startUCrop，即返回图片路径），然后调接口上传服务器。\n```java\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (resultCode == RESULT_OK && requestCode == UCrop.REQUEST_CROP) {\n        final Uri resultUri = UCrop.getOutput(data);\n    } else if (resultCode == UCrop.RESULT_ERROR) {\n        final Throwable cropError = UCrop.getError(data);\n    }\n}\n```\n\n# uCrop源码浅析\nuCrop源码能学习的东西有很多，比如左右滑的标尺，不过我们这里源码浅析只关注裁剪部分。\n\n## 类关系\n首先有个大概了解：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ucrop1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\t\nGestureCropImageView：负责监听各种手势\nCropImageView：主要完成图片裁剪工作，和判断裁剪图片是否充满裁剪框\nTransformImageView：负责图片旋转、缩放、位移操作\n\n## 入口\n由上面的效果图可知，点击右上角，调用裁剪操作，代码如下：\n```java\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    if (item.getItemId() == R.id.menu_crop) {\n        cropAndSaveImage();\n    }\n    return super.onOptionsItemSelected(item);\n}\n//裁剪和保存图片\nprotected void cropAndSaveImage() {\n\t……\n    mGestureCropImageView.cropAndSaveImage(mCompressFormat, mCompressQuality, new BitmapCropCallback() {\n        @Override\n        public void onBitmapCropped(@NonNull Uri resultUri) {\n            setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio());\n            finish();\n        }\n        @Override\n        public void onCropFailure(@NonNull Throwable t) {\n            setResultError(t);\n            finish();\n        }\n    });\n}\n```\n这里调用了GestureCropImageView&cropAndSaveImage方法，如下：\n```java\n/**\n * @param compressFormat  图片压缩格式\n * @param compressQuality 图片压缩质量\n * @param cropCallback    图片压缩回调\n */\npublic void cropAndSaveImage(@NonNull Bitmap.CompressFormat compressFormat, int \t\t\t\t\t\t\t\t\t\t\tcompressQuality,@Nullable BitmapCropCallback cropCallback) {\n    //取消所有动画\n    cancelAllAnimations();\n    //判断裁剪图片是否充满裁剪框\n    setImageToWrapCropBounds(false);\n    //进行裁剪\n    new BitmapCropTask(getViewBitmap(), mCropRect, RectUtils.trapToRect(mCurrentImageCorners),\n            getCurrentScale(), getCurrentAngle(),\n            mMaxResultImageSizeX, mMaxResultImageSizeY,\n            compressFormat, compressQuality,\n            getImageInputPath(), getImageOutputPath(),\n            cropCallback).execute();\n}\n```\n\n## 裁剪之前\n\n### setImageToWrapCropBounds\n裁剪之前，先判断裁剪图片是否充满裁剪框，如果没有，进行移动和缩放让其充满。\n```java\n public void setImageToWrapCropBounds(boolean animate) {\n     //mBitmapLaidOut图片加载OK，isImageWrapCropBounds()检查图片是否充满裁剪框\n     if (mBitmapLaidOut && !isImageWrapCropBounds()) {\n         //当前图片中心X点\n         float currentX = mCurrentImageCenter[0];\n         //当前图片中心Y点\n         float currentY = mCurrentImageCenter[1];\n         //当前图片缩放值\n         float currentScale = getCurrentScale();\n         //差量\n         float deltaX = mCropRect.centerX() - currentX;\n         float deltaY = mCropRect.centerY() - currentY;\n         float deltaScale = 0;\n         //临时矩阵重置\n         mTempMatrix.reset();\n         //临时矩阵移动\n         mTempMatrix.setTranslate(deltaX, deltaY);\n         //复制到新的数组\n         final float[] tempCurrentImageCorners = Arrays.copyOf(mCurrentImageCorners, mCurrentImageCorners.length);\n         //将此矩阵应用于二维点的数组，并编写转换后的指向数组的点\n         mTempMatrix.mapPoints(tempCurrentImageCorners);\n         //再检查图片是否充满裁剪框\n         boolean willImageWrapCropBoundsAfterTranslate = isImageWrapCropBounds(tempCurrentImageCorners);\n         if (willImageWrapCropBoundsAfterTranslate) {\n             //图片缩进的数组\n             final float[] imageIndents = calculateImageIndents();\n             deltaX = -(imageIndents[0] + imageIndents[2]);\n             deltaY = -(imageIndents[1] + imageIndents[3]);\n         } else {\n             RectF tempCropRect = new RectF(mCropRect);\n             mTempMatrix.reset();\n             mTempMatrix.setRotate(getCurrentAngle());\n             mTempMatrix.mapRect(tempCropRect);\n             //获取裁剪图片的边\n             final float[] currentImageSides = RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n             deltaScale = Math.max(tempCropRect.width() / currentImageSides[0],\n                     tempCropRect.height() / currentImageSides[1]);\n             deltaScale = deltaScale * currentScale - currentScale;\n         }\n         if (animate) {\n             //移动或缩放图片（有动画效果）\n             post(mWrapCropBoundsRunnable = new WrapCropBoundsRunnable(\n                     CropImageView.this, mImageToWrapCropBoundsAnimDuration, currentX, currentY, deltaX, deltaY,\n                     currentScale, deltaScale, willImageWrapCropBoundsAfterTranslate));\n         } else {\n             //移动图片\n             postTranslate(deltaX, deltaY);\n             if (!willImageWrapCropBoundsAfterTranslate) {\n                 //缩放图片\n                 zoomInImage(currentScale + deltaScale, mCropRect.centerX(), mCropRect.centerY());\n             }\n         }\n     }\n }\n```\n\n## 进行裁剪\n裁剪放到了异步，即BitmapCropTask继承AsyncTask，先设置原始图片resizeScale值，然后通过ExifInterface保存新的图片，即裁剪后的图片。\n```java\npublic class BitmapCropTask extends AsyncTask<Void, Void, Throwable> {\n\t\n\t……\n\n    /**\n     * @param viewBitmap          裁剪图片bitmap\n     * @param cropRect            裁剪矩形\n     * @param currentImageRect    当前图片矩形\n     * @param currentScale        当前图片缩放值\n     * @param currentAngle        当前图片角度\n     * @param maxResultImageSizeX 图片裁剪后最大宽值\n     * @param maxResultImageSizeY 图片裁剪后最大高值\n     * @param compressFormat      图片裁剪的格式\n     * @param compressQuality     图片裁剪的质量\n     * @param imageInputPath      裁剪图片路径\n     * @param imageOutputPath     图片裁剪后路径\n     * @param cropCallback        裁剪回调\n     */\n    public BitmapCropTask(@Nullable Bitmap viewBitmap,\n                          @NonNull RectF cropRect, @NonNull RectF currentImageRect,\n                          float currentScale, float currentAngle,\n                          int maxResultImageSizeX, int maxResultImageSizeY,\n                          @NonNull Bitmap.CompressFormat compressFormat, int compressQuality,\n                          @NonNull String imageInputPath, @NonNull String imageOutputPath,\n                          @Nullable BitmapCropCallback cropCallback) {\n\n      ……\n    }\n\n    @Override\n    @Nullable\n    protected Throwable doInBackground(Void... params) {\n        if (mViewBitmap == null || mViewBitmap.isRecycled()) {\n            return new NullPointerException(\"ViewBitmap is null or already recycled\");\n        }\n        if (mCurrentImageRect.isEmpty()) {\n            return new NullPointerException(\"CurrentImageRect is empty\");\n        }\n\t\t//设置resizeScale值\n        float resizeScale = resize();\n\n        try {\n\t        //裁剪\n            crop(resizeScale);\n            //回收\n            mViewBitmap.recycle();\n            mViewBitmap = null;\n        } catch (Throwable throwable) {\n            return throwable;\n        }\n\n        return null;\n    }\n\n    private float resize() {\n        //初始Options\n        final BitmapFactory.Options options = new BitmapFactory.Options();\n        //查询该位图，而无需分配存储器，可获取outHeight(图片原始高度)和 outWidth(图片的原始宽度)\n        options.inJustDecodeBounds = true;\n        //裁剪图片解码\n        BitmapFactory.decodeFile(mImageInputPath, options);\n        //原始图片和裁剪后图片比值\n        float scaleX = options.outWidth / mViewBitmap.getWidth();\n        float scaleY = options.outHeight / mViewBitmap.getHeight();\n\n        float resizeScale = Math.min(scaleX, scaleY);\n\n        mCurrentScale /= resizeScale;\n        //初始化值为1\n        resizeScale = 1;\n        if (mMaxResultImageSizeX > 0 && mMaxResultImageSizeY > 0) {\n            float cropWidth = mCropRect.width() / mCurrentScale;\n            float cropHeight = mCropRect.height() / mCurrentScale;\n\n            if (cropWidth > mMaxResultImageSizeX || cropHeight > mMaxResultImageSizeY) {\n\n                scaleX = mMaxResultImageSizeX / cropWidth;\n                scaleY = mMaxResultImageSizeY / cropHeight;\n                //设置resizeScale，如果是2就是高度和宽度都是原始的一半\n                resizeScale = Math.min(scaleX, scaleY);\n\n                mCurrentScale /= resizeScale;\n            }\n        }\n        return resizeScale;\n    }\n\n    private boolean crop(float resizeScale) throws IOException {\n        //ExifInterface这个接口提供了图片文件的旋转，gps，时间等信息，从原始图片读出Exif标签\n        ExifInterface originalExif = new ExifInterface(mImageInputPath);\n\n        int top = Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n        int left = Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n        int width = Math.round(mCropRect.width() / mCurrentScale);\n        int height = Math.round(mCropRect.height() / mCurrentScale);\n\t\t//复制图片\n        boolean cropped = cropCImg(mImageInputPath, mImageOutputPath,\n                left, top, width, height, mCurrentAngle, resizeScale,\n                mCompressFormat.ordinal(), mCompressQuality);\n        if (cropped) {\n\t        //拿到裁剪后图片\n            copyExif(originalExif, width, height);\n        }\n\n        return cropped;\n    }\n\n    @SuppressWarnings(\"JniMissingFunction\")\n    native public boolean cropCImg(String inputPath, String outputPath,\n                                   int left, int top, int width, int height, float angle, float resizeScale,\n                                   int format, int quality) throws IOException, OutOfMemoryError;\n\t/**\n\t * @param originalExif 原始图片Exif\n\t * @param width        裁剪后图片宽\n\t * @param height       裁剪后图片高\n\t * @throws IOException 是否异常\n\t */\n    public void copyExif(ExifInterface originalExif, int width, int height) throws IOException {\n        //Exif标签数组\n        String[] attributes = new String[]{\n                ExifInterface.TAG_APERTURE,\n                ……\n        };\n        //指定裁剪后图片路径，初始化新的ExifInterface\n        ExifInterface newExif = new ExifInterface(mImageOutputPath);\n        String value;\n        for (String attribute : attributes) {\n            value = originalExif.getAttribute(attribute);\n            if (!TextUtils.isEmpty(value)) {\n                //设置Exif标签\n                newExif.setAttribute(attribute, value);\n            }\n        }\n        newExif.setAttribute(ExifInterface.TAG_IMAGE_WIDTH, String.valueOf(width));\n        newExif.setAttribute(ExifInterface.TAG_IMAGE_LENGTH, String.valueOf(height));\n        newExif.setAttribute(ExifInterface.TAG_ORIENTATION, \"0\");\n        //保存\n        newExif.saveAttributes();\n    }\n\n    @Override\n    protected void onPostExecute(@Nullable Throwable t) {\n        if (mCropCallback != null) {\n            if (t == null) {\n                //接口回调，over\n                mCropCallback.onBitmapCropped(Uri.fromFile(new File(mImageOutputPath)));\n            } else {\n                mCropCallback.onCropFailure(t);\n            }\n        }\n    }\n\n}\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 总结\nuCrop功能强大，对于我来说，有很多东西值得学习，难点如Rect包含问题（其实这块还不是很理解），新知识如ExifInterface操作图片，BitmapFactory显示图片的知识点温故等，还有自定义左右滑的标尺，都是不错的学习源码。抛砖引玉至此，over。","slug":"uCrop","published":1,"updated":"2016-06-24T02:42:57.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7a001izspkw9rjlejc","thumbnailImageUrl":null},{"title":"Android Toolbar","date":"2015-11-10T02:18:18.000Z","_content":"在Material Design之中有一个名称为Toolbar，用来取代过去的ActionBar控件。\n# 基本用法\n可分为三步：\n## 新增ToolBar样式\nvalue/styles.xml：\n```js\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n  <item name=\"colorPrimary\">@color/colorPrimary</item>\n  <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n  <item name=\"colorAccent\">@color/colorAccent</item>\n  <item name=\"android:textColorPrimary\">@android:color/white</item>\n  <!--返回或更多(app:showAsAction=\"never\")的按钮颜色-->\n  <item name=\"colorControlNormal\">@android:color/white</item>\n  <!--菜单字体颜色-->\n  <item name=\"actionMenuTextColor\">@android:color/white</item>\n </style>\n```\n看看 parent=\"Theme.AppCompat.Light.NoActionBar\"\n```js\n <style name=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"windowActionBar\">false</item>\n        <item name=\"windowNoTitle\">true</item>\n </style>\n```\n<!--more-->\n## XML布局中新增ToolBar\n```js\n<android.support.v7.widget.Toolbar \n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:minHeight=\"?actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\n </android.support.v7.widget.Toolbar>\n```\n## 在程序中替代ActionBar\n```java\n Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n             \n        }\n```\nres/menu/activity_main.xml\n```js\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      tools:context=\".MainActivity\">\n \n  <item android:id=\"@+id/action_edit\"\n        android:title=\"@string/action_edit\"\n        android:orderInCategory=\"80\"\n        android:icon=\"@drawable/ab_edit\"\n        app:showAsAction=\"ifRoom\" />\n</menu>\n```\n\n```java\n @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.activity_main, menu);\n        return true;\n    }\n @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n\n            case R.id.action_edit:\n              return true;\n            case android.R.id.home:\n              super.onBackPressed();//返回\n              return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n\n    }\n```\n## 单独使用而不与ActionBar进行关联\n在前一节中设置与ActionBar进行关联，如果不进行关联也是可以使用。即执行方法：setSupportActionBar，那么Menu的操作也不用在onCreateOptionsMenu方法，直接使用ToolBar的inflateMenu方法，Menu的事件也是独立的，需要通过设置ToolBar的setOnMenuItemClickListener来实现。\n```java\nToolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n \n// App Logo\ntoolbar.setLogo(R.drawable.ic_launcher);\n// Title\ntoolbar.setTitle(\"My Title\");\n// Sub Title\ntoolbar.setSubtitle(\"Sub title\");\n \n//setSupportActionBar(toolbar);\n toolbar.inflateMenu(R.menu.activity_main);\n// Navigation Icon 要設定在 setSupoortActionBar后 才有作用\n// 否則會出現 back button \ntoolbar.setNavigationIcon(R.drawable.ab_android);\ntoolbar.setNavigationOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                \n            }\n        });\n// Menu item click 设定在 setSupportActionBar 之后才有作用\ntoolbar.setOnMenuItemClickListener(onMenuItemClick);\n```\nonMenuItemClick\n```java\nprivate Toolbar.OnMenuItemClickListener onMenuItemClick = new Toolbar.OnMenuItemClickListener() {\n  @Override\n  public boolean onMenuItemClick(MenuItem menuItem) {\n    String msg = \"\";\n    switch (menuItem.getItemId()) {\n      case R.id.action_edit:  \n        break;\n    }\n    return true;\n  }\n};\n```\n# 自定义布局\n title修改为居中\n```js\n<android.support.v7.widget.Toolbar\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n\tandroid:layout_height=\"wrap_content\"\n    android:background=\"@mipmap/bg_title\"\n    android:minHeight=\"?actionBarSize\">\n\n    <TextView\n        android:id=\"@+id/toolbar_title\"\n        style=\"@style/TextAppearance.AppCompat.Widget.ActionBar.Title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\" />\n</android.support.v7.widget.Toolbar>\n```\n\n禁用系统的title显示，即setDisplayShowTitleEnabled方法\n```java\n Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n  if (toolbar != null) {\n            TextView toolbaTitle = (TextView) toolbar.findViewById(R.id.toolbar_title);\n            toolbaTitle.setText(\"\");\n        }\n        android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n             actionBar.setDisplayShowTitleEnabled(false);\n        }\n\n```\n# 实现将布局的内容延伸到状态栏\nstyle\n```js \n <item name=\"android:windowTranslucentStatus\" tools:targetApi=\"19\">true</item>\n```\nToolbar增加一个paddingTop:\n```js\n<android.support.v7.widget.Toolbar \n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@mipmap/bg_title\"\n    android:minHeight=\"?actionBarSize\"\n    android:paddingTop=\"@dimen/status_bar_height\"/>\n```\nvalues/dimens.xml\n```js\n<dimen name=\"status_bar_height\">0dp</dimen>\n```\nvalues-v19/dimens.xml\n```js\n<dimen name=\"status_bar_height\">25dp</dimen>\n```\nvalues-v23/dimens.xml\n```js\n<dimen name=\"status_bar_height\">24dp</dimen>\n```\n可以通过以下方法取得StatusBarHeight：\n```java\npublic int getStatusBarHeight() {\n        int result = 0;\n        int resourceId = getResources().getIdentifier(\"status_bar_height\", \"dimen\", \"android\");\n        if (resourceId > 0) {\n            result = getResources().getDimensionPixelSize(resourceId);\n        }\n        return result;\n    }\n```\n`另外注意：`toolbar所在的父布局不能同时设置fitsSystemWindow=\"true\"，它会使得屏幕上的可布局空间位于状态栏下方与导航栏上方。\n\n因为这个带来了键盘挡住EditText的问题，解决方案：\n在EditText所在的父布局设置fitsSystemWindow=\"true\"即可。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Android ToolBar Widget Usage](http://blog.hwangjr.com/2015/07/10/Android-ToolBar-Widget-Usage/)\n[ANDROID – TOOLBAR STEP BY STEP](http://blog.mosil.biz/2014/10/android-toolbar/)\n\n","source":"_posts/toolbar.md","raw":"title: Android Toolbar\ndate: 2015-11-10 10:18:18\ntags: Toolbar\ncategory: Android\n---\n在Material Design之中有一个名称为Toolbar，用来取代过去的ActionBar控件。\n# 基本用法\n可分为三步：\n## 新增ToolBar样式\nvalue/styles.xml：\n```js\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n  <item name=\"colorPrimary\">@color/colorPrimary</item>\n  <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n  <item name=\"colorAccent\">@color/colorAccent</item>\n  <item name=\"android:textColorPrimary\">@android:color/white</item>\n  <!--返回或更多(app:showAsAction=\"never\")的按钮颜色-->\n  <item name=\"colorControlNormal\">@android:color/white</item>\n  <!--菜单字体颜色-->\n  <item name=\"actionMenuTextColor\">@android:color/white</item>\n </style>\n```\n看看 parent=\"Theme.AppCompat.Light.NoActionBar\"\n```js\n <style name=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"windowActionBar\">false</item>\n        <item name=\"windowNoTitle\">true</item>\n </style>\n```\n<!--more-->\n## XML布局中新增ToolBar\n```js\n<android.support.v7.widget.Toolbar \n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:minHeight=\"?actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\n </android.support.v7.widget.Toolbar>\n```\n## 在程序中替代ActionBar\n```java\n Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n             \n        }\n```\nres/menu/activity_main.xml\n```js\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      tools:context=\".MainActivity\">\n \n  <item android:id=\"@+id/action_edit\"\n        android:title=\"@string/action_edit\"\n        android:orderInCategory=\"80\"\n        android:icon=\"@drawable/ab_edit\"\n        app:showAsAction=\"ifRoom\" />\n</menu>\n```\n\n```java\n @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.activity_main, menu);\n        return true;\n    }\n @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n\n            case R.id.action_edit:\n              return true;\n            case android.R.id.home:\n              super.onBackPressed();//返回\n              return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n\n    }\n```\n## 单独使用而不与ActionBar进行关联\n在前一节中设置与ActionBar进行关联，如果不进行关联也是可以使用。即执行方法：setSupportActionBar，那么Menu的操作也不用在onCreateOptionsMenu方法，直接使用ToolBar的inflateMenu方法，Menu的事件也是独立的，需要通过设置ToolBar的setOnMenuItemClickListener来实现。\n```java\nToolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n \n// App Logo\ntoolbar.setLogo(R.drawable.ic_launcher);\n// Title\ntoolbar.setTitle(\"My Title\");\n// Sub Title\ntoolbar.setSubtitle(\"Sub title\");\n \n//setSupportActionBar(toolbar);\n toolbar.inflateMenu(R.menu.activity_main);\n// Navigation Icon 要設定在 setSupoortActionBar后 才有作用\n// 否則會出現 back button \ntoolbar.setNavigationIcon(R.drawable.ab_android);\ntoolbar.setNavigationOnClickListener(new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n                \n            }\n        });\n// Menu item click 设定在 setSupportActionBar 之后才有作用\ntoolbar.setOnMenuItemClickListener(onMenuItemClick);\n```\nonMenuItemClick\n```java\nprivate Toolbar.OnMenuItemClickListener onMenuItemClick = new Toolbar.OnMenuItemClickListener() {\n  @Override\n  public boolean onMenuItemClick(MenuItem menuItem) {\n    String msg = \"\";\n    switch (menuItem.getItemId()) {\n      case R.id.action_edit:  \n        break;\n    }\n    return true;\n  }\n};\n```\n# 自定义布局\n title修改为居中\n```js\n<android.support.v7.widget.Toolbar\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n\tandroid:layout_height=\"wrap_content\"\n    android:background=\"@mipmap/bg_title\"\n    android:minHeight=\"?actionBarSize\">\n\n    <TextView\n        android:id=\"@+id/toolbar_title\"\n        style=\"@style/TextAppearance.AppCompat.Widget.ActionBar.Title\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\" />\n</android.support.v7.widget.Toolbar>\n```\n\n禁用系统的title显示，即setDisplayShowTitleEnabled方法\n```java\n Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n  if (toolbar != null) {\n            TextView toolbaTitle = (TextView) toolbar.findViewById(R.id.toolbar_title);\n            toolbaTitle.setText(\"\");\n        }\n        android.support.v7.app.ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n             actionBar.setDisplayShowTitleEnabled(false);\n        }\n\n```\n# 实现将布局的内容延伸到状态栏\nstyle\n```js \n <item name=\"android:windowTranslucentStatus\" tools:targetApi=\"19\">true</item>\n```\nToolbar增加一个paddingTop:\n```js\n<android.support.v7.widget.Toolbar \n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@mipmap/bg_title\"\n    android:minHeight=\"?actionBarSize\"\n    android:paddingTop=\"@dimen/status_bar_height\"/>\n```\nvalues/dimens.xml\n```js\n<dimen name=\"status_bar_height\">0dp</dimen>\n```\nvalues-v19/dimens.xml\n```js\n<dimen name=\"status_bar_height\">25dp</dimen>\n```\nvalues-v23/dimens.xml\n```js\n<dimen name=\"status_bar_height\">24dp</dimen>\n```\n可以通过以下方法取得StatusBarHeight：\n```java\npublic int getStatusBarHeight() {\n        int result = 0;\n        int resourceId = getResources().getIdentifier(\"status_bar_height\", \"dimen\", \"android\");\n        if (resourceId > 0) {\n            result = getResources().getDimensionPixelSize(resourceId);\n        }\n        return result;\n    }\n```\n`另外注意：`toolbar所在的父布局不能同时设置fitsSystemWindow=\"true\"，它会使得屏幕上的可布局空间位于状态栏下方与导航栏上方。\n\n因为这个带来了键盘挡住EditText的问题，解决方案：\n在EditText所在的父布局设置fitsSystemWindow=\"true\"即可。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Android ToolBar Widget Usage](http://blog.hwangjr.com/2015/07/10/Android-ToolBar-Widget-Usage/)\n[ANDROID – TOOLBAR STEP BY STEP](http://blog.mosil.biz/2014/10/android-toolbar/)\n\n","slug":"toolbar","published":1,"updated":"2016-04-26T03:30:41.255Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7c001nzspkxats5a23","thumbnailImageUrl":null},{"title":"生命之源-医生版","date":"2014-04-15T14:39:50.000Z","_content":"# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan4.jpg)\n\n# 应用介绍 \n“生命之源”依托生命全息医学理念为您提供私人定制的全息健养咨询，根据对您身心状况的全息评估，提供包含“饮食－行为－心理”的综合指导，及御正调理的“全息健养”服务，守护您的身心健康，为您的生命保驾护航。 \n生命之源APP将为您带来一对一健养咨询服务，以及会员的医师专业答复。同时您将通过讲堂的文章和电台，更深刻的了解全息医学理念和健养案例，加入生命之源的线下沙龙活动，获得您身心健康的康复。生命之源——您身心健康的守护神！\n\n# 下载地址\n[小米应用商店](http://app.mi.com/detail/57071)\n\n`温馨提示：`由于公司倒闭，此APP已废。","source":"_posts/shengmingzhiyuan.md","raw":"title: 生命之源-医生版\ndate: 2014-04-15 22:39:50\ntags: shengmingzhiyuan\ncategory: App\n---\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/shengmingzhiyuan4.jpg)\n\n# 应用介绍 \n“生命之源”依托生命全息医学理念为您提供私人定制的全息健养咨询，根据对您身心状况的全息评估，提供包含“饮食－行为－心理”的综合指导，及御正调理的“全息健养”服务，守护您的身心健康，为您的生命保驾护航。 \n生命之源APP将为您带来一对一健养咨询服务，以及会员的医师专业答复。同时您将通过讲堂的文章和电台，更深刻的了解全息医学理念和健养案例，加入生命之源的线下沙龙活动，获得您身心健康的康复。生命之源——您身心健康的守护神！\n\n# 下载地址\n[小米应用商店](http://app.mi.com/detail/57071)\n\n`温馨提示：`由于公司倒闭，此APP已废。","slug":"shengmingzhiyuan","published":1,"updated":"2016-03-17T00:44:06.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7f001rzspkbzla9cr1","thumbnailImageUrl":null},{"title":"Android之美化控件Shape","date":"2013-07-08T16:00:00.000Z","_content":"\n除了使用drawable这样的图片外，随着图片资源增多，程序也越来越大，今天我们自定义图形shape的方法。\n\n```java\n\t<shape>\n            <!-- 实心 -->\n            <solid android:color=\"#ff9d77\"/>\n            <!-- 渐变 -->\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <!-- 描边 -->\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <!-- 圆角 -->\n            <corners\n                android:radius=\"2dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n```\n<!--more-->\n对于上面， shape的定义\n* shape类型\nandroid:shape=[\"rectangle\" | \"oval\" | \"line\" | \"ring\"]  \nshape的形状，默认为矩形，可以设置为矩形（rectangle）、椭圆形(oval)、线性形状(line)、环形(ring)  \n下面的属性只有在android:shape=\"ring时可用：  \nandroid:innerRadius  尺寸，内环的半径。  \nandroid:innerRadiusRatio 浮点型，以环的宽度比率来表示内环的半径，  \n\n* solid\n实心，填充的意思\nandroid:color指定填充的颜色\n\n* gradient\n渐变\nandroid:startColor 开始的颜色\nandroid:endColor 渐变结束的颜色\nandroid:angle 渐变角度，必须为45的整数倍，当angle=0时，渐变色是从左向右。 然后逆时针方向转，当angle=90时为从下往上\nandroid:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"\n\n* stroke\n描边缘\nandroid:width=\"2dp\" 描边的宽度\nandroid:color 描边的颜色\n我们还可以把描边弄成虚线的形式，设置方式为：android:dashWidth=\"5dp\" android:dashGap=\"3dp\"\n其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离。\n\n* corners\n拐角，radius属性为半径，android:radius为角的弧度，值越大角越圆。\n\n* padding：间隔\n这个就不用多说了，XML布局文件中经常用到。\n\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item android:state_focused=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ffc2b7\"\n                android:endColor=\"#ffc2b7\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item>       \n        <shape>\n            <gradient\n                android:startColor=\"#ff9d77\"\n                android:endColor=\"#ff9d77\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#fad3cf\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n</selector>\n```\n以上几个item的区别主要是体现在state_pressed按下或state_focused获得焦点时，当当来判断显示什么类型，而没有state_xxx属性的item可以看作是常规状态下。\n\n常规状态效果图：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-1.png)\nstate_pressed按下或state_focused获得焦点：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-2.png)\n","source":"_posts/shape.md","raw":"title: Android之美化控件Shape\ncategories: [Android]\ntags: Shape\ndate: 2013-07-09\n---\n\n除了使用drawable这样的图片外，随着图片资源增多，程序也越来越大，今天我们自定义图形shape的方法。\n\n```java\n\t<shape>\n            <!-- 实心 -->\n            <solid android:color=\"#ff9d77\"/>\n            <!-- 渐变 -->\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <!-- 描边 -->\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <!-- 圆角 -->\n            <corners\n                android:radius=\"2dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n```\n<!--more-->\n对于上面， shape的定义\n* shape类型\nandroid:shape=[\"rectangle\" | \"oval\" | \"line\" | \"ring\"]  \nshape的形状，默认为矩形，可以设置为矩形（rectangle）、椭圆形(oval)、线性形状(line)、环形(ring)  \n下面的属性只有在android:shape=\"ring时可用：  \nandroid:innerRadius  尺寸，内环的半径。  \nandroid:innerRadiusRatio 浮点型，以环的宽度比率来表示内环的半径，  \n\n* solid\n实心，填充的意思\nandroid:color指定填充的颜色\n\n* gradient\n渐变\nandroid:startColor 开始的颜色\nandroid:endColor 渐变结束的颜色\nandroid:angle 渐变角度，必须为45的整数倍，当angle=0时，渐变色是从左向右。 然后逆时针方向转，当angle=90时为从下往上\nandroid:type=\"linear\"，即线性渐变，可以指定渐变为径向渐变，android:type=\"radial\"，径向渐变需要指定半径android:gradientRadius=\"50\"\n\n* stroke\n描边缘\nandroid:width=\"2dp\" 描边的宽度\nandroid:color 描边的颜色\n我们还可以把描边弄成虚线的形式，设置方式为：android:dashWidth=\"5dp\" android:dashGap=\"3dp\"\n其中android:dashWidth表示'-'这样一个横线的宽度，android:dashGap表示之间隔开的距离。\n\n* corners\n拐角，radius属性为半径，android:radius为角的弧度，值越大角越圆。\n\n* padding：间隔\n这个就不用多说了，XML布局文件中经常用到。\n\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ff8c00\"\n                android:endColor=\"#FFFFFF\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item android:state_focused=\"true\" >\n        <shape>\n            <gradient\n                android:startColor=\"#ffc2b7\"\n                android:endColor=\"#ffc2b7\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#dcdcdc\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n\n    <item>       \n        <shape>\n            <gradient\n                android:startColor=\"#ff9d77\"\n                android:endColor=\"#ff9d77\"\n                android:angle=\"270\" />\n            <stroke\n                android:width=\"2dp\"\n                android:color=\"#fad3cf\" />\n            <corners\n                android:radius=\"10dp\" />\n            <padding\n                android:left=\"10dp\"\n                android:top=\"10dp\"\n                android:right=\"10dp\"\n                android:bottom=\"10dp\" />\n        </shape>\n    </item>\n</selector>\n```\n以上几个item的区别主要是体现在state_pressed按下或state_focused获得焦点时，当当来判断显示什么类型，而没有state_xxx属性的item可以看作是常规状态下。\n\n常规状态效果图：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-1.png)\nstate_pressed按下或state_focused获得焦点：\n![常规状态效果图](http://wuxiaolong.qiniudn.com/2013-07-09-shape-2.png)\n","slug":"shape","published":1,"updated":"2016-03-17T00:44:06.364Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7i001vzspklwj9zkoi","thumbnailImageUrl":null},{"title":"Android之Service","date":"2015-11-02T07:23:04.000Z","_content":"## 使用清单文件声明服务\n```js\n<manifest ... >\n  ...\n  <application ... >\n        <service android:name=\".HelloService\" />\n      ...\n  </application>\n</manifest>\n```\n<!--more-->\n## 管理服务生命周期\n![](http://7q5c2h.com1.z0.glb.clouddn.com/service_lifecycle.png)\n* 启动的服务\nstartService()->onCreate()->onStartCommand()->running->stopService()/stopSelf()->onDestroy()->stopped 其中，服务未运行时会调用一次onCreate()，运行时不调用。\n* 绑定的服务\nbindService()->onCreate()->onBind()->running->onUnbind()->onDestroy()->stopped\n\n## 代码示例\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <Button\n        android:id=\"@+id/start_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start Service\" />\n\n    <Button\n        android:id=\"@+id/stop_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n    <Button\n        android:id=\"@+id/bind_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n    <Button\n        android:id=\"@+id/unbind_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n\n</LinearLayout>  \n```\njava\n```java\npublic class HelloServiceActivity extends AppCompatActivity {\n    HelloService.HelloBinder mBinder;\n    //Service和Activity通信\n    private ServiceConnection serviceConnection = new ServiceConnection() {\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n        }\n\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mBinder = (HelloService.HelloBinder) service;\n            mBinder.startDownload();\n        }\n    };\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_hello_service);\n        findViewById(R.id.start_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                startService(intent);\n            }\n        });\n        findViewById(R.id.stop_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                stopService(intent);\n            }\n        });\n        findViewById(R.id.bind_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //调用者与服务绑定在了一起，调用者一旦退出，服务也就终止\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                bindService(intent, serviceConnection, BIND_AUTO_CREATE);\n            }\n        });\n        findViewById(R.id.unbind_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //让Service和Activity解除关联\n                unbindService(serviceConnection);\n            }\n        });\n\n    }\n\n}\n```\nHelloService\n```java\npublic class HelloService extends Service {\n    int mStartMode;       // indicates how to behave if the service is killed\n    //    IBinder mBinder;      // interface for clients that bind\n    boolean mAllowRebind; // indicates whether onRebind should be used\n    private HelloBinder mBinder = new HelloBinder();\n\n    @Override\n    public void onCreate() {\n        // The service is being created\n        Log.d(\"wxl\", \"HelloService onCreate\");\n    }\n\n    @Override\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        // The service is starting, due to a call to startService()\n        Log.d(\"wxl\", \"HelloService onStartCommand\");\n        flags = START_STICKY;\n        return super.onStartCommand(intent, flags, startId);\n    }\n\n    @Override\n    public IBinder onBind(Intent intent) {\n        // A client is binding to the service with bindService()\n        Log.d(\"wxl\", \"HelloService onBind\");\n        return mBinder;\n    }\n\n    @Override\n    public boolean onUnbind(Intent intent) {\n        // All clients have unbound with unbindService()\n        Log.d(\"wxl\", \"HelloService onUnbind\");\n        return mAllowRebind;\n    }\n\n    @Override\n    public void onRebind(Intent intent) {\n        // A client is binding to the service with bindService(),\n        // after onUnbind() has already been called\n        Log.d(\"wxl\", \"HelloService onRebind\");\n    }\n\n    public class HelloBinder extends Binder {\n\n        public void startDownload() {\n            Log.d(\"wxl\", \"HelloService startDownload() executed\");\n            // 执行具体的下载任务\n        }\n\n    }\n\n    @Override\n    public void onDestroy() {\n        // The service is no longer used and is being destroyed\n        Log.d(\"wxl\", \"HelloService onDestroy\");\n        Intent intent = new Intent(this, HelloService.class);\n        startService(intent);\n    }\n}\n```\n## Service KILL问题\n* settings 中stop service\nonDestroy方法中，调用startService进行Service的重启。\n* settings中force stop 应用\n未解决\n* 借助第三方应用kill掉running task\n未解决\n\n## 附录\n[官方Service API指南](http://developer.android.com/intl/zh-cn/guide/components/services.html)\n[Android Service完全解析，关于服务你所需知道的一切(上)](http://blog.csdn.net/guolin_blog/article/details/11952435)\n[Service服务详解以及如何使service服务不被杀死](http://www.cnblogs.com/rossoneri/p/4530216.html)","source":"_posts/service.md","raw":"title: Android之Service\ndate: 2015-11-02 15:23:04\ntags: Service\ncategory: Android\n---\n## 使用清单文件声明服务\n```js\n<manifest ... >\n  ...\n  <application ... >\n        <service android:name=\".HelloService\" />\n      ...\n  </application>\n</manifest>\n```\n<!--more-->\n## 管理服务生命周期\n![](http://7q5c2h.com1.z0.glb.clouddn.com/service_lifecycle.png)\n* 启动的服务\nstartService()->onCreate()->onStartCommand()->running->stopService()/stopSelf()->onDestroy()->stopped 其中，服务未运行时会调用一次onCreate()，运行时不调用。\n* 绑定的服务\nbindService()->onCreate()->onBind()->running->onUnbind()->onDestroy()->stopped\n\n## 代码示例\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <Button\n        android:id=\"@+id/start_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start Service\" />\n\n    <Button\n        android:id=\"@+id/stop_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n    <Button\n        android:id=\"@+id/bind_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n    <Button\n        android:id=\"@+id/unbind_service\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:text=\"Stop Service\" />\n\n</LinearLayout>  \n```\njava\n```java\npublic class HelloServiceActivity extends AppCompatActivity {\n    HelloService.HelloBinder mBinder;\n    //Service和Activity通信\n    private ServiceConnection serviceConnection = new ServiceConnection() {\n\n        @Override\n        public void onServiceDisconnected(ComponentName name) {\n        }\n\n        @Override\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            mBinder = (HelloService.HelloBinder) service;\n            mBinder.startDownload();\n        }\n    };\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_hello_service);\n        findViewById(R.id.start_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                startService(intent);\n            }\n        });\n        findViewById(R.id.stop_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                stopService(intent);\n            }\n        });\n        findViewById(R.id.bind_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //调用者与服务绑定在了一起，调用者一旦退出，服务也就终止\n                Intent intent = new Intent(getApplicationContext(), HelloService.class);\n                bindService(intent, serviceConnection, BIND_AUTO_CREATE);\n            }\n        });\n        findViewById(R.id.unbind_service).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //让Service和Activity解除关联\n                unbindService(serviceConnection);\n            }\n        });\n\n    }\n\n}\n```\nHelloService\n```java\npublic class HelloService extends Service {\n    int mStartMode;       // indicates how to behave if the service is killed\n    //    IBinder mBinder;      // interface for clients that bind\n    boolean mAllowRebind; // indicates whether onRebind should be used\n    private HelloBinder mBinder = new HelloBinder();\n\n    @Override\n    public void onCreate() {\n        // The service is being created\n        Log.d(\"wxl\", \"HelloService onCreate\");\n    }\n\n    @Override\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        // The service is starting, due to a call to startService()\n        Log.d(\"wxl\", \"HelloService onStartCommand\");\n        flags = START_STICKY;\n        return super.onStartCommand(intent, flags, startId);\n    }\n\n    @Override\n    public IBinder onBind(Intent intent) {\n        // A client is binding to the service with bindService()\n        Log.d(\"wxl\", \"HelloService onBind\");\n        return mBinder;\n    }\n\n    @Override\n    public boolean onUnbind(Intent intent) {\n        // All clients have unbound with unbindService()\n        Log.d(\"wxl\", \"HelloService onUnbind\");\n        return mAllowRebind;\n    }\n\n    @Override\n    public void onRebind(Intent intent) {\n        // A client is binding to the service with bindService(),\n        // after onUnbind() has already been called\n        Log.d(\"wxl\", \"HelloService onRebind\");\n    }\n\n    public class HelloBinder extends Binder {\n\n        public void startDownload() {\n            Log.d(\"wxl\", \"HelloService startDownload() executed\");\n            // 执行具体的下载任务\n        }\n\n    }\n\n    @Override\n    public void onDestroy() {\n        // The service is no longer used and is being destroyed\n        Log.d(\"wxl\", \"HelloService onDestroy\");\n        Intent intent = new Intent(this, HelloService.class);\n        startService(intent);\n    }\n}\n```\n## Service KILL问题\n* settings 中stop service\nonDestroy方法中，调用startService进行Service的重启。\n* settings中force stop 应用\n未解决\n* 借助第三方应用kill掉running task\n未解决\n\n## 附录\n[官方Service API指南](http://developer.android.com/intl/zh-cn/guide/components/services.html)\n[Android Service完全解析，关于服务你所需知道的一切(上)](http://blog.csdn.net/guolin_blog/article/details/11952435)\n[Service服务详解以及如何使service服务不被杀死](http://www.cnblogs.com/rossoneri/p/4530216.html)","slug":"service","published":1,"updated":"2016-03-17T00:44:06.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7k001zzspkafvbxq4v","thumbnailImageUrl":null},{"title":"解决Android Studio和Android SDK Manager无法在线更新","date":"2015-01-20T16:00:00.000Z","_content":"##Android Studio\n\n升级时提示 Connection failed. Please check your network connection and try again\n\n修改安装目录下bin\\studio.exe.vmoptions文件,如E:\\Android\\android-studio\\bin\\studio.exe.vmoptions\n\n<!-- more -->\n\n添加内容:\n\n```js\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml\n-Didea.patches.url=http://dl.google.com/android/studio/patches/\n```\n\n重新启动..就可以在线更新了.\n\n备注：如果是64位系统,那就应该修改bin\\studio64.exe.vmoptions文件,大家别改错了,不然没用!\n\n##Android SDK Manager\n\n解决Android SDK Manager列表错误,或者无法更新下载的问题:\n\nhosts文件添加内容:\n\nC:\\Windows\\System32\\drivers\\etc\n\nhosts文件windows系统目录中的\\system32\\drivers\\etc下面，win98在windows系统目录中下面。\n\n```js\n203.208.46.146  www.google.com\n74.125.113.121  developer.android.com\n203.208.46.146 \tdl.google.com\n203.208.46.146 \tdl-ssl.google.com\n\n或者以下\n\n#更新的内容从以下地址下载\n74.125.113.121  developer.android.com\n203.208.46.200 dl.google.com\n203.208.46.200 dl-ssl.google.com\n```\n","source":"_posts/sdk-update.md","raw":"title: 解决Android Studio和Android SDK Manager无法在线更新\ndate: 2015-01-21\ncategories: [Android]\ntags: [Android,Android Studio]\n---\n##Android Studio\n\n升级时提示 Connection failed. Please check your network connection and try again\n\n修改安装目录下bin\\studio.exe.vmoptions文件,如E:\\Android\\android-studio\\bin\\studio.exe.vmoptions\n\n<!-- more -->\n\n添加内容:\n\n```js\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml\n-Didea.patches.url=http://dl.google.com/android/studio/patches/\n```\n\n重新启动..就可以在线更新了.\n\n备注：如果是64位系统,那就应该修改bin\\studio64.exe.vmoptions文件,大家别改错了,不然没用!\n\n##Android SDK Manager\n\n解决Android SDK Manager列表错误,或者无法更新下载的问题:\n\nhosts文件添加内容:\n\nC:\\Windows\\System32\\drivers\\etc\n\nhosts文件windows系统目录中的\\system32\\drivers\\etc下面，win98在windows系统目录中下面。\n\n```js\n203.208.46.146  www.google.com\n74.125.113.121  developer.android.com\n203.208.46.146 \tdl.google.com\n203.208.46.146 \tdl-ssl.google.com\n\n或者以下\n\n#更新的内容从以下地址下载\n74.125.113.121  developer.android.com\n203.208.46.200 dl.google.com\n203.208.46.200 dl-ssl.google.com\n```\n","slug":"sdk-update","published":1,"updated":"2016-03-17T00:44:06.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7m0023zspkke4p6qie","thumbnailImageUrl":null},{"title":"Android屏幕适配不同的资源图片、布局","date":"2013-07-22T16:00:00.000Z","_content":"在Android 2.1版本之前，存放资源图片的文件夹名称为drawable，应用程序用到的所有的资源图片都放在其中，所以很难解决不同屏幕大小的图片适配问题。\n\n1、资源图片\n\n自android 2.1版本开始，存放资源图片的文件夹由原来的一个drawable文件夹变成了drawable-hdpi、drawable-mdpi和drawable-ldpi，这是为了支持不同终端设备的不同分辨率。\n\ndrawable-hdpi、drawable-mdpi、drawable-ldpi的区别：\n\n（1）drawable-hdpi里面存放高分辨率的图片，如WVGA(480x800)，FWVGA(480x854)\n\n（2）drawable-mdpi里面存放中等分辨率的图片，如(320x480)\n\n（3）drawable-ldpi里面存放低分辨率的图片，如QVGA(240x320)\n\n<!-- more -->\n\n系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的图片，同一资源的不同分辨率的图片应该命以相同的名称存放在不同的资源图片文件夹中。\n\n2、布局的适配：\n\n在第1点中我们已经解决了资源图片的适配问题，但是图片的大小不同势必会造成布局的差异，如果使用一个统一的布局文件，\n可能会造成资源图片无法完整显示在屏幕内，所以对于这种问题，解决方法是建立不同的layout文件夹，对于不同屏幕的分辨率，书写其专用的.xml文件。\n\n多个layout文件夹在命名上有相应规则，以分辨率480x854为例，需要建立480x854像素的layout文件夹，命名：layout-854x480，\n\n有两点需要`注意`：①大数（854）必须在前，否则会报错；②两个数字之间的符号是小写英文字母“x”，不是乘号。系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的布局文件。如下：\n![布局文件](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-1.jpg)\n\n如果你建立的layout文件夹的分辨率是你的eclipse加载的android工具所支持的分辨率，那么在可视化的布局界面中会自动给出屏幕分辨率、屏幕尺寸（红色箭头处）等参数，值得注意的是，如果红色箭头处是“Custom…”，那么你就要人为对其进行修改，选择合适的屏幕尺寸。\n![选择合适的屏幕尺寸](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-2.jpg)\n\n3、设置屏幕的横竖屏显示：\n如果不做特殊说明，开发的应用是横竖屏重力敏感的，如果禁止横竖屏切换，需要在AndroidManifest.xml文件中做相应的修改：\n\n```java\n\t<activity android:name=\".MenuView\"\n\tandroid:label=\"@string/app_name\"\n\tandroid:screenOrientation=\"portrait\">\n```\n在activity的属性中添“android:screenOrientation=\"portrait\"”，portrait表示竖屏，横屏则用landscape表示。\n\n4、dip和px的问题：\n\n在网上找了好多关于“dip和px的区别”的资料，但是解释的都不是很清楚。\n我很肤浅的理解：dip是相对的，px是绝对的，所以dip能够有效解决不同型号手机不同分辨率的布局适配问题。\n\n但是由于在第2点中已经用不同layout文件夹解决了布局适配的问题，所以在其中使用dip就是没有意义的，甚至更加麻烦。\n既然已经分了不同的布局文件，所以在各个布局文件中直接使用px单位就可以了。\n","source":"_posts/screen-adaptation.md","raw":"title: Android屏幕适配不同的资源图片、布局\ndate: 2013-07-23 \ncategories: [Android]\ntags: [Android]\n---\n在Android 2.1版本之前，存放资源图片的文件夹名称为drawable，应用程序用到的所有的资源图片都放在其中，所以很难解决不同屏幕大小的图片适配问题。\n\n1、资源图片\n\n自android 2.1版本开始，存放资源图片的文件夹由原来的一个drawable文件夹变成了drawable-hdpi、drawable-mdpi和drawable-ldpi，这是为了支持不同终端设备的不同分辨率。\n\ndrawable-hdpi、drawable-mdpi、drawable-ldpi的区别：\n\n（1）drawable-hdpi里面存放高分辨率的图片，如WVGA(480x800)，FWVGA(480x854)\n\n（2）drawable-mdpi里面存放中等分辨率的图片，如(320x480)\n\n（3）drawable-ldpi里面存放低分辨率的图片，如QVGA(240x320)\n\n<!-- more -->\n\n系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的图片，同一资源的不同分辨率的图片应该命以相同的名称存放在不同的资源图片文件夹中。\n\n2、布局的适配：\n\n在第1点中我们已经解决了资源图片的适配问题，但是图片的大小不同势必会造成布局的差异，如果使用一个统一的布局文件，\n可能会造成资源图片无法完整显示在屏幕内，所以对于这种问题，解决方法是建立不同的layout文件夹，对于不同屏幕的分辨率，书写其专用的.xml文件。\n\n多个layout文件夹在命名上有相应规则，以分辨率480x854为例，需要建立480x854像素的layout文件夹，命名：layout-854x480，\n\n有两点需要`注意`：①大数（854）必须在前，否则会报错；②两个数字之间的符号是小写英文字母“x”，不是乘号。系统会根据机器的分辨率来分别到这几个文件夹里面去找对应的布局文件。如下：\n![布局文件](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-1.jpg)\n\n如果你建立的layout文件夹的分辨率是你的eclipse加载的android工具所支持的分辨率，那么在可视化的布局界面中会自动给出屏幕分辨率、屏幕尺寸（红色箭头处）等参数，值得注意的是，如果红色箭头处是“Custom…”，那么你就要人为对其进行修改，选择合适的屏幕尺寸。\n![选择合适的屏幕尺寸](http://wuxiaolong.qiniudn.com/2013-07-23-screen-adaptation-2.jpg)\n\n3、设置屏幕的横竖屏显示：\n如果不做特殊说明，开发的应用是横竖屏重力敏感的，如果禁止横竖屏切换，需要在AndroidManifest.xml文件中做相应的修改：\n\n```java\n\t<activity android:name=\".MenuView\"\n\tandroid:label=\"@string/app_name\"\n\tandroid:screenOrientation=\"portrait\">\n```\n在activity的属性中添“android:screenOrientation=\"portrait\"”，portrait表示竖屏，横屏则用landscape表示。\n\n4、dip和px的问题：\n\n在网上找了好多关于“dip和px的区别”的资料，但是解释的都不是很清楚。\n我很肤浅的理解：dip是相对的，px是绝对的，所以dip能够有效解决不同型号手机不同分辨率的布局适配问题。\n\n但是由于在第2点中已经用不同layout文件夹解决了布局适配的问题，所以在其中使用dip就是没有意义的，甚至更加麻烦。\n既然已经分了不同的布局文件，所以在各个布局文件中直接使用px单位就可以了。\n","slug":"screen-adaptation","published":1,"updated":"2016-03-17T00:44:06.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7o0028zspkgce4n44s","thumbnailImageUrl":null},{"title":"RxJava","date":"2016-01-18T07:50:14.000Z","_content":"# RxJava是什么\na library for composing asynchronous and event-based programs using observable sequences for the Java VM（一个对于构成使用的Java虚拟机观察序列异步和基于事件的程序库）。\ngithub：[https://github.com/ReactiveX/RxJava](https://github.com/ReactiveX/RxJava)\n<!--more-->\n\n## 观察者模式\nRxJava的世界里，我们有四种角色：\nObservable(被观察者)、Observer(观察者)\nSubscriber(订阅者)、Subject\nObservable和Subject是两个“生产”实体，Observer和Subscriber是两个“消费”实体。Observable 和 Observer 通过 subscribe() 方法实现订阅关系，从而 Observable 可以在需要的时候发出事件来通知 Observer。\n\n## 回调方法\n\nSubscribe方法用于将观察者连接到Observable，你的观察者需要实现以下方法：\n* onNext(T item)\nObservable调用这个方法发射数据，方法的参数就是Observable发射的数据，这个方法可能会被调用多次，取决于你的实现。\n\n* onError(Exception ex)\n当Observable遇到错误或者无法返回期望的数据时会调用这个方法，这个调用会终止Observable，后续不会再调用onNext和onCompleted，onError方法的参数是抛出的异常。\n\n* onComplete\n正常终止，如果没有遇到错误，Observable在最后一次调用onNext之后调用此方法。\n\n# 添加依赖\n```\ncompile 'io.reactivex:rxandroid:1.1.0'\ncompile 'io.reactivex:rxjava:1.1.0'\n```\n\n# 创建操作\n## create\n```java\n Observable.create(new Observable.OnSubscribe<String>() {\n            @Override\n            public void call(Subscriber<? super String> subscriber) {\n                subscriber.onNext(\"Hello\");\n                subscriber.onNext(\"RxJava\");\n                subscriber.onCompleted();\n            }\n        })\n        .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n\n除了 Observer 接口之外，RxJava 还内置了一个实现了 Observer 的抽象类：Subscriber。 Subscriber 对 Observer 接口进行了一些扩展，但他们的基本使用方式是完全一样的：\n```java\n .subscribe(new Subscriber() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(Object o) {\n                Log.i(\"wxl\", \"onNext=\" + o);\n            }\n        });\n```\n## from\n接受数组，返回一个按参数列表顺序发射这些数据的Observable。\n```java\n        String[] froms={\"Hello\",\"RxJava\"};\n        Observable.from(froms)\n        .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n\n## just\njust函数，它接受一至九个参数，返回一个按参数列表顺序发射这些数据的Observable。\n```java\nObservable.just(\"Hello\",\"RxJava\")\n          .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n以上打印结果都是：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=Hello\ncom.wuxiaolong.apksample I/wxl: onNext=RxJava\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n\n# 变换操作\n## Map\n操作符对原始Observable发射的每一项数据应用一个你选择的函数，然后返回一个发射这些结果。\n如下，将原始Observable数据转化成大写，再发射：\n```java\n Observable.just(\"Hello\", \"RxJava\")\n                .map(new Func1<String, String>() {\n                    @Override\n                    public String call(String s) {\n                        return s.toUpperCase();\n                    }\n                })\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\n```\n打印结果：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=HELLO\ncom.wuxiaolong.apksample I/wxl: onNext=RXJAVA\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n\n## flatMap\nflatMap()接收一个Observable的输出作为输入，然后作为一个新的Observable再发射。理解flatMap的关键点在于，flatMap输出的新的Observable正是我们在Subscriber想要接收的，比如这里输出单个的字符串。\n```java\nList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"RxJava\");\nObservable.from(list)\n                .flatMap(new Func1<String, Observable<String>>() {\n                    @Override\n                    public Observable<String> call(String s) {\n                        return Observable.just(s.toUpperCase());\n                    }\n                })\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\n```\n打印结果：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=HELLO\ncom.wuxiaolong.apksample I/wxl: onNext=RXJAVA\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n# Scan\n一个累加器函数，操作符对原始Observable发射的第一项数据应用一个函数，然后将那个函数的结果作为自己的第一项数据发射。\n```java\n Observable.just(1, 2, 3, 4, 5)\n         .scan(new Func2<Integer, Integer, Integer>() {\n             @Override\n             public Integer call(Integer integer, Integer integer2) {\n                 return integer + integer2;\n             }\n         })\n         .subscribe(new Observer<Integer>() {\n             @Override\n             public void onCompleted() {\n                 Log.i(\"wxl\", \"onCompleted\");\n             }\n             @Override\n             public void onError(Throwable e) {\n             }\n             @Override\n             public void onNext(Integer integer) {\n                 Log.i(\"wxl\", \"onNext=\" + integer);\n             }\n         });\n```\n第一次发射得到1，作为结果与2相加；发射得到3，作为结果与3相加，以此类推，打印结果：\n```\n I/wxl: onNext=1\n I/wxl: onNext=3\n I/wxl: onNext=6\n I/wxl: onNext=10\n I/wxl: onNext=15\n I/wxl: onCompleted\n```\n\n## GroupBy\n按照指定的规则来分组元素。\n\n# 过滤操作\n## Filter\n观测序列中只有通过的数据才会被发射。\n```java\nObservable.just(4, 2, 1, 7, 5)\n        .filter(new Func1<Integer, Boolean>() {\n            @Override\n            public Boolean call(Integer integer) {\n                return integer > 3;\n            }\n        })\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n过滤小于3的，打印结果：\n```\nI/wxl: onNext=4\nI/wxl: onNext=7\nI/wxl: onNext=5\nI/wxl: onCompleted\n```\n## take()、takeLast()\n```java\n .take(3)\n```\n只发射前N个元素\n```java\n .takeLast(3)\n```\n只发射最后N个元素\n\n## First、last\n只发射第一个元素或者最后一个元素\n\n## Skip、SkipLast\n```java \n.skip(2)\n```\n来创建一个不发射前两个元素而是发射它后面的那些数据的序列\n\n## distinct\n仅处理一次，可以处理去除重复的数据\n\n## ElementAt\n仅从一个序列中发射第n个元素然后就完成了，这里是从0开始计的。\n```java \nObservable.just(1, 2, 3, 4, 5, 6)\n                .elementAt(3)\n                .subscribe(……);\n```\n打印结果：4\n## Sample \n定期发射Observable最近发射的数据项\n```java\n .sample(1000, TimeUnit.MILLISECONDS)\n```\n# 合并操作\n## Merge\n合并多个Observables的发射物，多输入，单输出\n```java\nObservable<Integer> observable1 = Observable.just(1, 3, 5);\nObservable<Integer> observable2 = Observable.just(2, 4, 6);\nObservable.merge(observable1,observable2)\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n打印结果：\n```\n I/wxl: onNext=1\n I/wxl: onNext=3\n I/wxl: onNext=5\n I/wxl: onNext=2\n I/wxl: onNext=4\n I/wxl: onNext=6\n I/wxl: onCompleted\n```\n## zip\n合并两个或者多个Observables发射出的数据项，根据指定的函数Func2变换它们，并发射一个新值。\n```java\nObservable<Integer> observable1 = Observable.just(1, 3, 5);\nObservable<Integer> observable2 = Observable.just(2, 4, 6, 9);\nObservable.zip(observable1, observable2, new Func2<Integer, Integer, Integer>\n    @Override\n    public Integer call(Integer integer, Integer integer2) {\n        return integer + integer2;\n    }\n})\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n打印结果：\n```\nI/wxl: onNext=3\nI/wxl: onNext=7\nI/wxl: onNext=11\nI/wxl: onCompleted\n```\n## join\n\n## startWith\n```java\n .startWith(1)\n```\n在数据序列的开头插入一条指定的项1\n# Schedulers\n调度器，解决Android主线程问题，有5种：\n* Schedulers.io()\n这个调度器时用于I/O操作（读写文件、读写数据库、网络信息交互等）\n\n* Schedulers.computation()\n这个是计算工作默认的调度器，它与I/O操作无关。它也是许多RxJava方法的默认调度器：buffer()，debounce()，delay()，interval()，sample()，skip()\n\n* Schedulers.immediate()\n这个调度器允许你立即在当前线程执行你指定的工作。它是timeout()，timeInterval()，以及timestamp()方法默认的调度器。\n\n* Schedulers.newThread()\n它为指定任务启动一个新的线程。\n\n* Schedulers.trampoline()\n当我们想在当前线程执行一个任务时，并不是立即，我们可以用.trampoline()将它入队。这个调度器将会处理它的队列并且按序运行队列中每一个任务。它是repeat()和retry()方法默认的调度器。\n## SubscribeOn、ObserveOn\nsubscribeOn()：事件产生的线程\nobserveOn()：事件消费的线程，AndroidSchedulers.mainThread()，它指定的操作将在 Android 主线程运行。\n```java\n.subscribeOn(Schedulers.io()) // 指定 subscribe() 发生在 IO 线程\n.observeOn(AndroidSchedulers.mainThread()) // 指定 Subscriber 的回调发生在主线程\n```\n\n# 完整示例\n```\n Subscription subscription = Observable.just(\"Hello\", \"RxJava\", \"WuXiaolong\")\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\naddSubscription(subscription);\n```\naddSubscription方法可以放到父类：\n```\n private CompositeSubscription mCompositeSubscription;\n\n    public void addSubscription(Subscription subscription) {\n        if (this.mCompositeSubscription == null) {\n            this.mCompositeSubscription = new CompositeSubscription();\n        }\n\n        this.mCompositeSubscription.add(subscription);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if (this.mCompositeSubscription != null) {\n            this.mCompositeSubscription.unsubscribe();\n        }\n    }\n```\n\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[RxJava Essentials CN](http://rxjava.yuxingxin.com/)\n[ReactiveX文档中文翻译](https://mcxiaoke.gitbooks.io/rxdocs/content/)\n[给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)\n\n","source":"_posts/rxjava.md","raw":"title: RxJava\ndate: 2016-01-18 15:50:14\ntags: RxJava\ncategory: RxJava\n---\n# RxJava是什么\na library for composing asynchronous and event-based programs using observable sequences for the Java VM（一个对于构成使用的Java虚拟机观察序列异步和基于事件的程序库）。\ngithub：[https://github.com/ReactiveX/RxJava](https://github.com/ReactiveX/RxJava)\n<!--more-->\n\n## 观察者模式\nRxJava的世界里，我们有四种角色：\nObservable(被观察者)、Observer(观察者)\nSubscriber(订阅者)、Subject\nObservable和Subject是两个“生产”实体，Observer和Subscriber是两个“消费”实体。Observable 和 Observer 通过 subscribe() 方法实现订阅关系，从而 Observable 可以在需要的时候发出事件来通知 Observer。\n\n## 回调方法\n\nSubscribe方法用于将观察者连接到Observable，你的观察者需要实现以下方法：\n* onNext(T item)\nObservable调用这个方法发射数据，方法的参数就是Observable发射的数据，这个方法可能会被调用多次，取决于你的实现。\n\n* onError(Exception ex)\n当Observable遇到错误或者无法返回期望的数据时会调用这个方法，这个调用会终止Observable，后续不会再调用onNext和onCompleted，onError方法的参数是抛出的异常。\n\n* onComplete\n正常终止，如果没有遇到错误，Observable在最后一次调用onNext之后调用此方法。\n\n# 添加依赖\n```\ncompile 'io.reactivex:rxandroid:1.1.0'\ncompile 'io.reactivex:rxjava:1.1.0'\n```\n\n# 创建操作\n## create\n```java\n Observable.create(new Observable.OnSubscribe<String>() {\n            @Override\n            public void call(Subscriber<? super String> subscriber) {\n                subscriber.onNext(\"Hello\");\n                subscriber.onNext(\"RxJava\");\n                subscriber.onCompleted();\n            }\n        })\n        .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n\n除了 Observer 接口之外，RxJava 还内置了一个实现了 Observer 的抽象类：Subscriber。 Subscriber 对 Observer 接口进行了一些扩展，但他们的基本使用方式是完全一样的：\n```java\n .subscribe(new Subscriber() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(Object o) {\n                Log.i(\"wxl\", \"onNext=\" + o);\n            }\n        });\n```\n## from\n接受数组，返回一个按参数列表顺序发射这些数据的Observable。\n```java\n        String[] froms={\"Hello\",\"RxJava\"};\n        Observable.from(froms)\n        .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n\n## just\njust函数，它接受一至九个参数，返回一个按参数列表顺序发射这些数据的Observable。\n```java\nObservable.just(\"Hello\",\"RxJava\")\n          .subscribe(new Observer<String>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n\n            @Override\n            public void onError(Throwable e) {\n\n            }\n\n            @Override\n            public void onNext(String s) {\n                Log.i(\"wxl\", \"onNext=\" + s);\n            }\n        });\n```\n以上打印结果都是：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=Hello\ncom.wuxiaolong.apksample I/wxl: onNext=RxJava\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n\n# 变换操作\n## Map\n操作符对原始Observable发射的每一项数据应用一个你选择的函数，然后返回一个发射这些结果。\n如下，将原始Observable数据转化成大写，再发射：\n```java\n Observable.just(\"Hello\", \"RxJava\")\n                .map(new Func1<String, String>() {\n                    @Override\n                    public String call(String s) {\n                        return s.toUpperCase();\n                    }\n                })\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\n```\n打印结果：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=HELLO\ncom.wuxiaolong.apksample I/wxl: onNext=RXJAVA\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n\n## flatMap\nflatMap()接收一个Observable的输出作为输入，然后作为一个新的Observable再发射。理解flatMap的关键点在于，flatMap输出的新的Observable正是我们在Subscriber想要接收的，比如这里输出单个的字符串。\n```java\nList<String> list = new ArrayList<>();\n        list.add(\"Hello\");\n        list.add(\"RxJava\");\nObservable.from(list)\n                .flatMap(new Func1<String, Observable<String>>() {\n                    @Override\n                    public Observable<String> call(String s) {\n                        return Observable.just(s.toUpperCase());\n                    }\n                })\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\n```\n打印结果：\n```\ncom.wuxiaolong.apksample I/wxl: onNext=HELLO\ncom.wuxiaolong.apksample I/wxl: onNext=RXJAVA\ncom.wuxiaolong.apksample I/wxl: onCompleted\n```\n# Scan\n一个累加器函数，操作符对原始Observable发射的第一项数据应用一个函数，然后将那个函数的结果作为自己的第一项数据发射。\n```java\n Observable.just(1, 2, 3, 4, 5)\n         .scan(new Func2<Integer, Integer, Integer>() {\n             @Override\n             public Integer call(Integer integer, Integer integer2) {\n                 return integer + integer2;\n             }\n         })\n         .subscribe(new Observer<Integer>() {\n             @Override\n             public void onCompleted() {\n                 Log.i(\"wxl\", \"onCompleted\");\n             }\n             @Override\n             public void onError(Throwable e) {\n             }\n             @Override\n             public void onNext(Integer integer) {\n                 Log.i(\"wxl\", \"onNext=\" + integer);\n             }\n         });\n```\n第一次发射得到1，作为结果与2相加；发射得到3，作为结果与3相加，以此类推，打印结果：\n```\n I/wxl: onNext=1\n I/wxl: onNext=3\n I/wxl: onNext=6\n I/wxl: onNext=10\n I/wxl: onNext=15\n I/wxl: onCompleted\n```\n\n## GroupBy\n按照指定的规则来分组元素。\n\n# 过滤操作\n## Filter\n观测序列中只有通过的数据才会被发射。\n```java\nObservable.just(4, 2, 1, 7, 5)\n        .filter(new Func1<Integer, Boolean>() {\n            @Override\n            public Boolean call(Integer integer) {\n                return integer > 3;\n            }\n        })\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n过滤小于3的，打印结果：\n```\nI/wxl: onNext=4\nI/wxl: onNext=7\nI/wxl: onNext=5\nI/wxl: onCompleted\n```\n## take()、takeLast()\n```java\n .take(3)\n```\n只发射前N个元素\n```java\n .takeLast(3)\n```\n只发射最后N个元素\n\n## First、last\n只发射第一个元素或者最后一个元素\n\n## Skip、SkipLast\n```java \n.skip(2)\n```\n来创建一个不发射前两个元素而是发射它后面的那些数据的序列\n\n## distinct\n仅处理一次，可以处理去除重复的数据\n\n## ElementAt\n仅从一个序列中发射第n个元素然后就完成了，这里是从0开始计的。\n```java \nObservable.just(1, 2, 3, 4, 5, 6)\n                .elementAt(3)\n                .subscribe(……);\n```\n打印结果：4\n## Sample \n定期发射Observable最近发射的数据项\n```java\n .sample(1000, TimeUnit.MILLISECONDS)\n```\n# 合并操作\n## Merge\n合并多个Observables的发射物，多输入，单输出\n```java\nObservable<Integer> observable1 = Observable.just(1, 3, 5);\nObservable<Integer> observable2 = Observable.just(2, 4, 6);\nObservable.merge(observable1,observable2)\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n打印结果：\n```\n I/wxl: onNext=1\n I/wxl: onNext=3\n I/wxl: onNext=5\n I/wxl: onNext=2\n I/wxl: onNext=4\n I/wxl: onNext=6\n I/wxl: onCompleted\n```\n## zip\n合并两个或者多个Observables发射出的数据项，根据指定的函数Func2变换它们，并发射一个新值。\n```java\nObservable<Integer> observable1 = Observable.just(1, 3, 5);\nObservable<Integer> observable2 = Observable.just(2, 4, 6, 9);\nObservable.zip(observable1, observable2, new Func2<Integer, Integer, Integer>\n    @Override\n    public Integer call(Integer integer, Integer integer2) {\n        return integer + integer2;\n    }\n})\n        .subscribe(new Observer<Integer>() {\n            @Override\n            public void onCompleted() {\n                Log.i(\"wxl\", \"onCompleted\");\n            }\n            @Override\n            public void onError(Throwable e) {\n            }\n            @Override\n            public void onNext(Integer integer) {\n                Log.i(\"wxl\", \"onNext=\" + integer);\n            }\n        });\n```\n打印结果：\n```\nI/wxl: onNext=3\nI/wxl: onNext=7\nI/wxl: onNext=11\nI/wxl: onCompleted\n```\n## join\n\n## startWith\n```java\n .startWith(1)\n```\n在数据序列的开头插入一条指定的项1\n# Schedulers\n调度器，解决Android主线程问题，有5种：\n* Schedulers.io()\n这个调度器时用于I/O操作（读写文件、读写数据库、网络信息交互等）\n\n* Schedulers.computation()\n这个是计算工作默认的调度器，它与I/O操作无关。它也是许多RxJava方法的默认调度器：buffer()，debounce()，delay()，interval()，sample()，skip()\n\n* Schedulers.immediate()\n这个调度器允许你立即在当前线程执行你指定的工作。它是timeout()，timeInterval()，以及timestamp()方法默认的调度器。\n\n* Schedulers.newThread()\n它为指定任务启动一个新的线程。\n\n* Schedulers.trampoline()\n当我们想在当前线程执行一个任务时，并不是立即，我们可以用.trampoline()将它入队。这个调度器将会处理它的队列并且按序运行队列中每一个任务。它是repeat()和retry()方法默认的调度器。\n## SubscribeOn、ObserveOn\nsubscribeOn()：事件产生的线程\nobserveOn()：事件消费的线程，AndroidSchedulers.mainThread()，它指定的操作将在 Android 主线程运行。\n```java\n.subscribeOn(Schedulers.io()) // 指定 subscribe() 发生在 IO 线程\n.observeOn(AndroidSchedulers.mainThread()) // 指定 Subscriber 的回调发生在主线程\n```\n\n# 完整示例\n```\n Subscription subscription = Observable.just(\"Hello\", \"RxJava\", \"WuXiaolong\")\n                .subscribe(new Observer<String>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        Log.i(\"wxl\", \"onNext=\" + s);\n                    }\n                });\naddSubscription(subscription);\n```\naddSubscription方法可以放到父类：\n```\n private CompositeSubscription mCompositeSubscription;\n\n    public void addSubscription(Subscription subscription) {\n        if (this.mCompositeSubscription == null) {\n            this.mCompositeSubscription = new CompositeSubscription();\n        }\n\n        this.mCompositeSubscription.add(subscription);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if (this.mCompositeSubscription != null) {\n            this.mCompositeSubscription.unsubscribe();\n        }\n    }\n```\n\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[RxJava Essentials CN](http://rxjava.yuxingxin.com/)\n[ReactiveX文档中文翻译](https://mcxiaoke.gitbooks.io/rxdocs/content/)\n[给 Android 开发者的 RxJava 详解](http://gank.io/post/560e15be2dca930e00da1083)\n\n","slug":"rxjava","published":1,"updated":"2016-03-23T03:20:54.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7s002bzspkbs2gqllk","thumbnailImageUrl":null},{"title":"RxBus","date":"2016-04-07T01:10:20.000Z","_content":"\n> 相信大多数开发者都使用过EventBus或者Otto(我还未实践过)，作为事件总线通信库，如果你的项目已经加入RxJava和EventBus(或Otto)，那不妨用RxBus代替EventBus或者Otto，省去更多库的依赖。\n\n# RxJava\n之前已经分享过[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)知识，可以点击[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)，这里不再细说。\n\n# RxBus \n假设你已经对[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)有所了解，再继续往下看。\n<!--more-->\n```\npublic class RxBus {\n    private static RxBus mRxBus = null;\n    /**\n     * PublishSubject只会把在订阅发生的时间点之后来自原始Observable的数据发射给观察者\n     */\n\n    private Subject<Object, Object> mRxBusObserverable = new SerializedSubject<>(PublishSubject.create());\n\n    public static synchronized RxBus getInstance() {\n        if (mRxBus == null) {\n            mRxBus = new RxBus();\n        }\n        return mRxBus;\n    }\n\n    public void post(Object o) {\n    if (hasObservers()) {\n        mRxBusObserverable.onNext(o);\n\t\t}\n    }\n\n    public Observable<Object> toObserverable() {\n        return mRxBusObserverable;\n    }\n\n    /**\n     * 判断是否有订阅者\n     */\n    public boolean hasObservers() {\n        return mRxBusObserverable.hasObservers();\n    }\n}\n```\n# 代码调用\n先模拟一个订阅者，用hasObservers判断是否有订阅者，然后再发送。\n```\npublic class RxBusActivity extends AppCompatActivity {\n    private CompositeSubscription mCompositeSubscription;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_rx_bus);\n        rxBusObservers();\n        rxBusPost();\n    }\n\n    private void rxBusPost() {\n        findViewById(R.id.button).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                RxBus.getInstance().post(HandleEvent.getInstance());\n            }\n        });\n\n    }\n\n    public void addSubscription(Subscription subscription) {\n        if (this.mCompositeSubscription == null) {\n            this.mCompositeSubscription = new CompositeSubscription();\n        }\n        this.mCompositeSubscription.add(subscription);\n    }\n\n\n    private void rxBusObservers() {\n        Subscription subscription = RxBus.getInstance()\n                .toObserverable()\n                .subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Subscriber<Object>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(Object event) {\n                        if (event instanceof HandleEvent) {\n                            //do something\n                            Log.d(\"wxl\", \"rxBusHandle\");\n                        }\n                    }\n                });\n        addSubscription(subscription);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        Log.d(\"wxl\", \"onDestroy\");\n        if (this.mCompositeSubscription != null) {\n\t\t    //取消注册，以避免内存泄露\n            this.mCompositeSubscription.unsubscribe();\n        }\n    }\n\n}\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整代码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n# EventBus源码解析\n附上大牛们分析的EventBus源码，有兴趣可以看看\n[EventBus源码研读](http://kymjs.com/code/2015/12/12/01/) by kymjs张涛\n[EventBus 源码解析](http://a.codekk.com/detail/Android/Trinea/EventBus%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90) by Trinea\n\n\n# 附录\n[RxJava-Android-Samples](https://github.com/kaushikgopal/RxJava-Android-Samples/blob/master/app/src/main/java/com/morihacky/android/rxjava/rxbus/RxBus.java)\n\n\n\n\n","source":"_posts/rxbus.md","raw":"title: RxBus\ndate: 2016-04-07 09:10:20\ntags: [RxJava,Android,RxBus]\ncategory: RxJava\n---\n\n> 相信大多数开发者都使用过EventBus或者Otto(我还未实践过)，作为事件总线通信库，如果你的项目已经加入RxJava和EventBus(或Otto)，那不妨用RxBus代替EventBus或者Otto，省去更多库的依赖。\n\n# RxJava\n之前已经分享过[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)知识，可以点击[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)，这里不再细说。\n\n# RxBus \n假设你已经对[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)有所了解，再继续往下看。\n<!--more-->\n```\npublic class RxBus {\n    private static RxBus mRxBus = null;\n    /**\n     * PublishSubject只会把在订阅发生的时间点之后来自原始Observable的数据发射给观察者\n     */\n\n    private Subject<Object, Object> mRxBusObserverable = new SerializedSubject<>(PublishSubject.create());\n\n    public static synchronized RxBus getInstance() {\n        if (mRxBus == null) {\n            mRxBus = new RxBus();\n        }\n        return mRxBus;\n    }\n\n    public void post(Object o) {\n    if (hasObservers()) {\n        mRxBusObserverable.onNext(o);\n\t\t}\n    }\n\n    public Observable<Object> toObserverable() {\n        return mRxBusObserverable;\n    }\n\n    /**\n     * 判断是否有订阅者\n     */\n    public boolean hasObservers() {\n        return mRxBusObserverable.hasObservers();\n    }\n}\n```\n# 代码调用\n先模拟一个订阅者，用hasObservers判断是否有订阅者，然后再发送。\n```\npublic class RxBusActivity extends AppCompatActivity {\n    private CompositeSubscription mCompositeSubscription;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_rx_bus);\n        rxBusObservers();\n        rxBusPost();\n    }\n\n    private void rxBusPost() {\n        findViewById(R.id.button).setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                RxBus.getInstance().post(HandleEvent.getInstance());\n            }\n        });\n\n    }\n\n    public void addSubscription(Subscription subscription) {\n        if (this.mCompositeSubscription == null) {\n            this.mCompositeSubscription = new CompositeSubscription();\n        }\n        this.mCompositeSubscription.add(subscription);\n    }\n\n\n    private void rxBusObservers() {\n        Subscription subscription = RxBus.getInstance()\n                .toObserverable()\n                .subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Subscriber<Object>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n\n                    }\n\n                    @Override\n                    public void onNext(Object event) {\n                        if (event instanceof HandleEvent) {\n                            //do something\n                            Log.d(\"wxl\", \"rxBusHandle\");\n                        }\n                    }\n                });\n        addSubscription(subscription);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        Log.d(\"wxl\", \"onDestroy\");\n        if (this.mCompositeSubscription != null) {\n\t\t    //取消注册，以避免内存泄露\n            this.mCompositeSubscription.unsubscribe();\n        }\n    }\n\n}\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整代码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n# EventBus源码解析\n附上大牛们分析的EventBus源码，有兴趣可以看看\n[EventBus源码研读](http://kymjs.com/code/2015/12/12/01/) by kymjs张涛\n[EventBus 源码解析](http://a.codekk.com/detail/Android/Trinea/EventBus%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90) by Trinea\n\n\n# 附录\n[RxJava-Android-Samples](https://github.com/kaushikgopal/RxJava-Android-Samples/blob/master/app/src/main/java/com/morihacky/android/rxjava/rxbus/RxBus.java)\n\n\n\n\n","slug":"rxbus","published":1,"updated":"2016-06-20T02:22:43.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7u002gzspkaplcc4wi","thumbnailImageUrl":null},{"title":"Android Retrofit 2.0 使用-补充篇","date":"2016-06-18T00:48:53.000Z","_content":"推荐阅读，猛戳：\n1、[Android MVP 实例](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)\n2、[Android Retrofit 2.0使用](http://wuxiaolong.me/2016/01/15/retrofit/)\n3、[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)\n4、[RxBus](http://wuxiaolong.me/2016/04/07/rxbus/)\n5、[Android MVP+Retrofit+RxJava实践小结](http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/)\n\n> 之前分享的[Android Retrofit 2.0 使用](http://wuxiaolong.me/2016/01/15/retrofit/)，属于基本的使用，实际开发还远远不够，因此对其补充，主要在Retrofit配置和接口参数。\n\n<!--more-->\n# Retrofit配置\n\n\n## 添加依赖\napp/build.gradle\n```java\n compile 'com.squareup.retrofit2:retrofit:2.0.2'\n```\n\n首先Builder()，得到OkHttpClient.Builder对象builder \n```java\n OkHttpClient.Builder builder = new OkHttpClient.Builder();\n```\n## Log信息拦截器\nDebug可以看到，网络请求，打印Log信息，发布的时候就不需要这些log\n1、添加依赖\napp/build.gradle\n```java\n compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'\n```\n\n2、Log信息拦截器\n```java\nif (BuildConfig.DEBUG) {\n    // Log信息拦截器\n    HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n    loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n    //设置 Debug Log 模式\n    builder.addInterceptor(loggingInterceptor);\n}\n```\n## 缓存机制\n无网络时，也能显示数据\n```java\nFile cacheFile = new File(DemoApplication.getContext().getExternalCacheDir(), \"WuXiaolongCache\");\nCache cache = new Cache(cacheFile, 1024 * 1024 * 50);\nInterceptor cacheInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        if (!AppUtils.networkIsAvailable(DemoApplication.getContext())) {\n            request = request.newBuilder()\n                    .cacheControl(CacheControl.FORCE_CACHE)\n                    .build();\n        }\n        Response response = chain.proceed(request);\n        if (AppUtils.networkIsAvailable(DemoApplication.getContext())) {\n            int maxAge = 0;\n            // 有网络时 设置缓存超时时间0个小时\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, max-age=\" + maxAge)\n                    .removeHeader(\"WuXiaolong\")// 清除头信息，因为服务器如果不支持，会返回一些干扰信息，不清除下面无法生效\n                    .build();\n        } else {\n            // 无网络时，设置超时为4周\n            int maxStale = 60 * 60 * 24 * 28;\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, only-if-cached, max-stale=\" + maxStale)\n                    .removeHeader(\"nyn\")\n                    .build();\n        }\n        return response;\n    }\n};\nbuilder.cache(cache).addInterceptor(cacheInterceptor);\n```\n\n## 公共参数\n可能接口有某些参数是公共的，不可能一个个接口都去加吧\n```java\n//公共参数\nInterceptor addQueryParameterInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request originalRequest = chain.request();\n        Request request;\n        String method = originalRequest.method();\n        Headers headers = originalRequest.headers();\n        HttpUrl modifiedUrl = originalRequest.url().newBuilder()\n                // Provide your custom parameter here\n                .addQueryParameter(\"platform\", \"android\")\n                .addQueryParameter(\"version\", \"1.0.0\")              \n                .build();\n        request = originalRequest.newBuilder().url(modifiedUrl).build();\n        return chain.proceed(request);\n    }\n};\n//公共参数\nbuilder.addInterceptor(addQueryParameterInterceptor);\n```\n\n## 设置头\n有的接口可能对请求头要设置\n```java\nInterceptor headerInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request originalRequest = chain.request();\n        Request.Builder requestBuilder = originalRequest.newBuilder()\n                .header(\"AppType\", \"TPOS\")\n                .header(\"Content-Type\", \"application/json\")\n                .header(\"Accept\", \"application/json\")\n                .method(originalRequest.method(), originalRequest.body());\n        Request request = requestBuilder.build();\n        return chain.proceed(request);\n    }\n};\n//设置头\nbuilder.addInterceptor(headerInterceptor );\n```\n\n## 设置cookie\n服务端可能需要保持请求是同一个cookie，主要看各自需求\n1、app/build.gradle\n```java\n compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'\n```\n2、设置cookie\n```java\nCookieManager cookieManager = new CookieManager();\ncookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);\nbuilder.cookieJar(new JavaNetCookieJar(cookieManager));\n```\n## 设置超时和重连\n希望超时时能重连\n```java\n //设置超时\n builder.connectTimeout(15, TimeUnit.SECONDS);\n builder.readTimeout(20, TimeUnit.SECONDS);\n builder.writeTimeout(20, TimeUnit.SECONDS);\n //错误重连\n builder.retryOnConnectionFailure(true);\n```\n\n最后将这些配置设置给retrofit：\n```java\nOkHttpClient okHttpClient = builder.build();\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(ApiStores.API_SERVER_URL)\n        //设置 Json 转换器\n        .addConverterFactory(GsonConverterFactory.create())\n        //RxJava 适配器\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .client(okHttpClient)\n        .build();\n```\n## 完整配置\n```java\npublic class AppClient {\n    public static Retrofit retrofit = null;\n\n    public static Retrofit retrofit() {\n        if (retrofit == null) {\n\t         OkHttpClient.Builder builder = new OkHttpClient.Builder();\n            /**\n             *设置缓存，代码略\n             */\n                      \n            /**\n             *  公共参数，代码略\n             */\n           \n            /**\n             * 设置头，代码略\n             */           \n           \n\t\t\t /**\n             * Log信息拦截器，代码略\n             */\n            \n\t\t\t /**\n             * 设置cookie，代码略\n             */\n            \n             /**\n             * 设置超时和重连，代码略\n             */\n\n            //以上设置结束，才能build(),不然设置白搭\n            OkHttpClient okHttpClient = builder.build();\n\n            retrofit = new Retrofit.Builder()\n                    .baseUrl(ApiStores.API_SERVER_URL)                  \n                    .client(okHttpClient)\n                    .build();\n        }\n        return retrofit;\n\n    }\n}\n```\n\n# 接口参数\n\n## Path\n类似这样链接：http://wuxiaolong.me/2016/01/15/retrofit/\n```java\n @GET(\"2016/01/15/{retrofit}\")\n Call<ResponseBody> getData(@Path(\"retrofit\") String retrofit);\n```\n即您传的参数retrofit内容会替换大括号里的内容。\n\n## Query\n类似这样链接：http://wuxiaolong.me/v1?ip=202.202.33.33&name=WuXiaolong\n```java\n@GET(\"v1\")\nCall<ResponseBody> getData(@Query(\"ip\") String ip,@Query(\"name\") String name);\n```\n\n## Field\n表单提交，如登录\n```java\n @FormUrlEncoded\n @POST(\"v1/login\")\n Call<ResponseBody> userLogin(@Field(\"phone\") String phone, @Field(\"password\") String password);\n```\n\n## 传json格式\n如果参数是json格式，如：\n```java\n{\t\t\n    \"apiInfo\": {\t\t\n        \"apiName\": \"WuXiaolong\",\t\t\n        \"apiKey\": \"666\"\t\t\n    }\t\t\n}\t\t\n\n```\n\n建立Bean\n```java\n public class ApiInfo {\n        private ApiInfoBean apiInfo;\n\n        public ApiInfoBean getApiInfo() {\n            return apiInfo;\n        }\n\n        public void setApiInfo(ApiInfoBean apiInfo) {\n            this.apiInfo = apiInfo;\n        }\n\n        public class ApiInfoBean {\n            private String apiName;\n            private String apiKey;\n            //省略get和set方法\n        }\n    }\n```\n \n \nApiStores\n```java\n@POST(\"client/shipper/getCarType\")\nCall<ResponseBody> getData(@Body ApiInfo apiInfo);\n```       \n\n代码调用\n```java\nApiInfo apiInfo = new ApiInfo();\nApiInfo.ApiInfoBean apiInfoBean = apiInfo.new ApiInfoBean();\napiInfoBean.setApiKey(\"666\");\napiInfoBean.setApiName(\"WuXiaolong\");\napiInfo.setApiInfo(apiInfoBean);\n//调接口\ngetData(apiInfo);\n```\n\n## 传数组\n```java\n@GET(\"v1/enterprise/find\")\nCall<ResponseBody> getData(@Query(\"id\") String id, @Query(\"linked[]\") String... linked);\n```\n\n代码调用\n```java\nString id=\"WuXiaolong\"；\nString[] s = new String[]{\"WuXiaolong\"};\n//调接口\ngetData(id, s);\n```\n\n## 传文件-单个\n```java\n@Multipart\n@POST(\"v1/create\")\nCall<ResponseBody> create(@Part(\"pictureName\") RequestBody pictureName,  @Part MultipartBody.Part picture);\n```\n\n代码调用\n```java\nRequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), \"pictureName\");\nFile picture= new File(path);\nRequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);\n// MultipartBody.Part is used to send also the actual file name\nMultipartBody.Part picturePart = MultipartBody.Part.createFormData(\"picture\", picture.getName(), requestFile);\n//调接口\ncreate(pictureNameBody, picturePart);\n```\n\n## 传文件-多个\n```java\n@Multipart\n@POST(\"v1/create\")\nCall<ResponseBody> create(@Part(\"pictureName\") RequestBody pictureName,   @PartMap Map<String, RequestBody> params);\n```\n\n代码调用\n```java\nRequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), \"pictureName\");\nFile picture= new File(path);\nRequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);\nMap<String, RequestBody> params = new HashMap<>();\nparams.put(\"picture\\\"; filename=\\\"\" + picture.getName() + \"\", requestFile);\n//调接口\ncreate(pictureNameBody, params);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/retrofits.md","raw":"title: Android Retrofit 2.0 使用-补充篇\ndate: 2016-06-18 08:48:53\ntags: Retrofit \ncategory: Retrofit \n---\n推荐阅读，猛戳：\n1、[Android MVP 实例](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)\n2、[Android Retrofit 2.0使用](http://wuxiaolong.me/2016/01/15/retrofit/)\n3、[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)\n4、[RxBus](http://wuxiaolong.me/2016/04/07/rxbus/)\n5、[Android MVP+Retrofit+RxJava实践小结](http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/)\n\n> 之前分享的[Android Retrofit 2.0 使用](http://wuxiaolong.me/2016/01/15/retrofit/)，属于基本的使用，实际开发还远远不够，因此对其补充，主要在Retrofit配置和接口参数。\n\n<!--more-->\n# Retrofit配置\n\n\n## 添加依赖\napp/build.gradle\n```java\n compile 'com.squareup.retrofit2:retrofit:2.0.2'\n```\n\n首先Builder()，得到OkHttpClient.Builder对象builder \n```java\n OkHttpClient.Builder builder = new OkHttpClient.Builder();\n```\n## Log信息拦截器\nDebug可以看到，网络请求，打印Log信息，发布的时候就不需要这些log\n1、添加依赖\napp/build.gradle\n```java\n compile 'com.squareup.okhttp3:logging-interceptor:3.1.2'\n```\n\n2、Log信息拦截器\n```java\nif (BuildConfig.DEBUG) {\n    // Log信息拦截器\n    HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n    loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n    //设置 Debug Log 模式\n    builder.addInterceptor(loggingInterceptor);\n}\n```\n## 缓存机制\n无网络时，也能显示数据\n```java\nFile cacheFile = new File(DemoApplication.getContext().getExternalCacheDir(), \"WuXiaolongCache\");\nCache cache = new Cache(cacheFile, 1024 * 1024 * 50);\nInterceptor cacheInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        if (!AppUtils.networkIsAvailable(DemoApplication.getContext())) {\n            request = request.newBuilder()\n                    .cacheControl(CacheControl.FORCE_CACHE)\n                    .build();\n        }\n        Response response = chain.proceed(request);\n        if (AppUtils.networkIsAvailable(DemoApplication.getContext())) {\n            int maxAge = 0;\n            // 有网络时 设置缓存超时时间0个小时\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, max-age=\" + maxAge)\n                    .removeHeader(\"WuXiaolong\")// 清除头信息，因为服务器如果不支持，会返回一些干扰信息，不清除下面无法生效\n                    .build();\n        } else {\n            // 无网络时，设置超时为4周\n            int maxStale = 60 * 60 * 24 * 28;\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, only-if-cached, max-stale=\" + maxStale)\n                    .removeHeader(\"nyn\")\n                    .build();\n        }\n        return response;\n    }\n};\nbuilder.cache(cache).addInterceptor(cacheInterceptor);\n```\n\n## 公共参数\n可能接口有某些参数是公共的，不可能一个个接口都去加吧\n```java\n//公共参数\nInterceptor addQueryParameterInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request originalRequest = chain.request();\n        Request request;\n        String method = originalRequest.method();\n        Headers headers = originalRequest.headers();\n        HttpUrl modifiedUrl = originalRequest.url().newBuilder()\n                // Provide your custom parameter here\n                .addQueryParameter(\"platform\", \"android\")\n                .addQueryParameter(\"version\", \"1.0.0\")              \n                .build();\n        request = originalRequest.newBuilder().url(modifiedUrl).build();\n        return chain.proceed(request);\n    }\n};\n//公共参数\nbuilder.addInterceptor(addQueryParameterInterceptor);\n```\n\n## 设置头\n有的接口可能对请求头要设置\n```java\nInterceptor headerInterceptor = new Interceptor() {\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request originalRequest = chain.request();\n        Request.Builder requestBuilder = originalRequest.newBuilder()\n                .header(\"AppType\", \"TPOS\")\n                .header(\"Content-Type\", \"application/json\")\n                .header(\"Accept\", \"application/json\")\n                .method(originalRequest.method(), originalRequest.body());\n        Request request = requestBuilder.build();\n        return chain.proceed(request);\n    }\n};\n//设置头\nbuilder.addInterceptor(headerInterceptor );\n```\n\n## 设置cookie\n服务端可能需要保持请求是同一个cookie，主要看各自需求\n1、app/build.gradle\n```java\n compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'\n```\n2、设置cookie\n```java\nCookieManager cookieManager = new CookieManager();\ncookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);\nbuilder.cookieJar(new JavaNetCookieJar(cookieManager));\n```\n## 设置超时和重连\n希望超时时能重连\n```java\n //设置超时\n builder.connectTimeout(15, TimeUnit.SECONDS);\n builder.readTimeout(20, TimeUnit.SECONDS);\n builder.writeTimeout(20, TimeUnit.SECONDS);\n //错误重连\n builder.retryOnConnectionFailure(true);\n```\n\n最后将这些配置设置给retrofit：\n```java\nOkHttpClient okHttpClient = builder.build();\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(ApiStores.API_SERVER_URL)\n        //设置 Json 转换器\n        .addConverterFactory(GsonConverterFactory.create())\n        //RxJava 适配器\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .client(okHttpClient)\n        .build();\n```\n## 完整配置\n```java\npublic class AppClient {\n    public static Retrofit retrofit = null;\n\n    public static Retrofit retrofit() {\n        if (retrofit == null) {\n\t         OkHttpClient.Builder builder = new OkHttpClient.Builder();\n            /**\n             *设置缓存，代码略\n             */\n                      \n            /**\n             *  公共参数，代码略\n             */\n           \n            /**\n             * 设置头，代码略\n             */           \n           \n\t\t\t /**\n             * Log信息拦截器，代码略\n             */\n            \n\t\t\t /**\n             * 设置cookie，代码略\n             */\n            \n             /**\n             * 设置超时和重连，代码略\n             */\n\n            //以上设置结束，才能build(),不然设置白搭\n            OkHttpClient okHttpClient = builder.build();\n\n            retrofit = new Retrofit.Builder()\n                    .baseUrl(ApiStores.API_SERVER_URL)                  \n                    .client(okHttpClient)\n                    .build();\n        }\n        return retrofit;\n\n    }\n}\n```\n\n# 接口参数\n\n## Path\n类似这样链接：http://wuxiaolong.me/2016/01/15/retrofit/\n```java\n @GET(\"2016/01/15/{retrofit}\")\n Call<ResponseBody> getData(@Path(\"retrofit\") String retrofit);\n```\n即您传的参数retrofit内容会替换大括号里的内容。\n\n## Query\n类似这样链接：http://wuxiaolong.me/v1?ip=202.202.33.33&name=WuXiaolong\n```java\n@GET(\"v1\")\nCall<ResponseBody> getData(@Query(\"ip\") String ip,@Query(\"name\") String name);\n```\n\n## Field\n表单提交，如登录\n```java\n @FormUrlEncoded\n @POST(\"v1/login\")\n Call<ResponseBody> userLogin(@Field(\"phone\") String phone, @Field(\"password\") String password);\n```\n\n## 传json格式\n如果参数是json格式，如：\n```java\n{\t\t\n    \"apiInfo\": {\t\t\n        \"apiName\": \"WuXiaolong\",\t\t\n        \"apiKey\": \"666\"\t\t\n    }\t\t\n}\t\t\n\n```\n\n建立Bean\n```java\n public class ApiInfo {\n        private ApiInfoBean apiInfo;\n\n        public ApiInfoBean getApiInfo() {\n            return apiInfo;\n        }\n\n        public void setApiInfo(ApiInfoBean apiInfo) {\n            this.apiInfo = apiInfo;\n        }\n\n        public class ApiInfoBean {\n            private String apiName;\n            private String apiKey;\n            //省略get和set方法\n        }\n    }\n```\n \n \nApiStores\n```java\n@POST(\"client/shipper/getCarType\")\nCall<ResponseBody> getData(@Body ApiInfo apiInfo);\n```       \n\n代码调用\n```java\nApiInfo apiInfo = new ApiInfo();\nApiInfo.ApiInfoBean apiInfoBean = apiInfo.new ApiInfoBean();\napiInfoBean.setApiKey(\"666\");\napiInfoBean.setApiName(\"WuXiaolong\");\napiInfo.setApiInfo(apiInfoBean);\n//调接口\ngetData(apiInfo);\n```\n\n## 传数组\n```java\n@GET(\"v1/enterprise/find\")\nCall<ResponseBody> getData(@Query(\"id\") String id, @Query(\"linked[]\") String... linked);\n```\n\n代码调用\n```java\nString id=\"WuXiaolong\"；\nString[] s = new String[]{\"WuXiaolong\"};\n//调接口\ngetData(id, s);\n```\n\n## 传文件-单个\n```java\n@Multipart\n@POST(\"v1/create\")\nCall<ResponseBody> create(@Part(\"pictureName\") RequestBody pictureName,  @Part MultipartBody.Part picture);\n```\n\n代码调用\n```java\nRequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), \"pictureName\");\nFile picture= new File(path);\nRequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);\n// MultipartBody.Part is used to send also the actual file name\nMultipartBody.Part picturePart = MultipartBody.Part.createFormData(\"picture\", picture.getName(), requestFile);\n//调接口\ncreate(pictureNameBody, picturePart);\n```\n\n## 传文件-多个\n```java\n@Multipart\n@POST(\"v1/create\")\nCall<ResponseBody> create(@Part(\"pictureName\") RequestBody pictureName,   @PartMap Map<String, RequestBody> params);\n```\n\n代码调用\n```java\nRequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), \"pictureName\");\nFile picture= new File(path);\nRequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);\nMap<String, RequestBody> params = new HashMap<>();\nparams.put(\"picture\\\"; filename=\\\"\" + picture.getName() + \"\", requestFile);\n//调接口\ncreate(pictureNameBody, params);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"retrofits","published":1,"updated":"2016-06-15T01:34:59.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr7y002mzspkzy7s2u17","thumbnailImageUrl":null},{"title":"Android Retrofit 2.0使用","date":"2016-01-15T03:23:25.000Z","_content":"> 实例带你了解Retrofit 2.0的使用，分享目前开发Retrofit遇到的坑和心得。\n\n# 添加依赖\napp/build.gradle\n```java\ncompile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'\n```\n# 接口调用\n```java\n Retrofit retrofit = new Retrofit.Builder()\n                 //这里建议：- Base URL: 总是以/结尾；- @Url: 不要以/开头\n                .baseUrl(\"http://www.weather.com.cn/\")\n                .build();\n        ApiStores apiStores = retrofit.create(ApiStores.class);\n        Call<ResponseBody> call = apiStores.getWeather(\"101010100\");\n```\n如果@GET(\"http://ip.taobao.com/service/getIpInfo.php\")，则baseUrl无效。\n注意这个任务是网络任务，不要忘记给程序加入网络权限\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n```\n\n## 同步调用\n```java\n  try {\n            Response<ResponseBody> bodyResponse = call.execute();\n            String body = bodyResponse.body().string();//获取返回体的字符串\n            Log.i(\"wxl\", \"body=\" + body);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n```\n同步需要处理android.os.NetworkOnMainThreadException\n## 异步调用\n```java\ncall.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Response<ResponseBody> response) {\n                try {\n                    Log.i(\"wxl\", \"response=\" + response.body().string());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n                Log.i(\"wxl\", \"onFailure=\" + t.getMessage());\n            }\n        });\n```\n## 移除请求\n```java\ncall.cancel();\n```\n# 接口参数\n## Path\n```java\n /**\n * Call<T> get();必须是这种形式,这是2.0之后的新形式\n * 如果不需要转换成Json数据,可以用了ResponseBody;\n * 你也可以使用Call<GsonBean> get();这样的话,需要添加Gson转换器\n */\npublic interface ApiStores {\n    @GET(\"adat/sk/{cityId}.html\")\n    Call<ResponseBody> getWeather(@Path(\"cityId\") String cityId);\n}\n```\n<!--more-->\n## Query\n如果链接是http://ip.taobao.com/service/getIpInfo.php?ip=202.202.33.33\n```java\n @GET(\"http://ip.taobao.com/service/getIpInfo.php\")\n    Call<ResponseBody> getWeather(@Query(\"ip\") String ip);\n```\n## Body\n这是针对POST方式，如果参数是json格式，如：\n```\n{\t\t\n    \"apiInfo\": {\t\t\n        \"apiName\": \"WuXiaolong\",\t\t\n        \"apiKey\": \"666\"\t\t\n    }\t\t\n}\t\t\n\n```\n建立Bean\n```\n public class ApiInfo {\n        private ApiInfoBean apiInfo;\n\n        public ApiInfoBean getApiInfo() {\n            return apiInfo;\n        }\n\n        public void setApiInfo(ApiInfoBean apiInfo) {\n            this.apiInfo = apiInfo;\n        }\n\n        public class ApiInfoBean {\n            private String apiName;\n            private String apiKey;\n            //省略get和set方法\n        }\n    }\n```\n代码调用\n```\n private void getCarType() {\n        mRetrofit = new Retrofit.Builder()\n                .baseUrl(\"http://WuXiaolong.me/\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n        ApiStores apiStores = mRetrofit.create(ApiStores.class);\n        ApiInfo apiInfo = new ApiInfo();\n        ApiInfo.ApiInfoBean apiInfoBean = apiInfo.new ApiInfoBean();\n        apiInfoBean.setApiKey(\"666\");\n        apiInfoBean.setApiName(\"WuXiaolong\");\n        apiInfo.setApiInfo(apiInfoBean);\n        Call<ResponseBody> call = apiStores.getCarType(apiInfo);\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Response<ResponseBody> response) {\n                String body = null;//获取返回体的字符串\n                try {\n                    body = response.body().string();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                Log.i(\"wxl\", \"get=\" + body);\n            }\n\n            @Override\n            public void onFailure( Throwable t) {\n\n            }\n\n        });\n    }\n```\nApiStores \n```\npublic interface ApiStores {\n        @POST(\"client/shipper/getCarType\")\n        Call<ResponseBody> getCarType(@Body ApiInfo apiInfo);\n    }\n```\n\n# JSON解析库\nRetrofit 2现在支持许多种解析方式来解析响应数据，包括Moshi，一个由Square创建的高效JSON解析库。\n## 添加gson依赖\napp/build.gradle\n```java\ncompile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'\n```\n\n## jsonschema2pojo\n访问[jsonschema2pojo](http://www.jsonschema2pojo.org/)，自动生成Java对象，如果你对gson还不熟悉，笔者建议你手动生成Java对象，感受下。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/retrofit1.png)\n这里如果选择Gson，生成的代码中存在@Generated注解，Android默认并没有javax.annotation library。如果你希望保留@Generated注解，需要添加如下的依赖。\n```java\ncompile 'org.glassfish:javax.annotation:10.0-b28'\n```\n或者，你可以直接删除这个注解，完全没有问题。笔者当然不会加这个依赖啦。\n\n## Gsonformat\n作用：Android studio插件，一般接口返回数据后要建立自己的bean，Gsonformat帮助你快速生成，不用一条一条去写。比jsonschema2pojo更加简单。\n安装步骤：Android studio-Settings-Plugins-搜Gsonformat-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby6.gif)\n\n## 实例代码\n依旧演示上面的天气：http://www.weather.com.cn/adat/sk/101010100.html\n```java\npublic class WeatherJson {\n    //weatherinfo需要对应json数据的名称，我之前随便写了个，被坑很久\n    private Weatherinfo weatherinfo;\n\n    public Weatherinfo getWeatherinfo() {\n        return weatherinfo;\n    }\n\n    public void setWeatherinfo(Weatherinfo weatherinfo) {\n        this.weatherinfo = weatherinfo;\n    }\n    //city、cityid必须对应json数据的名称，不然解析不了\n    public class Weatherinfo {\n        private String city;\n        private String cityid;\n        private String temp;\n        private String WD;\n        private String WS;\n        private String SD;\n        private String WSE;\n        private String time;\n        private String isRadar;\n        private String Radar;\n        private String njd;\n        private String qy;\n        //这里省略get和set方法\n    }\n}\n```\nApiStores：\n```java\npublic class AppClient {\n    static Retrofit mRetrofit;\n\n    public static Retrofit retrofit() {\n        if (mRetrofit == null) {\n            mRetrofit = new Retrofit.Builder()\n                    .baseUrl(\"http://www.weather.com.cn/\")\n                    .addConverterFactory(GsonConverterFactory.create())\n                    .build();\n        }\n        return mRetrofit;\n    }\n\n    public interface ApiStores {\n        @GET(\"adat/sk/{cityId}.html\")\n        Call<WeatherJson> getWeather(@Path(\"cityId\") String cityId);\n    }\n}\n```\n调用：\n```\n private void getWeather() {\n        AppClient.ApiStores apiStores = AppClient.retrofit().create(AppClient.ApiStores.class);\n        Call<WeatherJson> call = apiStores.getWeather(\"101010100\");\n        call.enqueue(new Callback<WeatherJson>() {\n            @Override\n            public void onResponse(Response<WeatherJson> response) {\n                Log.i(\"wxl\", \"getWeatherinfo=\" + response.body().getWeatherinfo().getCity());\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n\n            }\n        });\n    }\n```\n经Gson转换器，`Call<ResponseBody>`换成自己要写的`Call<WeatherJson>`\n \n# RxJava\n依赖以下：\n```xml\ncompile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta3'\ncompile 'io.reactivex:rxandroid:1.0.1'\n```\n增加addCallAdapterFactory\n```java\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(\"http://api.nuuneoi.com/base/\")\n        .addConverterFactory(GsonConverterFactory.create())\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .build();\n```\nApiStores\n```java\n @GET(\"adat/sk/{cityId}.html\")\n Observable<WeatherJson> getWeatherRxjava(@Path(\"cityId\") String cityId);\n```\nsubscribe部分的代码在Schedulers.io被调用，需要把observeOn(AndroidSchedulers.mainThread())添加到链表中。\n```java\n private void getWeatherRxjava() {\n        AppClient.ApiStores apiStores = AppClient.retrofit().create(AppClient.ApiStores.class);\n        Observable<WeatherJson> observable = apiStores.getWeatherRxjava(\"101010100\");\n        observable.subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<WeatherJson>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.i(\"wxl\", \"e=\" + e.getMessage());\n                    }\n\n                    @Override\n                    public void onNext(WeatherJson weatherJson) {\n                        Log.i(\"wxl\", \"getWeatherinfo=\" + weatherJson.getWeatherinfo().getCity());\n                    }\n                });\n\n    }\n```\n\n# Retrofit源码解析\n另见白瓦力的博客，分析的很到位，解释了0、Retrofit 是什么，1、Retrofit 怎么用，2、Retrofit的原理是什么，3、一些总结。\n博客地址：[http://bxbxbai.github.io/2015/12/13/retrofit2/](http://bxbxbai.github.io/2015/12/13/retrofit2/)\nPS：十分感谢白瓦力，他教会我们如何去查看源码的一种有效方法，debug一步步去跟源码。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[retrofit官方文档](http://square.github.io/retrofit/)\n[用 Retrofit 2 简化 HTTP 请求](https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/)\n[使用Retrofit请求API数据](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/1016/3588.html)\n[Retrofit2 更新指南](http://zhaoshanshan.me/2015/10/12/Retrofit2-%E6%9B%B4%E6%96%B0%E6%8C%87%E5%8D%97/)\n[RESTful API 设计指南](http://www.ruanyifeng.com/blog/2014/05/restful_api.html)\n\n","source":"_posts/retrofit.md","raw":"title: Android Retrofit 2.0使用\ndate: 2016-01-15 11:23:25\ntags: Retrofit \ncategory: Android\n---\n> 实例带你了解Retrofit 2.0的使用，分享目前开发Retrofit遇到的坑和心得。\n\n# 添加依赖\napp/build.gradle\n```java\ncompile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'\n```\n# 接口调用\n```java\n Retrofit retrofit = new Retrofit.Builder()\n                 //这里建议：- Base URL: 总是以/结尾；- @Url: 不要以/开头\n                .baseUrl(\"http://www.weather.com.cn/\")\n                .build();\n        ApiStores apiStores = retrofit.create(ApiStores.class);\n        Call<ResponseBody> call = apiStores.getWeather(\"101010100\");\n```\n如果@GET(\"http://ip.taobao.com/service/getIpInfo.php\")，则baseUrl无效。\n注意这个任务是网络任务，不要忘记给程序加入网络权限\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n```\n\n## 同步调用\n```java\n  try {\n            Response<ResponseBody> bodyResponse = call.execute();\n            String body = bodyResponse.body().string();//获取返回体的字符串\n            Log.i(\"wxl\", \"body=\" + body);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n```\n同步需要处理android.os.NetworkOnMainThreadException\n## 异步调用\n```java\ncall.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Response<ResponseBody> response) {\n                try {\n                    Log.i(\"wxl\", \"response=\" + response.body().string());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n                Log.i(\"wxl\", \"onFailure=\" + t.getMessage());\n            }\n        });\n```\n## 移除请求\n```java\ncall.cancel();\n```\n# 接口参数\n## Path\n```java\n /**\n * Call<T> get();必须是这种形式,这是2.0之后的新形式\n * 如果不需要转换成Json数据,可以用了ResponseBody;\n * 你也可以使用Call<GsonBean> get();这样的话,需要添加Gson转换器\n */\npublic interface ApiStores {\n    @GET(\"adat/sk/{cityId}.html\")\n    Call<ResponseBody> getWeather(@Path(\"cityId\") String cityId);\n}\n```\n<!--more-->\n## Query\n如果链接是http://ip.taobao.com/service/getIpInfo.php?ip=202.202.33.33\n```java\n @GET(\"http://ip.taobao.com/service/getIpInfo.php\")\n    Call<ResponseBody> getWeather(@Query(\"ip\") String ip);\n```\n## Body\n这是针对POST方式，如果参数是json格式，如：\n```\n{\t\t\n    \"apiInfo\": {\t\t\n        \"apiName\": \"WuXiaolong\",\t\t\n        \"apiKey\": \"666\"\t\t\n    }\t\t\n}\t\t\n\n```\n建立Bean\n```\n public class ApiInfo {\n        private ApiInfoBean apiInfo;\n\n        public ApiInfoBean getApiInfo() {\n            return apiInfo;\n        }\n\n        public void setApiInfo(ApiInfoBean apiInfo) {\n            this.apiInfo = apiInfo;\n        }\n\n        public class ApiInfoBean {\n            private String apiName;\n            private String apiKey;\n            //省略get和set方法\n        }\n    }\n```\n代码调用\n```\n private void getCarType() {\n        mRetrofit = new Retrofit.Builder()\n                .baseUrl(\"http://WuXiaolong.me/\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n        ApiStores apiStores = mRetrofit.create(ApiStores.class);\n        ApiInfo apiInfo = new ApiInfo();\n        ApiInfo.ApiInfoBean apiInfoBean = apiInfo.new ApiInfoBean();\n        apiInfoBean.setApiKey(\"666\");\n        apiInfoBean.setApiName(\"WuXiaolong\");\n        apiInfo.setApiInfo(apiInfoBean);\n        Call<ResponseBody> call = apiStores.getCarType(apiInfo);\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Response<ResponseBody> response) {\n                String body = null;//获取返回体的字符串\n                try {\n                    body = response.body().string();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                Log.i(\"wxl\", \"get=\" + body);\n            }\n\n            @Override\n            public void onFailure( Throwable t) {\n\n            }\n\n        });\n    }\n```\nApiStores \n```\npublic interface ApiStores {\n        @POST(\"client/shipper/getCarType\")\n        Call<ResponseBody> getCarType(@Body ApiInfo apiInfo);\n    }\n```\n\n# JSON解析库\nRetrofit 2现在支持许多种解析方式来解析响应数据，包括Moshi，一个由Square创建的高效JSON解析库。\n## 添加gson依赖\napp/build.gradle\n```java\ncompile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'\n```\n\n## jsonschema2pojo\n访问[jsonschema2pojo](http://www.jsonschema2pojo.org/)，自动生成Java对象，如果你对gson还不熟悉，笔者建议你手动生成Java对象，感受下。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/retrofit1.png)\n这里如果选择Gson，生成的代码中存在@Generated注解，Android默认并没有javax.annotation library。如果你希望保留@Generated注解，需要添加如下的依赖。\n```java\ncompile 'org.glassfish:javax.annotation:10.0-b28'\n```\n或者，你可以直接删除这个注解，完全没有问题。笔者当然不会加这个依赖啦。\n\n## Gsonformat\n作用：Android studio插件，一般接口返回数据后要建立自己的bean，Gsonformat帮助你快速生成，不用一条一条去写。比jsonschema2pojo更加简单。\n安装步骤：Android studio-Settings-Plugins-搜Gsonformat-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby6.gif)\n\n## 实例代码\n依旧演示上面的天气：http://www.weather.com.cn/adat/sk/101010100.html\n```java\npublic class WeatherJson {\n    //weatherinfo需要对应json数据的名称，我之前随便写了个，被坑很久\n    private Weatherinfo weatherinfo;\n\n    public Weatherinfo getWeatherinfo() {\n        return weatherinfo;\n    }\n\n    public void setWeatherinfo(Weatherinfo weatherinfo) {\n        this.weatherinfo = weatherinfo;\n    }\n    //city、cityid必须对应json数据的名称，不然解析不了\n    public class Weatherinfo {\n        private String city;\n        private String cityid;\n        private String temp;\n        private String WD;\n        private String WS;\n        private String SD;\n        private String WSE;\n        private String time;\n        private String isRadar;\n        private String Radar;\n        private String njd;\n        private String qy;\n        //这里省略get和set方法\n    }\n}\n```\nApiStores：\n```java\npublic class AppClient {\n    static Retrofit mRetrofit;\n\n    public static Retrofit retrofit() {\n        if (mRetrofit == null) {\n            mRetrofit = new Retrofit.Builder()\n                    .baseUrl(\"http://www.weather.com.cn/\")\n                    .addConverterFactory(GsonConverterFactory.create())\n                    .build();\n        }\n        return mRetrofit;\n    }\n\n    public interface ApiStores {\n        @GET(\"adat/sk/{cityId}.html\")\n        Call<WeatherJson> getWeather(@Path(\"cityId\") String cityId);\n    }\n}\n```\n调用：\n```\n private void getWeather() {\n        AppClient.ApiStores apiStores = AppClient.retrofit().create(AppClient.ApiStores.class);\n        Call<WeatherJson> call = apiStores.getWeather(\"101010100\");\n        call.enqueue(new Callback<WeatherJson>() {\n            @Override\n            public void onResponse(Response<WeatherJson> response) {\n                Log.i(\"wxl\", \"getWeatherinfo=\" + response.body().getWeatherinfo().getCity());\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n\n            }\n        });\n    }\n```\n经Gson转换器，`Call<ResponseBody>`换成自己要写的`Call<WeatherJson>`\n \n# RxJava\n依赖以下：\n```xml\ncompile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta3'\ncompile 'io.reactivex:rxandroid:1.0.1'\n```\n增加addCallAdapterFactory\n```java\nRetrofit retrofit = new Retrofit.Builder()\n        .baseUrl(\"http://api.nuuneoi.com/base/\")\n        .addConverterFactory(GsonConverterFactory.create())\n        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n        .build();\n```\nApiStores\n```java\n @GET(\"adat/sk/{cityId}.html\")\n Observable<WeatherJson> getWeatherRxjava(@Path(\"cityId\") String cityId);\n```\nsubscribe部分的代码在Schedulers.io被调用，需要把observeOn(AndroidSchedulers.mainThread())添加到链表中。\n```java\n private void getWeatherRxjava() {\n        AppClient.ApiStores apiStores = AppClient.retrofit().create(AppClient.ApiStores.class);\n        Observable<WeatherJson> observable = apiStores.getWeatherRxjava(\"101010100\");\n        observable.subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<WeatherJson>() {\n                    @Override\n                    public void onCompleted() {\n                        Log.i(\"wxl\", \"onCompleted\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.i(\"wxl\", \"e=\" + e.getMessage());\n                    }\n\n                    @Override\n                    public void onNext(WeatherJson weatherJson) {\n                        Log.i(\"wxl\", \"getWeatherinfo=\" + weatherJson.getWeatherinfo().getCity());\n                    }\n                });\n\n    }\n```\n\n# Retrofit源码解析\n另见白瓦力的博客，分析的很到位，解释了0、Retrofit 是什么，1、Retrofit 怎么用，2、Retrofit的原理是什么，3、一些总结。\n博客地址：[http://bxbxbai.github.io/2015/12/13/retrofit2/](http://bxbxbai.github.io/2015/12/13/retrofit2/)\nPS：十分感谢白瓦力，他教会我们如何去查看源码的一种有效方法，debug一步步去跟源码。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[retrofit官方文档](http://square.github.io/retrofit/)\n[用 Retrofit 2 简化 HTTP 请求](https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/)\n[使用Retrofit请求API数据](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/1016/3588.html)\n[Retrofit2 更新指南](http://zhaoshanshan.me/2015/10/12/Retrofit2-%E6%9B%B4%E6%96%B0%E6%8C%87%E5%8D%97/)\n[RESTful API 设计指南](http://www.ruanyifeng.com/blog/2014/05/restful_api.html)\n\n","slug":"retrofit","published":1,"updated":"2016-03-25T07:21:50.378Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr80002rzspkn4f1ifla","thumbnailImageUrl":null},{"title":"亲子游玩","date":"2014-09-15T14:58:57.000Z","_content":"# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan5.jpg)\n\n# 应用介绍 \n亲子游玩app来了，家长和孩子们有福啦！可以快速找到周边喜欢的亲子场所，发现好玩的、有趣的乐园和景点。哇，还可以看到本市有哪些亲子演出，有我喜欢的木偶戏，赞一个！喜欢去科技馆、博物馆？没问题，求知探索的场馆一网打尽！ \n周边没有喜欢的？修改地标，去郊区玩玩吧。还可以定位到其他城市，让我们一家三口来个周末亲子游吧。 \n加微信公众号“亲子游玩”，还可以订阅到每天的亲子资讯哦，微信互动还有神秘礼物。\n\n# 下载地址\n[小米应用商店](http://app.mi.com/detail/70315)\n\n`温馨提示：`由于公司倒闭，此APP已废。","source":"_posts/qinziyouwan.md","raw":"title: 亲子游玩\ndate: 2014-09-15 22:58:57\ntags: qinziyouwan\ncategory: App\n---\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qinziyouwan5.jpg)\n\n# 应用介绍 \n亲子游玩app来了，家长和孩子们有福啦！可以快速找到周边喜欢的亲子场所，发现好玩的、有趣的乐园和景点。哇，还可以看到本市有哪些亲子演出，有我喜欢的木偶戏，赞一个！喜欢去科技馆、博物馆？没问题，求知探索的场馆一网打尽！ \n周边没有喜欢的？修改地标，去郊区玩玩吧。还可以定位到其他城市，让我们一家三口来个周末亲子游吧。 \n加微信公众号“亲子游玩”，还可以订阅到每天的亲子资讯哦，微信互动还有神秘礼物。\n\n# 下载地址\n[小米应用商店](http://app.mi.com/detail/70315)\n\n`温馨提示：`由于公司倒闭，此APP已废。","slug":"qinziyouwan","published":1,"updated":"2016-03-17T00:44:06.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr82002uzspkcpbqll8w","thumbnailImageUrl":null},{"title":"使用七牛作为github博客的图床","date":"2014-10-29T16:00:00.000Z","_content":"\n文章的图片存放:\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n<!-- more -->\n\n首先要有个七牛账号，然后建立一个空间，我这里随便起名为WuXiaolong。空间建立好以后，进入空间设置界面：\n![1](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-1.png)\n进入`基本设置`->`镜像存储`，写上你要镜像加速的域名，这里是我的github路径：\n![2](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-2.png)\n点击确定就ok了。\n\n然后在写博客的时候，注意图片的域名不要写相对路径了，要写类似于\n![3](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-3.png)\n这样的指向七牛镜像服务的url，其中/images开始的url和之前使用的相对路径一致。\n\n七牛镜像加速基本原理是当有指向七牛的图片请求时，七牛会先看自己的空间下是否有该图片，如果不存在，则去上面设置的原始地址去取，同时在七牛下面保留一份，后续再有同样的请求时则直接由七牛返数据。\n\n\n\n\n\n\n\n\n","source":"_posts/qiniu-photo-bed.md","raw":"title: 使用七牛作为github博客的图床\ndate: 2014-10-30 \ncategories: [github]\ntags: [github]\n---\n\n文章的图片存放:\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n<!-- more -->\n\n首先要有个七牛账号，然后建立一个空间，我这里随便起名为WuXiaolong。空间建立好以后，进入空间设置界面：\n![1](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-1.png)\n进入`基本设置`->`镜像存储`，写上你要镜像加速的域名，这里是我的github路径：\n![2](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-2.png)\n点击确定就ok了。\n\n然后在写博客的时候，注意图片的域名不要写相对路径了，要写类似于\n![3](http://wuxiaolong.qiniudn.com/2014-10-30-qiniu-photo-bed-3.png)\n这样的指向七牛镜像服务的url，其中/images开始的url和之前使用的相对路径一致。\n\n七牛镜像加速基本原理是当有指向七牛的图片请求时，七牛会先看自己的空间下是否有该图片，如果不存在，则去上面设置的原始地址去取，同时在七牛下面保留一份，后续再有同样的请求时则直接由七牛返数据。\n\n\n\n\n\n\n\n\n","slug":"qiniu-photo-bed","published":1,"updated":"2016-03-17T00:44:06.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr84002yzspkw45lizry","thumbnailImageUrl":null},{"title":"Android之进程和线程","date":"2015-11-03T06:10:23.000Z","_content":"## 进程\n## 线程\n应用启动时，系统会为应用创建一个名为“主线程”的执行线程。 此线程非常重要，因为它负责将事件分派给相应的用户界面小工具，其中包括绘图事件。 此外，它也是应用与 Android UI 工具包组件（来自 android.widget 和 android.view 软件包的组件）进行交互的线程。因此，主线程有时也称为 UI 线程。\n\n系统绝对不会为每个组件实例创建单独的线程。运行于同一进程的所有组件均在 UI 线程中实例化，并且对每个组件的系统调用均由该线程进行分派。因此，响应系统回调的方法（例如，报告用户操作的 onKeyDown() 或生命周期回调方法）始终在进程的 UI 线程中运行。\n<!--more-->\n例如，当用户触摸屏幕上的按钮时，应用的 UI 线程会将触摸事件分派给小工具，而小工具反过来又设置其按下状态，并将无效请求发布到事件队列中。UI 线程从队列中取消该请求并通知小工具应该重绘自身。\n\n在应用执行繁重的任务以响应用户交互时，除非正确实施应用，否则这种单线程模式可能会导致性能低下。 特别地，如果 UI 线程需要处理所有任务，则执行耗时很长的操作（例如，网络访问或数据库查询）将会阻塞整个 UI。一旦线程被阻塞，将无法分派任何事件，包括绘图事件。从用户的角度来看，应用显示为挂起。 更糟糕的是，如果 UI 线程被阻塞超过几秒钟时间（目前大约是 5 秒钟），用户就会看到一个让人厌烦的“应用无响应”(ANR) 对话框。如果引起用户不满，他们可能就会决定退出并卸载此应用。\n\n此外，Android UI 工具包并非线程安全工具包。因此，您不得通过工作线程操纵 UI，而只能通过 UI 线程操纵用户界面。因此，Android 的`单线程模式`必须遵守两条规则：\n\n* 不要阻塞 UI 线程\n* 不要在 UI 线程之外访问 Android UI 工具包\n\n### 工作线程\n\n根据上述单线程模式，要保证应用 UI 的响应能力，关键是不能阻塞 UI 线程。如果执行的操作不能很快完成，则应确保它们在单独的线程（“后台”或“工作”线程）中运行。\n\n例如，以下代码演示了一个点击侦听器从单独的线程下载图像并将其显示在 ImageView 中：\n```java\npublic void onClick(View v) {\n    new Thread(new Runnable() {\n        public void run() {\n            Bitmap b = loadImageFromNetwork(\"http://example.com/image.png\");\n            mImageView.setImageBitmap(b);\n        }\n    }).start();\n}\n```\n乍看起来，这段代码似乎运行良好，因为它创建了一个新线程来处理网络操作。 但是，它违反了单线程模式的第二条规则：不要在 UI 线程之外访问 Android UI 工具包—此示例从工作线程（而不是 UI 线程）修改了 ImageView。这可能导致出现不明确、不可预见的行为，但要跟踪此行为困难而又费时。\n\n为解决此问题，Android 提供了几种途径来从其他线程访问 UI 线程。以下列出了几种有用的方法：\n```java\nActivity.runOnUiThread(Runnable)\n```\n```java\nView.post(Runnable)\n```\n```java\nView.postDelayed(Runnable, long)\n```\n例如，您可以通过使用 View.post(Runnable) 方法修复上述代码：\n```java\npublic void onClick(View v) {\n    new Thread(new Runnable() {\n        public void run() {\n            final Bitmap bitmap = loadImageFromNetwork(\"http://example.com/image.png\");\n            mImageView.post(new Runnable() {\n                public void run() {\n                    mImageView.setImageBitmap(bitmap);\n                }\n            });\n        }\n    }).start();\n}\n```\n现在，上述实现属于线程安全型：在单独的线程中完成网络操作，而在 UI 线程中操纵 ImageView。\n\n但是，随着操作日趋复杂，这类代码也会变得复杂且难以维护。 要通过工作线程处理更复杂的交互，可以考虑在工作线程中使用 Handler 处理来自 UI 线程的消息。当然，最好的解决方案或许是扩展 AsyncTask 类，此类简化了与 UI 进行交互所需执行的工作线程任务。\n\n使用 AsyncTask\n\nAsyncTask 允许对用户界面执行异步操作。它会先阻塞工作线程中的操作，然后在 UI 线程中发布结果，而无需您亲自处理线程和/或处理程序。\n\n要使用它，必须创建 AsyncTask 子类并实现 doInBackground() 回调方法，该方法将在后台线程池中运行。要更新 UI，必须实现 onPostExecute() 以传递 doInBackground() 返回的结果并在 UI 线程中运行，这样，您即可安全更新 UI。稍后，您可以通过从 UI 线程调用 execute() 来运行任务。\n\n例如，您可以通过以下方式使用 AsyncTask 来实现上述示例：\n```java\npublic void onClick(View v) {\n    new DownloadImageTask().execute(\"http://example.com/image.png\");\n}\n\nprivate class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {\n    /** The system calls this to perform work in a worker thread and\n      * delivers it the parameters given to AsyncTask.execute() */\n    protected Bitmap doInBackground(String... urls) {\n        return loadImageFromNetwork(urls[0]);\n    }\n    \n    /** The system calls this to perform work in the UI thread and delivers\n      * the result from doInBackground() */\n    protected void onPostExecute(Bitmap result) {\n        mImageView.setImageBitmap(result);\n    }\n}\n```\n现在 UI 是安全的，代码也得到简化，因为任务分解成了两部分：一部分应在工作线程内完成，另一部分应在 UI 线程内完成。\n\n下面简要概述了 AsyncTask 的工作方法，但要全面了解如何使用此类，您应阅读 AsyncTask 参考文档：\n\n可以使用泛型指定参数类型、进度值和任务最终值\n方法 doInBackground() 会在工作线程上自动执行\nonPreExecute()、onPostExecute() 和 onProgressUpdate() 均在 UI 线程中调用\ndoInBackground() 返回的值将发送到 onPostExecute()\n您可以随时在 doInBackground() 中调用publishProgress()，以在 UI 线程中执行 onProgressUpdate()\n您可以随时取消任何线程中的任务\n\n## 附录\n[Processes And Threads](https://developer.android.com/intl/zh-cn/guide/components/processes-and-threads.html)\n[Android--多线程之进程与线程](http://www.cnblogs.com/plokmju/p/android_ProcessOrThread.html)","source":"_posts/processes-and-threads.md","raw":"title: Android之进程和线程\ndate: 2015-11-03 14:10:23\ntags:  [Processes,Threads]\ncategory: Android\n---\n## 进程\n## 线程\n应用启动时，系统会为应用创建一个名为“主线程”的执行线程。 此线程非常重要，因为它负责将事件分派给相应的用户界面小工具，其中包括绘图事件。 此外，它也是应用与 Android UI 工具包组件（来自 android.widget 和 android.view 软件包的组件）进行交互的线程。因此，主线程有时也称为 UI 线程。\n\n系统绝对不会为每个组件实例创建单独的线程。运行于同一进程的所有组件均在 UI 线程中实例化，并且对每个组件的系统调用均由该线程进行分派。因此，响应系统回调的方法（例如，报告用户操作的 onKeyDown() 或生命周期回调方法）始终在进程的 UI 线程中运行。\n<!--more-->\n例如，当用户触摸屏幕上的按钮时，应用的 UI 线程会将触摸事件分派给小工具，而小工具反过来又设置其按下状态，并将无效请求发布到事件队列中。UI 线程从队列中取消该请求并通知小工具应该重绘自身。\n\n在应用执行繁重的任务以响应用户交互时，除非正确实施应用，否则这种单线程模式可能会导致性能低下。 特别地，如果 UI 线程需要处理所有任务，则执行耗时很长的操作（例如，网络访问或数据库查询）将会阻塞整个 UI。一旦线程被阻塞，将无法分派任何事件，包括绘图事件。从用户的角度来看，应用显示为挂起。 更糟糕的是，如果 UI 线程被阻塞超过几秒钟时间（目前大约是 5 秒钟），用户就会看到一个让人厌烦的“应用无响应”(ANR) 对话框。如果引起用户不满，他们可能就会决定退出并卸载此应用。\n\n此外，Android UI 工具包并非线程安全工具包。因此，您不得通过工作线程操纵 UI，而只能通过 UI 线程操纵用户界面。因此，Android 的`单线程模式`必须遵守两条规则：\n\n* 不要阻塞 UI 线程\n* 不要在 UI 线程之外访问 Android UI 工具包\n\n### 工作线程\n\n根据上述单线程模式，要保证应用 UI 的响应能力，关键是不能阻塞 UI 线程。如果执行的操作不能很快完成，则应确保它们在单独的线程（“后台”或“工作”线程）中运行。\n\n例如，以下代码演示了一个点击侦听器从单独的线程下载图像并将其显示在 ImageView 中：\n```java\npublic void onClick(View v) {\n    new Thread(new Runnable() {\n        public void run() {\n            Bitmap b = loadImageFromNetwork(\"http://example.com/image.png\");\n            mImageView.setImageBitmap(b);\n        }\n    }).start();\n}\n```\n乍看起来，这段代码似乎运行良好，因为它创建了一个新线程来处理网络操作。 但是，它违反了单线程模式的第二条规则：不要在 UI 线程之外访问 Android UI 工具包—此示例从工作线程（而不是 UI 线程）修改了 ImageView。这可能导致出现不明确、不可预见的行为，但要跟踪此行为困难而又费时。\n\n为解决此问题，Android 提供了几种途径来从其他线程访问 UI 线程。以下列出了几种有用的方法：\n```java\nActivity.runOnUiThread(Runnable)\n```\n```java\nView.post(Runnable)\n```\n```java\nView.postDelayed(Runnable, long)\n```\n例如，您可以通过使用 View.post(Runnable) 方法修复上述代码：\n```java\npublic void onClick(View v) {\n    new Thread(new Runnable() {\n        public void run() {\n            final Bitmap bitmap = loadImageFromNetwork(\"http://example.com/image.png\");\n            mImageView.post(new Runnable() {\n                public void run() {\n                    mImageView.setImageBitmap(bitmap);\n                }\n            });\n        }\n    }).start();\n}\n```\n现在，上述实现属于线程安全型：在单独的线程中完成网络操作，而在 UI 线程中操纵 ImageView。\n\n但是，随着操作日趋复杂，这类代码也会变得复杂且难以维护。 要通过工作线程处理更复杂的交互，可以考虑在工作线程中使用 Handler 处理来自 UI 线程的消息。当然，最好的解决方案或许是扩展 AsyncTask 类，此类简化了与 UI 进行交互所需执行的工作线程任务。\n\n使用 AsyncTask\n\nAsyncTask 允许对用户界面执行异步操作。它会先阻塞工作线程中的操作，然后在 UI 线程中发布结果，而无需您亲自处理线程和/或处理程序。\n\n要使用它，必须创建 AsyncTask 子类并实现 doInBackground() 回调方法，该方法将在后台线程池中运行。要更新 UI，必须实现 onPostExecute() 以传递 doInBackground() 返回的结果并在 UI 线程中运行，这样，您即可安全更新 UI。稍后，您可以通过从 UI 线程调用 execute() 来运行任务。\n\n例如，您可以通过以下方式使用 AsyncTask 来实现上述示例：\n```java\npublic void onClick(View v) {\n    new DownloadImageTask().execute(\"http://example.com/image.png\");\n}\n\nprivate class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {\n    /** The system calls this to perform work in a worker thread and\n      * delivers it the parameters given to AsyncTask.execute() */\n    protected Bitmap doInBackground(String... urls) {\n        return loadImageFromNetwork(urls[0]);\n    }\n    \n    /** The system calls this to perform work in the UI thread and delivers\n      * the result from doInBackground() */\n    protected void onPostExecute(Bitmap result) {\n        mImageView.setImageBitmap(result);\n    }\n}\n```\n现在 UI 是安全的，代码也得到简化，因为任务分解成了两部分：一部分应在工作线程内完成，另一部分应在 UI 线程内完成。\n\n下面简要概述了 AsyncTask 的工作方法，但要全面了解如何使用此类，您应阅读 AsyncTask 参考文档：\n\n可以使用泛型指定参数类型、进度值和任务最终值\n方法 doInBackground() 会在工作线程上自动执行\nonPreExecute()、onPostExecute() 和 onProgressUpdate() 均在 UI 线程中调用\ndoInBackground() 返回的值将发送到 onPostExecute()\n您可以随时在 doInBackground() 中调用publishProgress()，以在 UI 线程中执行 onProgressUpdate()\n您可以随时取消任何线程中的任务\n\n## 附录\n[Processes And Threads](https://developer.android.com/intl/zh-cn/guide/components/processes-and-threads.html)\n[Android--多线程之进程与线程](http://www.cnblogs.com/plokmju/p/android_ProcessOrThread.html)","slug":"processes-and-threads","published":1,"updated":"2016-03-17T00:44:06.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr860033zspk9ouwh9ux","thumbnailImageUrl":null},{"title":"EditText输入手机号自动带空格","date":"2015-07-08T16:00:00.000Z","_content":"\n转载：http://www.jcodecraeer.com/plus/view.php?aid=3163\n\n在android开发过程中，经常会要求用户输入手机号，为了便于观看，我们都会已135 xxxx xxxx这种格式展示。\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/20150709_phone_space.png)\n\n<!-- more -->\n\n```js\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:maxLength=\"13\"\n        android:inputType=\"numberSigned\" />\n\n```\n\n```java\nfinal EditText editText = (EditText) findViewById(R.id.editText);\n        editText.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence charSequence, int start, int before, int count) {\n                if (charSequence == null || charSequence.length() == 0)\n                    return;\n                StringBuilder stringBuilder = new StringBuilder();\n                for (int i = 0; i < charSequence.length(); i++) {\n                    if (i != 3 && i != 8 && charSequence.charAt(i) == ' ') {\n                        continue;\n                    } else {\n                        stringBuilder.append(charSequence.charAt(i));\n                        if ((stringBuilder.length() == 4 || stringBuilder.length() == 9)\n                                && stringBuilder.charAt(stringBuilder.length() - 1) != ' ') {\n                            stringBuilder.insert(stringBuilder.length() - 1, ' ');\n                        }\n                    }\n                }\n                if (!stringBuilder.toString().equals(charSequence.toString())) {\n                    int index = start + 1;\n                    if (stringBuilder.charAt(start) == ' ') {\n                        if (before == 0) {\n                            index++;\n                        } else {\n                            index--;\n                        }\n                    } else {\n                        if (before == 1) {\n                            index--;\n                        }\n                    }\n                    editText.setText(stringBuilder.toString());\n                    editText.setSelection(index);\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n    }\n```\n","source":"_posts/phone_space.md","raw":"title: EditText输入手机号自动带空格\ndate: 2015-07-09\ncategories: [Android]\ntags: [Android,SQLite]\n---\n\n转载：http://www.jcodecraeer.com/plus/view.php?aid=3163\n\n在android开发过程中，经常会要求用户输入手机号，为了便于观看，我们都会已135 xxxx xxxx这种格式展示。\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/20150709_phone_space.png)\n\n<!-- more -->\n\n```js\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:maxLength=\"13\"\n        android:inputType=\"numberSigned\" />\n\n```\n\n```java\nfinal EditText editText = (EditText) findViewById(R.id.editText);\n        editText.addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence charSequence, int start, int before, int count) {\n                if (charSequence == null || charSequence.length() == 0)\n                    return;\n                StringBuilder stringBuilder = new StringBuilder();\n                for (int i = 0; i < charSequence.length(); i++) {\n                    if (i != 3 && i != 8 && charSequence.charAt(i) == ' ') {\n                        continue;\n                    } else {\n                        stringBuilder.append(charSequence.charAt(i));\n                        if ((stringBuilder.length() == 4 || stringBuilder.length() == 9)\n                                && stringBuilder.charAt(stringBuilder.length() - 1) != ' ') {\n                            stringBuilder.insert(stringBuilder.length() - 1, ' ');\n                        }\n                    }\n                }\n                if (!stringBuilder.toString().equals(charSequence.toString())) {\n                    int index = start + 1;\n                    if (stringBuilder.charAt(start) == ' ') {\n                        if (before == 0) {\n                            index++;\n                        } else {\n                            index--;\n                        }\n                    } else {\n                        if (before == 1) {\n                            index--;\n                        }\n                    }\n                    editText.setText(stringBuilder.toString());\n                    editText.setSelection(index);\n                }\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n\n            }\n        });\n    }\n```\n","slug":"phone_space","published":1,"updated":"2016-03-17T00:44:06.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr880039zspkd59y729l","thumbnailImageUrl":null},{"title":"【转】九十九段精彩的人生感悟","date":"2014-10-13T09:01:20.000Z","_content":"## 《人人需要智慧》\n　　托尔斯泰认为：\n　　“智慧就是懂得生活的任务\n　　以及怎样去完成”。\n　　一个人能够正确评价环境，\n　　能够了解自己的长处和短处，\n　　能够知道自己生活的意义，\n　　能够履行自己的责任，\n　　能够以积极心态去解决困难，\n　　能够知晓别人并与之和睦相处……\n　　这就是人生智慧。\n　　`每日提醒：人人都可以成为智者。`\n　　`人生顿悟：智慧可以照亮人生之路。`\n\n\n## 《正确认识自己》\n　　《生活之路》忠告我们：\n　　“在了解上帝之前，\n　　人必须先要了解自己”。\n　　当我们心平气和地准备学习智慧，\n　　努力去争取做一个智慧人士的时候，\n　　首要的任务是要客观公正地评价自己。\n　　“我是谁？”“我的人生是为了什么？”\n　　“我为什么会痛苦？”\n　　“我的立身资本是什么？”\n　　“我的弱点和缺点在哪里？”……\n　　`每日提醒：缺什么，补什么。`\n　　`人生顿悟：学习`\n\n<!--more-->\n\n## 《守住自己》\n　　有时你羡慕某人位居高位，\n　　显赫风光无比，\n　　真后悔当时怎么不留机关好好努力；\n　　有时你羡慕某人经商不久，\n　　就积累财富无数，\n　　真后悔怎么没有下海经商；\n　　有时你羡慕某人工作舒适，\n　　悠闲自得，轻松自在，\n　　真后悔自己还置身于繁杂的环境之中……\n　　你越是这样思想，越会活得没有人样。\n　　`每日提醒：不要盲目与人攀比。`\n　　`人生顿悟：你就是你。`\n\n\n## 《经营自己的长处》\n　　每个人都有潜在的杰出的才能，\n　　只不过有时自己和别人没有发现而已，\n　　知道自己在某个方面很优越，\n　　不仅使你充满自信，\n　　而且会让你拥有一块立身之地，\n　　不要丢掉自己的兴趣和长项，\n　　否则你会处处不如意，\n　　以自己的短处去谋生，\n　　你会被贬的一文不值，\n　　切记：宝贝放错了地方也是废物。\n　　`每日提醒：外面 的世界很精彩，也很无奈。`\n　　`人生顿悟：互补短长，扬长避短。`\n\n\n## 《别沉浸于对过眼烟云东西的追逐》\n　　有得必有失，得失总平衡。\n　　追求虚无的浮名，\n　　一生就会注满痛苦的铅云。\n　　猛回头，短暂一生匆匆已过，\n　　而生活中最应珍惜和享受的，\n　　却一点儿也没得到，\n　　许多人为此失落，为此追悔。\n　　人只有在生命的尽头，\n　　才会懊悔：为了追求无聊的东西，\n　　而丢失了自己的许多东西。\n　　`每日提醒：得到了，也失去了。`\n   　 `人生顿悟：顺其自然。`\n\n\n## 《无欲则刚》\n　　没有刻意追求的欲望，\n　　就不会在意别人的眼色，\n　　就会一身轻松，无拘无束，\n　　不为违心献媚而烦心。\n　　不要做欲望的奴隶，\n　　否则一生终无宁日。\n　　卑鄙小人最善于窥视别人的心思，\n　　利用别人的欲望和所求，\n　　达到自己不可告人的目的。\n　　不让别人牵着自己的鼻子走。\n　　`每日提醒：善去不良欲望。`\n　　`人生顿悟：不图虚荣。`\n\n\n## 《过好每一天》\n　　许多智慧人士劝告：\n　　“最重要的是今天的心”。\n　　何必为痛苦的悔恨而丧失现在的心情，\n　　何必为莫名的忧虑而惶惶不可终日，\n　　过去的已经一去不复返\n　　再去怎么悔恨也无济于事。\n　　未来的还是渴望而不可及，\n　　再去怎么忧虑也是空悲伤。\n　　过去的经验要总结，\n　　未来的风险要预防。\n　　`每日提醒：“今天心，今天事，现在人”最为重要。`\n　　`人生顿悟：不想无用的事。`\n\n\n## 《说话多用“您‘字，少用”我“字》\n　　许多人总是关心自己的事务，\n　　很少有闲心去顾及不相干的事。\n　　与人交谈有艺术，\n　　“您”字多用生笑意，\n　　“我”字多用失欢乐。\n　　以对方话题交谈，\n　　越谈会越投机；\n　　以己方话题交谈，\n　　越谈会越觉乏味。\n　　“我”字当头，烦恼不尽。\n　　`每日提醒：说话总围绕“我”字，是浅薄的表现。`\n　　`人生顿悟：提高交流技巧。`\n\n\n## 《谨慎是永恒的守则》\n　　葛拉西安的《智慧书》告诉我们：\n　　“闲者脱离忧虑和窘困，\n　　并且显示出对自我的控制。”\n　　不要在胸膛上开窗户，\n　　而要让双手长眼睛。\n　　放纵自己的言语，\n　　会惹来不必要的麻烦；\n　　放纵自己的行为，\n　　会招来不必要的灾难。\n　　喋喋不休和轻举妄动是愚蠢的表示。\n　　`每日提醒：谦虚谨慎，巧避灾难。`\n　　`人生顿悟：多听少说勤思考。`\n\n\n## 《无法逃避现实》\n　　天堂无论多么幸福，\n　　你也不会直接去天堂，\n　　地狱无论多么悲惨，\n　　你也不会直接陷地狱；\n　　现实永远介于天堂与地狱之间，\n　　人们总是挣扎在苦乐的海洋。\n　　对于尘世的冷漠，\n　　只会增加自身的痛苦，\n　　睁眼好好看一看，\n　　没有烦心的人绝不存在。\n　　`每日提醒：逃避不是解决矛盾的办法。`\n　　`人生顿悟：勇敢地面对现实。`\n　　\n## 《不要总疑春色在人家》\n　　自己的伤痛自己最清楚，\n　　自己的哀叹自己最明白，\n　　自己的快乐自己最感受。\n　　也许自己眼中的地狱，\n　　却是别人眼中的天堂；\n　　也许自己眼中的天堂，\n　　却是别人眼中的地狱。\n　　生命就是这般的滑稽。\n　　一个人有一个人的活法，\n　　关键在于心态的调整。\n　　`每日提醒：拥有自我，过好自己的生活。`\n　　`人生顿悟：不攀不比`\n\n\n## 《隐忍别人的缺点》\n　　金无赤金，人无完人，\n　　天然的宝玉总带斑点，\n　　只有人造的才会洁白无暇。\n　　总拿自己的优点与别人的缺点比较，\n　　越比越会感觉不顺眼，\n　　越不顺眼越会感觉上火。\n　　多以自己之长善补别人之短，\n　　多看别人的长处，\n　　越看越会顺眼，\n　　越处越会融洽。\n　　`每日提醒：相互对抗不如相互合作。`\n　　`人生顿悟：优势互补`\n\n\n## 《不要轻视依赖于你的人》\n　　做人要尽量自己独立，\n　　而对别人却要多给予关切。\n　　被人依赖是件好事，\n　　起码说明你是受人信赖，\n　　不可或缺，有主见，\n　　又有能力和水平。\n　　试想：一个无才无能之人，\n　　谁会去依靠呢？\n　　不要伤害依赖于你的人的自尊心，\n　　因为不独立，使其更敏感。\n　　`每日提醒：多一份关爱，就多一份友情。`\n　　`人生顿悟：厚爱有余`\n\n\n## 《别醉心宣扬别人的恶名》\n　　对于别人的过失，\n　　采取幸灾乐祸和津津乐道的方式，\n　　也许你能得到短暂的快意，\n　　却无法掩盖你的愚蠢。\n　　期望于广告他人的污点，\n　　来掩饰自己的不足，\n　　证明自己也是声名狼籍。\n　　一个人越是与发臭的事件为伴，\n　　他自己越会臭不可闻。\n　　总控告别人的人也会恶名远扬。\n　　`每日提醒：不散布谣言。`\n　　`人生顿悟：不说三道四。`\n\n\n## 《当心丑态百出》\n　　一个原本并不高尚的人，\n　　偶而一个机会，\n　　使他位居一定高位，\n　　于是轻飘飘，\n　　不知自己姓什么。\n　　一个原本很贫困的人，\n　　偶遇一笔横财，\n　　使他过上奢侈的生活，\n　　于是马上显露“爆发户”的本性……\n　　这种浅陋者生活中还少吗？！\n　　`每日提醒：有福不可享尽，更何况本身福分就浅。`\n　　`人生顿悟：不要不知天高地厚。`\n\n\n## 《不图虚荣》\n　　虚荣是男人的自残钢刀，\n　　虚荣是女人的自杀绳索。\n　　本身贫困，偏要假装奢华，\n　　本身位低，偏要假装高雅，\n　　本身自私，偏要假装大方……\n　　于是自欺欺人的丑剧就会不断。\n　　打肿脸充胖子，\n　　越活越会失掉自我，\n　　结果反误了卿卿小命。\n　　`每日提醒：假的总是假的。`\n　　`人生顿悟：真实。`\n\n\n## 《最重要的是安慰自己的心灵》\n　　自己的情绪统治自己的生活，\n　　自己的生活决定自己的命运。\n　　有权不一定有好心情，\n　　高处不胜寒；\n　　有钱不一定有好心情，\n　　谋财害命须常提防；\n　　有貌不一定有好心情，\n　　自古“红颜多薄命”。\n　　摆脱心灵的羁绊，\n　　随时清扫心灵的尘埃。\n　　`每日提醒：积极心态，快乐生活。`\n　　`人生顿悟：心态好。`\n\n\n## 《别忽视小事的重要性》\n　　不要以事小而不为，\n　　不要以恶小而为之。\n　　人生的成功，\n　　多在于事事认真。\n　　人生的失败，\n　　多在于对无足轻重事项的冷漠。\n　　许多人考察一个人，\n　　总是以小事来观察，\n　　若是小事不做，大事又不能，\n　　则是不可重用之人。\n　　`每日提醒：机会常会符合在小事上。`\n　　`人生顿悟：从不放弃小事。`\n\n\n## 《不要先说不可能》\n　　遇事不经思考就一口拒绝，\n　　就意味着你已丧失成功的机会。\n　　没有冷静的思考，\n　　没有仔细的分析，\n　　却给人以冷脸，\n　　“这种事情是不可能做到的。”\n　　这种处世方法能不失败吗？\n　　“让我试一试再说。”\n　　这是智者的技巧。\n　　其实自己的潜能是无穷无尽的。\n　　`每日提醒：拒绝是无能的标志。`\n　　`人生顿悟：尝试。`\n\n\n## 《一视同仁》\n　　我们常常能原谅一贯犯错误的人，\n　　却不会原谅偶而犯一次错误的人。\n　　从来不会向你说好话的人，\n　　偶而一句好话会让你激动不已。\n　　惯于对你顺言顺耳说好话的人，\n　　偶而一句恶语会让你愤怒万分。\n　　这里的毛病不在于别人，\n　　还是自己的判断和思考出了问题。\n　　亲则疏，远则香，\n　　这是自己的心理在作怪。\n　　`每日提醒：知人者智，知己者明。`\n　　`人生顿悟：冷静分析。`\n\n## 《克制冲动》\n　　心血来潮，就会激动不已，\n　　头脑发热，就会鲁莽行事。\n　　那些平庸的激情，\n　　多会点燃愚蠢的火把，\n　　照亮的是自己的影子，\n　　灼伤的是无辜的看客。\n　　冲动会使聪明变疯狂，\n　　冲动会让结果变苦涩。\n　　激情是冲动的借口，\n　　是产生罪恶的替罪羊。\n　　每日提醒：不要莫名的冲动。\n　　人生顿悟：冷静。\n\n\n## 《自恃清高，得不偿失》\n　　自以为高人一等，\n　　就会轻易地去侮辱别人，\n　　就会瞧不起一切。\n　　自以为贵为骄子，\n　　就会把别人看得微不足道，\n　　就不能心平气和与之相处。\n　　骄傲之心只会增加别人对你的怨恨，\n　　轻薄之心只会增添别人对你的愤怒。\n　　无论何时何地，\n　　都不能要这种结仇行为。\n　　每日提醒：剥夺别人等于剥夺自己。\n　　人生顿悟：和睦相处。\n\n\n## 《别错误的高估自己》\n　　愚蠢的人总是低估别人，\n　　高看自己一眼，\n　　认为天下皆凡人，\n　　惟有自己最高贵，\n　　于是就会占有别人的功劳，\n　　而心安理得；\n　　于是就会掠夺别人的财富，\n　　而心满意足。\n　　头脑发昏时，\n　　就有“多行不义必自毙”之后果。\n　　每日提醒：高估越多，摔得越惨。\n　　人生顿悟：客观评价。\n\n\n## 《善于遮盖别人的不足》\n　　托尔斯泰曾一针见血地说：\n　　“人们常常想用发现别人的缺点来表现自己，\n　　但他们用这种方式表明的只是他们的无能。”\n　　“一个人越聪明、越善良，\n　　他看到别人身上的美德越多；\n　　而人越愚蠢、越恶毒，\n　　他看到别人身上的缺点也越多。”\n　　能给别人台阶，自己也有台阶，\n　　能给别人面子，自己越有面子。\n　　撕破别人脸面，别人会肆无忌惮。\n　　每日提醒：遮丑是美德。\n　　人生顿悟：行善得善。\n\n\n## 《麻醉自己是最大的愚蠢》\n　　为了逃避烦恼的尘世，\n　　而采用麻醉自己的方式，\n　　实在是傻瓜才干的蠢事。\n　　以酒浇愁愁更愁，\n　　“酒伤肝”的悲剧不能不知？\n　　以毒品麻醉自己，\n　　等于让毒蛇缠绕在身。\n　　以吞云吐无雾刺激自己，\n　　“肺癌”的魔鬼紧根其后，\n　　麻醉只是暂时的现象。\n　　每日提醒：不可熄灭心中的明灯。\n　　人生顿悟：人越醉会越痛苦。\n\n## 《此路不通走另路》\n　　千万不要一条道奔到黑，\n　　不撞南墙不回头。\n　　埋没自己才能的人，\n　　往往是自己的偏见，\n　　招致失败的厄运，\n　　恰恰是自己的认死理思维。\n　　现代社会有许多活法，\n　　何必拘泥于一种形式，\n　　换一条最适合自己的路走，\n　　肯定会快乐又幸福。\n　　每日提醒：别活的太沉重、太窝囊。\n　　人生顿悟：条条道路通罗马。\n\n\n## 《心境不同，效果不一》\n　　以积极心态生活，\n　　就会发现许多美妙的东西；\n　　以消极心态生活，\n　　就会发现许多沮丧的东西；\n　　生活的快乐与烦恼，\n　　全在于你对生活的态度。\n　　乐观向上，好运不断，\n　　失落沉沦，厄运陪伴。\n　　不妨换一个角度来思考。\n　　每日提醒：好的心态决定好的命运。\n　　人生顿悟：凡事往好处想。\n\n\n## 《做一张生命的清单》\n　　当你痛苦万分时，\n　　不妨自己悄悄列一张清单。\n　　想一想“人生在世，哪些还是要做的？”\n　　有了这个“临终”的念头，\n　　你就没有时间去烦恼。\n　　就会专心致志，\n　　去完成自己认为要遗憾的事项。\n　　人的充实人的快乐，\n　　全在于实现梦想的努力之中。\n　　别把梦想带进坟墓。\n　　每日提醒：无聊，清闲，就会痛苦。\n　　人生顿悟：把梦想变为现实。\n\n\n## 《别图形式》\n　　有情人心中有爱，\n　　天天都是情人节，\n　　为什么非要得到形式上的东西，\n　　一枝玫瑰和一盒巧克力？\n　　心中并不在乎你，\n　　何必又为特殊节日的一次“义举”，\n　　而欣喜若狂呢？！\n　　有人精辟地指出：\n　　“若她爱你，会拼命地节省你的钱，\n　　相反，则会拼命地浪费你的钱财。”\n　　每日提醒：透过现象看本质。\n　　人生顿悟：爱是长久的事。\n\n\n## 《抱怨无用》\n　　抱怨要是作为偶而发泄一下，\n　　也是十分必要的。\n　　可怕的是，抱怨更会增加烦恼，\n　　只能向别人显示你的无能。\n　　抱怨是一种致命的消极心态，\n　　一旦抱怨成为恶习，\n　　则暗无天日，\n　　不仅自己好心境全无，\n　　而且别人跟着也倒霉，\n　　抱怨是怯懦的标志。\n　　每日提醒：自己的心痛只能自己疗。\n　　人生顿悟：乐观。\n　　\n## 《小心与“太阳型”的人为伴》\n　　适当的距离，\n　　不仅能够得到亮光，\n　　而且感到很温暖，\n　　相处距离太近，\n　　不仅会灼伤你自己，\n　　而且把你的才能“清洗”的得一无所有。\n　　要是你也想成为“太阳”，\n　　则一山容不了二虎，\n　　而虎相争必有恶斗，\n　　何不事前另谋高就。\n　　每日提醒：距离产生美感。\n　　人生顿悟：亲则疏。\n\n\n## 《别期望人生的公平》\n　　公平是相对的，\n　　要求天下皆公平，\n　　是痴人的梦想。\n　　不必为不公平而愤愤不平，\n　　最重要的是今天努力的心态和行动。\n　　你很有才华，却没有施展，\n　　为此怀才不遇，\n　　并且天天怨天怨地，\n　　这有什么用呢？\n　　反而会使心情更糟。\n　　每日提醒：轻轻收起你的傲骨，先踏踏实实工作。\n　　人生顿悟：努力。\n\n\n## 《今天的学习是明天的欢笑》\n　　现代社会，知识更新已成为时尚，\n　　谁不意识到这一点，谁就会沦为时代的“乞丐”。\n　　学习是为了明天，\n　　努力是为了今天，\n　　少壮不努力，老大徒伤悲。\n　　与其无所事事空悲叹，\n　　不如心平气和多学习，\n　　学习能去烦恼，又有未来的收获。\n　　每日提醒：及时充电，不断学习。\n　　人生顿悟：知识是力量。\n\n\n## 《生命的质量在于事业的追求》\n　　黑格尔曾经指出：\n　　“一种人毕生致力于拥有，\n　　另一种人毕生致力于有所作为”。\n　　一心渴望拥有，\n　　一旦没有达到目的，\n　　就会失落、痛苦和绝望。\n　　心无旁鹜，专心于事业的追求，\n　　就会忘掉许多烦恼，\n　　找到许多努力过程中的快乐。\n　　默默耕耘的人其实是最智慧的人。\n　　每日提醒：一份耕耘，一份收获。\n　　人生顿悟：有事做是种欢乐。\n\n\n## 《平淡是生活永恒的主题》\n　　生活的真谛在于理解，\n　　生活的诀窍在于理智，\n　　刻意追求卓越的生活，\n　　就会陷入庸人自扰式的苦海。\n　　整天都是鲜花和掌声，\n　　这样的日子也会腻烦。\n　　没有鲜花和掌声，\n　　这种清淡的日子也悠闲自得。\n　　一个耐不了平淡如水的人，\n　　肯定没有好日子过。\n　　每日提醒：一个人越想过特别的生活，越会失掉原来幸福的生活。\n　　人生顿悟：平凡是福。\n\n\n## 《世上不如意事十之八九》\n　　谁都有痛苦和烦恼，\n　　只不过程度大小不一而已。\n　　有些人善于变痛苦为动力，\n　　善于变烦恼为快乐。\n　　有些人却深陷不如意的苦海，\n　　越活越会感到没有意思。\n　　“祝你吉祥如意”，\n　　仅是美丽的谎言，\n　　改变的是自己的心态，\n　　不变的是事物的本象。\n　　每日提醒：烦恼是永恒的主题。\n　　人生顿悟：不耐烦更有烦恼。\n\n\n## 《凡事多往好处想》\n　　忙碌有忙碌的好处，\n　　可以无暇于烦恼和琐事，\n　　清闲有清闲的好处，\n　　可以留点时间做自己的事。\n　　位居高位自有其好处，\n　　可以多为人民服务。\n　　平常岗位多有其好处，\n　　可以免去“焦点人物”的苦恼。\n　　心平气和最重要，\n　　顺其自然是常理。\n　　每日提醒：往好处想可以产生积极心态。\n　　人生顿悟：换位思考。\n\n\n## 《见好就收》\n　　不要等到自己已是落叶败枝，\n　　还留恋不舍地故做多情。\n　　“在事情离开你之前先离开事情”，\n　　这是智者的金言劝告。\n　　葛拉西安更是善意的忠告：\n　　“不要等到你变成西下的夕阳”。\n　　在掌声和鲜花中谢幕，\n　　自己和别人还留有美好的记忆。\n　　在讥笑和愤怒中迫退，\n　　不幸和痛苦会时刻缠绕。\n　　每日提醒：别让自己变成一匹死马。\n　　人生顿悟：留有余地。\n\n## 《及时调整心态》\n　　此一时，彼一时，\n　　到什么山上唱什么歌，\n　　退位要有退位心态，\n　　在岗要有在岗的心情。\n　　要求别人什么时候都一样看待你，\n　　这是多么的不切实际，\n　　也是故做多情的一厢情愿。\n　　在位时门前车水马龙，\n　　不要为此沾沾自喜；\n　　退位时门前冷清不要自找痛苦。\n　　每日提醒：花开花落，自然规律。\n　　人生顿悟：平和心态。\n\n\n## 《分阶段实施宏大计划》\n　　志当存高远。\n　　志向远大而未见行动，\n　　却是失败的根源。\n　　不要被巨大的目标所威吓，\n　　完全可以把大目标肢解。\n　　就象爬山一样，\n　　望着远方的叠叠山峰，\n　　你可能已失去攀登的勇气，\n　　一旦当你努力爬上一个小山峰，\n　　就有成功的喜悦和继续攀登的信心。\n　　每日提醒：大计划一旦变成无数个小计划，就十分容易达到。\n　　人生顿悟：锲而不舍。\n　　\n## 《做人不要张狂》\n　　傲慢骄横，不可一世，\n　　咄咄逼人，盛气凌人，\n　　没有一个有好下场的。\n　　总唱高调容易招致怨恨，\n　　张狂示人容易召来攻击。\n　　天外有天，山外有山，\n　　做人还得低调谨慎，\n　　有点钱就烧的慌，\n　　有点权就不知姓什么，\n　　是最浅薄的人。\n　　每日提醒：在未做好人之前，先不要把自己变成神。\n　　人生顿悟：加强修养。\n\n\n## 《学会倾听是最大的智慧》\n　　越是当你滔滔不绝的时候，\n　　你的愚蠢越会暴露无疑。\n　　越是当你洗耳恭听的时候，\n　　你的智慧越会快乐生长。\n　　聆听是取人之长，\n　　补己之短的良方；\n　　聆听是沟通双方，\n　　尊重对方的桥梁；\n　　聆听是抛弃错误，\n　　远离懊悔的法宝。\n　　每日提醒：沉默能省去许多烦恼。\n　　人生顿悟：多听少说。\n\n\n## 《不义之财不可取》\n　　君子取财，必须取之有道，\n　　无道的财物再多，\n　　也是残害自己的利剑。\n　　为浊富不若为清贫，\n　　与其守着金山银山惶惶不可终日，\n　　不如粗茶淡饭却食之舒坦甘美。\n　　人生带不走的是财富，\n　　留下来的却是名声，\n　　遗留后代应是道德和教育，\n　　而不是蚀其心灵的财富。\n　　每日提醒：不做金钱的奴隶。\n　　人生顿悟：要有正确的金钱观。\n\n\n## 《相互对抗不如相互合作》\n　　俗话说：\"人抬人无价直宝\".\n　　相互对抗天地窄，\n　　相互合作天地广。\n　　相互对抗会相互拆台，\n　　就会自设障碍，\n　　自己掉入自己设置的陷阱。\n　　相互合作就会相互补台，\n　　就会共同搭台，\n　　大家一起愉快地达到双赢的目的。\n　　不要仇视心，多存合作心。\n　　每日提醒：精诚合作，事半功倍。\n　　人生顿悟：扬长避短。\n\n\n## 《减少不必要的应酬》\n　　整天忙于应酬，\n　　看上去是充实，\n　　实质是慢性自杀。\n　　应酬不仅浪费宝贵时间，\n　　而且暴饮暴食还会提前夭折，\n　　另外有可能增添口舌的额外烦恼。\n　　不要热衷于你来我往，\n　　不要热心于吃吃喝喝，\n　　多留点时间勤于思考，\n　　勤于学习，勤于工作。\n　　每日提醒：别把人生的成功寄托于应酬之上。\n　　人生顿悟：多做自己应做的事。\n\n## 《知识是立身之本》\n　　人们多会轻蔑不学无术之人，\n　　人们多会小瞧无知无识之人，\n　　现代社会的贫困，\n　　多是因为愚昧缺乏知识造成的。\n　　人没有财富不可怕，\n　　可怕的是知识的缺乏。\n　　投资教育是最好的投资，\n　　给予孩子以知识，\n　　可以使他走遍天下都不怕，\n　　没有知识的人寸步难行。\n　　每日提醒：少时不学习，长大多悲痛。\n　　人生顿悟：学以致用。\n\n## 《没有健康什么都谈不上》\n　　健康是一切的基础，\n　　离开健康的身体，\n　　去说事业、金钱、爱情等事项，\n　　都是无源之水。\n　　健健康康是福，\n　　平平安安也是福，\n　　不要牺牲健康去换取金钱，\n　　到时痛悔莫及。\n　　心理健康比机体健康更重要，\n　　健康还在于日常的保养。\n　　每日提醒：无病无灾是多么大的幸福。\n　　人生顿悟：心身并养。\n\n\n## 《不可盲目攀比》\n　　你就是独特的你自己，\n　　何必与别人盲目攀比。\n　　以自己之短比别人所长，\n　　就会越比越觉窝火，\n　　越窝火越会失落、乏味，\n　　以自己之长比别人所短，\n　　就会盲目自恋自大，\n　　就会放着好日子不过，\n　　又会去瞎折腾。\n　　盲目比较是烦恼的圈套。\n　　每日提醒：活出真实的自我来。\n　　人生顿悟：一个人一个活法。\n\n\n## 《具备自我完善的能力》\n　　人在学习阶段，\n　　有老师的不时教诲，\n　　可以随时改进不足。\n　　人在进入社会以后，\n　　就没有学校时的那种福分，\n　　这时要多靠自知之明，\n　　依赖自我反省。\n　　学习是没有止境的，\n　　尤其是自我的改造，\n　　更是没有穷尽的。\n　　每日提醒：孔子曰：吾日三省吾身。\n　　人生顿悟：自省自悟，日超完善。\n\n\n## 《不让命运捏在别人手里》\n　　掘去真实的自我，\n　　放弃自我的长处，\n　　是痛不欲生日子的开始。\n　　何必把宝押在某人身上，\n　　而舍弃自身的学习和努力？！\n　　蠢人总是急功近利，\n　　喜好投机取巧，\n　　恰好中了奸人的圈套，\n　　失去自我的人，\n　　别人的好脸色也不会长久。\n　　每日提醒：提高自身素质最重要。\n　　人生顿悟：自强才能自立。\n\n## 《重要的是做好自己的本职工作》\n　　不去努力立足本职工作，\n　　却去谈什么高远的理想，\n　　策划什么宏伟的成业方案，\n　　全是黄梁美梦式的悲剧。\n　　见异思迁，\n　　一山望着另一山高，\n　　全是人生的误区。\n　　千万不要做本末倒置的事情，\n　　本职工作是自己立身的“根据地”，\n　　丢掉“根据地”会变成“流浪儿”。\n　　每日提醒：别做眼高手低之人。\n　　人生顿悟：踏实努力。\n\n\n## 《好心有时无好报》\n　　俗语说：“行善得善，行恶得恶”，\n　　“种瓜得瓜，种豆得豆”。\n　　但有时好心也会没有好报。\n　　一是施赠人处理不当，\n　　受赠人情面上难以接受，\n　　造成好心无好报的结果。\n　　二是受赠人是个忘恩负义之人，\n　　在受恩时感激不已，\n　　一旦事过早忘九霄云外。\n　　每日提醒：相信自己的好心会有好报。\n　　人生顿悟：做善瞬事要不图回报。\n\n\n## 《吃亏是福》\n　　有经济专家总结炒股经验后认为：\n　　“会吃一分钱的亏，\n　　必是炒股的大赢家”。\n　　人生场上何尝不是如此，\n　　做人太精明，\n　　处处算计别人，\n　　谁还会乐意与你合作？\n　　没有人会自认为是傻瓜，\n　　会甘心情愿受人算计。\n　　俗话说：“傻有傻福，精有精祸”。\n　　每日提醒：聪明反被聪明误\n　　人生顿悟：利益共享\n\n\n## 《克服懒惰》\n　　懒惰是最顽固的敌人，\n　　有时总以笑微微的面貌出现。\n　　精神懒惰比身体懒惰更可恶，\n　　懒惰会毁灭我们的意志。\n　　懒惰是舒适的朋友，\n　　人越舒适越会产生懒惰之心。\n　　勤勉是成功的朋友，\n　　懒惰则是成功的敌人，\n　　我们的荣誉来自于勤勉，\n　　我们的恶名来自于懒惰。\n　　每日提醒：自满自足常是懒惰的借口。\n　　人生顿悟：勤勉。\n\n\n## 《知道人生每阶段的特色》\n　　有人研究认为：\n　　“二十岁的人，\n　　依靠青春吃饭；\n　　三十岁的人，\n　　依靠勤奋吃饭；\n　　四十岁的人，\n　　依靠智慧吃饭；\n　　五十岁的人，\n　　依靠经验吃饭；\n　　六十岁的人则忠告后人……”\n　　每日提醒：把握好每个年龄段的生活。\n　　人生顿悟：智慧加勤奋。\n\n\n## 《学会让生活充满爱》\n　　生活倘若没有爱，\n　　生活就会变成荒芜的戈壁滩，\n　　生活中要是充满爱，\n　　可以抚平许多受伤的心灵，\n　　可以挽救许多沉沦的生命，\n　　可以激励许多彷徨的游子，\n　　可以慰籍许多失败的落魄者……\n　　要想得到别人的爱，\n　　自己首先要学会爱别人。\n　　要是冷漠这个世界，\n　　就无爱意可言。\n　　每日提醒：敞开你的心扉，让彼此的爱河流畅。\n　　人生顿悟：爱是人生的希望。\n\n\n## 《爱出风头是个坏毛病》\n　　人总有妒忌之心，\n　　当你刻意想超过别人，\n　　别人心里就会不舒服。\n　　比如言谈之中的卖弄学问，\n　　就会有意或无意地冒犯别人。\n　　比如衣着时髦漂亮，\n　　就会招惹别人“爱打扮”的风言风语。\n　　切记，有些人不喜欢比他强的人，\n　　一见奇特的人就要攻击，\n　　这种爱诅咒的俗人是不少的。\n　　每日提醒：虚荣心强的人就爱出风头。\n　　人生顿悟：大众心态。\n\n\n## 《百闻不如一见》\n　　根据道听途说的东西，\n　　作为决策的依据，\n　　难免要犯错误。\n　　亲眼所见，亲口所尝，\n　　最有感受力，\n　　最有说服力。\n　　切莫以“秀才不出门，\n　　能知天下事”自居，\n　　越是与众隔绝，\n　　越会瞎指挥。\n　　每日提醒：有调查，就有发言权。\n　　人生顿悟：理论联系实际。\n\n\n## 《三个臭皮匠顶一个诸葛亮》\n　　智慧在哪里？\n　　智慧来自于虚心向别人请教。\n　　孔子曰：“三人行，必有我师”。\n　　当我们放下架子，\n　　不耻下问，\n　　请教每一个专业的行家能手，\n　　我们的智慧就会逐渐丰富起来。\n　　请教可以使我们品味许多东西，\n　　可以提升我们的灵性，\n　　可以利用别人的光芒来照亮自己。\n　　每日提醒：“文殊遇缘则有师”。\n　　人生顿悟：虚心请教、学习。\n\n\n## 《塞翁失马，焉知非福》\n　　“祸兮福所伏，福兮祸所倚”。\n　　“乐极会生悲，否极会泰来”。\n　　看问题不可片面，\n　　要透过现象看本质。\n　　得意时别太忘形，\n　　失意时别太失态。\n　　平安时要看到危险的存在，\n　　艰难时要看到希望的光明。\n　　每日提醒：事物都是一分为二的。\n　　人生顿悟：困难时不悲观。\n\n## 《经常自我检查》\n　　每天早上提醒自己一次，\n　　“哪些该做，哪些又不该做？”\n　　每天晚上又检查自己一次，\n　　“哪些对了，哪些又错了？”\n　　人活在世上，\n　　那能傻吃傻睡，\n　　那能毫无思索。\n　　自我的控制机制健全了，\n　　错误的魔鬼也无法接近你，\n　　做完人很难，少犯错误则易。\n　　每日提醒：避免犯错误。\n　　人生顿悟：勇于自我剖析。\n\n## 《常有理智的闸门》\n　　越是自我感觉良好，\n　　越要提高警惕，\n　　越是权重位显，\n　　越要提防小心。\n　　面对行贿的笑容，\n　　该说“不”字就说“不”。\n　　人的一生中，\n　　有许多事是绝不可以做的。\n　　“要让人不知，\n　　除非己莫为”。\n　　每日提醒：苦酒多是自酝的。\n　　人生顿悟：该拒绝必须拒绝。\n\n## 《别羡慕浊富和邪权》\n　　财富要是来路不明，\n　　难免夜半鬼叫门，\n　　取财要有正当手段，\n　　合法致富、勤劳致富。\n　　职权要是依靠歪门邪道取得，\n　　难免众人不服气。\n　　当官必须德才兼备，\n　　兢兢业业，克己奉公。\n　　“昨天是人，今天是鬼”式的人，\n　　千万别去羡慕。\n　　每日提醒：正常心态，保持自己。\n　　人生顿悟：走自己的路。\n\n\n## 《别在意他人的冷嘲热讽》\n　　有人一针见血的指出：\n　　“一个人只比别人高出一点点，\n　　就会招致别人百般的辱骂；\n　　而一旦当此人高出他人许多，\n　　则辱骂变成了虚伪和低三下四的恭维”。\n　　“远来的和尚好念经”。\n　　同单位之人更容易讽讥伤人，\n　　因为他们更加熟悉你，\n　　更会挑剔你的毛病来掩盖其失落。\n　　每日提醒：坚定地走好自己的路。\n　　人生顿悟：冷眼更能促人奋进。\n\n\n## 《不要极端的爱和恨》\n　　恋人不成，\n　　也要好说好散；\n　　夫妻不成，\n　　也要想想\"毕竟夫妻一场\",\n　　\"一日夫妻百日恩\",\n　　朋友不成，\n　　也要礼貌告别。\n　　昨天的亲密无间，\n　　演变成今天的仇恨满天，\n　　早知今日，何必当初呢？！\n　　每日提醒：适当距离。\n　　人生顿悟：冷静。\n\n## 《不做欲望的奴隶》\n　　每个人都会产生许多欲望，\n　　有些欲望是正常的，\n　　有些欲望则是不正常的，\n　　甚至是邪恶的欲望。\n　　“贪心不足蛇吞象”。\n　　“欲海难填，反误了卿卿小命”。\n　　正常人生的健康之道：\n　　“乐观、营养、运动、节制”。\n　　善除不良欲望是节制的核心。\n　　生活中为贪欲丧命的还少吗？\n　　每日提醒：欲望越大，痛苦越多。\n　　人生顿悟：戒贪欲。\n\n\n## 《人很少会饿死，却会被饱食撑死》\n　　终日饱食，\n　　多会无所事事。\n　　城市富贵病已经很普遍，\n　　“减肥”风已经很流行，\n　　医学专家忠告：\n　　“早上饱，中午好，\n　　晚餐吃个六成饱”。\n　　肥胖引起多种疾病，\n　　已成为现代杀手之一。\n　　许多人终为饱食所累。\n　　每日提醒：过于吃喝多遭罪。\n　　人生顿悟：别贪吃。\n\n## 《贪小失大》\n　　“贪便宜买老牛”，\n　　已是一句古训。\n　　“贪小便宜吃大亏”，\n　　更是一条警句。\n　　处处占便宜，\n　　时时得好处，\n　　表面看是尝到了一点甜头，\n　　实质上却背负了一个恶名。\n　　“做人要肯吃亏“，\n　　只有到成年才能感悟。\n　　每日提醒：眼光别太短浅。\n　　人生顿悟：不占小便宜。\n\n\n## 《衰老是极为自然的事情》\n　　“生”、“老”、“病”、“死”，\n　　虽是人生的无奈，\n　　却是大自然不可违背的规律。\n　　衰老，每个人都有这一天，\n　　年龄的增大不可怕，\n　　可怕的是未老先衰，\n　　人老心不老，\n　　心理年青，人也自然年轻。\n　　年老因有德而善终，\n　　经验是其流传的忠告。\n　　每日提醒：要确保晚节。\n　　人生顿悟：不服老。\n\n\n## 《人人皆有烦恼》\n　　贫困人士有贫困人士的烦恼，\n　　富裕人士有富裕人士的烦恼，\n　　不要认为贫困人士的日子不好过，\n　　其实富裕人士的日子，\n　　也不见得十分好过。\n　　富人的财富越多，\n　　其操心烦恼的事多，\n　　其不得安宁的日子也越多。\n　　贫困人多有清茶一杯的福分，\n　　富裕人可能要冒“绑票”的风险。\n　　每日提醒：好心态就有好心情。\n　　人生顿悟：不攀不比。\n\n## 《无聊多是清闲所致》\n　　极端的清闲，\n　　带来极度的无聊，\n　　闲得发慌，\n　　闲得郁闷，\n　　闲会闲出病来。\n　　整天有事做，\n　　就没有心思去烦恼。\n　　有追求的目标，\n　　就不会无聊郁闷。\n　　多有做事的欢乐是养生之道。\n　　每日提醒：忙碌之余，清闲片刻。\n　　人生顿悟：找事做。\n\n## 《不做金钱的奴隶》\n　　金钱不是万能的，\n　　虽然商品经济不可缺少金钱，\n　　鸟儿系上金钱飞不上蓝天。\n　　金钱一旦变成绳索，\n　　会勒死一个人。\n　　张口金钱，闭口金钱，\n　　不能穷的只剩下金钱。\n　　人的一生不能为挣钱而挣钱，\n　　否则会变成可怕的数字游戏。\n　　金钱要为人类更好的服务。\n　　每日提醒：钱既是好东西，又是害人的东西。\n　　人生顿悟：淡泊。\n\n\n## 《学会简单生活》\n　　有一名人说过：\n　　“你越习惯于奢华的生活，\n　　你就越发陷入被奴役的地位。\n　　因为你的需求越多，\n　　你的自由受到的限制就越大。”\n　　需求越少，生活就越幸福。\n　　这是一条古老的道理，\n　　贪吃是蠢猪的本性，\n　　贪财是笨鸟的习惯\n　　贪权是傻虎的幻梦。\n　　每日提醒：丢掉不该拥有的东西。\n　　人生顿悟：舍弃。\n\n\n## 《不要过于计较别人无端的评价》\n　　没有一幅画是没人评价的，\n　　没有一个人是没人指责的，\n　　你要是沉默寡言，\n　　有人会指责“城府很深”，\n　　你要是善于健谈，\n　　有人又会指责“夸夸其谈”；\n　　你要是赞美别人，\n　　有人会指责“别有用心”，\n　　你要是善于批评，\n　　有人更会暴跳如雷“多管闲事”……\n　　每日提醒：光看别人脸色，你还活不活。\n　　人生顿悟：拥有自我，又不局限于自我。\n\n\n## 《保持简洁》\n　　生活简洁的人，\n　　获得的幸福也越多；\n　　说话简洁的人，\n　　获得的赞誉也越多；\n　　人为没有必要的东西而活，\n　　会越活越沉重。\n　　一句话可以表达，\n　　为什么非要用十句话来罗嗦？\n　　简洁是美德，\n　　只有智慧的人，\n　　才会简洁。\n　　每日提醒：简洁不仅节省时间，而且能去很多烦恼。\n　　人生顿悟：学会简洁。\n\n\n## 《不甘寂寞多烦恼》\n　　人人都有寂寞难熬的时刻，\n　　没有信仰就会心灵寂寞；\n　　没有事做就会清闲烦闷，\n　　刻意自我封闭就会寂寞无援，\n　　灰暗心境更会寂寞一片。\n　　有人能耐得住寂寞，\n　　逐渐能成人生的“正果”\n　　有人耐不住寂寞，\n　　就会头脑发昏，\n　　干出身败名裂的蠢事。\n　　每日提醒：寂寞多是自找的。\n　　人生顿悟：自我修养。\n\n\n## 《任何困难都是有益的》\n　　先苦后甜式的生活，\n　　是最佳的人生模式。\n　　苦难是种财富，\n　　能使人更理解生活，\n　　能使人更明白人生的真谛，\n　　于是越会珍惜人生，\n　　越会热爱生活，\n　　越会奋发向上。\n　　能够从苦难中坦然地走过来，\n　　说明这个人已经很成熟。\n　　每日提醒：苦难能磨练我们的意志。\n　　人生顿悟：人苦志更强。\n\n\n## 《正人先正己》\n　　要求别人做到的，\n　　自己必须首先作到。\n　　言教不如身教，\n　　托尔斯泰认为：\n　　“要让所有人都做的要，\n　　首先必须自己做好。”\n　　你感到生活无味，\n　　要想改造生活，\n　　首先要改造自己对生活的态度，\n　　“微笑示人，充满信心”。\n　　每日提醒：对人严，对己更严。\n　　人生顿悟：自己先做好。\n\n\n## 《人贵有自知之明》\n　　知人者智，知己者明，\n　　人无自知之明，\n　　就会走两个极端：\n　　要么自我感觉良好，\n　　自傲自大，自恋自狂；\n　　要么缺乏自信，\n　　自轻自卑，自贱自暴，\n　　没有自知之明多是轻狂之人，\n　　没有自知之明多有狂妄和轻贱之举。\n　　每日提醒：了解自己比了解别人更重要。\n　　人生顿悟：剖析、完善。\n\n\n## 《失业不失志》\n　　市场经济，竞争时代，\n　　下岗失业已是家常便饭，\n　　从业不敬业，\n　　就会马上下岗失业。\n　　身无一技之长，\n　　也会下岗失业……\n　　下岗不可怕，\n　　可怕的是从此消沉堕落。\n　　重新振作起来，\n　　从头开始，这是大写的人生。\n　　每日提醒：在岗要有失业的忧虑。\n　　人生顿悟：多有谋生的技能。\n\n## 《不要总有不平衡的心理》\n　　多干点工作，\n　　就要讨价还价，\n　　索取过分的报酬，\n　　一旦要求达不到，\n　　心理就失去平衡。\n　　待遇不如别人，\n　　心理就会不平衡，\n　　欲望要求没有满足，\n　　心理更会失去平衡。\n　　不平衡就会烦恼不尽。\n　　每日提醒：要有吃亏精神。\n　　人生顿悟：清淡。\n\n\n## 《不要追逐世俗的荣誉》\n　　一辈子寻找所谓别人认可的东西，\n　　永远痛失自己的欢乐和幸福。\n　　庸俗的评论会湮灭你的个性，\n　　世俗的指点会让你不知所措。\n　　为钱而钱会六亲不认，\n　　为权而权会胆大妄为，\n　　为名而名会巧取强夺。\n　　真实的我在刻意的追逐之中，\n　　会变成碎片随风飘扬，\n　　世俗的我已变得面目可憎。\n　　每日提醒：得到了媚俗，失去了真实。\n　　人生顿悟：坚定信念，拥有自我。\n\n\n## 《知道智慧人的品行》\n　　智慧人让人羡慕，\n　　智慧人谨慎小心，\n　　从不卤莽行事，\n　　或者炫耀健谈。\n　　智慧人睿智自明，\n　　从不事到临头，\n　　才惊慌失措。\n　　智慧人有勇有谋，\n　　勤于思索创造，\n　　自寻快乐和幸福。\n　　每日提醒：榜样的力量是无穷的。\n　　人生顿悟：不断反省自己，不断向别人学习。\n\n\n## 《把好口风关》\n　　不要轻易许诺。\n　　君子一言，驷马难追，\n　　说出来就要做得到。\n　　不要做牛皮王，\n　　否则人人瞧不起你。\n　　不要宣扬别人的隐私，\n　　要善于给别人遮丑，\n　　津津乐道于传播别人的污点，\n　　他人会把你当作市侩似的小妇人。\n　　谨慎言语什么时候都没有错。\n　　每日提醒：想一想，再说。\n　　人生顿悟：慎言。\n\n\n## 《你无法去改变别人》\n　　我们无法去改变别人的看法，\n　　能改变的恰恰只有我们自己。\n　　坏的生活不在于别人的罪恶，\n　　而在于我们心情的恶劣。\n　　让生活变好的金钥匙不在别人手里，\n　　放弃我们的抱怨，\n　　美好生活可以唾手可得。\n　　我们主观上本想好好生活，\n　　可是客观上却没有好的生活，\n　　其原因是总想等待别人来改善生活。\n　　每日提醒：；好心境是自己创造的。\n　　人生顿悟：做生活的主人。\n\n\n## 《别做令人厌烦的人》\n　　总是给人添烦恼，\n　　别人恐怕避之不及，\n　　总是骚扰别人，\n　　只会讨人生厌。\n　　说话罗罗唆嗦，\n　　让人打心眼里厌恶，\n　　做事拖泥带水，\n　　别人终无宁日，\n　　人都会讨厌别人，\n　　却从没有人会讨厌自己。\n　　每日提醒：自我修养特别重要。\n　　人生顿悟：自知之明。\n\n\n## 《名声是金》\n　　好名声使人终生受益，\n　　还能光泽后人，\n　　坏名声使人抬不起头来，\n　　生不如死。\n　　获得好名声很不容易，\n　　而败坏好名声却易如反掌。\n　　只有基础扎实的好名声才会持久，\n　　因为它深得人们的敬佩和尊敬。\n　　多数平凡人都会忽视自己的名声，\n　　而过多关注别人的名声。\n　　每日提醒：名声是做出来的，不是吹出来的。\n　　人生顿悟：形象很重要。\n\n\n## 《极端的聪明或麻木都不可取》\n　　有些人忧虑过度，\n　　导致精神失常，\n　　有些人麻木不仁，\n　　对任何事物都无动于衷；\n　　前者常为寻找理性而痛苦，\n　　因聪明过头而衰亡，\n　　愚蠢的根源在于什么都懊悔。\n　　后者不知悔恨为何物，\n　　整天稀里糊涂，\n　　活着与死去没有什么区别。\n　　每日提醒：走极端总没有好下场。\n　　人生顿悟：寻找智慧。\n\n\n## 《人生的幸福多是无法从别人身上得到》\n　　假如你想寻找真正的幸福，\n　　一点不用瞎费劲，\n　　既不用去遥远的地方取经，\n　　也不用卑微地乞求别人的恩赐，\n　　真正的幸福蕴藏在你自己身上。\n　　以乞求、投机、强求、卖买等方式，\n　　得到的幸福均是短暂的，\n　　甚至是徒劳无益的。\n　　许多是得不偿失的。\n　　幸福不靠天地，靠自己。\n　　每日提醒：真正的幸福就是自己拥有爱的生活。\n　　人生顿悟：自强多福。\n\n\n## 《了解哲人解读的三个“最”》\n　　托尔斯泰在生活之路中描述：\n　　“有一个人问哲人：\n　　什么事是最重要的？什么人是最重要的？\n　　生活中什么时间是最重要的？”哲人认真的回答到：\n　　“最重要的事是与所有人共同相爱，\n　　最重要的人是此刻所交往的人，\n　　最重要的时间是现在的时光。”切记：今天最重要。\n　　每日提醒：昨天已经过去，未来还没有来临。\n　　人生顿悟：让今天之心永远快乐。\n\n\n## 《想开一些》\n　　先哲们智慧地说：“同是一件事，\n　　想开了是天堂，\n　　想不开是地狱。”\n　　生活的主体是自己，\n　　自己才是生命的主人。\n　　别人的劝告，\n　　只多是种安慰，\n　　不能当做根治心病的良药，\n　　心灵的伤痛只能自己慢慢治疗。\n　　每日提醒：人人都有不平事。\n　　人生顿悟：想不开是与自己过不去。\n\n\n## 《掌握改变自己处境的计策》\n　　爱默生说：\n　　“如果一个人对自己的处境不满，\n　　他可以用两种方法来改变：\n　　改善自己的生活条件；\n　　或者改善自己灵魂的状况。\n　　前者不是自己随时都可以做到的，\n　　后者则永远随他自己掌握。”\n　　处境的恶化都是心境引起的，\n　　改变心态，换位思考，\n　　是简捷的方法。\n　　每日提醒：心境愉快，环境也好。\n　　人生顿悟：心态要好。\n\n\n## 《去掉不幸的祸根》\n　　在尘世中胡乱寻找幸福的人，\n　　是世界上最不幸之人，\n　　不要盲目比较，快乐长在；\n　　不要丧失自我，自信长在；\n　　不要乞讨幸福，自尊长在；\n　　不要贪求过多，知足长乐；\n　　不要虚荣心太强，悠闲自得；\n　　不要怀疑一切，真情长在；\n　　不要复杂生活，欢乐常伴；\n　　不要仇视社会，和睦共处。\n　　每日提醒：幸福就在自己的手中。\n　　人生顿悟：不幸多是自找的。","source":"_posts/ninety-nine-life-sentiment.md","raw":"title: 【转】九十九段精彩的人生感悟\ndate: 2014-10-13 17:01:20\ntags: Life\ncategory: Life\n---\n## 《人人需要智慧》\n　　托尔斯泰认为：\n　　“智慧就是懂得生活的任务\n　　以及怎样去完成”。\n　　一个人能够正确评价环境，\n　　能够了解自己的长处和短处，\n　　能够知道自己生活的意义，\n　　能够履行自己的责任，\n　　能够以积极心态去解决困难，\n　　能够知晓别人并与之和睦相处……\n　　这就是人生智慧。\n　　`每日提醒：人人都可以成为智者。`\n　　`人生顿悟：智慧可以照亮人生之路。`\n\n\n## 《正确认识自己》\n　　《生活之路》忠告我们：\n　　“在了解上帝之前，\n　　人必须先要了解自己”。\n　　当我们心平气和地准备学习智慧，\n　　努力去争取做一个智慧人士的时候，\n　　首要的任务是要客观公正地评价自己。\n　　“我是谁？”“我的人生是为了什么？”\n　　“我为什么会痛苦？”\n　　“我的立身资本是什么？”\n　　“我的弱点和缺点在哪里？”……\n　　`每日提醒：缺什么，补什么。`\n　　`人生顿悟：学习`\n\n<!--more-->\n\n## 《守住自己》\n　　有时你羡慕某人位居高位，\n　　显赫风光无比，\n　　真后悔当时怎么不留机关好好努力；\n　　有时你羡慕某人经商不久，\n　　就积累财富无数，\n　　真后悔怎么没有下海经商；\n　　有时你羡慕某人工作舒适，\n　　悠闲自得，轻松自在，\n　　真后悔自己还置身于繁杂的环境之中……\n　　你越是这样思想，越会活得没有人样。\n　　`每日提醒：不要盲目与人攀比。`\n　　`人生顿悟：你就是你。`\n\n\n## 《经营自己的长处》\n　　每个人都有潜在的杰出的才能，\n　　只不过有时自己和别人没有发现而已，\n　　知道自己在某个方面很优越，\n　　不仅使你充满自信，\n　　而且会让你拥有一块立身之地，\n　　不要丢掉自己的兴趣和长项，\n　　否则你会处处不如意，\n　　以自己的短处去谋生，\n　　你会被贬的一文不值，\n　　切记：宝贝放错了地方也是废物。\n　　`每日提醒：外面 的世界很精彩，也很无奈。`\n　　`人生顿悟：互补短长，扬长避短。`\n\n\n## 《别沉浸于对过眼烟云东西的追逐》\n　　有得必有失，得失总平衡。\n　　追求虚无的浮名，\n　　一生就会注满痛苦的铅云。\n　　猛回头，短暂一生匆匆已过，\n　　而生活中最应珍惜和享受的，\n　　却一点儿也没得到，\n　　许多人为此失落，为此追悔。\n　　人只有在生命的尽头，\n　　才会懊悔：为了追求无聊的东西，\n　　而丢失了自己的许多东西。\n　　`每日提醒：得到了，也失去了。`\n   　 `人生顿悟：顺其自然。`\n\n\n## 《无欲则刚》\n　　没有刻意追求的欲望，\n　　就不会在意别人的眼色，\n　　就会一身轻松，无拘无束，\n　　不为违心献媚而烦心。\n　　不要做欲望的奴隶，\n　　否则一生终无宁日。\n　　卑鄙小人最善于窥视别人的心思，\n　　利用别人的欲望和所求，\n　　达到自己不可告人的目的。\n　　不让别人牵着自己的鼻子走。\n　　`每日提醒：善去不良欲望。`\n　　`人生顿悟：不图虚荣。`\n\n\n## 《过好每一天》\n　　许多智慧人士劝告：\n　　“最重要的是今天的心”。\n　　何必为痛苦的悔恨而丧失现在的心情，\n　　何必为莫名的忧虑而惶惶不可终日，\n　　过去的已经一去不复返\n　　再去怎么悔恨也无济于事。\n　　未来的还是渴望而不可及，\n　　再去怎么忧虑也是空悲伤。\n　　过去的经验要总结，\n　　未来的风险要预防。\n　　`每日提醒：“今天心，今天事，现在人”最为重要。`\n　　`人生顿悟：不想无用的事。`\n\n\n## 《说话多用“您‘字，少用”我“字》\n　　许多人总是关心自己的事务，\n　　很少有闲心去顾及不相干的事。\n　　与人交谈有艺术，\n　　“您”字多用生笑意，\n　　“我”字多用失欢乐。\n　　以对方话题交谈，\n　　越谈会越投机；\n　　以己方话题交谈，\n　　越谈会越觉乏味。\n　　“我”字当头，烦恼不尽。\n　　`每日提醒：说话总围绕“我”字，是浅薄的表现。`\n　　`人生顿悟：提高交流技巧。`\n\n\n## 《谨慎是永恒的守则》\n　　葛拉西安的《智慧书》告诉我们：\n　　“闲者脱离忧虑和窘困，\n　　并且显示出对自我的控制。”\n　　不要在胸膛上开窗户，\n　　而要让双手长眼睛。\n　　放纵自己的言语，\n　　会惹来不必要的麻烦；\n　　放纵自己的行为，\n　　会招来不必要的灾难。\n　　喋喋不休和轻举妄动是愚蠢的表示。\n　　`每日提醒：谦虚谨慎，巧避灾难。`\n　　`人生顿悟：多听少说勤思考。`\n\n\n## 《无法逃避现实》\n　　天堂无论多么幸福，\n　　你也不会直接去天堂，\n　　地狱无论多么悲惨，\n　　你也不会直接陷地狱；\n　　现实永远介于天堂与地狱之间，\n　　人们总是挣扎在苦乐的海洋。\n　　对于尘世的冷漠，\n　　只会增加自身的痛苦，\n　　睁眼好好看一看，\n　　没有烦心的人绝不存在。\n　　`每日提醒：逃避不是解决矛盾的办法。`\n　　`人生顿悟：勇敢地面对现实。`\n　　\n## 《不要总疑春色在人家》\n　　自己的伤痛自己最清楚，\n　　自己的哀叹自己最明白，\n　　自己的快乐自己最感受。\n　　也许自己眼中的地狱，\n　　却是别人眼中的天堂；\n　　也许自己眼中的天堂，\n　　却是别人眼中的地狱。\n　　生命就是这般的滑稽。\n　　一个人有一个人的活法，\n　　关键在于心态的调整。\n　　`每日提醒：拥有自我，过好自己的生活。`\n　　`人生顿悟：不攀不比`\n\n\n## 《隐忍别人的缺点》\n　　金无赤金，人无完人，\n　　天然的宝玉总带斑点，\n　　只有人造的才会洁白无暇。\n　　总拿自己的优点与别人的缺点比较，\n　　越比越会感觉不顺眼，\n　　越不顺眼越会感觉上火。\n　　多以自己之长善补别人之短，\n　　多看别人的长处，\n　　越看越会顺眼，\n　　越处越会融洽。\n　　`每日提醒：相互对抗不如相互合作。`\n　　`人生顿悟：优势互补`\n\n\n## 《不要轻视依赖于你的人》\n　　做人要尽量自己独立，\n　　而对别人却要多给予关切。\n　　被人依赖是件好事，\n　　起码说明你是受人信赖，\n　　不可或缺，有主见，\n　　又有能力和水平。\n　　试想：一个无才无能之人，\n　　谁会去依靠呢？\n　　不要伤害依赖于你的人的自尊心，\n　　因为不独立，使其更敏感。\n　　`每日提醒：多一份关爱，就多一份友情。`\n　　`人生顿悟：厚爱有余`\n\n\n## 《别醉心宣扬别人的恶名》\n　　对于别人的过失，\n　　采取幸灾乐祸和津津乐道的方式，\n　　也许你能得到短暂的快意，\n　　却无法掩盖你的愚蠢。\n　　期望于广告他人的污点，\n　　来掩饰自己的不足，\n　　证明自己也是声名狼籍。\n　　一个人越是与发臭的事件为伴，\n　　他自己越会臭不可闻。\n　　总控告别人的人也会恶名远扬。\n　　`每日提醒：不散布谣言。`\n　　`人生顿悟：不说三道四。`\n\n\n## 《当心丑态百出》\n　　一个原本并不高尚的人，\n　　偶而一个机会，\n　　使他位居一定高位，\n　　于是轻飘飘，\n　　不知自己姓什么。\n　　一个原本很贫困的人，\n　　偶遇一笔横财，\n　　使他过上奢侈的生活，\n　　于是马上显露“爆发户”的本性……\n　　这种浅陋者生活中还少吗？！\n　　`每日提醒：有福不可享尽，更何况本身福分就浅。`\n　　`人生顿悟：不要不知天高地厚。`\n\n\n## 《不图虚荣》\n　　虚荣是男人的自残钢刀，\n　　虚荣是女人的自杀绳索。\n　　本身贫困，偏要假装奢华，\n　　本身位低，偏要假装高雅，\n　　本身自私，偏要假装大方……\n　　于是自欺欺人的丑剧就会不断。\n　　打肿脸充胖子，\n　　越活越会失掉自我，\n　　结果反误了卿卿小命。\n　　`每日提醒：假的总是假的。`\n　　`人生顿悟：真实。`\n\n\n## 《最重要的是安慰自己的心灵》\n　　自己的情绪统治自己的生活，\n　　自己的生活决定自己的命运。\n　　有权不一定有好心情，\n　　高处不胜寒；\n　　有钱不一定有好心情，\n　　谋财害命须常提防；\n　　有貌不一定有好心情，\n　　自古“红颜多薄命”。\n　　摆脱心灵的羁绊，\n　　随时清扫心灵的尘埃。\n　　`每日提醒：积极心态，快乐生活。`\n　　`人生顿悟：心态好。`\n\n\n## 《别忽视小事的重要性》\n　　不要以事小而不为，\n　　不要以恶小而为之。\n　　人生的成功，\n　　多在于事事认真。\n　　人生的失败，\n　　多在于对无足轻重事项的冷漠。\n　　许多人考察一个人，\n　　总是以小事来观察，\n　　若是小事不做，大事又不能，\n　　则是不可重用之人。\n　　`每日提醒：机会常会符合在小事上。`\n　　`人生顿悟：从不放弃小事。`\n\n\n## 《不要先说不可能》\n　　遇事不经思考就一口拒绝，\n　　就意味着你已丧失成功的机会。\n　　没有冷静的思考，\n　　没有仔细的分析，\n　　却给人以冷脸，\n　　“这种事情是不可能做到的。”\n　　这种处世方法能不失败吗？\n　　“让我试一试再说。”\n　　这是智者的技巧。\n　　其实自己的潜能是无穷无尽的。\n　　`每日提醒：拒绝是无能的标志。`\n　　`人生顿悟：尝试。`\n\n\n## 《一视同仁》\n　　我们常常能原谅一贯犯错误的人，\n　　却不会原谅偶而犯一次错误的人。\n　　从来不会向你说好话的人，\n　　偶而一句好话会让你激动不已。\n　　惯于对你顺言顺耳说好话的人，\n　　偶而一句恶语会让你愤怒万分。\n　　这里的毛病不在于别人，\n　　还是自己的判断和思考出了问题。\n　　亲则疏，远则香，\n　　这是自己的心理在作怪。\n　　`每日提醒：知人者智，知己者明。`\n　　`人生顿悟：冷静分析。`\n\n## 《克制冲动》\n　　心血来潮，就会激动不已，\n　　头脑发热，就会鲁莽行事。\n　　那些平庸的激情，\n　　多会点燃愚蠢的火把，\n　　照亮的是自己的影子，\n　　灼伤的是无辜的看客。\n　　冲动会使聪明变疯狂，\n　　冲动会让结果变苦涩。\n　　激情是冲动的借口，\n　　是产生罪恶的替罪羊。\n　　每日提醒：不要莫名的冲动。\n　　人生顿悟：冷静。\n\n\n## 《自恃清高，得不偿失》\n　　自以为高人一等，\n　　就会轻易地去侮辱别人，\n　　就会瞧不起一切。\n　　自以为贵为骄子，\n　　就会把别人看得微不足道，\n　　就不能心平气和与之相处。\n　　骄傲之心只会增加别人对你的怨恨，\n　　轻薄之心只会增添别人对你的愤怒。\n　　无论何时何地，\n　　都不能要这种结仇行为。\n　　每日提醒：剥夺别人等于剥夺自己。\n　　人生顿悟：和睦相处。\n\n\n## 《别错误的高估自己》\n　　愚蠢的人总是低估别人，\n　　高看自己一眼，\n　　认为天下皆凡人，\n　　惟有自己最高贵，\n　　于是就会占有别人的功劳，\n　　而心安理得；\n　　于是就会掠夺别人的财富，\n　　而心满意足。\n　　头脑发昏时，\n　　就有“多行不义必自毙”之后果。\n　　每日提醒：高估越多，摔得越惨。\n　　人生顿悟：客观评价。\n\n\n## 《善于遮盖别人的不足》\n　　托尔斯泰曾一针见血地说：\n　　“人们常常想用发现别人的缺点来表现自己，\n　　但他们用这种方式表明的只是他们的无能。”\n　　“一个人越聪明、越善良，\n　　他看到别人身上的美德越多；\n　　而人越愚蠢、越恶毒，\n　　他看到别人身上的缺点也越多。”\n　　能给别人台阶，自己也有台阶，\n　　能给别人面子，自己越有面子。\n　　撕破别人脸面，别人会肆无忌惮。\n　　每日提醒：遮丑是美德。\n　　人生顿悟：行善得善。\n\n\n## 《麻醉自己是最大的愚蠢》\n　　为了逃避烦恼的尘世，\n　　而采用麻醉自己的方式，\n　　实在是傻瓜才干的蠢事。\n　　以酒浇愁愁更愁，\n　　“酒伤肝”的悲剧不能不知？\n　　以毒品麻醉自己，\n　　等于让毒蛇缠绕在身。\n　　以吞云吐无雾刺激自己，\n　　“肺癌”的魔鬼紧根其后，\n　　麻醉只是暂时的现象。\n　　每日提醒：不可熄灭心中的明灯。\n　　人生顿悟：人越醉会越痛苦。\n\n## 《此路不通走另路》\n　　千万不要一条道奔到黑，\n　　不撞南墙不回头。\n　　埋没自己才能的人，\n　　往往是自己的偏见，\n　　招致失败的厄运，\n　　恰恰是自己的认死理思维。\n　　现代社会有许多活法，\n　　何必拘泥于一种形式，\n　　换一条最适合自己的路走，\n　　肯定会快乐又幸福。\n　　每日提醒：别活的太沉重、太窝囊。\n　　人生顿悟：条条道路通罗马。\n\n\n## 《心境不同，效果不一》\n　　以积极心态生活，\n　　就会发现许多美妙的东西；\n　　以消极心态生活，\n　　就会发现许多沮丧的东西；\n　　生活的快乐与烦恼，\n　　全在于你对生活的态度。\n　　乐观向上，好运不断，\n　　失落沉沦，厄运陪伴。\n　　不妨换一个角度来思考。\n　　每日提醒：好的心态决定好的命运。\n　　人生顿悟：凡事往好处想。\n\n\n## 《做一张生命的清单》\n　　当你痛苦万分时，\n　　不妨自己悄悄列一张清单。\n　　想一想“人生在世，哪些还是要做的？”\n　　有了这个“临终”的念头，\n　　你就没有时间去烦恼。\n　　就会专心致志，\n　　去完成自己认为要遗憾的事项。\n　　人的充实人的快乐，\n　　全在于实现梦想的努力之中。\n　　别把梦想带进坟墓。\n　　每日提醒：无聊，清闲，就会痛苦。\n　　人生顿悟：把梦想变为现实。\n\n\n## 《别图形式》\n　　有情人心中有爱，\n　　天天都是情人节，\n　　为什么非要得到形式上的东西，\n　　一枝玫瑰和一盒巧克力？\n　　心中并不在乎你，\n　　何必又为特殊节日的一次“义举”，\n　　而欣喜若狂呢？！\n　　有人精辟地指出：\n　　“若她爱你，会拼命地节省你的钱，\n　　相反，则会拼命地浪费你的钱财。”\n　　每日提醒：透过现象看本质。\n　　人生顿悟：爱是长久的事。\n\n\n## 《抱怨无用》\n　　抱怨要是作为偶而发泄一下，\n　　也是十分必要的。\n　　可怕的是，抱怨更会增加烦恼，\n　　只能向别人显示你的无能。\n　　抱怨是一种致命的消极心态，\n　　一旦抱怨成为恶习，\n　　则暗无天日，\n　　不仅自己好心境全无，\n　　而且别人跟着也倒霉，\n　　抱怨是怯懦的标志。\n　　每日提醒：自己的心痛只能自己疗。\n　　人生顿悟：乐观。\n　　\n## 《小心与“太阳型”的人为伴》\n　　适当的距离，\n　　不仅能够得到亮光，\n　　而且感到很温暖，\n　　相处距离太近，\n　　不仅会灼伤你自己，\n　　而且把你的才能“清洗”的得一无所有。\n　　要是你也想成为“太阳”，\n　　则一山容不了二虎，\n　　而虎相争必有恶斗，\n　　何不事前另谋高就。\n　　每日提醒：距离产生美感。\n　　人生顿悟：亲则疏。\n\n\n## 《别期望人生的公平》\n　　公平是相对的，\n　　要求天下皆公平，\n　　是痴人的梦想。\n　　不必为不公平而愤愤不平，\n　　最重要的是今天努力的心态和行动。\n　　你很有才华，却没有施展，\n　　为此怀才不遇，\n　　并且天天怨天怨地，\n　　这有什么用呢？\n　　反而会使心情更糟。\n　　每日提醒：轻轻收起你的傲骨，先踏踏实实工作。\n　　人生顿悟：努力。\n\n\n## 《今天的学习是明天的欢笑》\n　　现代社会，知识更新已成为时尚，\n　　谁不意识到这一点，谁就会沦为时代的“乞丐”。\n　　学习是为了明天，\n　　努力是为了今天，\n　　少壮不努力，老大徒伤悲。\n　　与其无所事事空悲叹，\n　　不如心平气和多学习，\n　　学习能去烦恼，又有未来的收获。\n　　每日提醒：及时充电，不断学习。\n　　人生顿悟：知识是力量。\n\n\n## 《生命的质量在于事业的追求》\n　　黑格尔曾经指出：\n　　“一种人毕生致力于拥有，\n　　另一种人毕生致力于有所作为”。\n　　一心渴望拥有，\n　　一旦没有达到目的，\n　　就会失落、痛苦和绝望。\n　　心无旁鹜，专心于事业的追求，\n　　就会忘掉许多烦恼，\n　　找到许多努力过程中的快乐。\n　　默默耕耘的人其实是最智慧的人。\n　　每日提醒：一份耕耘，一份收获。\n　　人生顿悟：有事做是种欢乐。\n\n\n## 《平淡是生活永恒的主题》\n　　生活的真谛在于理解，\n　　生活的诀窍在于理智，\n　　刻意追求卓越的生活，\n　　就会陷入庸人自扰式的苦海。\n　　整天都是鲜花和掌声，\n　　这样的日子也会腻烦。\n　　没有鲜花和掌声，\n　　这种清淡的日子也悠闲自得。\n　　一个耐不了平淡如水的人，\n　　肯定没有好日子过。\n　　每日提醒：一个人越想过特别的生活，越会失掉原来幸福的生活。\n　　人生顿悟：平凡是福。\n\n\n## 《世上不如意事十之八九》\n　　谁都有痛苦和烦恼，\n　　只不过程度大小不一而已。\n　　有些人善于变痛苦为动力，\n　　善于变烦恼为快乐。\n　　有些人却深陷不如意的苦海，\n　　越活越会感到没有意思。\n　　“祝你吉祥如意”，\n　　仅是美丽的谎言，\n　　改变的是自己的心态，\n　　不变的是事物的本象。\n　　每日提醒：烦恼是永恒的主题。\n　　人生顿悟：不耐烦更有烦恼。\n\n\n## 《凡事多往好处想》\n　　忙碌有忙碌的好处，\n　　可以无暇于烦恼和琐事，\n　　清闲有清闲的好处，\n　　可以留点时间做自己的事。\n　　位居高位自有其好处，\n　　可以多为人民服务。\n　　平常岗位多有其好处，\n　　可以免去“焦点人物”的苦恼。\n　　心平气和最重要，\n　　顺其自然是常理。\n　　每日提醒：往好处想可以产生积极心态。\n　　人生顿悟：换位思考。\n\n\n## 《见好就收》\n　　不要等到自己已是落叶败枝，\n　　还留恋不舍地故做多情。\n　　“在事情离开你之前先离开事情”，\n　　这是智者的金言劝告。\n　　葛拉西安更是善意的忠告：\n　　“不要等到你变成西下的夕阳”。\n　　在掌声和鲜花中谢幕，\n　　自己和别人还留有美好的记忆。\n　　在讥笑和愤怒中迫退，\n　　不幸和痛苦会时刻缠绕。\n　　每日提醒：别让自己变成一匹死马。\n　　人生顿悟：留有余地。\n\n## 《及时调整心态》\n　　此一时，彼一时，\n　　到什么山上唱什么歌，\n　　退位要有退位心态，\n　　在岗要有在岗的心情。\n　　要求别人什么时候都一样看待你，\n　　这是多么的不切实际，\n　　也是故做多情的一厢情愿。\n　　在位时门前车水马龙，\n　　不要为此沾沾自喜；\n　　退位时门前冷清不要自找痛苦。\n　　每日提醒：花开花落，自然规律。\n　　人生顿悟：平和心态。\n\n\n## 《分阶段实施宏大计划》\n　　志当存高远。\n　　志向远大而未见行动，\n　　却是失败的根源。\n　　不要被巨大的目标所威吓，\n　　完全可以把大目标肢解。\n　　就象爬山一样，\n　　望着远方的叠叠山峰，\n　　你可能已失去攀登的勇气，\n　　一旦当你努力爬上一个小山峰，\n　　就有成功的喜悦和继续攀登的信心。\n　　每日提醒：大计划一旦变成无数个小计划，就十分容易达到。\n　　人生顿悟：锲而不舍。\n　　\n## 《做人不要张狂》\n　　傲慢骄横，不可一世，\n　　咄咄逼人，盛气凌人，\n　　没有一个有好下场的。\n　　总唱高调容易招致怨恨，\n　　张狂示人容易召来攻击。\n　　天外有天，山外有山，\n　　做人还得低调谨慎，\n　　有点钱就烧的慌，\n　　有点权就不知姓什么，\n　　是最浅薄的人。\n　　每日提醒：在未做好人之前，先不要把自己变成神。\n　　人生顿悟：加强修养。\n\n\n## 《学会倾听是最大的智慧》\n　　越是当你滔滔不绝的时候，\n　　你的愚蠢越会暴露无疑。\n　　越是当你洗耳恭听的时候，\n　　你的智慧越会快乐生长。\n　　聆听是取人之长，\n　　补己之短的良方；\n　　聆听是沟通双方，\n　　尊重对方的桥梁；\n　　聆听是抛弃错误，\n　　远离懊悔的法宝。\n　　每日提醒：沉默能省去许多烦恼。\n　　人生顿悟：多听少说。\n\n\n## 《不义之财不可取》\n　　君子取财，必须取之有道，\n　　无道的财物再多，\n　　也是残害自己的利剑。\n　　为浊富不若为清贫，\n　　与其守着金山银山惶惶不可终日，\n　　不如粗茶淡饭却食之舒坦甘美。\n　　人生带不走的是财富，\n　　留下来的却是名声，\n　　遗留后代应是道德和教育，\n　　而不是蚀其心灵的财富。\n　　每日提醒：不做金钱的奴隶。\n　　人生顿悟：要有正确的金钱观。\n\n\n## 《相互对抗不如相互合作》\n　　俗话说：\"人抬人无价直宝\".\n　　相互对抗天地窄，\n　　相互合作天地广。\n　　相互对抗会相互拆台，\n　　就会自设障碍，\n　　自己掉入自己设置的陷阱。\n　　相互合作就会相互补台，\n　　就会共同搭台，\n　　大家一起愉快地达到双赢的目的。\n　　不要仇视心，多存合作心。\n　　每日提醒：精诚合作，事半功倍。\n　　人生顿悟：扬长避短。\n\n\n## 《减少不必要的应酬》\n　　整天忙于应酬，\n　　看上去是充实，\n　　实质是慢性自杀。\n　　应酬不仅浪费宝贵时间，\n　　而且暴饮暴食还会提前夭折，\n　　另外有可能增添口舌的额外烦恼。\n　　不要热衷于你来我往，\n　　不要热心于吃吃喝喝，\n　　多留点时间勤于思考，\n　　勤于学习，勤于工作。\n　　每日提醒：别把人生的成功寄托于应酬之上。\n　　人生顿悟：多做自己应做的事。\n\n## 《知识是立身之本》\n　　人们多会轻蔑不学无术之人，\n　　人们多会小瞧无知无识之人，\n　　现代社会的贫困，\n　　多是因为愚昧缺乏知识造成的。\n　　人没有财富不可怕，\n　　可怕的是知识的缺乏。\n　　投资教育是最好的投资，\n　　给予孩子以知识，\n　　可以使他走遍天下都不怕，\n　　没有知识的人寸步难行。\n　　每日提醒：少时不学习，长大多悲痛。\n　　人生顿悟：学以致用。\n\n## 《没有健康什么都谈不上》\n　　健康是一切的基础，\n　　离开健康的身体，\n　　去说事业、金钱、爱情等事项，\n　　都是无源之水。\n　　健健康康是福，\n　　平平安安也是福，\n　　不要牺牲健康去换取金钱，\n　　到时痛悔莫及。\n　　心理健康比机体健康更重要，\n　　健康还在于日常的保养。\n　　每日提醒：无病无灾是多么大的幸福。\n　　人生顿悟：心身并养。\n\n\n## 《不可盲目攀比》\n　　你就是独特的你自己，\n　　何必与别人盲目攀比。\n　　以自己之短比别人所长，\n　　就会越比越觉窝火，\n　　越窝火越会失落、乏味，\n　　以自己之长比别人所短，\n　　就会盲目自恋自大，\n　　就会放着好日子不过，\n　　又会去瞎折腾。\n　　盲目比较是烦恼的圈套。\n　　每日提醒：活出真实的自我来。\n　　人生顿悟：一个人一个活法。\n\n\n## 《具备自我完善的能力》\n　　人在学习阶段，\n　　有老师的不时教诲，\n　　可以随时改进不足。\n　　人在进入社会以后，\n　　就没有学校时的那种福分，\n　　这时要多靠自知之明，\n　　依赖自我反省。\n　　学习是没有止境的，\n　　尤其是自我的改造，\n　　更是没有穷尽的。\n　　每日提醒：孔子曰：吾日三省吾身。\n　　人生顿悟：自省自悟，日超完善。\n\n\n## 《不让命运捏在别人手里》\n　　掘去真实的自我，\n　　放弃自我的长处，\n　　是痛不欲生日子的开始。\n　　何必把宝押在某人身上，\n　　而舍弃自身的学习和努力？！\n　　蠢人总是急功近利，\n　　喜好投机取巧，\n　　恰好中了奸人的圈套，\n　　失去自我的人，\n　　别人的好脸色也不会长久。\n　　每日提醒：提高自身素质最重要。\n　　人生顿悟：自强才能自立。\n\n## 《重要的是做好自己的本职工作》\n　　不去努力立足本职工作，\n　　却去谈什么高远的理想，\n　　策划什么宏伟的成业方案，\n　　全是黄梁美梦式的悲剧。\n　　见异思迁，\n　　一山望着另一山高，\n　　全是人生的误区。\n　　千万不要做本末倒置的事情，\n　　本职工作是自己立身的“根据地”，\n　　丢掉“根据地”会变成“流浪儿”。\n　　每日提醒：别做眼高手低之人。\n　　人生顿悟：踏实努力。\n\n\n## 《好心有时无好报》\n　　俗语说：“行善得善，行恶得恶”，\n　　“种瓜得瓜，种豆得豆”。\n　　但有时好心也会没有好报。\n　　一是施赠人处理不当，\n　　受赠人情面上难以接受，\n　　造成好心无好报的结果。\n　　二是受赠人是个忘恩负义之人，\n　　在受恩时感激不已，\n　　一旦事过早忘九霄云外。\n　　每日提醒：相信自己的好心会有好报。\n　　人生顿悟：做善瞬事要不图回报。\n\n\n## 《吃亏是福》\n　　有经济专家总结炒股经验后认为：\n　　“会吃一分钱的亏，\n　　必是炒股的大赢家”。\n　　人生场上何尝不是如此，\n　　做人太精明，\n　　处处算计别人，\n　　谁还会乐意与你合作？\n　　没有人会自认为是傻瓜，\n　　会甘心情愿受人算计。\n　　俗话说：“傻有傻福，精有精祸”。\n　　每日提醒：聪明反被聪明误\n　　人生顿悟：利益共享\n\n\n## 《克服懒惰》\n　　懒惰是最顽固的敌人，\n　　有时总以笑微微的面貌出现。\n　　精神懒惰比身体懒惰更可恶，\n　　懒惰会毁灭我们的意志。\n　　懒惰是舒适的朋友，\n　　人越舒适越会产生懒惰之心。\n　　勤勉是成功的朋友，\n　　懒惰则是成功的敌人，\n　　我们的荣誉来自于勤勉，\n　　我们的恶名来自于懒惰。\n　　每日提醒：自满自足常是懒惰的借口。\n　　人生顿悟：勤勉。\n\n\n## 《知道人生每阶段的特色》\n　　有人研究认为：\n　　“二十岁的人，\n　　依靠青春吃饭；\n　　三十岁的人，\n　　依靠勤奋吃饭；\n　　四十岁的人，\n　　依靠智慧吃饭；\n　　五十岁的人，\n　　依靠经验吃饭；\n　　六十岁的人则忠告后人……”\n　　每日提醒：把握好每个年龄段的生活。\n　　人生顿悟：智慧加勤奋。\n\n\n## 《学会让生活充满爱》\n　　生活倘若没有爱，\n　　生活就会变成荒芜的戈壁滩，\n　　生活中要是充满爱，\n　　可以抚平许多受伤的心灵，\n　　可以挽救许多沉沦的生命，\n　　可以激励许多彷徨的游子，\n　　可以慰籍许多失败的落魄者……\n　　要想得到别人的爱，\n　　自己首先要学会爱别人。\n　　要是冷漠这个世界，\n　　就无爱意可言。\n　　每日提醒：敞开你的心扉，让彼此的爱河流畅。\n　　人生顿悟：爱是人生的希望。\n\n\n## 《爱出风头是个坏毛病》\n　　人总有妒忌之心，\n　　当你刻意想超过别人，\n　　别人心里就会不舒服。\n　　比如言谈之中的卖弄学问，\n　　就会有意或无意地冒犯别人。\n　　比如衣着时髦漂亮，\n　　就会招惹别人“爱打扮”的风言风语。\n　　切记，有些人不喜欢比他强的人，\n　　一见奇特的人就要攻击，\n　　这种爱诅咒的俗人是不少的。\n　　每日提醒：虚荣心强的人就爱出风头。\n　　人生顿悟：大众心态。\n\n\n## 《百闻不如一见》\n　　根据道听途说的东西，\n　　作为决策的依据，\n　　难免要犯错误。\n　　亲眼所见，亲口所尝，\n　　最有感受力，\n　　最有说服力。\n　　切莫以“秀才不出门，\n　　能知天下事”自居，\n　　越是与众隔绝，\n　　越会瞎指挥。\n　　每日提醒：有调查，就有发言权。\n　　人生顿悟：理论联系实际。\n\n\n## 《三个臭皮匠顶一个诸葛亮》\n　　智慧在哪里？\n　　智慧来自于虚心向别人请教。\n　　孔子曰：“三人行，必有我师”。\n　　当我们放下架子，\n　　不耻下问，\n　　请教每一个专业的行家能手，\n　　我们的智慧就会逐渐丰富起来。\n　　请教可以使我们品味许多东西，\n　　可以提升我们的灵性，\n　　可以利用别人的光芒来照亮自己。\n　　每日提醒：“文殊遇缘则有师”。\n　　人生顿悟：虚心请教、学习。\n\n\n## 《塞翁失马，焉知非福》\n　　“祸兮福所伏，福兮祸所倚”。\n　　“乐极会生悲，否极会泰来”。\n　　看问题不可片面，\n　　要透过现象看本质。\n　　得意时别太忘形，\n　　失意时别太失态。\n　　平安时要看到危险的存在，\n　　艰难时要看到希望的光明。\n　　每日提醒：事物都是一分为二的。\n　　人生顿悟：困难时不悲观。\n\n## 《经常自我检查》\n　　每天早上提醒自己一次，\n　　“哪些该做，哪些又不该做？”\n　　每天晚上又检查自己一次，\n　　“哪些对了，哪些又错了？”\n　　人活在世上，\n　　那能傻吃傻睡，\n　　那能毫无思索。\n　　自我的控制机制健全了，\n　　错误的魔鬼也无法接近你，\n　　做完人很难，少犯错误则易。\n　　每日提醒：避免犯错误。\n　　人生顿悟：勇于自我剖析。\n\n## 《常有理智的闸门》\n　　越是自我感觉良好，\n　　越要提高警惕，\n　　越是权重位显，\n　　越要提防小心。\n　　面对行贿的笑容，\n　　该说“不”字就说“不”。\n　　人的一生中，\n　　有许多事是绝不可以做的。\n　　“要让人不知，\n　　除非己莫为”。\n　　每日提醒：苦酒多是自酝的。\n　　人生顿悟：该拒绝必须拒绝。\n\n## 《别羡慕浊富和邪权》\n　　财富要是来路不明，\n　　难免夜半鬼叫门，\n　　取财要有正当手段，\n　　合法致富、勤劳致富。\n　　职权要是依靠歪门邪道取得，\n　　难免众人不服气。\n　　当官必须德才兼备，\n　　兢兢业业，克己奉公。\n　　“昨天是人，今天是鬼”式的人，\n　　千万别去羡慕。\n　　每日提醒：正常心态，保持自己。\n　　人生顿悟：走自己的路。\n\n\n## 《别在意他人的冷嘲热讽》\n　　有人一针见血的指出：\n　　“一个人只比别人高出一点点，\n　　就会招致别人百般的辱骂；\n　　而一旦当此人高出他人许多，\n　　则辱骂变成了虚伪和低三下四的恭维”。\n　　“远来的和尚好念经”。\n　　同单位之人更容易讽讥伤人，\n　　因为他们更加熟悉你，\n　　更会挑剔你的毛病来掩盖其失落。\n　　每日提醒：坚定地走好自己的路。\n　　人生顿悟：冷眼更能促人奋进。\n\n\n## 《不要极端的爱和恨》\n　　恋人不成，\n　　也要好说好散；\n　　夫妻不成，\n　　也要想想\"毕竟夫妻一场\",\n　　\"一日夫妻百日恩\",\n　　朋友不成，\n　　也要礼貌告别。\n　　昨天的亲密无间，\n　　演变成今天的仇恨满天，\n　　早知今日，何必当初呢？！\n　　每日提醒：适当距离。\n　　人生顿悟：冷静。\n\n## 《不做欲望的奴隶》\n　　每个人都会产生许多欲望，\n　　有些欲望是正常的，\n　　有些欲望则是不正常的，\n　　甚至是邪恶的欲望。\n　　“贪心不足蛇吞象”。\n　　“欲海难填，反误了卿卿小命”。\n　　正常人生的健康之道：\n　　“乐观、营养、运动、节制”。\n　　善除不良欲望是节制的核心。\n　　生活中为贪欲丧命的还少吗？\n　　每日提醒：欲望越大，痛苦越多。\n　　人生顿悟：戒贪欲。\n\n\n## 《人很少会饿死，却会被饱食撑死》\n　　终日饱食，\n　　多会无所事事。\n　　城市富贵病已经很普遍，\n　　“减肥”风已经很流行，\n　　医学专家忠告：\n　　“早上饱，中午好，\n　　晚餐吃个六成饱”。\n　　肥胖引起多种疾病，\n　　已成为现代杀手之一。\n　　许多人终为饱食所累。\n　　每日提醒：过于吃喝多遭罪。\n　　人生顿悟：别贪吃。\n\n## 《贪小失大》\n　　“贪便宜买老牛”，\n　　已是一句古训。\n　　“贪小便宜吃大亏”，\n　　更是一条警句。\n　　处处占便宜，\n　　时时得好处，\n　　表面看是尝到了一点甜头，\n　　实质上却背负了一个恶名。\n　　“做人要肯吃亏“，\n　　只有到成年才能感悟。\n　　每日提醒：眼光别太短浅。\n　　人生顿悟：不占小便宜。\n\n\n## 《衰老是极为自然的事情》\n　　“生”、“老”、“病”、“死”，\n　　虽是人生的无奈，\n　　却是大自然不可违背的规律。\n　　衰老，每个人都有这一天，\n　　年龄的增大不可怕，\n　　可怕的是未老先衰，\n　　人老心不老，\n　　心理年青，人也自然年轻。\n　　年老因有德而善终，\n　　经验是其流传的忠告。\n　　每日提醒：要确保晚节。\n　　人生顿悟：不服老。\n\n\n## 《人人皆有烦恼》\n　　贫困人士有贫困人士的烦恼，\n　　富裕人士有富裕人士的烦恼，\n　　不要认为贫困人士的日子不好过，\n　　其实富裕人士的日子，\n　　也不见得十分好过。\n　　富人的财富越多，\n　　其操心烦恼的事多，\n　　其不得安宁的日子也越多。\n　　贫困人多有清茶一杯的福分，\n　　富裕人可能要冒“绑票”的风险。\n　　每日提醒：好心态就有好心情。\n　　人生顿悟：不攀不比。\n\n## 《无聊多是清闲所致》\n　　极端的清闲，\n　　带来极度的无聊，\n　　闲得发慌，\n　　闲得郁闷，\n　　闲会闲出病来。\n　　整天有事做，\n　　就没有心思去烦恼。\n　　有追求的目标，\n　　就不会无聊郁闷。\n　　多有做事的欢乐是养生之道。\n　　每日提醒：忙碌之余，清闲片刻。\n　　人生顿悟：找事做。\n\n## 《不做金钱的奴隶》\n　　金钱不是万能的，\n　　虽然商品经济不可缺少金钱，\n　　鸟儿系上金钱飞不上蓝天。\n　　金钱一旦变成绳索，\n　　会勒死一个人。\n　　张口金钱，闭口金钱，\n　　不能穷的只剩下金钱。\n　　人的一生不能为挣钱而挣钱，\n　　否则会变成可怕的数字游戏。\n　　金钱要为人类更好的服务。\n　　每日提醒：钱既是好东西，又是害人的东西。\n　　人生顿悟：淡泊。\n\n\n## 《学会简单生活》\n　　有一名人说过：\n　　“你越习惯于奢华的生活，\n　　你就越发陷入被奴役的地位。\n　　因为你的需求越多，\n　　你的自由受到的限制就越大。”\n　　需求越少，生活就越幸福。\n　　这是一条古老的道理，\n　　贪吃是蠢猪的本性，\n　　贪财是笨鸟的习惯\n　　贪权是傻虎的幻梦。\n　　每日提醒：丢掉不该拥有的东西。\n　　人生顿悟：舍弃。\n\n\n## 《不要过于计较别人无端的评价》\n　　没有一幅画是没人评价的，\n　　没有一个人是没人指责的，\n　　你要是沉默寡言，\n　　有人会指责“城府很深”，\n　　你要是善于健谈，\n　　有人又会指责“夸夸其谈”；\n　　你要是赞美别人，\n　　有人会指责“别有用心”，\n　　你要是善于批评，\n　　有人更会暴跳如雷“多管闲事”……\n　　每日提醒：光看别人脸色，你还活不活。\n　　人生顿悟：拥有自我，又不局限于自我。\n\n\n## 《保持简洁》\n　　生活简洁的人，\n　　获得的幸福也越多；\n　　说话简洁的人，\n　　获得的赞誉也越多；\n　　人为没有必要的东西而活，\n　　会越活越沉重。\n　　一句话可以表达，\n　　为什么非要用十句话来罗嗦？\n　　简洁是美德，\n　　只有智慧的人，\n　　才会简洁。\n　　每日提醒：简洁不仅节省时间，而且能去很多烦恼。\n　　人生顿悟：学会简洁。\n\n\n## 《不甘寂寞多烦恼》\n　　人人都有寂寞难熬的时刻，\n　　没有信仰就会心灵寂寞；\n　　没有事做就会清闲烦闷，\n　　刻意自我封闭就会寂寞无援，\n　　灰暗心境更会寂寞一片。\n　　有人能耐得住寂寞，\n　　逐渐能成人生的“正果”\n　　有人耐不住寂寞，\n　　就会头脑发昏，\n　　干出身败名裂的蠢事。\n　　每日提醒：寂寞多是自找的。\n　　人生顿悟：自我修养。\n\n\n## 《任何困难都是有益的》\n　　先苦后甜式的生活，\n　　是最佳的人生模式。\n　　苦难是种财富，\n　　能使人更理解生活，\n　　能使人更明白人生的真谛，\n　　于是越会珍惜人生，\n　　越会热爱生活，\n　　越会奋发向上。\n　　能够从苦难中坦然地走过来，\n　　说明这个人已经很成熟。\n　　每日提醒：苦难能磨练我们的意志。\n　　人生顿悟：人苦志更强。\n\n\n## 《正人先正己》\n　　要求别人做到的，\n　　自己必须首先作到。\n　　言教不如身教，\n　　托尔斯泰认为：\n　　“要让所有人都做的要，\n　　首先必须自己做好。”\n　　你感到生活无味，\n　　要想改造生活，\n　　首先要改造自己对生活的态度，\n　　“微笑示人，充满信心”。\n　　每日提醒：对人严，对己更严。\n　　人生顿悟：自己先做好。\n\n\n## 《人贵有自知之明》\n　　知人者智，知己者明，\n　　人无自知之明，\n　　就会走两个极端：\n　　要么自我感觉良好，\n　　自傲自大，自恋自狂；\n　　要么缺乏自信，\n　　自轻自卑，自贱自暴，\n　　没有自知之明多是轻狂之人，\n　　没有自知之明多有狂妄和轻贱之举。\n　　每日提醒：了解自己比了解别人更重要。\n　　人生顿悟：剖析、完善。\n\n\n## 《失业不失志》\n　　市场经济，竞争时代，\n　　下岗失业已是家常便饭，\n　　从业不敬业，\n　　就会马上下岗失业。\n　　身无一技之长，\n　　也会下岗失业……\n　　下岗不可怕，\n　　可怕的是从此消沉堕落。\n　　重新振作起来，\n　　从头开始，这是大写的人生。\n　　每日提醒：在岗要有失业的忧虑。\n　　人生顿悟：多有谋生的技能。\n\n## 《不要总有不平衡的心理》\n　　多干点工作，\n　　就要讨价还价，\n　　索取过分的报酬，\n　　一旦要求达不到，\n　　心理就失去平衡。\n　　待遇不如别人，\n　　心理就会不平衡，\n　　欲望要求没有满足，\n　　心理更会失去平衡。\n　　不平衡就会烦恼不尽。\n　　每日提醒：要有吃亏精神。\n　　人生顿悟：清淡。\n\n\n## 《不要追逐世俗的荣誉》\n　　一辈子寻找所谓别人认可的东西，\n　　永远痛失自己的欢乐和幸福。\n　　庸俗的评论会湮灭你的个性，\n　　世俗的指点会让你不知所措。\n　　为钱而钱会六亲不认，\n　　为权而权会胆大妄为，\n　　为名而名会巧取强夺。\n　　真实的我在刻意的追逐之中，\n　　会变成碎片随风飘扬，\n　　世俗的我已变得面目可憎。\n　　每日提醒：得到了媚俗，失去了真实。\n　　人生顿悟：坚定信念，拥有自我。\n\n\n## 《知道智慧人的品行》\n　　智慧人让人羡慕，\n　　智慧人谨慎小心，\n　　从不卤莽行事，\n　　或者炫耀健谈。\n　　智慧人睿智自明，\n　　从不事到临头，\n　　才惊慌失措。\n　　智慧人有勇有谋，\n　　勤于思索创造，\n　　自寻快乐和幸福。\n　　每日提醒：榜样的力量是无穷的。\n　　人生顿悟：不断反省自己，不断向别人学习。\n\n\n## 《把好口风关》\n　　不要轻易许诺。\n　　君子一言，驷马难追，\n　　说出来就要做得到。\n　　不要做牛皮王，\n　　否则人人瞧不起你。\n　　不要宣扬别人的隐私，\n　　要善于给别人遮丑，\n　　津津乐道于传播别人的污点，\n　　他人会把你当作市侩似的小妇人。\n　　谨慎言语什么时候都没有错。\n　　每日提醒：想一想，再说。\n　　人生顿悟：慎言。\n\n\n## 《你无法去改变别人》\n　　我们无法去改变别人的看法，\n　　能改变的恰恰只有我们自己。\n　　坏的生活不在于别人的罪恶，\n　　而在于我们心情的恶劣。\n　　让生活变好的金钥匙不在别人手里，\n　　放弃我们的抱怨，\n　　美好生活可以唾手可得。\n　　我们主观上本想好好生活，\n　　可是客观上却没有好的生活，\n　　其原因是总想等待别人来改善生活。\n　　每日提醒：；好心境是自己创造的。\n　　人生顿悟：做生活的主人。\n\n\n## 《别做令人厌烦的人》\n　　总是给人添烦恼，\n　　别人恐怕避之不及，\n　　总是骚扰别人，\n　　只会讨人生厌。\n　　说话罗罗唆嗦，\n　　让人打心眼里厌恶，\n　　做事拖泥带水，\n　　别人终无宁日，\n　　人都会讨厌别人，\n　　却从没有人会讨厌自己。\n　　每日提醒：自我修养特别重要。\n　　人生顿悟：自知之明。\n\n\n## 《名声是金》\n　　好名声使人终生受益，\n　　还能光泽后人，\n　　坏名声使人抬不起头来，\n　　生不如死。\n　　获得好名声很不容易，\n　　而败坏好名声却易如反掌。\n　　只有基础扎实的好名声才会持久，\n　　因为它深得人们的敬佩和尊敬。\n　　多数平凡人都会忽视自己的名声，\n　　而过多关注别人的名声。\n　　每日提醒：名声是做出来的，不是吹出来的。\n　　人生顿悟：形象很重要。\n\n\n## 《极端的聪明或麻木都不可取》\n　　有些人忧虑过度，\n　　导致精神失常，\n　　有些人麻木不仁，\n　　对任何事物都无动于衷；\n　　前者常为寻找理性而痛苦，\n　　因聪明过头而衰亡，\n　　愚蠢的根源在于什么都懊悔。\n　　后者不知悔恨为何物，\n　　整天稀里糊涂，\n　　活着与死去没有什么区别。\n　　每日提醒：走极端总没有好下场。\n　　人生顿悟：寻找智慧。\n\n\n## 《人生的幸福多是无法从别人身上得到》\n　　假如你想寻找真正的幸福，\n　　一点不用瞎费劲，\n　　既不用去遥远的地方取经，\n　　也不用卑微地乞求别人的恩赐，\n　　真正的幸福蕴藏在你自己身上。\n　　以乞求、投机、强求、卖买等方式，\n　　得到的幸福均是短暂的，\n　　甚至是徒劳无益的。\n　　许多是得不偿失的。\n　　幸福不靠天地，靠自己。\n　　每日提醒：真正的幸福就是自己拥有爱的生活。\n　　人生顿悟：自强多福。\n\n\n## 《了解哲人解读的三个“最”》\n　　托尔斯泰在生活之路中描述：\n　　“有一个人问哲人：\n　　什么事是最重要的？什么人是最重要的？\n　　生活中什么时间是最重要的？”哲人认真的回答到：\n　　“最重要的事是与所有人共同相爱，\n　　最重要的人是此刻所交往的人，\n　　最重要的时间是现在的时光。”切记：今天最重要。\n　　每日提醒：昨天已经过去，未来还没有来临。\n　　人生顿悟：让今天之心永远快乐。\n\n\n## 《想开一些》\n　　先哲们智慧地说：“同是一件事，\n　　想开了是天堂，\n　　想不开是地狱。”\n　　生活的主体是自己，\n　　自己才是生命的主人。\n　　别人的劝告，\n　　只多是种安慰，\n　　不能当做根治心病的良药，\n　　心灵的伤痛只能自己慢慢治疗。\n　　每日提醒：人人都有不平事。\n　　人生顿悟：想不开是与自己过不去。\n\n\n## 《掌握改变自己处境的计策》\n　　爱默生说：\n　　“如果一个人对自己的处境不满，\n　　他可以用两种方法来改变：\n　　改善自己的生活条件；\n　　或者改善自己灵魂的状况。\n　　前者不是自己随时都可以做到的，\n　　后者则永远随他自己掌握。”\n　　处境的恶化都是心境引起的，\n　　改变心态，换位思考，\n　　是简捷的方法。\n　　每日提醒：心境愉快，环境也好。\n　　人生顿悟：心态要好。\n\n\n## 《去掉不幸的祸根》\n　　在尘世中胡乱寻找幸福的人，\n　　是世界上最不幸之人，\n　　不要盲目比较，快乐长在；\n　　不要丧失自我，自信长在；\n　　不要乞讨幸福，自尊长在；\n　　不要贪求过多，知足长乐；\n　　不要虚荣心太强，悠闲自得；\n　　不要怀疑一切，真情长在；\n　　不要复杂生活，欢乐常伴；\n　　不要仇视社会，和睦共处。\n　　每日提醒：幸福就在自己的手中。\n　　人生顿悟：不幸多是自找的。","slug":"ninety-nine-life-sentiment","published":1,"updated":"2016-03-17T00:44:06.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8b003ezspksfk7r8zl","thumbnailImageUrl":null},{"title":"一个程序猿的幸福历程","date":"2016-07-24T13:52:59.000Z","_content":"> “很多人跟我说，你有房有车有老婆有小孩，人生圆满了啊，真的是这样吗？”\n\n# 初识\n\n我和我老婆是校友，我是软件专业，她是财务专业，她小我一届。至于怎么认识的，已记不得，只是一直是QQ好友，11年暑假见面就在一起了。\n\n\n# 恋爱\n\n__恋爱应该是最开心的一段时光__，有时间我们就出来玩，去公园，爬山，吃饭啥的。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n<!--more-->\n女票很喜欢吃辣，我一开始不怎么吃，到后来我吃辣也是杠杠的。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n就这样__无忧无虑__过了一年，我毕业了，尽管刚刚实习薪资才1500，但我们依旧过得十分开心，那段时光是值得永久保存的。\n\n# 谈婚论嫁\n\n这个阶段我是不太愿意多回顾，但是是人生必经历的阶段，很多小情侣恐怕就在双方父母见面后谈不拢被迫选择分手的吧。如果这个阶段分手，我觉得太可惜。如果真的分手，那可能父母太自私，打着为小孩的幸福名义，实则为了自己的面子。\n\n我在这个阶段细节：此处省略一万字。只能说家家有本难念的经，我这个“中间人”显得如此的无助和无奈，我也在女票面前哭的__稀里哗啦__（我记事一来，第一次哭，也是__最后一次__），我也想过放弃这段感情。\n\n# 怀孕\n\n都说孕妇易怒，果不假，再加上老婆脾气本身就不太好，不过我想说的是，老婆大部分时间都是好沟通，脾气也是不错的，偶尔“发发疯”，忍忍就过了，谁让你是祖宗，而且又怀孕了。当然也有没有忍着的时候，于是 [如何逼疯程序猿](http://mp.weixin.qq.com/s?__biz=MzI4MzE2MTQ5Mw==&mid=2649752167&idx=1&sn=b607fb63d412f9cbccbb247c7c8d82da&scene=21#wechat_redirect)。\n\n# 宝宝到来的准备\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay4.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay5.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay6.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay7.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay9.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay10.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay11.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n\n因此我也付出了“代价”，跟着老婆后面天天吃好的，胖了__10多斤__！！！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay12.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# 宝宝的降临\n\n2016年7月16号10点55分，一个小胖子出生，__8斤__，而且还是__顺产__。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay8.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n老婆预产期是10号，我8号就请了陪产假，在家等着宝宝的出生，谁知老婆一点反应都没有，肚子也不疼。16号当天早上四点多，老婆把我从睡梦里叫醒，说羊水破了，我问要去医院吗，老婆说要不等天亮，就上床睡，但是老婆肚子好痛，还是马上去了医院。\n\n挂号办理住院手续，做B超，然后带她进产房去检查，此时8点多，可是很久都没有出来，不会在里面生了吧，我一直在产房等，拿水进去，来回走动，焦急的很。11点多，我正好去拿东西，就听到丈人喊，生了，8斤，男孩，嗯，终于安心了。还等2个小时，需要观察一下大人和小孩。\n\n当产房门打开，推着他们出来，我还难以置信，宝宝就这样来了？！也好像不认识了老婆，在我想象，不是出来就打我咬我吗，看她如此淡定看着娃，难道是因为升级当妈的缘故，瞬间觉得老婆真的好伟大。\n\n__老婆，你比我想象中更加坚强__。\n\n# 吴思睿\n\n其实男宝宝女宝宝，我们是无所谓的，我内心觉得是女宝宝，因为身边的程序猿生的娃大多数是女宝宝。\n\n宝宝，我只希望你能__健康成长__，做个__思想独立__、__善良__的人，让我们一起来呵护你的麻麻哈。\n\n当然，什么样子的父母什么样子的小孩，我会言传声教，为你树立好的榜样，做好你的人生向导。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay13.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# 最后\n\n我希望我们就像电视剧里一样，__从此我们一家三口过上了幸福的生活__。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n","source":"_posts/myHappyWay.md","raw":"title: 一个程序猿的幸福历程\ndate: 2016-07-24 21:52:59\ntags: Happy\ncategory: Life\n---\n> “很多人跟我说，你有房有车有老婆有小孩，人生圆满了啊，真的是这样吗？”\n\n# 初识\n\n我和我老婆是校友，我是软件专业，她是财务专业，她小我一届。至于怎么认识的，已记不得，只是一直是QQ好友，11年暑假见面就在一起了。\n\n\n# 恋爱\n\n__恋爱应该是最开心的一段时光__，有时间我们就出来玩，去公园，爬山，吃饭啥的。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n<!--more-->\n女票很喜欢吃辣，我一开始不怎么吃，到后来我吃辣也是杠杠的。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n就这样__无忧无虑__过了一年，我毕业了，尽管刚刚实习薪资才1500，但我们依旧过得十分开心，那段时光是值得永久保存的。\n\n# 谈婚论嫁\n\n这个阶段我是不太愿意多回顾，但是是人生必经历的阶段，很多小情侣恐怕就在双方父母见面后谈不拢被迫选择分手的吧。如果这个阶段分手，我觉得太可惜。如果真的分手，那可能父母太自私，打着为小孩的幸福名义，实则为了自己的面子。\n\n我在这个阶段细节：此处省略一万字。只能说家家有本难念的经，我这个“中间人”显得如此的无助和无奈，我也在女票面前哭的__稀里哗啦__（我记事一来，第一次哭，也是__最后一次__），我也想过放弃这段感情。\n\n# 怀孕\n\n都说孕妇易怒，果不假，再加上老婆脾气本身就不太好，不过我想说的是，老婆大部分时间都是好沟通，脾气也是不错的，偶尔“发发疯”，忍忍就过了，谁让你是祖宗，而且又怀孕了。当然也有没有忍着的时候，于是 [如何逼疯程序猿](http://mp.weixin.qq.com/s?__biz=MzI4MzE2MTQ5Mw==&mid=2649752167&idx=1&sn=b607fb63d412f9cbccbb247c7c8d82da&scene=21#wechat_redirect)。\n\n# 宝宝到来的准备\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay4.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay5.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay6.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay7.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay9.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay10.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay11.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n\n因此我也付出了“代价”，跟着老婆后面天天吃好的，胖了__10多斤__！！！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay12.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# 宝宝的降临\n\n2016年7月16号10点55分，一个小胖子出生，__8斤__，而且还是__顺产__。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay8.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n老婆预产期是10号，我8号就请了陪产假，在家等着宝宝的出生，谁知老婆一点反应都没有，肚子也不疼。16号当天早上四点多，老婆把我从睡梦里叫醒，说羊水破了，我问要去医院吗，老婆说要不等天亮，就上床睡，但是老婆肚子好痛，还是马上去了医院。\n\n挂号办理住院手续，做B超，然后带她进产房去检查，此时8点多，可是很久都没有出来，不会在里面生了吧，我一直在产房等，拿水进去，来回走动，焦急的很。11点多，我正好去拿东西，就听到丈人喊，生了，8斤，男孩，嗯，终于安心了。还等2个小时，需要观察一下大人和小孩。\n\n当产房门打开，推着他们出来，我还难以置信，宝宝就这样来了？！也好像不认识了老婆，在我想象，不是出来就打我咬我吗，看她如此淡定看着娃，难道是因为升级当妈的缘故，瞬间觉得老婆真的好伟大。\n\n__老婆，你比我想象中更加坚强__。\n\n# 吴思睿\n\n其实男宝宝女宝宝，我们是无所谓的，我内心觉得是女宝宝，因为身边的程序猿生的娃大多数是女宝宝。\n\n宝宝，我只希望你能__健康成长__，做个__思想独立__、__善良__的人，让我们一起来呵护你的麻麻哈。\n\n当然，什么样子的父母什么样子的小孩，我会言传声教，为你树立好的榜样，做好你的人生向导。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay13.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# 最后\n\n我希望我们就像电视剧里一样，__从此我们一家三口过上了幸福的生活__。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n","slug":"myHappyWay","published":1,"updated":"2016-08-05T06:39:20.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8f003hzspkxfyekp0a","thumbnailImageUrl":null},{"title":"Android MVP+Retrofit+RxJava实践小结","date":"2016-06-12T03:07:23.000Z","_content":"\n关于MVP、Retrofit、RxJava，之前已经分别做了分享，如果您还没有阅读过，可以猛戳：\n1、[Android MVP 实例](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)\n2、[Android Retrofit 2.0使用](http://wuxiaolong.me/2016/01/15/retrofit/)\n3、[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)\n4、[RxBus](http://wuxiaolong.me/2016/04/07/rxbus/)\n\n假设，您对MVP、Retrofit、RxJava已经有了一点了解，那么我们开始本文：\n<!--more-->\n# Android MVP优化\n\n1、MVP绑定Activity（Fragment）生命周期\n按照之前的文章，每个Presenter都得初始化和销毁，我新加MvpActivity(MvpFragment)，加了抽象方法`protected abstract P createPresenter();`这样做的目的在需要使用MVP的地方，可以继承MvpActivity(MvpFragment)，然后初始化和销毁就不用手动一个个去加了。\n\n2、接口请求等还是放到MVP的P中\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n这个图片，在当时写MVP文章时给出的，实际开发中，我发现每个都这样写，实在是增加了不少代码，然接口请求放到P中，还有个好处，就是MVP绑定Activity（Fragment）生命周期，当onDestroy时取消RXJava注册，以避免内存泄露。\n\n# 代码\n## 目录结构\n如图，有个大致了解：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/mvpRetrofitRxjava1.jpg)\nmvp：所有的mvp都放在这个包下\nretrofit：Retrofit接口和配置文件\nrxjava：RxJava一些回调设置\nui：Activity或fragment，建议按功能再细分包\n\n## 核心代码\n还是就贴出核心代码吧，源码在我的github上（[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)）。\n\nMainActivity入口，还是演示的之前的MVP的天气的接口，接口请求方法放在Presenter。\n\n### MvpActivity\nPresenter绑定Activity（Fragment）生命周期\n```java\npublic abstract class MvpActivity<P extends BasePresenter> extends BaseActivity {\n    protected P mvpPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        mvpPresenter = createPresenter();\n        super.onCreate(savedInstanceState);\n    }\n\n    protected abstract P createPresenter();\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if (mvpPresenter != null) {\n            mvpPresenter.detachView();\n        }\n    }\n}\n```\n\n### MainPresenter\napiStores.loadData方法是Retrofit做的网络请求，回调是RxJava完成的。\n```java\npublic class MainPresenter extends BasePresenter<MainView> {\n\n    public MainPresenter(MainView view) {\n        attachView(view);\n    }\n   \n    public void loadData(String cityId) {\n        mvpView.showLoading();\n        addSubscription(apiStores.loadData(cityId),\n                new SubscriberCallBack<>(new ApiCallback<MainModel>() {\n                    @Override\n                    public void onSuccess(MainModel model) {\n                        mvpView.getDataSuccess(model);\n                    }\n\n                    @Override\n                    public void onFailure(int code, String msg) {\n                        mvpView.getDataFail(msg);\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        mvpView.hideLoading();\n                    }\n                }));\n    }\n\n}\n```\n\n### apiStores.loadData\n是不是很简单，关于Retrofit配置，详见源码AppClient。\n```java\npublic interface ApiStores {\n    //baseUrl\n    String API_SERVER_URL = \"http://www.weather.com.cn/\";\n\n    //加载天气\n    @GET(\"adat/sk/{cityId}.html\")\n    Observable<MainModel> loadData(@Path(\"cityId\") String cityId);\n}\n\n```\n\n### RxJava回调方法\n这里onError，写了如果网络请求用httpcode来判断。当然可以不要。\n```java\npublic class SubscriberCallBack<T> extends Subscriber<T> {\n    private ApiCallback<T> apiCallback;\n\n    public SubscriberCallBack(ApiCallback<T> apiCallback) {\n        this.apiCallback = apiCallback;\n    }\n\n    @Override\n    public void onCompleted() {\n        apiCallback.onCompleted();\n    }\n\n    @Override\n    public void onError(Throwable e) {\n        e.printStackTrace();\n        if (e instanceof HttpException) {\n            HttpException httpException = (HttpException) e;\n            //httpException.response().errorBody().string()\n            int code = httpException.code();\n            String msg = httpException.getMessage();\n            if (code == 504) {\n                msg = \"网络不给力\";\n            }\n            apiCallback.onFailure(code, msg);\n        } else {\n            apiCallback.onFailure(0, e.getMessage());\n        }\n        apiCallback.onCompleted();\n    }\n\n    @Override\n    public void onNext(T t) {\n        apiCallback.onSuccess(t);\n    }\n}\n```\n\n### BasePresenter\n再来看看BasePresenter，这里做了Presenter初始化和销毁(包括RXjava取消注册)，调用在MvpActivity。\n```java\npublic class BasePresenter<V> implements Presenter<V> {\n    public V mvpView;\n    public ApiStores apiStores = AppClient.retrofit().create(ApiStores.class);\n    private CompositeSubscription mCompositeSubscription;\n\n    @Override\n    public void attachView(V mvpView) {\n        this.mvpView = mvpView;\n    }\n\n    @Override\n    public void detachView() {\n        this.mvpView = null;\n        onUnsubscribe();\n    }\n\n    //RXjava取消注册，以避免内存泄露\n    public void onUnsubscribe() {\n        if (mCompositeSubscription != null && mCompositeSubscription.hasSubscriptions()) {\n            mCompositeSubscription.unsubscribe();\n        }\n    }\n\n    public void addSubscription(Observable observable, Subscriber subscriber) {\n        if (mCompositeSubscription == null) {\n            mCompositeSubscription = new CompositeSubscription();\n        }\n        mCompositeSubscription.add(observable\n                .subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(subscriber));\n    }\n}\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)\n\n# 总结\n三者结合使用，重点还是对MVP的优化，Retrofit只贴出最简单的（后续会写Retrofit详情使用），Rxjava可能我是对它认识尚浅，实际运用最多还是RxBus。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/mvpRetrofitRxjava.md","raw":"title: Android MVP+Retrofit+RxJava实践小结\ndate: 2016-06-12 11:07:23\ntags: [MVP,Retrofit,RxJava]\ncategory: Android\n---\n\n关于MVP、Retrofit、RxJava，之前已经分别做了分享，如果您还没有阅读过，可以猛戳：\n1、[Android MVP 实例](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)\n2、[Android Retrofit 2.0使用](http://wuxiaolong.me/2016/01/15/retrofit/)\n3、[RxJava](http://wuxiaolong.me/2016/01/18/rxjava/)\n4、[RxBus](http://wuxiaolong.me/2016/04/07/rxbus/)\n\n假设，您对MVP、Retrofit、RxJava已经有了一点了解，那么我们开始本文：\n<!--more-->\n# Android MVP优化\n\n1、MVP绑定Activity（Fragment）生命周期\n按照之前的文章，每个Presenter都得初始化和销毁，我新加MvpActivity(MvpFragment)，加了抽象方法`protected abstract P createPresenter();`这样做的目的在需要使用MVP的地方，可以继承MvpActivity(MvpFragment)，然后初始化和销毁就不用手动一个个去加了。\n\n2、接口请求等还是放到MVP的P中\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n这个图片，在当时写MVP文章时给出的，实际开发中，我发现每个都这样写，实在是增加了不少代码，然接口请求放到P中，还有个好处，就是MVP绑定Activity（Fragment）生命周期，当onDestroy时取消RXJava注册，以避免内存泄露。\n\n# 代码\n## 目录结构\n如图，有个大致了解：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/mvpRetrofitRxjava1.jpg)\nmvp：所有的mvp都放在这个包下\nretrofit：Retrofit接口和配置文件\nrxjava：RxJava一些回调设置\nui：Activity或fragment，建议按功能再细分包\n\n## 核心代码\n还是就贴出核心代码吧，源码在我的github上（[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)）。\n\nMainActivity入口，还是演示的之前的MVP的天气的接口，接口请求方法放在Presenter。\n\n### MvpActivity\nPresenter绑定Activity（Fragment）生命周期\n```java\npublic abstract class MvpActivity<P extends BasePresenter> extends BaseActivity {\n    protected P mvpPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        mvpPresenter = createPresenter();\n        super.onCreate(savedInstanceState);\n    }\n\n    protected abstract P createPresenter();\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if (mvpPresenter != null) {\n            mvpPresenter.detachView();\n        }\n    }\n}\n```\n\n### MainPresenter\napiStores.loadData方法是Retrofit做的网络请求，回调是RxJava完成的。\n```java\npublic class MainPresenter extends BasePresenter<MainView> {\n\n    public MainPresenter(MainView view) {\n        attachView(view);\n    }\n   \n    public void loadData(String cityId) {\n        mvpView.showLoading();\n        addSubscription(apiStores.loadData(cityId),\n                new SubscriberCallBack<>(new ApiCallback<MainModel>() {\n                    @Override\n                    public void onSuccess(MainModel model) {\n                        mvpView.getDataSuccess(model);\n                    }\n\n                    @Override\n                    public void onFailure(int code, String msg) {\n                        mvpView.getDataFail(msg);\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        mvpView.hideLoading();\n                    }\n                }));\n    }\n\n}\n```\n\n### apiStores.loadData\n是不是很简单，关于Retrofit配置，详见源码AppClient。\n```java\npublic interface ApiStores {\n    //baseUrl\n    String API_SERVER_URL = \"http://www.weather.com.cn/\";\n\n    //加载天气\n    @GET(\"adat/sk/{cityId}.html\")\n    Observable<MainModel> loadData(@Path(\"cityId\") String cityId);\n}\n\n```\n\n### RxJava回调方法\n这里onError，写了如果网络请求用httpcode来判断。当然可以不要。\n```java\npublic class SubscriberCallBack<T> extends Subscriber<T> {\n    private ApiCallback<T> apiCallback;\n\n    public SubscriberCallBack(ApiCallback<T> apiCallback) {\n        this.apiCallback = apiCallback;\n    }\n\n    @Override\n    public void onCompleted() {\n        apiCallback.onCompleted();\n    }\n\n    @Override\n    public void onError(Throwable e) {\n        e.printStackTrace();\n        if (e instanceof HttpException) {\n            HttpException httpException = (HttpException) e;\n            //httpException.response().errorBody().string()\n            int code = httpException.code();\n            String msg = httpException.getMessage();\n            if (code == 504) {\n                msg = \"网络不给力\";\n            }\n            apiCallback.onFailure(code, msg);\n        } else {\n            apiCallback.onFailure(0, e.getMessage());\n        }\n        apiCallback.onCompleted();\n    }\n\n    @Override\n    public void onNext(T t) {\n        apiCallback.onSuccess(t);\n    }\n}\n```\n\n### BasePresenter\n再来看看BasePresenter，这里做了Presenter初始化和销毁(包括RXjava取消注册)，调用在MvpActivity。\n```java\npublic class BasePresenter<V> implements Presenter<V> {\n    public V mvpView;\n    public ApiStores apiStores = AppClient.retrofit().create(ApiStores.class);\n    private CompositeSubscription mCompositeSubscription;\n\n    @Override\n    public void attachView(V mvpView) {\n        this.mvpView = mvpView;\n    }\n\n    @Override\n    public void detachView() {\n        this.mvpView = null;\n        onUnsubscribe();\n    }\n\n    //RXjava取消注册，以避免内存泄露\n    public void onUnsubscribe() {\n        if (mCompositeSubscription != null && mCompositeSubscription.hasSubscriptions()) {\n            mCompositeSubscription.unsubscribe();\n        }\n    }\n\n    public void addSubscription(Observable observable, Subscriber subscriber) {\n        if (mCompositeSubscription == null) {\n            mCompositeSubscription = new CompositeSubscription();\n        }\n        mCompositeSubscription.add(observable\n                .subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(subscriber));\n    }\n}\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)\n\n# 总结\n三者结合使用，重点还是对MVP的优化，Retrofit只贴出最简单的（后续会写Retrofit详情使用），Rxjava可能我是对它认识尚浅，实际运用最多还是RxBus。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"mvpRetrofitRxjava","published":1,"updated":"2016-06-20T09:17:53.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8j003lzspk8yqp55yh","thumbnailImageUrl":null},{"title":"吴小龙同學-客戶端","date":"2014-12-24T16:00:00.000Z","_content":"\n>好记忆不如烂笔头，随时记录自己所遇到的问题及疑惑。\n\n* 安卓客戶端\n\n![](http://wuxiaolong.qiniudn.com/WuXiaolong_qrcode.png)\n","source":"_posts/mobile.md","raw":"title: 吴小龙同學-客戶端\ndate: 2014-12-25 \ncategories: [Life]\ntags: [Life,Android]\n---\n\n>好记忆不如烂笔头，随时记录自己所遇到的问题及疑惑。\n\n* 安卓客戶端\n\n![](http://wuxiaolong.qiniudn.com/WuXiaolong_qrcode.png)\n","slug":"mobile","published":1,"updated":"2016-03-17T00:44:06.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8m003rzspkj8e6dnny","thumbnailImageUrl":null},{"title":"android之获取手机信息","date":"2013-07-17T16:00:00.000Z","_content":"android获取手机信息（号码，内存，CPU，分辨率，MAC，IP，SD卡，IMEI,经纬度，信号强度等等）\n\n<!-- more -->\n\n```java\n\tpackage com.android.xiaomolong.example.apkdemo;\t\n\timport java.io.BufferedReader;\n\timport java.io.File;\n\timport java.io.FileReader;\n\timport java.io.IOException;\n\timport java.io.InputStream;\n\timport java.io.InputStreamReader;\n\timport java.net.HttpURLConnection;\n\timport java.net.InetAddress;\n\timport java.net.MalformedURLException;\n\timport java.net.NetworkInterface;\n\timport java.net.SocketException;\n\timport java.net.URL;\n\timport java.net.URLConnection;\n\timport java.util.Enumeration;\n\timport java.util.List;\n\t\n\timport android.app.Activity;\n\timport android.app.ActivityManager;\n\timport android.app.ActivityManager.MemoryInfo;\n\timport android.app.AlertDialog;\n\timport android.content.Context;\n\timport android.content.DialogInterface;\n\timport android.location.Criteria;\n\timport android.location.Location;\n\timport android.location.LocationListener;\n\timport android.location.LocationManager;\n\timport android.net.ConnectivityManager;\n\timport android.net.NetworkInfo;\n\timport android.net.wifi.WifiInfo;\n\timport android.net.wifi.WifiManager;\n\timport android.os.Bundle;\n\timport android.os.Environment;\n\timport android.os.StatFs;\n\timport android.telephony.CellLocation;\n\timport android.telephony.NeighboringCellInfo;\n\timport android.telephony.PhoneStateListener;\n\timport android.telephony.ServiceState;\n\timport android.telephony.SignalStrength;\n\timport android.telephony.TelephonyManager;\n\timport android.telephony.cdma.CdmaCellLocation;\n\timport android.telephony.gsm.GsmCellLocation;\n\timport android.text.format.Formatter;\n\timport android.util.DisplayMetrics;\n\timport android.util.Log;\n\timport android.view.Gravity;\n\timport android.view.WindowManager;\n\timport android.widget.Toast;\n\t\n\t/**\n\t * \n\t * @author 小尛龙\n\t * \n\t */\n\tpublic class MainActivity extends Activity {\n\t\n\t        @Override\n\t        protected void onCreate(Bundle savedInstanceState) {\n\t                super.onCreate(savedInstanceState);\n\t                setContentView(R.layout.activity_main);\n\t\n\t                Log.d(\"wxl\", getSystemMemory());\n\t\n\t        }\n\t\n\t        // 获取Android手机中SD卡存储信息 获取剩余空间\n\t        public void getSDCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                /*\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\">\n\t                 * </uses-permission>\n\t                 */\n\t                // 需要判断手机上面SD卡是否插好，如果有SD卡的情况下，我们才可以访问得到并获取到它的相关信息，当然以下这个语句需要用if做判断\n\t                if (Environment.getExternalStorageState().equals(\n\t                                Environment.MEDIA_MOUNTED)) {\n\t                        // 取得sdcard文件路径\n\t                        File path = Environment.getExternalStorageDirectory();\n\t                        StatFs statfs = new StatFs(path.getPath());\n\t                        // 获取block的SIZE\n\t                        long blocSize = statfs.getBlockSize();\n\t                        // 获取BLOCK数量\n\t                        long totalBlocks = statfs.getBlockCount();\n\t                        // 空闲的Block的数量\n\t                        long availaBlock = statfs.getAvailableBlocks();\n\t                        // 计算总空间大小和空闲的空间大小\n\t                        // 存储空间大小跟空闲的存储空间大小就被计算出来了。\n\t                        long availableSize = blocSize * availaBlock;\n\t                        // (availableBlocks * blockSize)/1024 KIB 单位\n\t                        // (availableBlocks * blockSize)/1024 /1024 MIB单位\n\t                        long allSize = blocSize * totalBlocks;\n\t                }\n\t\n\t        }\n\t\n\t        // 获取手机ip method-1\n\t        public String getLocalIpAddress() {\n\t                try {\n\t                        for (Enumeration<NetworkInterface> en = NetworkInterface\n\t                                        .getNetworkInterfaces(); en.hasMoreElements();) {\n\t                                NetworkInterface intf = en.nextElement();\n\t                                for (Enumeration<InetAddress> enumIpAddr = intf\n\t                                                .getInetAddresses(); enumIpAddr.hasMoreElements();) {\n\t                                        InetAddress inetAddress = enumIpAddr.nextElement();\n\t                                        if (!inetAddress.isLoopbackAddress()) {\n\t                                                Toast.makeText(this,\n\t                                                                inetAddress.getHostAddress().toString(), 3000)\n\t                                                                .show();\n\t                                                return inetAddress.getHostAddress().toString();\n\t                                        }\n\t                                }\n\t                        }\n\t                } catch (SocketException ex) {\n\t                        ex.printStackTrace();\n\t                        // Log.e(\"ifo\", ex.toString());\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 需要权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.INTERNET\"></uses-permission>\n\t\n\t        // 获取手机ip method-2\n\t        // 首先设置用户权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.CHANGE_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t        public String getLocalIpAddress2() {\n\t                // 获取wifi服务\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                // 判断wifi是否开启\n\t                if (!wifiManager.isWifiEnabled()) {\n\t                        wifiManager.setWifiEnabled(true);\n\t                }\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                int ipAddress = wifiInfo.getIpAddress();\n\t                String ip = intToIp(ipAddress);\n\t                return ip;\n\t        }\n\t\n\t        private String intToIp(int i) {\n\t                return (i & 0xFF) + \".\" + ((i >> 8) & 0xFF) + \".\" + ((i >> 16) & 0xFF)\n\t                                + \".\" + (i >> 24 & 0xFF);\n\t        }\n\t\n\t        // 查看本机外网IP\n\t        /*\n\t         * 该方法需要设备支持上网 查看\n\t         * System.out.println((GetNetIp(\"http://fw.qq.com/ipaddress\"))); 加权限\n\t         * <uses-permission\n\t         * android:name=\"android.permission.INTERNET\"></uses-permission>\n\t         * 通过获取http://fw.qq.com/ipaddress网页取得外网IP 这里有几个查看IP的网址然后提取IP试试。\n\t         * http://ip168.com/ http://www.cmyip.com/ http://city.ip138.com/ip2city.asp\n\t         */\n\t        public String GetNetIp(String ipaddr) {\n\t                URL infoUrl = null;\n\t                InputStream inStream = null;\n\t                try {\n\t                        infoUrl = new URL(ipaddr);\n\t                        URLConnection connection = infoUrl.openConnection();\n\t                        HttpURLConnection httpConnection = (HttpURLConnection) connection;\n\t                        int responseCode = httpConnection.getResponseCode();\n\t                        if (responseCode == HttpURLConnection.HTTP_OK) {\n\t                                inStream = httpConnection.getInputStream();\n\t                                BufferedReader reader = new BufferedReader(\n\t                                                new InputStreamReader(inStream, \"utf-8\"));\n\t                                StringBuilder strber = new StringBuilder();\n\t                                String line = null;\n\t                                while ((line = reader.readLine()) != null)\n\t                                        strber.append(line + \"\\n\");\n\t                                inStream.close();\n\t                                return strber.toString();\n\t                        }\n\t                } catch (MalformedURLException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                } catch (IOException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 获取手机MAC地址\n\t        private String getMacAddress() {\n\t                String result = \"\";\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                result = wifiInfo.getMacAddress();\n\t                // Log.i(TAG, \"macAdd:\" + result);\n\t                return result;\n\t        }\n\t\n\t        // 获取手机屏幕高度\n\t        private String getWeithAndHeight() {\n\t                // 这种方式在service中无法使用，\n\t                DisplayMetrics dm = new DisplayMetrics();\n\t                getWindowManager().getDefaultDisplay().getMetrics(dm);\n\t                int width = dm.widthPixels; // 宽\n\t                int height = dm.heightPixels; // 高\n\t                float density = dm.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                int densityDpi = dm.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                // 在service中也能得到高和宽\n\t                WindowManager mWindowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);\n\t                width = mWindowManager.getDefaultDisplay().getWidth();\n\t                height = mWindowManager.getDefaultDisplay().getHeight();\n\t\n\t                // 居中显示Toast\n\t                Toast msg = Toast.makeText(this, \"宽=\" + width + \"   高=\" + height,\n\t                                Toast.LENGTH_LONG);\n\t                msg.setGravity(Gravity.CENTER, msg.getXOffset() / 2,\n\t                                msg.getYOffset() / 2);\n\t                msg.show();\n\t                return \"(像素)宽:\" + width + \"\\n\" + \"(像素)高:\" + height + \"\\n\"\n\t                                + \"屏幕密度（0.75 / 1.0 / 1.5）:\" + density + \"\\n\"\n\t                                + \"屏幕密度DPI（120 / 160 / 240）:\" + densityDpi + \"\\n\";\n\t                /*\n\t                 * 下面的代码即可获取屏幕的尺寸。 在一个Activity的onCreate方法中，写入如下代码： DisplayMetrics metric\n\t                 * = new DisplayMetrics();\n\t                 * getWindowManager().getDefaultDisplay().getMetrics(metric); int width\n\t                 * = metric.widthPixels; // 屏幕宽度（像素） int height = metric.heightPixels;\n\t                 * // 屏幕高度（像素） float density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                 * int densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                 * \n\t                 * 但是，需要注意的是，在一个低密度的小屏手机上，仅靠上面的代码是不能获取正确的尺寸的。\n\t                 * 比如说，一部240x320像素的低密度手机，如果运行上述代码，获取到的屏幕尺寸是320x427。\n\t                 * 因此，研究之后发现，若没有设定多分辨率支持的话\n\t                 * ，Android系统会将240x320的低密度（120）尺寸转换为中等密度（160）对应的尺寸，\n\t                 * 这样的话就大大影响了程序的编码。所以，需要在工程的AndroidManifest\n\t                 * .xml文件中，加入supports-screens节点，具体的内容如下： <supports-screens\n\t                 * android:smallScreens=\"true\" android:normalScreens=\"true\"\n\t                 * android:largeScreens=\"true\" android:resizeable=\"true\"\n\t                 * android:anyDensity=\"true\" />\n\t                 * 这样的话，当前的Android程序就支持了多种分辨率，那么就可以得到正确的物理尺寸了。\n\t                 */\n\t        }\n\t\n\t        // 获取手机经纬度\n\t        public void getLocation() {\n\t                // 1. 创建一个 LocationManager对象。\n\t                LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\n\t                // 2. 创建一个 LocationListener对象。\n\t                LocationListener myGPSListener = new LocationListener() {\n\t                        // 一旦Location发生改变就会调用这个方法\n\t                        public void onLocationChanged(Location location) {\n\t                                double latitude = location.getLatitude();\n\t                                double longitude = location.getLongitude();\n\t                        }\n\t\n\t                        public void onStatusChanged(String provider, int status,\n\t                                        Bundle extras) {\n\t                        }\n\t\n\t                        public void onProviderEnabled(String provider) {\n\t                        }\n\t\n\t                        public void onProviderDisabled(String provider) {\n\t                        }\n\t                };\n\t                // 3.向LocationManager 注册一个LocationListener。\n\t                Criteria criteria = new Criteria();\n\t                criteria.setAccuracy(Criteria.ACCURACY_COARSE);\n\t                criteria.setAltitudeRequired(false);\n\t                criteria.setCostAllowed(true);\n\t                criteria.setPowerRequirement(Criteria.POWER_LOW);\n\t                String provider = locationManager.getBestProvider(criteria, true); // 根据Criteria\n\t                                                                                                                                                        // 的设置获取一个最佳的Provider\n\t                locationManager\n\t                                .requestLocationUpdates(provider, 5000, 0, myGPSListener);\n\t                // 4.移除LocationManager 注册的 LocationListener。\n\t                locationManager.removeUpdates(myGPSListener);\n\t\n\t        }\n\t\n\t        // 当前网络是否连接\n\t        public boolean isNetConnecting() {\n\t                ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t                NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t                if (networkInfo == null || !networkInfo.isConnected()) {\n\t                        // info.setConnected(false);\n\t                        return false;\n\t                } else {\n\t                        // info.setConnected(true);\n\t                        return true;\n\t                }\n\t        }\n\t\n\t        // 获取信号强度\n\t        public void getPhoneState() {\n\t                // 1. 创建telephonyManager 对象。\n\t                TelephonyManager telephonyManager = (TelephonyManager) /* context. */getSystemService(Context.TELEPHONY_SERVICE);\n\t                // 2. 创建PhoneStateListener 对象\n\t                PhoneStateListener MyPhoneListener = new PhoneStateListener() {\n\t                        @Override\n\t                        public void onCellLocationChanged(CellLocation location) {\n\t                                if (location instanceof GsmCellLocation) {// gsm网络\n\t                                        int CID = ((GsmCellLocation) location).getCid();\n\t                                } else if (location instanceof CdmaCellLocation) {// 其他CDMA等网络\n\t                                        int ID = ((CdmaCellLocation) location).getBaseStationId();\n\t                                }\n\t                        }\n\t\n\t                        @Override\n\t                        public void onServiceStateChanged(ServiceState serviceState) {\n\t                                super.onServiceStateChanged(serviceState);\n\t                        }\n\t\n\t                        @Override\n\t                        public void onSignalStrengthsChanged(SignalStrength signalStrength) {\n\t                                int asu = signalStrength.getGsmSignalStrength();\n\t                                int dbm = -113 + 2 * asu; // 信号强度\n\t                                super.onSignalStrengthsChanged(signalStrength);\n\t                        }\n\t                };\n\t                // 3. 监听信号改变\n\t                telephonyManager.listen(MyPhoneListener,\n\t                                PhoneStateListener.LISTEN_SIGNAL_STRENGTHS);\n\t\n\t                /*\n\t                 * 可能需要的权限 <uses-permission\n\t                 * android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n\t                 * <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"\n\t                 * /> <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\t                 */\n\t        }\n\t\n\t        // 获取手机可用内存和总内存\n\t        private String getSystemMemory() {\n\t                /*\n\t                 * 在Android开发中，有时候我们想获取手机的一些硬件信息，比如android手机的总内存和可用内存大小。这个该如何实现呢？\n\t                 * 通过读取文件\"/proc/meminfo\"\n\t                 * 的信息能够获取手机Memory的总量，而通过ActivityManager.getMemoryInfo\n\t                 * (ActivityManager.MemoryInfo)方法可以获取当前的可用Memory量。\n\t                 * \"/proc/meminfo\"文件记录了android手机的一些内存信息\n\t                 * ，在命令行窗口里输入\"adb shell\"，进入shell环境，输入\n\t                 * \"cat /proc/meminfo\"即可在命令行里显示meminfo文件的内容，具体如下所示。\n\t                 * \n\t                 * C:\\Users\\Figo>adb shell # cat /proc/meminfo cat /proc/meminfo\n\t                 * MemTotal: 94096 kB MemFree: 1684 kB Buffers: 16 kB Cached: 27160 kB\n\t                 * SwapCached: 0 kB Active: 35392 kB Inactive: 44180 kB Active(anon):\n\t                 * 26540 kB Inactive(anon): 28244 kB Active(file): 8852 kB\n\t                 * Inactive(file): 15936 kB Unevictable: 280 kB Mlocked: 0 kB *\n\t                 * SwapTotal: 0 kB SwapFree: 0 kB Dirty: 0 kB Writeback: 0 kB AnonPages:\n\t                 * 52688 kB Mapped: 17960 kB Slab: 3816 kB SReclaimable: 936 kB\n\t                 * SUnreclaim: 2880 kB PageTables: 5260 kB NFS_Unstable: 0 kB Bounce: 0\n\t                 * kB WritebackTmp: 0 kB CommitLimit: 47048 kB Committed_AS: 1483784 kB\n\t                 * VmallocTotal: 876544 kB VmallocUsed: 15456 kB VmallocChunk: 829444 kB\n\t                 * #\n\t                 * \n\t                 * 下面先对\"/proc/meminfo\"文件里列出的字段进行粗略解释： MemTotal: 所有可用RAM大小。 MemFree:\n\t                 * LowFree与HighFree的总和，被系统留着未使用的内存。 Buffers: 用来给文件做缓冲大小。 Cached:\n\t                 * 被高速缓冲存储器（cache memory）用的内存的大小（等于diskcache minus SwapCache）。\n\t                 * SwapCached:被高速缓冲存储器（cache\n\t                 * memory）用的交换空间的大小。已经被交换出来的内存，仍然被存放在swapfile中，\n\t                 * 用来在需要的时候很快的被替换而不需要再次打开I/O端口。 Active:\n\t                 * 在活跃使用中的缓冲或高速缓冲存储器页面文件的大小，除非非常必要，否则不会被移作他用。 Inactive:\n\t                 * 在不经常使用中的缓冲或高速缓冲存储器页面文件的大小，可能被用于其他途径。 SwapTotal: 交换空间的总大小。 SwapFree:\n\t                 * 未被使用交换空间的大小。 Dirty: 等待被写回到磁盘的内存大小。 Writeback: 正在被写回到磁盘的内存大小。\n\t                 * AnonPages：未映射页的内存大小。 Mapped: 设备和文件等映射的大小。 Slab:\n\t                 * 内核数据结构缓存的大小，可以减少申请和释放内存带来的消耗。 SReclaimable:可收回Slab的大小。\n\t                 * SUnreclaim：不可收回Slab的大小（SUnreclaim+SReclaimable＝Slab）。\n\t                 * PageTables：管理内存分页页面的索引表的大小。 NFS_Unstable:不稳定页表的大小。\n\t                 * 要获取android手机总内存大小，只需读取\"/proc/meminfo\"文件的第1行，并进行简单的字符串处理即可。\n\t                 */\n\t                String availMemory = getAvailMemory();\n\t                String totalMemory = getTotalMemory();\n\t                return \"可用内存=\" + availMemory + \"\\n\" + \"总内存=\" + totalMemory;\n\t\n\t        }// 手机的内存信息主要在/proc/meminfo文件中，其中第一行是总内存，而剩余内存可通过ActivityManager.MemoryInfo得到。\n\t\n\t        private String getAvailMemory() {// 获取android当前可用内存大小\n\t                ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\n\t                MemoryInfo mi = new MemoryInfo();\n\t                am.getMemoryInfo(mi);\n\t                // mi.availMem; 当前系统的可用内存\n\t                return Formatter.formatFileSize(getBaseContext(), mi.availMem);// 将获取的内存大小规格化\n\t        }\n\t\n\t        private String getTotalMemory() {\n\t                String str1 = \"/proc/meminfo\";// 系统内存信息文件\n\t                String str2;\n\t                String[] arrayOfString;\n\t                long initial_memory = 0;\n\t                try {\n\t                        FileReader localFileReader = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(\n\t                                        localFileReader, 8192);\n\t                        str2 = localBufferedReader.readLine();// 读取meminfo第一行，系统总内存大小\n\t\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (String num : arrayOfString) {\n\t                                Log.i(str2, num + \"\\t\");\n\t                        }\n\t\n\t                        initial_memory = Integer.valueOf(arrayOfString[1]).intValue() * 1024;// 获得系统总内存，单位是KB，乘以1024转换为Byte\n\t                        localBufferedReader.close();\n\t\n\t                } catch (IOException e) {\n\t                }\n\t                return Formatter.formatFileSize(getBaseContext(), initial_memory);// Byte转换为KB或者MB，内存大小规格化\n\t        }\n\t\n\t        // 获取手机CPU信息\n\t        private String getCpuInfo() {\n\t                String str1 = \"/proc/cpuinfo\";\n\t                String str2 = \"\";\n\t                String[] cpuInfo = { \"\", \"\" }; // 1-cpu型号 //2-cpu频率\n\t                String[] arrayOfString;\n\t                try {\n\t                        FileReader fr = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(fr, 8192);\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (int i = 2; i < arrayOfString.length; i++) {\n\t                                cpuInfo[0] = cpuInfo[0] + arrayOfString[i] + \" \";\n\t                        }\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        cpuInfo[1] += arrayOfString[2];\n\t                        localBufferedReader.close();\n\t                } catch (IOException e) {\n\t                }\n\t                // Log.i(TAG, \"cpuinfo:\" + cpuInfo[0] + \" \" + cpuInfo[1]);\n\t                return \"1-cpu型号:\" + cpuInfo[0] + \"2-cpu频率:\" + cpuInfo[1];\n\t        }// 和内存信息同理，cpu信息可通过读取/proc/cpuinfo文件来得到，其中第一行为cpu型号，第二行为cpu频率。\n\t\n\t        /*\n\t         * 一、Android 获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)\n\t         * 1、通过PackageManager可获取手机端已安装的apk文件的信息，具体代码如下: PackageManager\n\t         * packageManager = this.getPackageManager(); List<PackageInfo>\n\t         * packageInfoList = packageManager.getInstalledPackages(0);\n\t         * 通过上述方法，可得到手机中安装的所有应用程序，包括手动安装的apk包的信息、、系统预装的应用软件的信息，要区分这两类软件可使用以下方法:\n\t         * （a）从packageInfoList获取的packageInfo\n\t         * ，再通过packageInfo.applicationInfo获取applicationInfo。\n\t         * （b）判断(applicationInfo.flags &\n\t         * ApplicationInfo.FLAG_SYSTEM)的值，该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用。\n\t         * (1)获取应用的代码: public static List<PackageInfo> getAllApps(Context context) {\n\t         * List<PackageInfo> apps = new ArrayList<PackageInfo>(); PackageManager\n\t         * pManager = context.getPackageManager(); //获取手机内所有应用 List<PackageInfo>\n\t         * paklist = pManager.getInstalledPackages(0); for (int i = 0; i <\n\t         * paklist.size(); i++) { PackageInfo pak = (PackageInfo) paklist.get(i);\n\t         * //判断是否为非系统预装的应用程序 if ((pak.applicationInfo.flags &\n\t         * pak.applicationInfo.FLAG_SYSTEM) <= 0) { apps.add(pak); } } return apps;\n\t         * } (2)、获取图片、应用名、包名: PackageManager pManager =\n\t         * MessageSendActivity.this.getPackageManager(); List<PackageInfo> appList =\n\t         * Utils.getAllApps(MessageSendActivity.this); for(int\n\t         * i=0;i<appList.size();i++) { PackageInfo pinfo = appList.get(i); shareItem\n\t         * = new ShareItemInfo();\n\t         * shareItem.setIcon(pManager.getApplicationIcon(pinfo.applicationInfo));\n\t         * shareItem\n\t         * .setLabel(pManager.getApplicationLabel(pinfo.applicationInfo).toString\n\t         * ()); shareItem.setPackageName(pinfo.applicationInfo.packageName); }\n\t         * 其中ShareItemInfo 类自己写的，各位可以忽略 (3)获取支持分享的应用的代码： public static\n\t         * List<ResolveInfo> getShareApps(Context context){ List<ResolveInfo> mApps\n\t         * = new ArrayList<ResolveInfo>(); Intent intent=new\n\t         * Intent(Intent.ACTION_SEND,null);\n\t         * intent.addCategory(Intent.CATEGORY_DEFAULT);\n\t         * intent.setType(\"text/plain\"); PackageManager pManager =\n\t         * context.getPackageManager(); mApps =\n\t         * pManager.queryIntentActivities(intent\n\t         * ,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT); return mApps; }\n\t         * 由于该方法，返回的并不是PackageInfo 对象。而是ResolveInfo。因此获取图片、应用名、包名的方法不一样，如下：\n\t         * PackageManager pManager = MessageSendActivity.this.getPackageManager();\n\t         * List<ResolveInfo> resolveList =\n\t         * Utils.getShareApps(MessageSendActivity.this); for(int\n\t         * i=0;i<resolveList.size();i++) { ResolveInfo resolve = resolveList.get(i);\n\t         * ShareItemInfo shareItem = new ShareItemInfo(); //set Icon\n\t         * shareItem.setIcon(resolve.loadIcon(pManager)); //set Application Name\n\t         * shareItem.setLabel(resolve.loadLabel(pManager).toString()); //set Package\n\t         * Name shareItem.setPackageName(resolve.activityInfo.packageName); } 总结： 通过\n\t         * PackageInfo 获取具体信息方法： 包名获取方法：packageInfo.packageName\n\t         * icon获取获取方法：packageManager.getApplicationIcon(applicationInfo)\n\t         * 应用名称获取方法：packageManager.getApplicationLabel(applicationInfo)\n\t         * 使用权限获取方法：packageManager\n\t         * .getPackageInfo(packageName,PackageManager.GET_PERMISSIONS)\n\t         * .requestedPermissions 通过 ResolveInfo 获取具体信息方法：\n\t         * 包名获取方法：resolve.activityInfo.packageName\n\t         * icon获取获取方法：resolve.loadIcon(packageManager)\n\t         * 应用名称获取方法：resolve.loadLabel(packageManager).toString()\n\t         */\n\t        public String getSimCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                // <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n\t                /*\n\t                 * TelephonyManager类主要提供了一系列用于访问与手机通讯相关的状态和信息的get方法。其中包括手机SIM的状态和信息\n\t                 * 、电信网络的状态及手机用户的信息。\n\t                 * 在应用程序中可以使用这些get方法获取相关数据。TelephonyManager类的对象可以通过Context\n\t                 * .getSystemService(Context.TELEPHONY_SERVICE)\n\t                 * 方法来获得，需要注意的是有些通讯信息的获取对应用程序的权限有一定的限制\n\t                 * ，在开发的时候需要为其添加相应的权限。以下列出TelephonyManager类所有方法及说明：\n\t                 * TelephonyManager提供设备上获取通讯服务信息的入口。 应用程序可以使用这个类方法确定的电信服务商和国家\n\t                 * 以及某些类型的用户访问信息。 应用程序也可以注册一个监听器到电话收状态的变化。不需要直接实例化这个类\n\t                 * 使用Context.getSystemService (Context.TELEPHONY_SERVICE)来获取这个类的实例。\n\t                 */\n\t\n\t                // 解释：\n\t                // IMSI是国际移动用户识别码的简称(International Mobile Subscriber Identity)\n\t                // IMSI共有15位，其结构如下：\n\t                // MCC+MNC+MIN\n\t                // MCC：Mobile Country Code，移动国家码，共3位，中国为460;\n\t                // MNC:Mobile NetworkCode，移动网络码，共2位\n\t                // 在中国，移动的代码为电00和02，联通的代码为01，电信的代码为03\n\t                // 合起来就是（也是Android手机中APN配置文件中的代码）：\n\t                // 中国移动：46000 46002\n\t                // 中国联通：46001\n\t                // 中国电信：46003\n\t                // 举例，一个典型的IMSI号码为460030912121001\n\t\n\t                // IMEI是International Mobile Equipment Identity （国际移动设备标识）的简称\n\t                // IMEI由15位数字组成的”电子串号”，它与每台手机一一对应，而且该码是全世界唯一的\n\t                // 其组成为：\n\t                // 1. 前6位数(TAC)是”型号核准号码”，一般代表机型\n\t                // 2. 接着的2位数(FAC)是”最后装配号”，一般代表产地\n\t                // 3. 之后的6位数(SNR)是”串号”，一般代表生产顺序号\n\t                // 4. 最后1位数(SP)通常是”0″，为检验码，目前暂备用\n\t\n\t                TelephonyManager tm = (TelephonyManager) this\n\t                                .getSystemService(TELEPHONY_SERVICE);\n\t                /*\n\t                 * 电话状态： 1.tm.CALL_STATE_IDLE=0 无活动，无任何状态时 2.tm.CALL_STATE_RINGING=1\n\t                 * 响铃，电话进来时 3.tm.CALL_STATE_OFFHOOK=2 摘机\n\t                 */\n\t                tm.getCallState();// int\n\t\n\t                /*\n\t                 * 电话方位：\n\t                 */\n\t                // 返回当前移动终端的位置\n\t                CellLocation location = tm.getCellLocation();\n\t                // 请求位置更新，如果更新将产生广播，接收对象为注册LISTEN_CELL_LOCATION的对象，需要的permission名称为\n\t                // ACCESS_COARSE_LOCATION。\n\t                location.requestLocationUpdate();\n\t\n\t                /**\n\t                 * 获取数据活动状态\n\t                 * \n\t                 * DATA_ACTIVITY_IN 数据连接状态：活动，正在接受数据 DATA_ACTIVITY_OUT 数据连接状态：活动，正在发送数据\n\t                 * DATA_ACTIVITY_INOUT 数据连接状态：活动，正在接受和发送数据 DATA_ACTIVITY_NONE\n\t                 * 数据连接状态：活动，但无数据发送和接受\n\t                 */\n\t                tm.getDataActivity();\n\t\n\t                /**\n\t                 * 获取数据连接状态\n\t                 * \n\t                 * DATA_CONNECTED 数据连接状态：已连接 DATA_CONNECTING 数据连接状态：正在连接\n\t                 * DATA_DISCONNECTED 数据连接状态：断开 DATA_SUSPENDED 数据连接状态：暂停\n\t                 */\n\t                tm.getDataState();\n\t\n\t                /**\n\t                 * 返回当前移动终端的唯一标识，设备ID\n\t                 * \n\t                 * 如果是GSM网络，返回IMEI；如果是CDMA网络，返回MEID Return null if device ID is not\n\t                 * available.\n\t                 */\n\t                String Imei = tm.getDeviceId();// String\n\t\n\t                /*\n\t                 * 返回移动终端的软件版本，例如：GSM手机的IMEI/SV码。 设备的软件版本号： 例如：the IMEI/SV(software\n\t                 * version) for GSM phones. Return null if the software version is not\n\t                 * available.\n\t                 */\n\t                tm.getDeviceSoftwareVersion();// String\n\t\n\t                /*\n\t                 * 手机号： GSM手机的 MSISDN. Return null if it is unavailable.\n\t                 */\n\t                String phoneNum = tm.getLine1Number();// String\n\t\n\t                /*\n\t                 * 获取ISO标准的国家码，即国际长途区号。 注意：仅当用户已在网络注册后有效。 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkCountryIso();// String\n\t\n\t                /*\n\t                 * MCC+MNC(mobile country code + mobile network code) 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkOperator();// String\n\t\n\t                /*\n\t                 * 按照字母次序的current registered operator(当前已注册的用户)的名字 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t\n\t                tm.getNetworkOperatorName();// String\n\t\n\t                /*\n\t                 * 当前使用的网络类型： 例如： NETWORK_TYPE_UNKNOWN 网络类型未知 0 NETWORK_TYPE_GPRS GPRS网络\n\t                 * 1 NETWORK_TYPE_EDGE EDGE网络 2 NETWORK_TYPE_UMTS UMTS网络 3\n\t                 * NETWORK_TYPE_HSDPA HSDPA网络 8 NETWORK_TYPE_HSUPA HSUPA网络 9\n\t                 * NETWORK_TYPE_HSPA HSPA网络 10 NETWORK_TYPE_CDMA CDMA网络,IS95A 或 IS95B. 4\n\t                 * NETWORK_TYPE_EVDO_0 EVDO网络, revision 0. 5 NETWORK_TYPE_EVDO_A EVDO网络,\n\t                 * revision A. 6 NETWORK_TYPE_1xRTT 1xRTT网络 7\n\t                 */\n\t                tm.getNetworkType();// int\n\t\n\t                /*\n\t                 * 手机类型： 例如： PHONE_TYPE_NONE 无信号 PHONE_TYPE_GSM GSM信号 PHONE_TYPE_CDMA\n\t                 * CDMA信号\n\t                 */\n\t                tm.getPhoneType();// int\n\t\n\t                /*\n\t                 * Returns the ISO country code equivalent for the SIM provider's\n\t                 * country code. 获取ISO国家码，相当于提供SIM卡的国家码。\n\t                 */\n\t                tm.getSimCountryIso();// String\n\t\n\t                /*\n\t                 * Returns the MCC+MNC (mobile country code + mobile network code) of\n\t                 * the provider of the SIM. 5 or 6 decimal digits.\n\t                 * 获取SIM卡提供的移动国家码和移动网络码.5或6位的十进制数字. SIM卡的状态必须是\n\t                 * SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperator();// String\n\t\n\t                /*\n\t                 * 服务商名称： 例如：中国移动、联通 SIM卡的状态必须是 SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperatorName();// String\n\t\n\t                /*\n\t                 * SIM卡的序列号： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSimSerialNumber();// String\n\t\n\t                /*\n\t                 * SIM的状态信息： SIM_STATE_UNKNOWN 未知状态 0 SIM_STATE_ABSENT 没插卡 1\n\t                 * SIM_STATE_PIN_REQUIRED 锁定状态，需要用户的PIN码解锁 2 SIM_STATE_PUK_REQUIRED\n\t                 * 锁定状态，需要用户的PUK码解锁 3 SIM_STATE_NETWORK_LOCKED 锁定状态，需要网络的PIN码解锁 4\n\t                 * SIM_STATE_READY 就绪状态 5\n\t                 */\n\t                tm.getSimState();// int\n\t\n\t                /*\n\t                 * 唯一的用户ID： 例如：IMSI(国际移动用户识别码) for a GSM phone. 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSubscriberId();// String\n\t\n\t                /*\n\t                 * 取得和语音邮件相关的标签，即为识别符 需要权限：READ_PHONE_STATE\n\t                 */\n\t\n\t                tm.getVoiceMailAlphaTag();// String\n\t\n\t                /*\n\t                 * 获取语音邮件号码： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getVoiceMailNumber();// String\n\t\n\t                /*\n\t                 * ICC卡是否存在\n\t                 */\n\t                tm.hasIccCard();// boolean\n\t\n\t                /*\n\t                 * 是否漫游: (在GSM用途下)\n\t                 */\n\t                tm.isNetworkRoaming();//\n\t\n\t                String ProvidersName = null;\n\t                // 返回唯一的用户ID;就是这张卡的编号神马的\n\t                String IMSI = tm.getSubscriberId(); // 国际移动用户识别码\n\t                // IMSI号前面3位460是国家，紧接着后面2位00 02是中国移动，01是中国联通，03是中国电信。\n\t                System.out.println(IMSI);\n\t                if (IMSI.startsWith(\"46000\") || IMSI.startsWith(\"46002\")) {\n\t                        ProvidersName = \"中国移动\";\n\t                } else if (IMSI.startsWith(\"46001\")) {\n\t\n\t                        ProvidersName = \"中国联通\";\n\t\n\t                } else if (IMSI.startsWith(\"46003\")) {\n\t\n\t                        ProvidersName = \"中国电信\";\n\t\n\t                }\n\t                // 返回当前移动终端附近移动终端的信息\n\t                /*\n\t                 * 附近的电话的信息: 类型：List<NeighboringCellInfo>\n\t                 * 需要权限：android.Manifest.permission#ACCESS_COARSE_UPDATES\n\t                 */\n\t                List<NeighboringCellInfo> infos = tm.getNeighboringCellInfo();\n\t                for (NeighboringCellInfo info : infos) {\n\t                        // 获取邻居小区号\n\t                        int cid = info.getCid();\n\t                        // 获取邻居小区LAC，LAC:\n\t                        // 位置区域码。为了确定移动台的位置，每个GSM/PLMN的覆盖区都被划分成许多位置区，LAC则用于标识不同的位置区。\n\t                        info.getLac();\n\t                        info.getNetworkType();\n\t                        info.getPsc();\n\t                        // 获取邻居小区信号强度\n\t                        info.getRssi();\n\t                }\n\t                return \"手机号码:\" + phoneNum + \"\\n\" + \"服务商：\" + ProvidersName + \"\\n\"\n\t                                + \"IMEI：\" + Imei;\n\t\n\t        }\n\t\n\t        // 显示信息对话框\n\t        public void showDialog(String title, String info) {\n\t                AlertDialog dialog = new AlertDialog.Builder(this)\n\t                                .setTitle(title)\n\t                                .setMessage(info)\n\t                                .setPositiveButton(\"close\",\n\t                                                new DialogInterface.OnClickListener() {\n\t                                                        @Override\n\t                                                        public void onClick(DialogInterface dialog,\n\t                                                                        int which) {\n\t                                                                dialog.cancel();\n\t                                                                dialog = null;\n\t                                                        }\n\t                                                }).create();\n\t                dialog.show();\n\t        }\n\t}\n\n\n```\n","source":"_posts/mobile-phone-information-acquisition.md","raw":"title: android之获取手机信息\ncategories: [Android]\ntags: [Android]\ndate: 2013-07-18\n---\nandroid获取手机信息（号码，内存，CPU，分辨率，MAC，IP，SD卡，IMEI,经纬度，信号强度等等）\n\n<!-- more -->\n\n```java\n\tpackage com.android.xiaomolong.example.apkdemo;\t\n\timport java.io.BufferedReader;\n\timport java.io.File;\n\timport java.io.FileReader;\n\timport java.io.IOException;\n\timport java.io.InputStream;\n\timport java.io.InputStreamReader;\n\timport java.net.HttpURLConnection;\n\timport java.net.InetAddress;\n\timport java.net.MalformedURLException;\n\timport java.net.NetworkInterface;\n\timport java.net.SocketException;\n\timport java.net.URL;\n\timport java.net.URLConnection;\n\timport java.util.Enumeration;\n\timport java.util.List;\n\t\n\timport android.app.Activity;\n\timport android.app.ActivityManager;\n\timport android.app.ActivityManager.MemoryInfo;\n\timport android.app.AlertDialog;\n\timport android.content.Context;\n\timport android.content.DialogInterface;\n\timport android.location.Criteria;\n\timport android.location.Location;\n\timport android.location.LocationListener;\n\timport android.location.LocationManager;\n\timport android.net.ConnectivityManager;\n\timport android.net.NetworkInfo;\n\timport android.net.wifi.WifiInfo;\n\timport android.net.wifi.WifiManager;\n\timport android.os.Bundle;\n\timport android.os.Environment;\n\timport android.os.StatFs;\n\timport android.telephony.CellLocation;\n\timport android.telephony.NeighboringCellInfo;\n\timport android.telephony.PhoneStateListener;\n\timport android.telephony.ServiceState;\n\timport android.telephony.SignalStrength;\n\timport android.telephony.TelephonyManager;\n\timport android.telephony.cdma.CdmaCellLocation;\n\timport android.telephony.gsm.GsmCellLocation;\n\timport android.text.format.Formatter;\n\timport android.util.DisplayMetrics;\n\timport android.util.Log;\n\timport android.view.Gravity;\n\timport android.view.WindowManager;\n\timport android.widget.Toast;\n\t\n\t/**\n\t * \n\t * @author 小尛龙\n\t * \n\t */\n\tpublic class MainActivity extends Activity {\n\t\n\t        @Override\n\t        protected void onCreate(Bundle savedInstanceState) {\n\t                super.onCreate(savedInstanceState);\n\t                setContentView(R.layout.activity_main);\n\t\n\t                Log.d(\"wxl\", getSystemMemory());\n\t\n\t        }\n\t\n\t        // 获取Android手机中SD卡存储信息 获取剩余空间\n\t        public void getSDCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                /*\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\">\n\t                 * </uses-permission>\n\t                 */\n\t                // 需要判断手机上面SD卡是否插好，如果有SD卡的情况下，我们才可以访问得到并获取到它的相关信息，当然以下这个语句需要用if做判断\n\t                if (Environment.getExternalStorageState().equals(\n\t                                Environment.MEDIA_MOUNTED)) {\n\t                        // 取得sdcard文件路径\n\t                        File path = Environment.getExternalStorageDirectory();\n\t                        StatFs statfs = new StatFs(path.getPath());\n\t                        // 获取block的SIZE\n\t                        long blocSize = statfs.getBlockSize();\n\t                        // 获取BLOCK数量\n\t                        long totalBlocks = statfs.getBlockCount();\n\t                        // 空闲的Block的数量\n\t                        long availaBlock = statfs.getAvailableBlocks();\n\t                        // 计算总空间大小和空闲的空间大小\n\t                        // 存储空间大小跟空闲的存储空间大小就被计算出来了。\n\t                        long availableSize = blocSize * availaBlock;\n\t                        // (availableBlocks * blockSize)/1024 KIB 单位\n\t                        // (availableBlocks * blockSize)/1024 /1024 MIB单位\n\t                        long allSize = blocSize * totalBlocks;\n\t                }\n\t\n\t        }\n\t\n\t        // 获取手机ip method-1\n\t        public String getLocalIpAddress() {\n\t                try {\n\t                        for (Enumeration<NetworkInterface> en = NetworkInterface\n\t                                        .getNetworkInterfaces(); en.hasMoreElements();) {\n\t                                NetworkInterface intf = en.nextElement();\n\t                                for (Enumeration<InetAddress> enumIpAddr = intf\n\t                                                .getInetAddresses(); enumIpAddr.hasMoreElements();) {\n\t                                        InetAddress inetAddress = enumIpAddr.nextElement();\n\t                                        if (!inetAddress.isLoopbackAddress()) {\n\t                                                Toast.makeText(this,\n\t                                                                inetAddress.getHostAddress().toString(), 3000)\n\t                                                                .show();\n\t                                                return inetAddress.getHostAddress().toString();\n\t                                        }\n\t                                }\n\t                        }\n\t                } catch (SocketException ex) {\n\t                        ex.printStackTrace();\n\t                        // Log.e(\"ifo\", ex.toString());\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 需要权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.INTERNET\"></uses-permission>\n\t\n\t        // 获取手机ip method-2\n\t        // 首先设置用户权限\n\t        // <uses-permission\n\t        // android:name=\"android.permission.ACCESS_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.CHANGE_WIFI_STATE\"></uses-permission>\n\t        // <uses-permission\n\t        // android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t        public String getLocalIpAddress2() {\n\t                // 获取wifi服务\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                // 判断wifi是否开启\n\t                if (!wifiManager.isWifiEnabled()) {\n\t                        wifiManager.setWifiEnabled(true);\n\t                }\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                int ipAddress = wifiInfo.getIpAddress();\n\t                String ip = intToIp(ipAddress);\n\t                return ip;\n\t        }\n\t\n\t        private String intToIp(int i) {\n\t                return (i & 0xFF) + \".\" + ((i >> 8) & 0xFF) + \".\" + ((i >> 16) & 0xFF)\n\t                                + \".\" + (i >> 24 & 0xFF);\n\t        }\n\t\n\t        // 查看本机外网IP\n\t        /*\n\t         * 该方法需要设备支持上网 查看\n\t         * System.out.println((GetNetIp(\"http://fw.qq.com/ipaddress\"))); 加权限\n\t         * <uses-permission\n\t         * android:name=\"android.permission.INTERNET\"></uses-permission>\n\t         * 通过获取http://fw.qq.com/ipaddress网页取得外网IP 这里有几个查看IP的网址然后提取IP试试。\n\t         * http://ip168.com/ http://www.cmyip.com/ http://city.ip138.com/ip2city.asp\n\t         */\n\t        public String GetNetIp(String ipaddr) {\n\t                URL infoUrl = null;\n\t                InputStream inStream = null;\n\t                try {\n\t                        infoUrl = new URL(ipaddr);\n\t                        URLConnection connection = infoUrl.openConnection();\n\t                        HttpURLConnection httpConnection = (HttpURLConnection) connection;\n\t                        int responseCode = httpConnection.getResponseCode();\n\t                        if (responseCode == HttpURLConnection.HTTP_OK) {\n\t                                inStream = httpConnection.getInputStream();\n\t                                BufferedReader reader = new BufferedReader(\n\t                                                new InputStreamReader(inStream, \"utf-8\"));\n\t                                StringBuilder strber = new StringBuilder();\n\t                                String line = null;\n\t                                while ((line = reader.readLine()) != null)\n\t                                        strber.append(line + \"\\n\");\n\t                                inStream.close();\n\t                                return strber.toString();\n\t                        }\n\t                } catch (MalformedURLException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                } catch (IOException e) {\n\t                        // TODO Auto-generated catch block\n\t                        e.printStackTrace();\n\t                }\n\t                return \"\";\n\t        }\n\t\n\t        // 获取手机MAC地址\n\t        private String getMacAddress() {\n\t                String result = \"\";\n\t                WifiManager wifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);\n\t                WifiInfo wifiInfo = wifiManager.getConnectionInfo();\n\t                result = wifiInfo.getMacAddress();\n\t                // Log.i(TAG, \"macAdd:\" + result);\n\t                return result;\n\t        }\n\t\n\t        // 获取手机屏幕高度\n\t        private String getWeithAndHeight() {\n\t                // 这种方式在service中无法使用，\n\t                DisplayMetrics dm = new DisplayMetrics();\n\t                getWindowManager().getDefaultDisplay().getMetrics(dm);\n\t                int width = dm.widthPixels; // 宽\n\t                int height = dm.heightPixels; // 高\n\t                float density = dm.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                int densityDpi = dm.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                // 在service中也能得到高和宽\n\t                WindowManager mWindowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);\n\t                width = mWindowManager.getDefaultDisplay().getWidth();\n\t                height = mWindowManager.getDefaultDisplay().getHeight();\n\t\n\t                // 居中显示Toast\n\t                Toast msg = Toast.makeText(this, \"宽=\" + width + \"   高=\" + height,\n\t                                Toast.LENGTH_LONG);\n\t                msg.setGravity(Gravity.CENTER, msg.getXOffset() / 2,\n\t                                msg.getYOffset() / 2);\n\t                msg.show();\n\t                return \"(像素)宽:\" + width + \"\\n\" + \"(像素)高:\" + height + \"\\n\"\n\t                                + \"屏幕密度（0.75 / 1.0 / 1.5）:\" + density + \"\\n\"\n\t                                + \"屏幕密度DPI（120 / 160 / 240）:\" + densityDpi + \"\\n\";\n\t                /*\n\t                 * 下面的代码即可获取屏幕的尺寸。 在一个Activity的onCreate方法中，写入如下代码： DisplayMetrics metric\n\t                 * = new DisplayMetrics();\n\t                 * getWindowManager().getDefaultDisplay().getMetrics(metric); int width\n\t                 * = metric.widthPixels; // 屏幕宽度（像素） int height = metric.heightPixels;\n\t                 * // 屏幕高度（像素） float density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）\n\t                 * int densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）\n\t                 * \n\t                 * 但是，需要注意的是，在一个低密度的小屏手机上，仅靠上面的代码是不能获取正确的尺寸的。\n\t                 * 比如说，一部240x320像素的低密度手机，如果运行上述代码，获取到的屏幕尺寸是320x427。\n\t                 * 因此，研究之后发现，若没有设定多分辨率支持的话\n\t                 * ，Android系统会将240x320的低密度（120）尺寸转换为中等密度（160）对应的尺寸，\n\t                 * 这样的话就大大影响了程序的编码。所以，需要在工程的AndroidManifest\n\t                 * .xml文件中，加入supports-screens节点，具体的内容如下： <supports-screens\n\t                 * android:smallScreens=\"true\" android:normalScreens=\"true\"\n\t                 * android:largeScreens=\"true\" android:resizeable=\"true\"\n\t                 * android:anyDensity=\"true\" />\n\t                 * 这样的话，当前的Android程序就支持了多种分辨率，那么就可以得到正确的物理尺寸了。\n\t                 */\n\t        }\n\t\n\t        // 获取手机经纬度\n\t        public void getLocation() {\n\t                // 1. 创建一个 LocationManager对象。\n\t                LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\n\t                // 2. 创建一个 LocationListener对象。\n\t                LocationListener myGPSListener = new LocationListener() {\n\t                        // 一旦Location发生改变就会调用这个方法\n\t                        public void onLocationChanged(Location location) {\n\t                                double latitude = location.getLatitude();\n\t                                double longitude = location.getLongitude();\n\t                        }\n\t\n\t                        public void onStatusChanged(String provider, int status,\n\t                                        Bundle extras) {\n\t                        }\n\t\n\t                        public void onProviderEnabled(String provider) {\n\t                        }\n\t\n\t                        public void onProviderDisabled(String provider) {\n\t                        }\n\t                };\n\t                // 3.向LocationManager 注册一个LocationListener。\n\t                Criteria criteria = new Criteria();\n\t                criteria.setAccuracy(Criteria.ACCURACY_COARSE);\n\t                criteria.setAltitudeRequired(false);\n\t                criteria.setCostAllowed(true);\n\t                criteria.setPowerRequirement(Criteria.POWER_LOW);\n\t                String provider = locationManager.getBestProvider(criteria, true); // 根据Criteria\n\t                                                                                                                                                        // 的设置获取一个最佳的Provider\n\t                locationManager\n\t                                .requestLocationUpdates(provider, 5000, 0, myGPSListener);\n\t                // 4.移除LocationManager 注册的 LocationListener。\n\t                locationManager.removeUpdates(myGPSListener);\n\t\n\t        }\n\t\n\t        // 当前网络是否连接\n\t        public boolean isNetConnecting() {\n\t                ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t                NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\t                if (networkInfo == null || !networkInfo.isConnected()) {\n\t                        // info.setConnected(false);\n\t                        return false;\n\t                } else {\n\t                        // info.setConnected(true);\n\t                        return true;\n\t                }\n\t        }\n\t\n\t        // 获取信号强度\n\t        public void getPhoneState() {\n\t                // 1. 创建telephonyManager 对象。\n\t                TelephonyManager telephonyManager = (TelephonyManager) /* context. */getSystemService(Context.TELEPHONY_SERVICE);\n\t                // 2. 创建PhoneStateListener 对象\n\t                PhoneStateListener MyPhoneListener = new PhoneStateListener() {\n\t                        @Override\n\t                        public void onCellLocationChanged(CellLocation location) {\n\t                                if (location instanceof GsmCellLocation) {// gsm网络\n\t                                        int CID = ((GsmCellLocation) location).getCid();\n\t                                } else if (location instanceof CdmaCellLocation) {// 其他CDMA等网络\n\t                                        int ID = ((CdmaCellLocation) location).getBaseStationId();\n\t                                }\n\t                        }\n\t\n\t                        @Override\n\t                        public void onServiceStateChanged(ServiceState serviceState) {\n\t                                super.onServiceStateChanged(serviceState);\n\t                        }\n\t\n\t                        @Override\n\t                        public void onSignalStrengthsChanged(SignalStrength signalStrength) {\n\t                                int asu = signalStrength.getGsmSignalStrength();\n\t                                int dbm = -113 + 2 * asu; // 信号强度\n\t                                super.onSignalStrengthsChanged(signalStrength);\n\t                        }\n\t                };\n\t                // 3. 监听信号改变\n\t                telephonyManager.listen(MyPhoneListener,\n\t                                PhoneStateListener.LISTEN_SIGNAL_STRENGTHS);\n\t\n\t                /*\n\t                 * 可能需要的权限 <uses-permission\n\t                 * android:name=\"android.permission.WAKE_LOCK\"></uses-permission>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\t                 * <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n\t                 * <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"\n\t                 * /> <uses-permission\n\t                 * android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\t                 */\n\t        }\n\t\n\t        // 获取手机可用内存和总内存\n\t        private String getSystemMemory() {\n\t                /*\n\t                 * 在Android开发中，有时候我们想获取手机的一些硬件信息，比如android手机的总内存和可用内存大小。这个该如何实现呢？\n\t                 * 通过读取文件\"/proc/meminfo\"\n\t                 * 的信息能够获取手机Memory的总量，而通过ActivityManager.getMemoryInfo\n\t                 * (ActivityManager.MemoryInfo)方法可以获取当前的可用Memory量。\n\t                 * \"/proc/meminfo\"文件记录了android手机的一些内存信息\n\t                 * ，在命令行窗口里输入\"adb shell\"，进入shell环境，输入\n\t                 * \"cat /proc/meminfo\"即可在命令行里显示meminfo文件的内容，具体如下所示。\n\t                 * \n\t                 * C:\\Users\\Figo>adb shell # cat /proc/meminfo cat /proc/meminfo\n\t                 * MemTotal: 94096 kB MemFree: 1684 kB Buffers: 16 kB Cached: 27160 kB\n\t                 * SwapCached: 0 kB Active: 35392 kB Inactive: 44180 kB Active(anon):\n\t                 * 26540 kB Inactive(anon): 28244 kB Active(file): 8852 kB\n\t                 * Inactive(file): 15936 kB Unevictable: 280 kB Mlocked: 0 kB *\n\t                 * SwapTotal: 0 kB SwapFree: 0 kB Dirty: 0 kB Writeback: 0 kB AnonPages:\n\t                 * 52688 kB Mapped: 17960 kB Slab: 3816 kB SReclaimable: 936 kB\n\t                 * SUnreclaim: 2880 kB PageTables: 5260 kB NFS_Unstable: 0 kB Bounce: 0\n\t                 * kB WritebackTmp: 0 kB CommitLimit: 47048 kB Committed_AS: 1483784 kB\n\t                 * VmallocTotal: 876544 kB VmallocUsed: 15456 kB VmallocChunk: 829444 kB\n\t                 * #\n\t                 * \n\t                 * 下面先对\"/proc/meminfo\"文件里列出的字段进行粗略解释： MemTotal: 所有可用RAM大小。 MemFree:\n\t                 * LowFree与HighFree的总和，被系统留着未使用的内存。 Buffers: 用来给文件做缓冲大小。 Cached:\n\t                 * 被高速缓冲存储器（cache memory）用的内存的大小（等于diskcache minus SwapCache）。\n\t                 * SwapCached:被高速缓冲存储器（cache\n\t                 * memory）用的交换空间的大小。已经被交换出来的内存，仍然被存放在swapfile中，\n\t                 * 用来在需要的时候很快的被替换而不需要再次打开I/O端口。 Active:\n\t                 * 在活跃使用中的缓冲或高速缓冲存储器页面文件的大小，除非非常必要，否则不会被移作他用。 Inactive:\n\t                 * 在不经常使用中的缓冲或高速缓冲存储器页面文件的大小，可能被用于其他途径。 SwapTotal: 交换空间的总大小。 SwapFree:\n\t                 * 未被使用交换空间的大小。 Dirty: 等待被写回到磁盘的内存大小。 Writeback: 正在被写回到磁盘的内存大小。\n\t                 * AnonPages：未映射页的内存大小。 Mapped: 设备和文件等映射的大小。 Slab:\n\t                 * 内核数据结构缓存的大小，可以减少申请和释放内存带来的消耗。 SReclaimable:可收回Slab的大小。\n\t                 * SUnreclaim：不可收回Slab的大小（SUnreclaim+SReclaimable＝Slab）。\n\t                 * PageTables：管理内存分页页面的索引表的大小。 NFS_Unstable:不稳定页表的大小。\n\t                 * 要获取android手机总内存大小，只需读取\"/proc/meminfo\"文件的第1行，并进行简单的字符串处理即可。\n\t                 */\n\t                String availMemory = getAvailMemory();\n\t                String totalMemory = getTotalMemory();\n\t                return \"可用内存=\" + availMemory + \"\\n\" + \"总内存=\" + totalMemory;\n\t\n\t        }// 手机的内存信息主要在/proc/meminfo文件中，其中第一行是总内存，而剩余内存可通过ActivityManager.MemoryInfo得到。\n\t\n\t        private String getAvailMemory() {// 获取android当前可用内存大小\n\t                ActivityManager am = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);\n\t                MemoryInfo mi = new MemoryInfo();\n\t                am.getMemoryInfo(mi);\n\t                // mi.availMem; 当前系统的可用内存\n\t                return Formatter.formatFileSize(getBaseContext(), mi.availMem);// 将获取的内存大小规格化\n\t        }\n\t\n\t        private String getTotalMemory() {\n\t                String str1 = \"/proc/meminfo\";// 系统内存信息文件\n\t                String str2;\n\t                String[] arrayOfString;\n\t                long initial_memory = 0;\n\t                try {\n\t                        FileReader localFileReader = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(\n\t                                        localFileReader, 8192);\n\t                        str2 = localBufferedReader.readLine();// 读取meminfo第一行，系统总内存大小\n\t\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (String num : arrayOfString) {\n\t                                Log.i(str2, num + \"\\t\");\n\t                        }\n\t\n\t                        initial_memory = Integer.valueOf(arrayOfString[1]).intValue() * 1024;// 获得系统总内存，单位是KB，乘以1024转换为Byte\n\t                        localBufferedReader.close();\n\t\n\t                } catch (IOException e) {\n\t                }\n\t                return Formatter.formatFileSize(getBaseContext(), initial_memory);// Byte转换为KB或者MB，内存大小规格化\n\t        }\n\t\n\t        // 获取手机CPU信息\n\t        private String getCpuInfo() {\n\t                String str1 = \"/proc/cpuinfo\";\n\t                String str2 = \"\";\n\t                String[] cpuInfo = { \"\", \"\" }; // 1-cpu型号 //2-cpu频率\n\t                String[] arrayOfString;\n\t                try {\n\t                        FileReader fr = new FileReader(str1);\n\t                        BufferedReader localBufferedReader = new BufferedReader(fr, 8192);\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        for (int i = 2; i < arrayOfString.length; i++) {\n\t                                cpuInfo[0] = cpuInfo[0] + arrayOfString[i] + \" \";\n\t                        }\n\t                        str2 = localBufferedReader.readLine();\n\t                        arrayOfString = str2.split(\"\\\\s+\");\n\t                        cpuInfo[1] += arrayOfString[2];\n\t                        localBufferedReader.close();\n\t                } catch (IOException e) {\n\t                }\n\t                // Log.i(TAG, \"cpuinfo:\" + cpuInfo[0] + \" \" + cpuInfo[1]);\n\t                return \"1-cpu型号:\" + cpuInfo[0] + \"2-cpu频率:\" + cpuInfo[1];\n\t        }// 和内存信息同理，cpu信息可通过读取/proc/cpuinfo文件来得到，其中第一行为cpu型号，第二行为cpu频率。\n\t\n\t        /*\n\t         * 一、Android 获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)\n\t         * 1、通过PackageManager可获取手机端已安装的apk文件的信息，具体代码如下: PackageManager\n\t         * packageManager = this.getPackageManager(); List<PackageInfo>\n\t         * packageInfoList = packageManager.getInstalledPackages(0);\n\t         * 通过上述方法，可得到手机中安装的所有应用程序，包括手动安装的apk包的信息、、系统预装的应用软件的信息，要区分这两类软件可使用以下方法:\n\t         * （a）从packageInfoList获取的packageInfo\n\t         * ，再通过packageInfo.applicationInfo获取applicationInfo。\n\t         * （b）判断(applicationInfo.flags &\n\t         * ApplicationInfo.FLAG_SYSTEM)的值，该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用。\n\t         * (1)获取应用的代码: public static List<PackageInfo> getAllApps(Context context) {\n\t         * List<PackageInfo> apps = new ArrayList<PackageInfo>(); PackageManager\n\t         * pManager = context.getPackageManager(); //获取手机内所有应用 List<PackageInfo>\n\t         * paklist = pManager.getInstalledPackages(0); for (int i = 0; i <\n\t         * paklist.size(); i++) { PackageInfo pak = (PackageInfo) paklist.get(i);\n\t         * //判断是否为非系统预装的应用程序 if ((pak.applicationInfo.flags &\n\t         * pak.applicationInfo.FLAG_SYSTEM) <= 0) { apps.add(pak); } } return apps;\n\t         * } (2)、获取图片、应用名、包名: PackageManager pManager =\n\t         * MessageSendActivity.this.getPackageManager(); List<PackageInfo> appList =\n\t         * Utils.getAllApps(MessageSendActivity.this); for(int\n\t         * i=0;i<appList.size();i++) { PackageInfo pinfo = appList.get(i); shareItem\n\t         * = new ShareItemInfo();\n\t         * shareItem.setIcon(pManager.getApplicationIcon(pinfo.applicationInfo));\n\t         * shareItem\n\t         * .setLabel(pManager.getApplicationLabel(pinfo.applicationInfo).toString\n\t         * ()); shareItem.setPackageName(pinfo.applicationInfo.packageName); }\n\t         * 其中ShareItemInfo 类自己写的，各位可以忽略 (3)获取支持分享的应用的代码： public static\n\t         * List<ResolveInfo> getShareApps(Context context){ List<ResolveInfo> mApps\n\t         * = new ArrayList<ResolveInfo>(); Intent intent=new\n\t         * Intent(Intent.ACTION_SEND,null);\n\t         * intent.addCategory(Intent.CATEGORY_DEFAULT);\n\t         * intent.setType(\"text/plain\"); PackageManager pManager =\n\t         * context.getPackageManager(); mApps =\n\t         * pManager.queryIntentActivities(intent\n\t         * ,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT); return mApps; }\n\t         * 由于该方法，返回的并不是PackageInfo 对象。而是ResolveInfo。因此获取图片、应用名、包名的方法不一样，如下：\n\t         * PackageManager pManager = MessageSendActivity.this.getPackageManager();\n\t         * List<ResolveInfo> resolveList =\n\t         * Utils.getShareApps(MessageSendActivity.this); for(int\n\t         * i=0;i<resolveList.size();i++) { ResolveInfo resolve = resolveList.get(i);\n\t         * ShareItemInfo shareItem = new ShareItemInfo(); //set Icon\n\t         * shareItem.setIcon(resolve.loadIcon(pManager)); //set Application Name\n\t         * shareItem.setLabel(resolve.loadLabel(pManager).toString()); //set Package\n\t         * Name shareItem.setPackageName(resolve.activityInfo.packageName); } 总结： 通过\n\t         * PackageInfo 获取具体信息方法： 包名获取方法：packageInfo.packageName\n\t         * icon获取获取方法：packageManager.getApplicationIcon(applicationInfo)\n\t         * 应用名称获取方法：packageManager.getApplicationLabel(applicationInfo)\n\t         * 使用权限获取方法：packageManager\n\t         * .getPackageInfo(packageName,PackageManager.GET_PERMISSIONS)\n\t         * .requestedPermissions 通过 ResolveInfo 获取具体信息方法：\n\t         * 包名获取方法：resolve.activityInfo.packageName\n\t         * icon获取获取方法：resolve.loadIcon(packageManager)\n\t         * 应用名称获取方法：resolve.loadLabel(packageManager).toString()\n\t         */\n\t        public String getSimCardInfo() {\n\t                // 在manifest.xml文件中要添加\n\t                // <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n\t                /*\n\t                 * TelephonyManager类主要提供了一系列用于访问与手机通讯相关的状态和信息的get方法。其中包括手机SIM的状态和信息\n\t                 * 、电信网络的状态及手机用户的信息。\n\t                 * 在应用程序中可以使用这些get方法获取相关数据。TelephonyManager类的对象可以通过Context\n\t                 * .getSystemService(Context.TELEPHONY_SERVICE)\n\t                 * 方法来获得，需要注意的是有些通讯信息的获取对应用程序的权限有一定的限制\n\t                 * ，在开发的时候需要为其添加相应的权限。以下列出TelephonyManager类所有方法及说明：\n\t                 * TelephonyManager提供设备上获取通讯服务信息的入口。 应用程序可以使用这个类方法确定的电信服务商和国家\n\t                 * 以及某些类型的用户访问信息。 应用程序也可以注册一个监听器到电话收状态的变化。不需要直接实例化这个类\n\t                 * 使用Context.getSystemService (Context.TELEPHONY_SERVICE)来获取这个类的实例。\n\t                 */\n\t\n\t                // 解释：\n\t                // IMSI是国际移动用户识别码的简称(International Mobile Subscriber Identity)\n\t                // IMSI共有15位，其结构如下：\n\t                // MCC+MNC+MIN\n\t                // MCC：Mobile Country Code，移动国家码，共3位，中国为460;\n\t                // MNC:Mobile NetworkCode，移动网络码，共2位\n\t                // 在中国，移动的代码为电00和02，联通的代码为01，电信的代码为03\n\t                // 合起来就是（也是Android手机中APN配置文件中的代码）：\n\t                // 中国移动：46000 46002\n\t                // 中国联通：46001\n\t                // 中国电信：46003\n\t                // 举例，一个典型的IMSI号码为460030912121001\n\t\n\t                // IMEI是International Mobile Equipment Identity （国际移动设备标识）的简称\n\t                // IMEI由15位数字组成的”电子串号”，它与每台手机一一对应，而且该码是全世界唯一的\n\t                // 其组成为：\n\t                // 1. 前6位数(TAC)是”型号核准号码”，一般代表机型\n\t                // 2. 接着的2位数(FAC)是”最后装配号”，一般代表产地\n\t                // 3. 之后的6位数(SNR)是”串号”，一般代表生产顺序号\n\t                // 4. 最后1位数(SP)通常是”0″，为检验码，目前暂备用\n\t\n\t                TelephonyManager tm = (TelephonyManager) this\n\t                                .getSystemService(TELEPHONY_SERVICE);\n\t                /*\n\t                 * 电话状态： 1.tm.CALL_STATE_IDLE=0 无活动，无任何状态时 2.tm.CALL_STATE_RINGING=1\n\t                 * 响铃，电话进来时 3.tm.CALL_STATE_OFFHOOK=2 摘机\n\t                 */\n\t                tm.getCallState();// int\n\t\n\t                /*\n\t                 * 电话方位：\n\t                 */\n\t                // 返回当前移动终端的位置\n\t                CellLocation location = tm.getCellLocation();\n\t                // 请求位置更新，如果更新将产生广播，接收对象为注册LISTEN_CELL_LOCATION的对象，需要的permission名称为\n\t                // ACCESS_COARSE_LOCATION。\n\t                location.requestLocationUpdate();\n\t\n\t                /**\n\t                 * 获取数据活动状态\n\t                 * \n\t                 * DATA_ACTIVITY_IN 数据连接状态：活动，正在接受数据 DATA_ACTIVITY_OUT 数据连接状态：活动，正在发送数据\n\t                 * DATA_ACTIVITY_INOUT 数据连接状态：活动，正在接受和发送数据 DATA_ACTIVITY_NONE\n\t                 * 数据连接状态：活动，但无数据发送和接受\n\t                 */\n\t                tm.getDataActivity();\n\t\n\t                /**\n\t                 * 获取数据连接状态\n\t                 * \n\t                 * DATA_CONNECTED 数据连接状态：已连接 DATA_CONNECTING 数据连接状态：正在连接\n\t                 * DATA_DISCONNECTED 数据连接状态：断开 DATA_SUSPENDED 数据连接状态：暂停\n\t                 */\n\t                tm.getDataState();\n\t\n\t                /**\n\t                 * 返回当前移动终端的唯一标识，设备ID\n\t                 * \n\t                 * 如果是GSM网络，返回IMEI；如果是CDMA网络，返回MEID Return null if device ID is not\n\t                 * available.\n\t                 */\n\t                String Imei = tm.getDeviceId();// String\n\t\n\t                /*\n\t                 * 返回移动终端的软件版本，例如：GSM手机的IMEI/SV码。 设备的软件版本号： 例如：the IMEI/SV(software\n\t                 * version) for GSM phones. Return null if the software version is not\n\t                 * available.\n\t                 */\n\t                tm.getDeviceSoftwareVersion();// String\n\t\n\t                /*\n\t                 * 手机号： GSM手机的 MSISDN. Return null if it is unavailable.\n\t                 */\n\t                String phoneNum = tm.getLine1Number();// String\n\t\n\t                /*\n\t                 * 获取ISO标准的国家码，即国际长途区号。 注意：仅当用户已在网络注册后有效。 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkCountryIso();// String\n\t\n\t                /*\n\t                 * MCC+MNC(mobile country code + mobile network code) 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t                tm.getNetworkOperator();// String\n\t\n\t                /*\n\t                 * 按照字母次序的current registered operator(当前已注册的用户)的名字 注意：仅当用户已在网络注册时有效。\n\t                 * 在CDMA网络中结果也许不可靠。\n\t                 */\n\t\n\t                tm.getNetworkOperatorName();// String\n\t\n\t                /*\n\t                 * 当前使用的网络类型： 例如： NETWORK_TYPE_UNKNOWN 网络类型未知 0 NETWORK_TYPE_GPRS GPRS网络\n\t                 * 1 NETWORK_TYPE_EDGE EDGE网络 2 NETWORK_TYPE_UMTS UMTS网络 3\n\t                 * NETWORK_TYPE_HSDPA HSDPA网络 8 NETWORK_TYPE_HSUPA HSUPA网络 9\n\t                 * NETWORK_TYPE_HSPA HSPA网络 10 NETWORK_TYPE_CDMA CDMA网络,IS95A 或 IS95B. 4\n\t                 * NETWORK_TYPE_EVDO_0 EVDO网络, revision 0. 5 NETWORK_TYPE_EVDO_A EVDO网络,\n\t                 * revision A. 6 NETWORK_TYPE_1xRTT 1xRTT网络 7\n\t                 */\n\t                tm.getNetworkType();// int\n\t\n\t                /*\n\t                 * 手机类型： 例如： PHONE_TYPE_NONE 无信号 PHONE_TYPE_GSM GSM信号 PHONE_TYPE_CDMA\n\t                 * CDMA信号\n\t                 */\n\t                tm.getPhoneType();// int\n\t\n\t                /*\n\t                 * Returns the ISO country code equivalent for the SIM provider's\n\t                 * country code. 获取ISO国家码，相当于提供SIM卡的国家码。\n\t                 */\n\t                tm.getSimCountryIso();// String\n\t\n\t                /*\n\t                 * Returns the MCC+MNC (mobile country code + mobile network code) of\n\t                 * the provider of the SIM. 5 or 6 decimal digits.\n\t                 * 获取SIM卡提供的移动国家码和移动网络码.5或6位的十进制数字. SIM卡的状态必须是\n\t                 * SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperator();// String\n\t\n\t                /*\n\t                 * 服务商名称： 例如：中国移动、联通 SIM卡的状态必须是 SIM_STATE_READY(使用getSimState()判断).\n\t                 */\n\t                tm.getSimOperatorName();// String\n\t\n\t                /*\n\t                 * SIM卡的序列号： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSimSerialNumber();// String\n\t\n\t                /*\n\t                 * SIM的状态信息： SIM_STATE_UNKNOWN 未知状态 0 SIM_STATE_ABSENT 没插卡 1\n\t                 * SIM_STATE_PIN_REQUIRED 锁定状态，需要用户的PIN码解锁 2 SIM_STATE_PUK_REQUIRED\n\t                 * 锁定状态，需要用户的PUK码解锁 3 SIM_STATE_NETWORK_LOCKED 锁定状态，需要网络的PIN码解锁 4\n\t                 * SIM_STATE_READY 就绪状态 5\n\t                 */\n\t                tm.getSimState();// int\n\t\n\t                /*\n\t                 * 唯一的用户ID： 例如：IMSI(国际移动用户识别码) for a GSM phone. 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getSubscriberId();// String\n\t\n\t                /*\n\t                 * 取得和语音邮件相关的标签，即为识别符 需要权限：READ_PHONE_STATE\n\t                 */\n\t\n\t                tm.getVoiceMailAlphaTag();// String\n\t\n\t                /*\n\t                 * 获取语音邮件号码： 需要权限：READ_PHONE_STATE\n\t                 */\n\t                tm.getVoiceMailNumber();// String\n\t\n\t                /*\n\t                 * ICC卡是否存在\n\t                 */\n\t                tm.hasIccCard();// boolean\n\t\n\t                /*\n\t                 * 是否漫游: (在GSM用途下)\n\t                 */\n\t                tm.isNetworkRoaming();//\n\t\n\t                String ProvidersName = null;\n\t                // 返回唯一的用户ID;就是这张卡的编号神马的\n\t                String IMSI = tm.getSubscriberId(); // 国际移动用户识别码\n\t                // IMSI号前面3位460是国家，紧接着后面2位00 02是中国移动，01是中国联通，03是中国电信。\n\t                System.out.println(IMSI);\n\t                if (IMSI.startsWith(\"46000\") || IMSI.startsWith(\"46002\")) {\n\t                        ProvidersName = \"中国移动\";\n\t                } else if (IMSI.startsWith(\"46001\")) {\n\t\n\t                        ProvidersName = \"中国联通\";\n\t\n\t                } else if (IMSI.startsWith(\"46003\")) {\n\t\n\t                        ProvidersName = \"中国电信\";\n\t\n\t                }\n\t                // 返回当前移动终端附近移动终端的信息\n\t                /*\n\t                 * 附近的电话的信息: 类型：List<NeighboringCellInfo>\n\t                 * 需要权限：android.Manifest.permission#ACCESS_COARSE_UPDATES\n\t                 */\n\t                List<NeighboringCellInfo> infos = tm.getNeighboringCellInfo();\n\t                for (NeighboringCellInfo info : infos) {\n\t                        // 获取邻居小区号\n\t                        int cid = info.getCid();\n\t                        // 获取邻居小区LAC，LAC:\n\t                        // 位置区域码。为了确定移动台的位置，每个GSM/PLMN的覆盖区都被划分成许多位置区，LAC则用于标识不同的位置区。\n\t                        info.getLac();\n\t                        info.getNetworkType();\n\t                        info.getPsc();\n\t                        // 获取邻居小区信号强度\n\t                        info.getRssi();\n\t                }\n\t                return \"手机号码:\" + phoneNum + \"\\n\" + \"服务商：\" + ProvidersName + \"\\n\"\n\t                                + \"IMEI：\" + Imei;\n\t\n\t        }\n\t\n\t        // 显示信息对话框\n\t        public void showDialog(String title, String info) {\n\t                AlertDialog dialog = new AlertDialog.Builder(this)\n\t                                .setTitle(title)\n\t                                .setMessage(info)\n\t                                .setPositiveButton(\"close\",\n\t                                                new DialogInterface.OnClickListener() {\n\t                                                        @Override\n\t                                                        public void onClick(DialogInterface dialog,\n\t                                                                        int which) {\n\t                                                                dialog.cancel();\n\t                                                                dialog = null;\n\t                                                        }\n\t                                                }).create();\n\t                dialog.show();\n\t        }\n\t}\n\n\n```\n","slug":"mobile-phone-information-acquisition","published":1,"updated":"2016-03-17T00:44:06.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8o003vzspkzwyajzfi","thumbnailImageUrl":null},{"title":"SQLite随机取n行的方法","date":"2013-03-01T16:00:00.000Z","_content":"\n百度SQLite 随机取n行的方法大多数如下：\n\n```java\n\tSELECT key,value FROM dict ORDER BY RANDOM(key) LIMIT 1\n```\n那如何写入android的SQLite？LIMIT 1\n我也懂了就是拿到一条数据，可能是key给我误导了，\n我运行时一直报错，现在才调试好。\n现在分享给大家，代码如下：\n\n```java\n\tCursor cursor = db.query(\"表名\", new String[] { \"*\" }, null, null,null, null, \"RANDOM()\"); \n```\n","source":"_posts/methods-SQLite-were-randomly-selected-for-the-N.md","raw":"title: SQLite随机取n行的方法\ndate: 2013-03-02\ncategories: Android\ntags: [Android,SQLite]\n---\n\n百度SQLite 随机取n行的方法大多数如下：\n\n```java\n\tSELECT key,value FROM dict ORDER BY RANDOM(key) LIMIT 1\n```\n那如何写入android的SQLite？LIMIT 1\n我也懂了就是拿到一条数据，可能是key给我误导了，\n我运行时一直报错，现在才调试好。\n现在分享给大家，代码如下：\n\n```java\n\tCursor cursor = db.query(\"表名\", new String[] { \"*\" }, null, null,null, null, \"RANDOM()\"); \n```\n","slug":"methods-SQLite-were-randomly-selected-for-the-N","published":1,"updated":"2016-03-17T00:44:06.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8q003yzspkli4hh0wg","thumbnailImageUrl":null},{"title":"解决Android视频锁屏还在继续播放","date":"2014-11-23T16:00:00.000Z","_content":"###一、锁屏\nT_T被整哭了，我明知道锁屏走了onDestroy()方法，没有着手这个，反而去监听锁屏，还是`太菜`，`基础不牢`。\n\n看日志发现，主Activity先onDestroy()了，随即又onCreate()，原因如下：\n\n视频本身是横屏，手机界面是竖屏，锁屏操作存在一个横屏转竖屏的过程，这个过程如果不加android:configChanges=\"orientation\",\nActivity会自动重新走一遍它的生命周期，即先销毁再重新创建，加上后只会调用onConfigurationChanged。`哎，我知道这个，怎么没有想到这点啊`。\n\n另外如果你的target > 13时，还必须得加上“ScreenSize”。\n\n<!-- more -->\n\n```java\n <activity\n  android:name=\"com.xiaomolong.ufosay.ui.VideoPlayActivity\"\n  android:configChanges=\"keyboardHidden|orientation|screenSize\"\n  android:label=\"PlayingActivity\"\n  android:screenOrientation=\"landscape\"\n  android:theme=\"@android:style/Theme.Holo.Light.NoActionBar.Fullscreen\" >\n  </activity>\n```\n\n###二、记录视频进度\n\n视频播放点击Home建和锁屏时需要保存播放的进度，因此有必要了解下onSaveInstanceState和onRestoreInstanceState触发的时机\n\n* 1、onSaveInstanceState\n\n(1)、当用户按下HOME键时。\n\n这是显而易见的，系统不知道你按下HOME后要运行多少其他的程序，自然也不知道activity A是否会被销毁，故系统会调用onSaveInstanceState，让用户有机会保存某些非永久性的数据。以下几种情况的分析都遵循该原则\n\n(2)、长按HOME键，选择运行其他的程序时。\n\n(3)、按下电源按键（关闭屏幕显示）时。\n\n(4)、从activity A中启动一个新的activity时。\n\n(5)、屏幕方向切换时，例如从竖屏切换到横屏时。\n\n在屏幕切换之前，系统会销毁activity A，在屏幕切换之后系统又会自动地创建activity A，所以onSaveInstanceState一定会被执行\n\n* 2、onRestoreInstanceState\n\nonRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用，例如，当正在显示activity A的时候，用户按下HOME键回到主界面，然后用户紧接着又返回到activity A，这种情况下activity A一般不会因为内存的原因被系统销毁，故activity A的onRestoreInstanceState方法不会被执行\n\n另外，onRestoreInstanceState的bundle参数也会传递到onCreate方法中，你也可以选择在onCreate方法中做数据还原。\n\n```java\n  /**\n\t * 记录播放位置\n\t */\n\tprivate int mLastPos = 0;\n  protected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.video_play);\n\t\tif (savedInstanceState != null) {\n\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t}\n\t}\n\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n\t\tsuper.onRestoreInstanceState(savedInstanceState);\n\t\tLog.d(\"wxl\", \"onRestoreInstanceState start\");\n\t\tif (savedInstanceState != null) {\n\t\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t\tLog.d(\"wxl\", \"onRestoreInstanceState \" + mLastPos);\n\t\t}\n\t}\n\n\t@Override\n\tprotected void onSaveInstanceState(Bundle outState) {\n\t\tsuper.onSaveInstanceState(outState);\n\t\tLog.d(\"wxl\", \"onSaveInstanceState start\");\n\t\toutState.putInt(\"LastPosition\", mLastPos);\n\t}\n```\n\n###三、附录\n\n[Android锁屏后主Activity的onDestroy方法被调用](http://blog.csdn.net/terrantian/article/details/18670381)\n\n[onSaveInstanceState和onRestoreInstanceState触发的时机](http://android.blog.51cto.com/268543/634646/)\n\n[Android 监听屏幕锁屏,用户解锁](http://www.cnblogs.com/a284628487/p/3345317.html)\n","source":"_posts/lock-screen-video.md","raw":"title: 解决Android视频锁屏还在继续播放\ndate: 2014-11-24\ncategories: [Android]\ntags: [Android,Video]\n---\n###一、锁屏\nT_T被整哭了，我明知道锁屏走了onDestroy()方法，没有着手这个，反而去监听锁屏，还是`太菜`，`基础不牢`。\n\n看日志发现，主Activity先onDestroy()了，随即又onCreate()，原因如下：\n\n视频本身是横屏，手机界面是竖屏，锁屏操作存在一个横屏转竖屏的过程，这个过程如果不加android:configChanges=\"orientation\",\nActivity会自动重新走一遍它的生命周期，即先销毁再重新创建，加上后只会调用onConfigurationChanged。`哎，我知道这个，怎么没有想到这点啊`。\n\n另外如果你的target > 13时，还必须得加上“ScreenSize”。\n\n<!-- more -->\n\n```java\n <activity\n  android:name=\"com.xiaomolong.ufosay.ui.VideoPlayActivity\"\n  android:configChanges=\"keyboardHidden|orientation|screenSize\"\n  android:label=\"PlayingActivity\"\n  android:screenOrientation=\"landscape\"\n  android:theme=\"@android:style/Theme.Holo.Light.NoActionBar.Fullscreen\" >\n  </activity>\n```\n\n###二、记录视频进度\n\n视频播放点击Home建和锁屏时需要保存播放的进度，因此有必要了解下onSaveInstanceState和onRestoreInstanceState触发的时机\n\n* 1、onSaveInstanceState\n\n(1)、当用户按下HOME键时。\n\n这是显而易见的，系统不知道你按下HOME后要运行多少其他的程序，自然也不知道activity A是否会被销毁，故系统会调用onSaveInstanceState，让用户有机会保存某些非永久性的数据。以下几种情况的分析都遵循该原则\n\n(2)、长按HOME键，选择运行其他的程序时。\n\n(3)、按下电源按键（关闭屏幕显示）时。\n\n(4)、从activity A中启动一个新的activity时。\n\n(5)、屏幕方向切换时，例如从竖屏切换到横屏时。\n\n在屏幕切换之前，系统会销毁activity A，在屏幕切换之后系统又会自动地创建activity A，所以onSaveInstanceState一定会被执行\n\n* 2、onRestoreInstanceState\n\nonRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用，例如，当正在显示activity A的时候，用户按下HOME键回到主界面，然后用户紧接着又返回到activity A，这种情况下activity A一般不会因为内存的原因被系统销毁，故activity A的onRestoreInstanceState方法不会被执行\n\n另外，onRestoreInstanceState的bundle参数也会传递到onCreate方法中，你也可以选择在onCreate方法中做数据还原。\n\n```java\n  /**\n\t * 记录播放位置\n\t */\n\tprivate int mLastPos = 0;\n  protected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.video_play);\n\t\tif (savedInstanceState != null) {\n\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t}\n\t}\n\tprotected void onRestoreInstanceState(Bundle savedInstanceState) {\n\t\tsuper.onRestoreInstanceState(savedInstanceState);\n\t\tLog.d(\"wxl\", \"onRestoreInstanceState start\");\n\t\tif (savedInstanceState != null) {\n\t\t\tmLastPos = savedInstanceState.getInt(\"LastPosition\");\n\t\t\tLog.d(\"wxl\", \"onRestoreInstanceState \" + mLastPos);\n\t\t}\n\t}\n\n\t@Override\n\tprotected void onSaveInstanceState(Bundle outState) {\n\t\tsuper.onSaveInstanceState(outState);\n\t\tLog.d(\"wxl\", \"onSaveInstanceState start\");\n\t\toutState.putInt(\"LastPosition\", mLastPos);\n\t}\n```\n\n###三、附录\n\n[Android锁屏后主Activity的onDestroy方法被调用](http://blog.csdn.net/terrantian/article/details/18670381)\n\n[onSaveInstanceState和onRestoreInstanceState触发的时机](http://android.blog.51cto.com/268543/634646/)\n\n[Android 监听屏幕锁屏,用户解锁](http://www.cnblogs.com/a284628487/p/3345317.html)\n","slug":"lock-screen-video","published":1,"updated":"2016-03-17T00:44:06.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8r0042zspkrl3x9nj5","thumbnailImageUrl":null},{"title":"刷新RecyclerView/ListView某个item状态","date":"2015-07-07T16:00:00.000Z","_content":"> 本文是实际开发遇到的问题，结合情景，给出解决方案，很有启示作用。\n\n# 1、比如列表有收藏按钮，当前页面收藏\n\n```java\nprivate List<Map<String, String>> mList = new ArrayList<>();\n...\n  //走收藏接口，在成功后，只更改刚刚点击的item的收藏按钮状态\n  mList.get(position).put(\"favorites\", \"1\");\n  notifyDataSetChanged();\n```\n\n<!-- more -->\n\n# 2、比如列表有收藏按钮，下个页面也有收藏功能\n\n这种情况下，下个页面收藏成功后，按照常理最好返回列表页刷新以下收藏按钮的状态（话说新浪微博没有这样做）。\n\nDataAdapter\n\n```java\n //点击跳转下个页面\n Intent intent = new Intent(activity, NextActivity.class);  \n intent.putExtra(\"position\", position);\n startActivityForResult(intent,AppConfig.REQUEST_CODE_DIALOGUE);\n```\n\nNextActivity.class\n\n```java\n//收藏成功后，返回列表页\nIntent intent;\nintent = new Intent();\nBundle bundle = new Bundle();\nbundle.putInt(\"position\", position);\nbundle.putString(\"isCollection\", \"1\";//isCollection:0代表未收藏，1代表已收藏。\nintent.putExtras(bundle);\nsetResult(RESULT_OK, intent);\nfinish();\n```\n\nonActivityResult\n回到上页面的onActivityResult方法\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n            if (requestCode == AppConfig.REQUEST_CODE_DIALOGUE\n                && resultCode == RESULT_OK) {\n            int position = data.getExtras().getInt(\"position\");\n            String isCollection = data.getExtras().getString(\"isCollection \");\n            Object object = dataAdapter.getItem(position);\n            if (object instanceof DoctorList) {\n                DoctorList doctorList = (DoctorList) object;\n                doctorList.setIsCollection(isCollection);\n                dataAdapter.notifyDataSetChanged();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n```\n\nDoctorList\n\n```java\nclass DialogueBean {\n    private String result;\n    private ArrayList<DoctorList> doctorList;\npublic class DoctorList implements Serializable {\n        private String isCollection;       \n}\n}\n```\n\n# 3、以上只是未重新请求接口下刷新View，未真正局部刷新 \n以上应该是大部分人会使用的一种解决思路，但是很抱歉，使用notifyDataSetChanged方法，未做到局部刷新。\n\n## ListView局部刷新\n\n```java\n   private List<Map<String, Object>> mData;\n   private ListView mListView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mData = getData();\n        MyAdapter adapter = new MyAdapter(this);\n        mListView = (ListView) findViewById(R.id.listView);\n        mListView.setAdapter(adapter);\n    }\n\n    private List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<>();\n        Map<String, Object> map;\n        for (int i = 0; i < 50; i++) {\n            map = new HashMap<>();\n            map.put(\"title\", \"G\" + i);\n            list.add(map);\n        }\n        return list;\n    }\n\n\n    public class MyAdapter extends BaseAdapter {\n        private LayoutInflater mInflater;\n\n        public MyAdapter(Context context) {\n            this.mInflater = LayoutInflater.from(context);\n        }\n\n        @Override\n        public int getCount() {\n            return mData.size();\n        }\n\n        @Override\n        public Object getItem(int arg0) {\n            return mData.get(arg0);\n        }\n\n        @Override\n        public long getItemId(int arg0) {\n            return arg0;\n        }\n\n        @Override\n        public View getView(final int position, View convertView, ViewGroup parent) {\n            Log.d(\"wxl\", \"getView=\" + position);\n            ViewHolder holder = null;\n            if (convertView == null) {\n                holder = new ViewHolder();\n                convertView = mInflater.inflate(R.layout.listview_item, null);\n                holder.textview = (TextView) convertView.findViewById(R.id.textview);\n                convertView.setTag(holder);\n            } else {\n                holder = (ViewHolder) convertView.getTag();\n            }\n            holder.textview.setText((String) mData.get(position).get(\"title\"));\n            convertView.setOnClickListener(new View.OnClickListener() {\n\n                @Override\n                public void onClick(View v) {\n                    updateItemView(position);//状态改变时，调用，这里是为了演示方便\n                }\n            });\n\n\n            return convertView;\n        }\n\n        public class ViewHolder {\n            public TextView textview;\n        }\n    }\n\n    public void updateItemView(int position) {\n        //得到第一个可显示控件的位置，\n        int visiblePosition = mListView.getFirstVisiblePosition();\n        //只有当要更新的view在可见的位置时才更新，不可见时，跳过不更新\n        int index = position - visiblePosition;\n        if (index >= 0) {\n            //得到要更新的item的view\n            View view = mListView.getChildAt(index);\n            //从view中取得holder\n            MyAdapter.ViewHolder holder = (MyAdapter.ViewHolder) view.getTag();\n            //更改状态\n            holder.textview.setText(\"测试数据\");\n            //直接更改数据源\n            mData.get(index).put(\"title\", \"测试数据\");\n        }\n    }\n}\n```\nlistview_item.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:id=\"@+id/textview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_gravity=\"center_vertical\"\n        android:gravity=\"center_vertical\" />\n</LinearLayout>\n```\n\n## RecyclerView局部刷新\n\nRecyclerView已经替代了ListView，局部刷新很有必要知道\n\n```java\n//收藏成功后\nmList.get(position).put(\"favorites\", \"0\");//直接更改数据源\nViewHolder viewHolder = (ViewHolder) mRecyclerView.findViewHolderForAdapterPosition(position); //得到要更新的item的view\nviewHolder.mCheck.setBackgroundResource(R.mipmap.collect_normal);//更改状态\n```\n\t\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","source":"_posts/listView_item_state.md","raw":"title: 刷新RecyclerView/ListView某个item状态\ndate: 2015-07-08\ncategories: [Android]\ntags: [RecyclerView,ListView]\n---\n> 本文是实际开发遇到的问题，结合情景，给出解决方案，很有启示作用。\n\n# 1、比如列表有收藏按钮，当前页面收藏\n\n```java\nprivate List<Map<String, String>> mList = new ArrayList<>();\n...\n  //走收藏接口，在成功后，只更改刚刚点击的item的收藏按钮状态\n  mList.get(position).put(\"favorites\", \"1\");\n  notifyDataSetChanged();\n```\n\n<!-- more -->\n\n# 2、比如列表有收藏按钮，下个页面也有收藏功能\n\n这种情况下，下个页面收藏成功后，按照常理最好返回列表页刷新以下收藏按钮的状态（话说新浪微博没有这样做）。\n\nDataAdapter\n\n```java\n //点击跳转下个页面\n Intent intent = new Intent(activity, NextActivity.class);  \n intent.putExtra(\"position\", position);\n startActivityForResult(intent,AppConfig.REQUEST_CODE_DIALOGUE);\n```\n\nNextActivity.class\n\n```java\n//收藏成功后，返回列表页\nIntent intent;\nintent = new Intent();\nBundle bundle = new Bundle();\nbundle.putInt(\"position\", position);\nbundle.putString(\"isCollection\", \"1\";//isCollection:0代表未收藏，1代表已收藏。\nintent.putExtras(bundle);\nsetResult(RESULT_OK, intent);\nfinish();\n```\n\nonActivityResult\n回到上页面的onActivityResult方法\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n            if (requestCode == AppConfig.REQUEST_CODE_DIALOGUE\n                && resultCode == RESULT_OK) {\n            int position = data.getExtras().getInt(\"position\");\n            String isCollection = data.getExtras().getString(\"isCollection \");\n            Object object = dataAdapter.getItem(position);\n            if (object instanceof DoctorList) {\n                DoctorList doctorList = (DoctorList) object;\n                doctorList.setIsCollection(isCollection);\n                dataAdapter.notifyDataSetChanged();\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n```\n\nDoctorList\n\n```java\nclass DialogueBean {\n    private String result;\n    private ArrayList<DoctorList> doctorList;\npublic class DoctorList implements Serializable {\n        private String isCollection;       \n}\n}\n```\n\n# 3、以上只是未重新请求接口下刷新View，未真正局部刷新 \n以上应该是大部分人会使用的一种解决思路，但是很抱歉，使用notifyDataSetChanged方法，未做到局部刷新。\n\n## ListView局部刷新\n\n```java\n   private List<Map<String, Object>> mData;\n   private ListView mListView;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        mData = getData();\n        MyAdapter adapter = new MyAdapter(this);\n        mListView = (ListView) findViewById(R.id.listView);\n        mListView.setAdapter(adapter);\n    }\n\n    private List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<>();\n        Map<String, Object> map;\n        for (int i = 0; i < 50; i++) {\n            map = new HashMap<>();\n            map.put(\"title\", \"G\" + i);\n            list.add(map);\n        }\n        return list;\n    }\n\n\n    public class MyAdapter extends BaseAdapter {\n        private LayoutInflater mInflater;\n\n        public MyAdapter(Context context) {\n            this.mInflater = LayoutInflater.from(context);\n        }\n\n        @Override\n        public int getCount() {\n            return mData.size();\n        }\n\n        @Override\n        public Object getItem(int arg0) {\n            return mData.get(arg0);\n        }\n\n        @Override\n        public long getItemId(int arg0) {\n            return arg0;\n        }\n\n        @Override\n        public View getView(final int position, View convertView, ViewGroup parent) {\n            Log.d(\"wxl\", \"getView=\" + position);\n            ViewHolder holder = null;\n            if (convertView == null) {\n                holder = new ViewHolder();\n                convertView = mInflater.inflate(R.layout.listview_item, null);\n                holder.textview = (TextView) convertView.findViewById(R.id.textview);\n                convertView.setTag(holder);\n            } else {\n                holder = (ViewHolder) convertView.getTag();\n            }\n            holder.textview.setText((String) mData.get(position).get(\"title\"));\n            convertView.setOnClickListener(new View.OnClickListener() {\n\n                @Override\n                public void onClick(View v) {\n                    updateItemView(position);//状态改变时，调用，这里是为了演示方便\n                }\n            });\n\n\n            return convertView;\n        }\n\n        public class ViewHolder {\n            public TextView textview;\n        }\n    }\n\n    public void updateItemView(int position) {\n        //得到第一个可显示控件的位置，\n        int visiblePosition = mListView.getFirstVisiblePosition();\n        //只有当要更新的view在可见的位置时才更新，不可见时，跳过不更新\n        int index = position - visiblePosition;\n        if (index >= 0) {\n            //得到要更新的item的view\n            View view = mListView.getChildAt(index);\n            //从view中取得holder\n            MyAdapter.ViewHolder holder = (MyAdapter.ViewHolder) view.getTag();\n            //更改状态\n            holder.textview.setText(\"测试数据\");\n            //直接更改数据源\n            mData.get(index).put(\"title\", \"测试数据\");\n        }\n    }\n}\n```\nlistview_item.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:id=\"@+id/textview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_gravity=\"center_vertical\"\n        android:gravity=\"center_vertical\" />\n</LinearLayout>\n```\n\n## RecyclerView局部刷新\n\nRecyclerView已经替代了ListView，局部刷新很有必要知道\n\n```java\n//收藏成功后\nmList.get(position).put(\"favorites\", \"0\");//直接更改数据源\nViewHolder viewHolder = (ViewHolder) mRecyclerView.findViewHolderForAdapterPosition(position); //得到要更新的item的view\nviewHolder.mCheck.setBackgroundResource(R.mipmap.collect_normal);//更改状态\n```\n\t\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","slug":"listView_item_state","published":1,"updated":"2016-05-06T03:30:58.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8t0047zspkr4akaop8","thumbnailImageUrl":null},{"title":"Android之ListView属性","date":"2013-07-18T16:00:00.000Z","_content":"\n```java \n\t<ListView \n\tandroid:divider=\"@drawable/song_item_line\"  item之间的分割线\n        android:cacheColorHint=\"#00000000\"拖动系统切换item时的缓存色\n        android:scrollbars=\"none\"不显示滚动条\n        android:listSelector=\"#00000000\"/>选中时背景色\n        android:fadingEdge=\"none\" 设置后上边和下边没有阴影了\n        android:fastScrollEnabled=\"true\" 快速滚动滑块\n        android:cacheColorHint 如果你是用图片做背景的话，那也只要将android:cacheColorHint指定为透明（#00000000）就可以了.  \n        android:divider=\"@drawable/list_driver\" 设置显示分割线图形，如果不想显示分割线则只要设置为\n        android:divider=\"@null\" 就可以了，分割线可以自定义颜色、或图片.\n        android:dividerHeight=\"6px\"设置分割线高度像素.  \n        android:fadeScrollbars=\"true\"  滚动条的自动隐藏和显示. \n        android:transcriptMode=\"alwaysScroll\"  （支持ScrollBar）自动滑动到最底部.\n        android:stackFromBottom=\"true\" 设置你做好的列表显示在列表的最下面，值为true和false. \n        android:drawSelectorOnTop=\"true\"  点击某一条记录，颜色会显示在最上面，记录上的文字被遮住，所以点击文字不放，文字就看不到\n        android:drawSelectorOnTop=\"false\" 点击某条记录不放，颜色会在记录的后面，成为背景色，但是记录内容的文字是可见的\n\t/>\n```\n\n\n","source":"_posts/listView.md","raw":"title: Android之ListView属性\ncategories: [Android]\ntags: [Android,ListView]\ndate: 2013-07-19\n---\n\n```java \n\t<ListView \n\tandroid:divider=\"@drawable/song_item_line\"  item之间的分割线\n        android:cacheColorHint=\"#00000000\"拖动系统切换item时的缓存色\n        android:scrollbars=\"none\"不显示滚动条\n        android:listSelector=\"#00000000\"/>选中时背景色\n        android:fadingEdge=\"none\" 设置后上边和下边没有阴影了\n        android:fastScrollEnabled=\"true\" 快速滚动滑块\n        android:cacheColorHint 如果你是用图片做背景的话，那也只要将android:cacheColorHint指定为透明（#00000000）就可以了.  \n        android:divider=\"@drawable/list_driver\" 设置显示分割线图形，如果不想显示分割线则只要设置为\n        android:divider=\"@null\" 就可以了，分割线可以自定义颜色、或图片.\n        android:dividerHeight=\"6px\"设置分割线高度像素.  \n        android:fadeScrollbars=\"true\"  滚动条的自动隐藏和显示. \n        android:transcriptMode=\"alwaysScroll\"  （支持ScrollBar）自动滑动到最底部.\n        android:stackFromBottom=\"true\" 设置你做好的列表显示在列表的最下面，值为true和false. \n        android:drawSelectorOnTop=\"true\"  点击某一条记录，颜色会显示在最上面，记录上的文字被遮住，所以点击文字不放，文字就看不到\n        android:drawSelectorOnTop=\"false\" 点击某条记录不放，颜色会在记录的后面，成为背景色，但是记录内容的文字是可见的\n\t/>\n```\n\n\n","slug":"listView","published":1,"updated":"2016-03-17T00:44:06.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8v004dzspkycu40l7j","thumbnailImageUrl":null},{"title":"Lambda for Android","date":"2016-03-28T12:59:20.000Z","_content":"> Lambda，是我去年学习RxJava时知道的，它让代码看起来更加简洁，但个人认为代码的可读性差了很多，因此一直没有去深入学习。\n\n# 什么是lambda\nlambda是一种匿名表达式，retrolambda使得Android能使用lambda特性，举个例子：\n```\nview.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                 Log.d(\"wxl\", \"retrolambda test\");\n            }\n});\n```\n使用 lambda\n```\nview.setOnClickListener(\nv -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n<!--more-->\n\n# Android如何使用\n这里是使用[Retrolambda](https://github.com/evant/gradle-retrolambda)的gradle插件，这样就可以在代码中使用lambda了。\n\n## Android Studio配置Retrolambda\n1. lambda需要安装JDK8，下载最新版本[jdk-8u73](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n2.  build.gradle\n```\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'me.tatarka:gradle-retrolambda:3.2.4'//加上这句依赖，这会使用retrolambda来编译Java代码\n    }\n}\n```\n3.  app/build.gradle \n```\napply plugin: 'com.android.application'\napply plugin: 'me.tatarka.retrolambda'//加上这句加,入plugin声明\nandroid {\n\t……\n    compileOptions {//使用JAVA8语法解析\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\nretrolambda {//指定将源码编译的级别，使用下列代码，会将代码编译到兼容1.6的字节码格式\n    javaVersion JavaVersion.VERSION_1_6\n}\n```\n\n\n# Android Studio自动生成lambda\n![](http://7q5c2h.com1.z0.glb.clouddn.com/lambda4android1.png)\n当配置Retrolambda成功后，Android Studio会有提示，按Alt+Enter键\n![](http://7q5c2h.com1.z0.glb.clouddn.com/lambda4android2.png)\n点击替换，这样就能自动生成，使用lambda了。到这里我就可以洗洗睡了，也很晚了，但为什么可以这样写呢，还是来简单了解lambda语法吧。\n\n# lambda语法简介 \n基本格式\n```\ninput -> body\n```\n## intput种类\n* 无输入 void\n() -> body\n```\nnew Thread(new Runnable() {\n            @Override\n            public void run() {\n                Log.d(\"wxl\", \"retrolambda test\");\n            }\n        });\n```\n使用 lambda\n```\n new Thread(() -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n\n* 一个参数输入\nx -> body\n```\nview.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                 Log.d(\"wxl\", \"retrolambda test\");\n            }\n});\n```\n使用 lambda\n```\nview.setOnClickListener(\nv -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n* 多个参数输入\n(x, y) -> x + y;\n```\nList<String> names = Arrays.asList(\"peter\", \"anna\", \"mike\", \"xenia\");\nCollections.sort(names, new Comparator<String>() {\n            @Override\n            public int compare(String a, String b) {\n                return b.compareTo(a);\n}\n        });\nfor (String name : names) {\n     Log.d(\"wxl\", name);\n}\n```\n使用 lambda\n```\nList<String> names = Arrays.asList(\"peter\", \"anna\", \"mike\", \"xenia\");\nCollections.sort(names, (a, b) -> b.compareTo(a));\nfor (String name : names) {\n     Log.d(\"wxl\", name);\n}\n```\n\n* 不省略型別\n(int x, int y) -> x + y;\n\n##  body 种类\n* 什麼都不做\n() -> {}\n* 单行不需要有返回值，单行可省略{}\n(x, y) -> x + y;\n* 单行需要有返回值\n(x, y) -> x + y//注意没有分号结尾\n```\nObservable.just(\"Hello\", \"RxJava\")\n          .map(new Func1<String, String>() {\n                    @Override\n                    public String call(String s) {\n                        return s.toUpperCase();\n                    }\n          });\n```\n使用 lambda\n```\n Observable.just(\"Hello\", \"RxJava\")\n           .map(s -> s.toUpperCase());\n```\n* 多行不需要有返回值\n(x, y) ->{\n  x * x;\n  y * y;\n}\n* 多行需要有返回值\n(x, y) ->{\n  x * x;\n  y * y;\n  return x + y;\n}\n \n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Lambda表达式的意义](http://www.jianshu.com/p/f02b04344365)","source":"_posts/lambda4android.md","raw":"title: Lambda for Android\ndate: 2016-03-28 20:59:20\ntags: [lambda,retrolambda]\ncategory: Android\n---\n> Lambda，是我去年学习RxJava时知道的，它让代码看起来更加简洁，但个人认为代码的可读性差了很多，因此一直没有去深入学习。\n\n# 什么是lambda\nlambda是一种匿名表达式，retrolambda使得Android能使用lambda特性，举个例子：\n```\nview.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                 Log.d(\"wxl\", \"retrolambda test\");\n            }\n});\n```\n使用 lambda\n```\nview.setOnClickListener(\nv -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n<!--more-->\n\n# Android如何使用\n这里是使用[Retrolambda](https://github.com/evant/gradle-retrolambda)的gradle插件，这样就可以在代码中使用lambda了。\n\n## Android Studio配置Retrolambda\n1. lambda需要安装JDK8，下载最新版本[jdk-8u73](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n2.  build.gradle\n```\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'me.tatarka:gradle-retrolambda:3.2.4'//加上这句依赖，这会使用retrolambda来编译Java代码\n    }\n}\n```\n3.  app/build.gradle \n```\napply plugin: 'com.android.application'\napply plugin: 'me.tatarka.retrolambda'//加上这句加,入plugin声明\nandroid {\n\t……\n    compileOptions {//使用JAVA8语法解析\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\nretrolambda {//指定将源码编译的级别，使用下列代码，会将代码编译到兼容1.6的字节码格式\n    javaVersion JavaVersion.VERSION_1_6\n}\n```\n\n\n# Android Studio自动生成lambda\n![](http://7q5c2h.com1.z0.glb.clouddn.com/lambda4android1.png)\n当配置Retrolambda成功后，Android Studio会有提示，按Alt+Enter键\n![](http://7q5c2h.com1.z0.glb.clouddn.com/lambda4android2.png)\n点击替换，这样就能自动生成，使用lambda了。到这里我就可以洗洗睡了，也很晚了，但为什么可以这样写呢，还是来简单了解lambda语法吧。\n\n# lambda语法简介 \n基本格式\n```\ninput -> body\n```\n## intput种类\n* 无输入 void\n() -> body\n```\nnew Thread(new Runnable() {\n            @Override\n            public void run() {\n                Log.d(\"wxl\", \"retrolambda test\");\n            }\n        });\n```\n使用 lambda\n```\n new Thread(() -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n\n* 一个参数输入\nx -> body\n```\nview.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                 Log.d(\"wxl\", \"retrolambda test\");\n            }\n});\n```\n使用 lambda\n```\nview.setOnClickListener(\nv -> Log.d(\"wxl\", \"retrolambda test\"));\n```\n* 多个参数输入\n(x, y) -> x + y;\n```\nList<String> names = Arrays.asList(\"peter\", \"anna\", \"mike\", \"xenia\");\nCollections.sort(names, new Comparator<String>() {\n            @Override\n            public int compare(String a, String b) {\n                return b.compareTo(a);\n}\n        });\nfor (String name : names) {\n     Log.d(\"wxl\", name);\n}\n```\n使用 lambda\n```\nList<String> names = Arrays.asList(\"peter\", \"anna\", \"mike\", \"xenia\");\nCollections.sort(names, (a, b) -> b.compareTo(a));\nfor (String name : names) {\n     Log.d(\"wxl\", name);\n}\n```\n\n* 不省略型別\n(int x, int y) -> x + y;\n\n##  body 种类\n* 什麼都不做\n() -> {}\n* 单行不需要有返回值，单行可省略{}\n(x, y) -> x + y;\n* 单行需要有返回值\n(x, y) -> x + y//注意没有分号结尾\n```\nObservable.just(\"Hello\", \"RxJava\")\n          .map(new Func1<String, String>() {\n                    @Override\n                    public String call(String s) {\n                        return s.toUpperCase();\n                    }\n          });\n```\n使用 lambda\n```\n Observable.just(\"Hello\", \"RxJava\")\n           .map(s -> s.toUpperCase());\n```\n* 多行不需要有返回值\n(x, y) ->{\n  x * x;\n  y * y;\n}\n* 多行需要有返回值\n(x, y) ->{\n  x * x;\n  y * y;\n  return x + y;\n}\n \n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Lambda表达式的意义](http://www.jianshu.com/p/f02b04344365)","slug":"lambda4android","published":1,"updated":"2016-03-23T03:37:17.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8x004hzspknseoa8oh","thumbnailImageUrl":null},{"title":"Android library分享到jcenter","date":"2016-05-06T03:07:29.000Z","_content":"> 之前写过同样的一篇教程（地址：[Android library分享到jcenter](http://wuxiaolong.me/2015/11/12/jcenter/)），但是配置较多，还不能自己写库名（最新的貌似可以写），起码当时不能（直接取的建库时的名），这点被坑了，后来想改名都不行，后文会说。这篇教程和之前差不多，就配置这块不一样。好，快上车，老司机要开车了。\n\n# 申请bintray账号\n登录 [bintray.com](https://bintray.com/)\n在[bintray.com](https://bintray.com/)上注册一个账号。\n点击maven，点击Add New Package，为我们的library创建一个新的package。\n命名所有字母应该为小写，单词之间用－分割。\n需要API Key，点击进入你的账户信息里再点击Edit即有查看API Key的选项，把他复制下来。\n\n# 配置\nlibrary项目最好分成两个module，一个Application Module，一个Library Module。Application Module用于展示库的用法，Library Module是library的源代码。\n<!--more-->\n## 配置项目\n修改项目的build.gradle件中的依赖部分，\n```java\ndependencies {\n        classpath 'com.android.tools.build:gradle:2.1.0'\n        classpath 'com.novoda:bintray-release:0.3.4'\n    }\n```\n\n## 配置library\n具体配置可参考我的开源库[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/blob/master/library/build.gradle)。\n```java\napply plugin: 'com.android.library'\nandroid {\n   ……\n}\n\ndependencies {\n  ……\n}\n//添加\napply plugin: 'com.novoda.bintray-release'\npublish {\n    //bintray.com用户名\n    userOrg = 'wuxiaolong'\n    //jcenter上的路径\n    groupId = 'com.wuxiaolong.pullloadmorerecyclerview'\n    //项目名称\n    artifactId = 'pullloadmorerecyclerview'\n    //版本号\n    publishVersion = '1.0.5'\n    //描述，不重要\n    desc = '实现RecyclerView下拉刷新和上拉加载更多以及RecyclerView线性、网格、瀑布流效果演示'\n    //网站，不重要\n    website = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView'\n\n}\n```\n`是不是配置少了很多哇，这里解释下，本来我想把项目名称改成pullloadmorerecyclerview，上传也成功了，但是依赖却找不到了，之前默认名是library，我改成了library，上传，这样算一个新的库，得重新审核，哎无奈，只能按照之前的方法去上传。`\n\n# 上传library到bintray空间\n请到Android Studio的终端（Terminal）选项卡。\n输入下面的命令：\n\n```js\ngradlew clean build bintrayUpload \n -PbintrayUser=wuxiaolong \n -PbintrayKey=这里填写刚刚保存的API Key\n -PdryRun=false\n```\n如果显示如下，说明成功了！否则有log提示错误。\n```js\nBUILD SUCCESSFUL\n```\n![](http://7q5c2h.com1.z0.glb.clouddn.com/includeMyPackage.png)\n上传完成即可在Bintray网站上找到你的Repo，我们需要完成最后一步工作，申请你的Repo添加到JCenter。可以进入[这个页面](https://bintray.com/bintray/jcenter)，点击Include My Package，输入你的项目名字，点击匹配到的项目，直接send即可，然后就等管理员批准了。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/jcenterApproved.png)\n如上，网站上会给你一条通过信息，然后就OK了，大功告成。\n\n```java\ncompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.5'\n```\n一般来说，我们需要知道library的字符串形式，包含3部分\nGROUP_ID:ARTIFACT_ID:VERSION\n上面的例子中，GROUP_ID是com.wuxiaolong.pullloadmorerecyclerview ，即配置library中group的值；ARTIFACT_ID是library，配置library中没有写到，是library项目的名字；VERSION是1.0.5。\n查看bintray上库：\nhttp://jcenter.bintray.com/com/wuxiaolong/\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[bintray-release](https://github.com/novoda/bintray-release)\n[Android 快速发布开源项目到jcenter](http://blog.csdn.net/lmj623565791/article/details/51148825)\n","source":"_posts/jcenter2.md","raw":"title: Android library分享到jcenter\ndate: 2016-05-06 11:07:29\ntags: jcenter\ncategory: jcenter\n---\n> 之前写过同样的一篇教程（地址：[Android library分享到jcenter](http://wuxiaolong.me/2015/11/12/jcenter/)），但是配置较多，还不能自己写库名（最新的貌似可以写），起码当时不能（直接取的建库时的名），这点被坑了，后来想改名都不行，后文会说。这篇教程和之前差不多，就配置这块不一样。好，快上车，老司机要开车了。\n\n# 申请bintray账号\n登录 [bintray.com](https://bintray.com/)\n在[bintray.com](https://bintray.com/)上注册一个账号。\n点击maven，点击Add New Package，为我们的library创建一个新的package。\n命名所有字母应该为小写，单词之间用－分割。\n需要API Key，点击进入你的账户信息里再点击Edit即有查看API Key的选项，把他复制下来。\n\n# 配置\nlibrary项目最好分成两个module，一个Application Module，一个Library Module。Application Module用于展示库的用法，Library Module是library的源代码。\n<!--more-->\n## 配置项目\n修改项目的build.gradle件中的依赖部分，\n```java\ndependencies {\n        classpath 'com.android.tools.build:gradle:2.1.0'\n        classpath 'com.novoda:bintray-release:0.3.4'\n    }\n```\n\n## 配置library\n具体配置可参考我的开源库[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/blob/master/library/build.gradle)。\n```java\napply plugin: 'com.android.library'\nandroid {\n   ……\n}\n\ndependencies {\n  ……\n}\n//添加\napply plugin: 'com.novoda.bintray-release'\npublish {\n    //bintray.com用户名\n    userOrg = 'wuxiaolong'\n    //jcenter上的路径\n    groupId = 'com.wuxiaolong.pullloadmorerecyclerview'\n    //项目名称\n    artifactId = 'pullloadmorerecyclerview'\n    //版本号\n    publishVersion = '1.0.5'\n    //描述，不重要\n    desc = '实现RecyclerView下拉刷新和上拉加载更多以及RecyclerView线性、网格、瀑布流效果演示'\n    //网站，不重要\n    website = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView'\n\n}\n```\n`是不是配置少了很多哇，这里解释下，本来我想把项目名称改成pullloadmorerecyclerview，上传也成功了，但是依赖却找不到了，之前默认名是library，我改成了library，上传，这样算一个新的库，得重新审核，哎无奈，只能按照之前的方法去上传。`\n\n# 上传library到bintray空间\n请到Android Studio的终端（Terminal）选项卡。\n输入下面的命令：\n\n```js\ngradlew clean build bintrayUpload \n -PbintrayUser=wuxiaolong \n -PbintrayKey=这里填写刚刚保存的API Key\n -PdryRun=false\n```\n如果显示如下，说明成功了！否则有log提示错误。\n```js\nBUILD SUCCESSFUL\n```\n![](http://7q5c2h.com1.z0.glb.clouddn.com/includeMyPackage.png)\n上传完成即可在Bintray网站上找到你的Repo，我们需要完成最后一步工作，申请你的Repo添加到JCenter。可以进入[这个页面](https://bintray.com/bintray/jcenter)，点击Include My Package，输入你的项目名字，点击匹配到的项目，直接send即可，然后就等管理员批准了。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/jcenterApproved.png)\n如上，网站上会给你一条通过信息，然后就OK了，大功告成。\n\n```java\ncompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.5'\n```\n一般来说，我们需要知道library的字符串形式，包含3部分\nGROUP_ID:ARTIFACT_ID:VERSION\n上面的例子中，GROUP_ID是com.wuxiaolong.pullloadmorerecyclerview ，即配置library中group的值；ARTIFACT_ID是library，配置library中没有写到，是library项目的名字；VERSION是1.0.5。\n查看bintray上库：\nhttp://jcenter.bintray.com/com/wuxiaolong/\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[bintray-release](https://github.com/novoda/bintray-release)\n[Android 快速发布开源项目到jcenter](http://blog.csdn.net/lmj623565791/article/details/51148825)\n","slug":"jcenter2","published":1,"updated":"2016-05-06T03:50:47.572Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr8z004nzspklbto5lp9","thumbnailImageUrl":null},{"title":"Android library分享到jcenter","date":"2015-11-12T07:30:50.000Z","_content":"```java\ndependencies {\n  compile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n}\n```\nbuild.gradle文件中只写上如上一行，就能在Android Studio中引入你的library到项目中，这样岂不是酷比了。之前github上分享一个简单的库，这两天花了点时间研究了下，如何也能这样一行就能依赖我的那个库。\n<!--more-->\n## 申请bintray账号\njcenter是一个由 [bintray.com](https://bintray.com/)维护的Maven仓库 。\n在[bintray.com](https://bintray.com/)上注册一个账号。然后点击maven。点击Add New Package，为我们的library创建一个新的package。命名所有字母应该为小写，单词之间用－分割。\n\n## 配置\nlibrary项目最好分成两个module，一个Application Module，一个Library Module。Application Module用于展示库的用法，Library Module是library的源代码。\n\n### 配置项目\n修改项目的build.gradle文件中的依赖部分\n```java\ndependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n    }\n```\n\n打开项目的local.properties，加入以下两句:\n```java\nbintray.user=your_user_name\nbintray.apikey=your_apikey\n```\nbintray username 放在第一行， API Key放在第二行， API Key为你bintray的账户的apikey，可以点击进入你的账户信息里再点击Edit即有查看API Key的选项，把他复制下来。\n这些信息比较重要，幸而local.properties文件就已经被添加到.gitignore了。因此这些敏感数据不会被误传到git服务器。\n\n## 配置library\n很多，具体配置可参考我的开源库[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/blob/master/library/build.gradle)。\n```java\napply plugin: 'com.android.library'\napply plugin: 'com.github.dcendents.android-maven'\napply plugin: 'com.jfrog.bintray'\n\n// 这个version是区分library版本的，因此当我们需要更新library时记得修改这个version, 这个version影响后面的引用\nversion = \"1.0.4\"\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"22.0.1\"\n    resourcePrefix \"PullLoadMoreRecyclerView\"\t//这个随便填\n    defaultConfig {\n        minSdkVersion 14\n        targetSdkVersion 22\n        versionCode 101\n        versionName \"1.0.4\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    compile 'com.android.support:appcompat-v7:22.2.0'\n    compile 'com.android.support:recyclerview-v7:22.2.0'\n\n}\n\ndef siteUrl = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView'      // 项目的主页\ndef gitUrl = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView.git'   // Git仓库的url\ngroup = \"com.wuxiaolong.pullloadmorerecyclerview\"                                        // Maven Group ID for the artifact，一般填你唯一的包名\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            project {\n                packaging 'aar'\n                // Add your description here\n                name 'RecyclerView实现下拉刷新和上拉加载更多以及瀑布流效果' \t//项目描述\n                url siteUrl\n                // Set your license\n                licenses {\n                    license {\n                        name 'The Apache Software License, Version 2.0'\n                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    }\n                }\n                developers {\n                    developer {\n                        id 'WuXiaolong'\t\t//填写的一些基本信息\n                        name 'WuXiaolong'\n                        email '1413129987@qq.com'\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n                }\n            }\n        }\n    }\n}\ntask sourcesJar(type: Jar) {\n    from android.sourceSets.main.java.srcDirs\n    classifier = 'sources'\n}\ntask javadoc(type: Javadoc) {\n    source = android.sourceSets.main.java.srcDirs\n    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n    options.encoding = \"UTF-8\" //添加编码方式，才不会报编码错误\n}\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.destinationDir\n}\nartifacts {\n    archives javadocJar\n    archives sourcesJar\n}\nProperties properties = new Properties()\nproperties.load(project.rootProject.file('local.properties').newDataInputStream())\nbintray {\n    user = properties.getProperty(\"bintray.user\")\n    key = properties.getProperty(\"bintray.apikey\")\n    configurations = ['archives']\n    pkg {\n        repo = \"maven\"\n        name = \"pullloadmorerecyclerview\"\t//发布到JCenter上的项目名字\n        websiteUrl = siteUrl\n        vcsUrl = gitUrl\n        licenses = [\"Apache-2.0\"]\n        publish = true\n    }\n}\n\n\n\n```\n## 上传library到bintray空间\n请到Android Studio的终端（Terminal）选项卡。\n检查代码的正确性，输入下面的命令：\n\n```js\ngradlew install\n```\n如果没有什么问题，会显示：\n```js\nBUILD SUCCESSFUL\n```\n上传编译的文件到bintray，使用如下的命令：\n```js\ngradlew bintrayUpload\n```\n\n如果显示如下说明成功了！\n```js\nBUILD SUCCESSFUL\n```\n![](http://7q5c2h.com1.z0.glb.clouddn.com/includeMyPackage.png)\n上传完成即可在Bintray网站上找到你的Repo，我们需要完成最后一步工作，申请你的Repo添加到JCenter。可以进入[这个页面](https://bintray.com/bintray/jcenter)，点击Include My Package，输入你的项目名字，点击匹配到的项目，直接send即可，然后就等管理员批准了。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/jcenterApproved.png)\n如上，网站上会给你一条通过信息，然后就OK了，大功告成。\n\n```java\ncompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n```\n一般来说，我们需要知道library的字符串形式，包含3部分\nGROUP_ID:ARTIFACT_ID:VERSION\n上面的例子中，GROUP_ID是com.wuxiaolong.pullloadmorerecyclerview ，即配置library中group的值；ARTIFACT_ID是library，配置library中没有写到，是library项目的名字；VERSION是1.0.4。\n查看bintray上库：\nhttp://jcenter.bintray.com/com/wuxiaolong/\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n## 附录\n[如何使用Android Studio把自己的Android library分享到jCenter和Maven Central](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0623/3097.html)\n[将Library上传到Jcenter](http://www.jianshu.com/p/0ba8960f80a9)\n","source":"_posts/jcenter.md","raw":"title: Android library分享到jcenter\ndate: 2015-11-12 15:30:50\ntags: jcenter\ncategory: jcenter\n---\n```java\ndependencies {\n  compile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n}\n```\nbuild.gradle文件中只写上如上一行，就能在Android Studio中引入你的library到项目中，这样岂不是酷比了。之前github上分享一个简单的库，这两天花了点时间研究了下，如何也能这样一行就能依赖我的那个库。\n<!--more-->\n## 申请bintray账号\njcenter是一个由 [bintray.com](https://bintray.com/)维护的Maven仓库 。\n在[bintray.com](https://bintray.com/)上注册一个账号。然后点击maven。点击Add New Package，为我们的library创建一个新的package。命名所有字母应该为小写，单词之间用－分割。\n\n## 配置\nlibrary项目最好分成两个module，一个Application Module，一个Library Module。Application Module用于展示库的用法，Library Module是library的源代码。\n\n### 配置项目\n修改项目的build.gradle文件中的依赖部分\n```java\ndependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n    }\n```\n\n打开项目的local.properties，加入以下两句:\n```java\nbintray.user=your_user_name\nbintray.apikey=your_apikey\n```\nbintray username 放在第一行， API Key放在第二行， API Key为你bintray的账户的apikey，可以点击进入你的账户信息里再点击Edit即有查看API Key的选项，把他复制下来。\n这些信息比较重要，幸而local.properties文件就已经被添加到.gitignore了。因此这些敏感数据不会被误传到git服务器。\n\n## 配置library\n很多，具体配置可参考我的开源库[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/blob/master/library/build.gradle)。\n```java\napply plugin: 'com.android.library'\napply plugin: 'com.github.dcendents.android-maven'\napply plugin: 'com.jfrog.bintray'\n\n// 这个version是区分library版本的，因此当我们需要更新library时记得修改这个version, 这个version影响后面的引用\nversion = \"1.0.4\"\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"22.0.1\"\n    resourcePrefix \"PullLoadMoreRecyclerView\"\t//这个随便填\n    defaultConfig {\n        minSdkVersion 14\n        targetSdkVersion 22\n        versionCode 101\n        versionName \"1.0.4\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    compile 'com.android.support:appcompat-v7:22.2.0'\n    compile 'com.android.support:recyclerview-v7:22.2.0'\n\n}\n\ndef siteUrl = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView'      // 项目的主页\ndef gitUrl = 'https://github.com/WuXiaolong/PullLoadMoreRecyclerView.git'   // Git仓库的url\ngroup = \"com.wuxiaolong.pullloadmorerecyclerview\"                                        // Maven Group ID for the artifact，一般填你唯一的包名\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            project {\n                packaging 'aar'\n                // Add your description here\n                name 'RecyclerView实现下拉刷新和上拉加载更多以及瀑布流效果' \t//项目描述\n                url siteUrl\n                // Set your license\n                licenses {\n                    license {\n                        name 'The Apache Software License, Version 2.0'\n                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    }\n                }\n                developers {\n                    developer {\n                        id 'WuXiaolong'\t\t//填写的一些基本信息\n                        name 'WuXiaolong'\n                        email '1413129987@qq.com'\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n                }\n            }\n        }\n    }\n}\ntask sourcesJar(type: Jar) {\n    from android.sourceSets.main.java.srcDirs\n    classifier = 'sources'\n}\ntask javadoc(type: Javadoc) {\n    source = android.sourceSets.main.java.srcDirs\n    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n    options.encoding = \"UTF-8\" //添加编码方式，才不会报编码错误\n}\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.destinationDir\n}\nartifacts {\n    archives javadocJar\n    archives sourcesJar\n}\nProperties properties = new Properties()\nproperties.load(project.rootProject.file('local.properties').newDataInputStream())\nbintray {\n    user = properties.getProperty(\"bintray.user\")\n    key = properties.getProperty(\"bintray.apikey\")\n    configurations = ['archives']\n    pkg {\n        repo = \"maven\"\n        name = \"pullloadmorerecyclerview\"\t//发布到JCenter上的项目名字\n        websiteUrl = siteUrl\n        vcsUrl = gitUrl\n        licenses = [\"Apache-2.0\"]\n        publish = true\n    }\n}\n\n\n\n```\n## 上传library到bintray空间\n请到Android Studio的终端（Terminal）选项卡。\n检查代码的正确性，输入下面的命令：\n\n```js\ngradlew install\n```\n如果没有什么问题，会显示：\n```js\nBUILD SUCCESSFUL\n```\n上传编译的文件到bintray，使用如下的命令：\n```js\ngradlew bintrayUpload\n```\n\n如果显示如下说明成功了！\n```js\nBUILD SUCCESSFUL\n```\n![](http://7q5c2h.com1.z0.glb.clouddn.com/includeMyPackage.png)\n上传完成即可在Bintray网站上找到你的Repo，我们需要完成最后一步工作，申请你的Repo添加到JCenter。可以进入[这个页面](https://bintray.com/bintray/jcenter)，点击Include My Package，输入你的项目名字，点击匹配到的项目，直接send即可，然后就等管理员批准了。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/jcenterApproved.png)\n如上，网站上会给你一条通过信息，然后就OK了，大功告成。\n\n```java\ncompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n```\n一般来说，我们需要知道library的字符串形式，包含3部分\nGROUP_ID:ARTIFACT_ID:VERSION\n上面的例子中，GROUP_ID是com.wuxiaolong.pullloadmorerecyclerview ，即配置library中group的值；ARTIFACT_ID是library，配置library中没有写到，是library项目的名字；VERSION是1.0.4。\n查看bintray上库：\nhttp://jcenter.bintray.com/com/wuxiaolong/\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n## 附录\n[如何使用Android Studio把自己的Android library分享到jCenter和Maven Central](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0623/3097.html)\n[将Library上传到Jcenter](http://www.jianshu.com/p/0ba8960f80a9)\n","slug":"jcenter","published":1,"updated":"2016-05-06T03:29:49.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr91004szspk50p2qx5n","thumbnailImageUrl":null},{"title":"java.lang.IllegalStateException:Fragment（XXFragment） not attached to Activity","date":"2014-06-23T16:00:00.000Z","_content":"java.lang.IllegalStateException: Fragment already active\n\n说明：当Fragment处于激活状态，使用Fragment.setArguments(bundle)就会跑出该异常\n\n解决：setArguments()之前，判断Fragment是否可见，Fragment.isVisible();\n\n转载：http://jogickis.iteye.com/blog/1990790\n\n下边两个问题，是在开发中碰到的一些关于Fragment的偶发性的问题，下面是网上搜了一些解决方式：\n\n<!-- more -->\n\n \n1、关于Fragment（XXFragment） not attached to Activity 异常。出现该异常，是因为Fragment的还没有Attach到Activity时，调用了如getResource()等，需要上下文Content的函数。\n\n解决方法，就是等将调用的代码写在OnStart（）中。网上还有几处这样的参考：http://stackoverflow.com/questions/10919240/fragment-myfragment-not-attached-to-activity  \n回答的主要是在调用\ngetResources().getString(R.string.app_name); \ngetResources().getString(R.string.app_name);\n\n之前增加一个判断isAdded(),两外说这个异常解决办法的有http://stackoverflow.com/questions/6870325/android-compatibility-package-fragment-not-attached-to-activity\n这个是针对另外一种情况下的解决方式。\n\n2、在使用Fragment保存参数的时候，可能是因为需要保存的参数比较大或者比较多，这种情况下页会引起异常。比如代码\n\n```java\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\n```\n\n设置好参数，并且添加hide(),add(),方法之后，需要commit()，来实现两个Fragment跳转的时候，这种情形下参数需要进行系统保存，但是这个时候你已经实现了跳转，系统参数却没有保存。\n此时就会报java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState异常。\n\n分析原因：你并不需要系统保存的参数，只要你自己设置的参数能够传递过去，在另外一个Fragment里能够顺利接受就行了，现在android里提供了另外一种形式的提交方式commitAllowingStateLoss()，从名字上就能看出，这种提交是允许状态值丢失的。到此问题得到完美解决，值的传递是你自己控制的。\n\n这里也说一下另外一个问题，bitmap 也可以通过Bundle传递的，使用putParacelable就可以了\n\n转载：http://www.cnblogs.com/fanglove/archive/2013/05/09/3069325.html\n","source":"_posts/java-lang-IllegalStateException-Fragment-not-attached-to-Activity.md","raw":"title: java.lang.IllegalStateException:Fragment（XXFragment） not attached to Activity\ndate: 2014-06-24 \ncategories: [Android]\ntags: [Android,Fragment]\n---\njava.lang.IllegalStateException: Fragment already active\n\n说明：当Fragment处于激活状态，使用Fragment.setArguments(bundle)就会跑出该异常\n\n解决：setArguments()之前，判断Fragment是否可见，Fragment.isVisible();\n\n转载：http://jogickis.iteye.com/blog/1990790\n\n下边两个问题，是在开发中碰到的一些关于Fragment的偶发性的问题，下面是网上搜了一些解决方式：\n\n<!-- more -->\n\n \n1、关于Fragment（XXFragment） not attached to Activity 异常。出现该异常，是因为Fragment的还没有Attach到Activity时，调用了如getResource()等，需要上下文Content的函数。\n\n解决方法，就是等将调用的代码写在OnStart（）中。网上还有几处这样的参考：http://stackoverflow.com/questions/10919240/fragment-myfragment-not-attached-to-activity  \n回答的主要是在调用\ngetResources().getString(R.string.app_name); \ngetResources().getString(R.string.app_name);\n\n之前增加一个判断isAdded(),两外说这个异常解决办法的有http://stackoverflow.com/questions/6870325/android-compatibility-package-fragment-not-attached-to-activity\n这个是针对另外一种情况下的解决方式。\n\n2、在使用Fragment保存参数的时候，可能是因为需要保存的参数比较大或者比较多，这种情况下页会引起异常。比如代码\n\n```java\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\nBundle b = new Bundle(); b.putParcelable(\"bitmap\", bitmap2); imageRecognitionFragment.setArguments(b);\n```\n\n设置好参数，并且添加hide(),add(),方法之后，需要commit()，来实现两个Fragment跳转的时候，这种情形下参数需要进行系统保存，但是这个时候你已经实现了跳转，系统参数却没有保存。\n此时就会报java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState异常。\n\n分析原因：你并不需要系统保存的参数，只要你自己设置的参数能够传递过去，在另外一个Fragment里能够顺利接受就行了，现在android里提供了另外一种形式的提交方式commitAllowingStateLoss()，从名字上就能看出，这种提交是允许状态值丢失的。到此问题得到完美解决，值的传递是你自己控制的。\n\n这里也说一下另外一个问题，bitmap 也可以通过Bundle传递的，使用putParacelable就可以了\n\n转载：http://www.cnblogs.com/fanglove/archive/2013/05/09/3069325.html\n","slug":"java-lang-IllegalStateException-Fragment-not-attached-to-Activity","published":1,"updated":"2016-03-17T00:44:06.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr93004vzspklpcrbegc","thumbnailImageUrl":null},{"title":"jarsigner签名安卓Apk程序","date":"2014-12-04T16:00:00.000Z","_content":"\n发布过Android应用的朋友们应该都知道，Android APK的发布是必需要签名，本签名指南演示如何使用WoSign安卓代码签名证书，签名安卓 .apk 程序。\n\n## 签名证书\n\n制作证书，证书文件名：android.keystore, 证书别名：android.keystore\n \n## 安装签名环境JDK包\n\n签名工具包可以在JDK官方网站下载：[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)，也可以直接点击这里下载JDK工具包(请使用JDK 1.6版本)。\n文件包下载安装完成后，然后就开始进入jdk的签名根目录，具体如下：\n\n开始-> 运行-> cmd->cd 到您安装的jdk的目录这里我是D:\\Program Files\\Java\\jdk1.6.0\\bin\n \n<!-- more -->\n## 签名\n\n在D:\\Program Files\\Java\\jdk1.6.0\\bin 找到工具 jarsigner.exe，并把证书android.keystore 文件放入当前目录。签名命令：\n\njarsigner -verbose -keystore android.keystore -signedjar Last_gongs_sign.apk Before_sign.apk android.keystore\n\n1）jarsigner是工具名称，-verbose表示将签名过程中的详细信息打印出来，显示在dos窗口中；\n\n2）-keystore android.keystore 表示签名所使用的数字证书和所在位置，这里没有写路径，表示在当前目录下；\n\n3）-signedjar Last_gongs_sign.apk Before_sign.apk 表示给 Before_sign.apk文件签名，签名后的文件名称为Last_gongs_sign.apk；\n\n4）最后面的android.keystore 表示证书的别名\n![](http://7q5c2h.com1.z0.glb.clouddn.com/2014-12-05-jarsigner-0.png)\n \n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-1.png)\n如上图所示，签名成功。\n \n## 验证签名\n\n使用命令验证已经签名的apk文件：jarsigner –verify Last_gongs_sign.apk\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-2.png)\n\n如果想要知道更多明细, 你可以尝试如下几个命令:\n\n    jarsigner -verify -verbose Last_gongs_sign.apk                                            \n或\n    jarsigner -verify -verbose -certs Last_gongs_sign.apk  \n    \n上面的命令, 使用 -certs 参数, 将显示 \"CN=\" 行, 描述是谁签名了APK文件.\n\n原文：[http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/](http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/jarsigner.md","raw":"title: jarsigner签名安卓Apk程序\ndate: 2014-12-05 \ncategories: [Android]\ntags: [Android,jarsigner]\n---\n\n发布过Android应用的朋友们应该都知道，Android APK的发布是必需要签名，本签名指南演示如何使用WoSign安卓代码签名证书，签名安卓 .apk 程序。\n\n## 签名证书\n\n制作证书，证书文件名：android.keystore, 证书别名：android.keystore\n \n## 安装签名环境JDK包\n\n签名工具包可以在JDK官方网站下载：[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)，也可以直接点击这里下载JDK工具包(请使用JDK 1.6版本)。\n文件包下载安装完成后，然后就开始进入jdk的签名根目录，具体如下：\n\n开始-> 运行-> cmd->cd 到您安装的jdk的目录这里我是D:\\Program Files\\Java\\jdk1.6.0\\bin\n \n<!-- more -->\n## 签名\n\n在D:\\Program Files\\Java\\jdk1.6.0\\bin 找到工具 jarsigner.exe，并把证书android.keystore 文件放入当前目录。签名命令：\n\njarsigner -verbose -keystore android.keystore -signedjar Last_gongs_sign.apk Before_sign.apk android.keystore\n\n1）jarsigner是工具名称，-verbose表示将签名过程中的详细信息打印出来，显示在dos窗口中；\n\n2）-keystore android.keystore 表示签名所使用的数字证书和所在位置，这里没有写路径，表示在当前目录下；\n\n3）-signedjar Last_gongs_sign.apk Before_sign.apk 表示给 Before_sign.apk文件签名，签名后的文件名称为Last_gongs_sign.apk；\n\n4）最后面的android.keystore 表示证书的别名\n![](http://7q5c2h.com1.z0.glb.clouddn.com/2014-12-05-jarsigner-0.png)\n \n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-1.png)\n如上图所示，签名成功。\n \n## 验证签名\n\n使用命令验证已经签名的apk文件：jarsigner –verify Last_gongs_sign.apk\n\n![](http://wuxiaolong.qiniudn.com/2014-12-05-jarsigner-2.png)\n\n如果想要知道更多明细, 你可以尝试如下几个命令:\n\n    jarsigner -verify -verbose Last_gongs_sign.apk                                            \n或\n    jarsigner -verify -verbose -certs Last_gongs_sign.apk  \n    \n上面的命令, 使用 -certs 参数, 将显示 \"CN=\" 行, 描述是谁签名了APK文件.\n\n原文：[http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/](http://feelyou.info/trying_to_manually_sign_android_package_with_jarsigner_but_install_failed/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"jarsigner","published":1,"updated":"2016-03-17T00:44:06.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr950050zspkbbnre529","thumbnailImageUrl":null},{"title":"Android如何防止apk程序被反编译","date":"2013-07-22T16:00:00.000Z","_content":"作为Android应用开发者，不得不面对一个尴尬的局面，就是自己辛辛苦苦开发的应用可以被别人很轻易的就反编译出来。Google似乎也发现了这个问题，从SDK2.3开始我们可以看到在android-sdk-windows\\tools\\下面多了一个proguard文件夹。proguard是一个java代码混淆的工具，通过proguard，别人即使反编译你的apk包，也只会看到一些让人很难看懂的代码，从而达到保护代码的作用。新建项目都会有以下两个文件：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-1.png)\nproject.properties文件“proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt”注释放开。\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-2.png)\n然后在proguard-project.txt文件里做混淆，例如：\n\n<!-- more -->\n\n```java\n\t#---------------Begin: support-v4包 ----------\n\t-libraryjars   libs/android-support-v4.jar\n\t-dontwarn android.support.v4.**  #打包时忽略以下类的警告  \n\t-keep class android.support.v4.** { *; }  \n\t-keep interface android.support.v4.app.** { *; }  \n\t-keep public class * extends android.support.v4.**  \n\t#-keep public class * extends android.app.Fragment\n\t#---------------End: support-v4包 ----------\n```\n以上是混淆了support-v4包，如果混淆其他的jar，举一反三。\n比如A.jar，它的包名是a.b.c.d。然后做混淆就如下：\n\n\n```java \n\t-keep class a.b.c.d.** { *; }  \n```\n正常的编译签名后就可以防止代码被反编译了。反编译经过代码混淆的apk得到的代码应该类似于下面的效果，是很难看懂的：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-3.png)\n","source":"_posts/how-to-prevent-the-APK-program-by-decompile.md","raw":"title: Android如何防止apk程序被反编译\ncategories: [Android]\ntags: [Android]\ndate: 2013-07-23\n---\n作为Android应用开发者，不得不面对一个尴尬的局面，就是自己辛辛苦苦开发的应用可以被别人很轻易的就反编译出来。Google似乎也发现了这个问题，从SDK2.3开始我们可以看到在android-sdk-windows\\tools\\下面多了一个proguard文件夹。proguard是一个java代码混淆的工具，通过proguard，别人即使反编译你的apk包，也只会看到一些让人很难看懂的代码，从而达到保护代码的作用。新建项目都会有以下两个文件：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-1.png)\nproject.properties文件“proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt”注释放开。\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-2.png)\n然后在proguard-project.txt文件里做混淆，例如：\n\n<!-- more -->\n\n```java\n\t#---------------Begin: support-v4包 ----------\n\t-libraryjars   libs/android-support-v4.jar\n\t-dontwarn android.support.v4.**  #打包时忽略以下类的警告  \n\t-keep class android.support.v4.** { *; }  \n\t-keep interface android.support.v4.app.** { *; }  \n\t-keep public class * extends android.support.v4.**  \n\t#-keep public class * extends android.app.Fragment\n\t#---------------End: support-v4包 ----------\n```\n以上是混淆了support-v4包，如果混淆其他的jar，举一反三。\n比如A.jar，它的包名是a.b.c.d。然后做混淆就如下：\n\n\n```java \n\t-keep class a.b.c.d.** { *; }  \n```\n正常的编译签名后就可以防止代码被反编译了。反编译经过代码混淆的apk得到的代码应该类似于下面的效果，是很难看懂的：\n![](http://wuxiaolong.qiniudn.com/2013-07-18-mobile-phone-information-acquisition-3.png)\n","slug":"how-to-prevent-the-APK-program-by-decompile","published":1,"updated":"2016-03-17T00:44:06.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr970055zspkyomn1cja","thumbnailImageUrl":null},{"title":"Hello hexo","date":"2015-07-29T23:56:29.000Z","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n<!--more-->\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-hexo.md","raw":"title: Hello hexo\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: hexo #文章标签，多于一项时用这种格式\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n<!--more-->\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-hexo","published":1,"updated":"2016-03-17T00:44:06.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr980058zspkr53bgot7","thumbnailImageUrl":null},{"title":"Gradle for Android（三）多渠道打包、配置签名信息","date":"2016-04-01T06:11:14.000Z","_content":"# 系列博客\n> [Gradle for Android（一）基本配置、依赖管理](http://wuxiaolong.me/2016/03/30/gradle4android1/)\n> [Gradle for Android（二）全局设置、自定义BuildConfig、混淆](http://wuxiaolong.me/2016/03/31/gradle4android2/)\n\n# 多渠道打包\n国内有太多Android App市场，每次发版几十个渠道包。还好Android Gradle给我们提供了productFlavors，我们可以对生成的APK包进行定制。\n```\n    productFlavors {//多渠道打包\n        xiaomi {\n            applicationId 'com.wuxiaolong.gradle4android1'\n        }\n\n        googlepaly {\n            applicationId 'com.wuxiaolong.gradle4android2'\n        }\n    }\n```\n<!--more-->\n\n## 定制生成的apk文件名\n```\n   applicationVariants.all { variant ->\n                if (variant.buildType.name.equals('release')) {\n                    variant.outputs.each { output ->\n                        def outputFile = output.outputFile\n                        if (outputFile != null && outputFile.name.endsWith('.apk')) {\n                            def fileName = \"gradle4android_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk\"\n                            output.outputFile = new File(outputFile.parent, fileName)\n                        }\n                    }\n                }\n            }\n```\n输出apk名字：gradle4android_v1.0_2016-03-23_xiaomi.apk\n\n## 占位符\n多渠道打包，还会遇到一个问题，比如友盟统计的渠道号，Gradle处理办法：manifestPlaceholders，它允许我们动态替换我们在AndroidManifest文件里定义的占位符。\nAndroidManifest.xml：\n```\n <meta-data\n            android:name=\"UMENG_CHANNEL\"\n            android:value=\"${UMENG_CHANNEL_VALUE}\" />\n```\n如下，${UMENG_CHANNEL_VALUE}占位符会被dev替换。\n```\n defaultConfig {\n        manifestPlaceholders = [UMENG_CHANNEL_VALUE: 'dev']\n    }\n```\n如果渠道太多，不用这样一个个去写，可以循环：\n```\n productFlavors.all { flavor ->\n                manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\",name)\n            }\n```\n## 渠道打包完整代码：\n```\nandroid {\n//省略部分代码\n     buildTypes {\n        release {\n            minifyEnabled false//是否启动混淆\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            applicationVariants.all { variant ->\n                if (variant.buildType.name.equals('release')) {\n                    variant.outputs.each { output ->\n                        def outputFile = output.outputFile\n                        if (outputFile != null && outputFile.name.endsWith('.apk')) {\n                            def fileName = \"gradleTest_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk\"\n                            output.outputFile = new File(outputFile.parent, fileName)\n                        }\n                    }\n                }\n            }\n            //针对很多渠道\n            //productFlavors.all { flavor ->\n            //   manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\",name)\n            // }\n        }\n    }\n    productFlavors {//多渠道打包，命令行打包：gradlew assembleRelease\n        xiaomi {\n            applicationId 'com.wuxiaolong.gradle4android1'\n            manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\", 'xiaomi')\n        }\n        googlepaly {\n            applicationId 'com.wuxiaolong.gradle4android2'\n            manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\", 'googlepaly')\n        }\n    }\n //省略部分代码\n\ndef releaseTime() {\n    return new Date().format(\"yyyy-MM-dd\", TimeZone.getTimeZone(\"UTC\"))\n}\n```\n\n# 配置签名信息\n## Android Studio设置默认的签名文件\n新浪微博SSO登录，微信分享这些都需要签名打包，才能看到效果，设置默认签名文件为自己的签名jks，这样就不需要打包了直接运行起来就是正式的签名。\n在android.signingConfigs{}下定义一个或者多个签名信息，然后在buildTypes{}配置使用即可。\n在app目录下添加你的.jks，然后app的build.gradle文件中的增加以下内容：\n第一种：\n```\nandroid {  \n    signingConfigs {  \n        debug {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \t\n}\n```\nbuildTypes没有配置，也是直接取得debug，是不是不配置默认取得是debug呢？\n第二种：\n```\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        debug {\n            signingConfig signingConfigs.release\n        }        \n    }\n}\n```\n# 签名打包\n## 通过Android Studio签名\n这里不细说了。\n## 通过命令行签名\n如上那样配置签名信息\n```\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.release\n        }      \n    }\n}\n```\n先\"build-clean Project\"，然后Terminal输入命名行：\n```\ngradlew assembleRelease\n```\n打印信息如下：\n```\nE:\\AndroidStudioProjects\\Gradle4Android>gradlew assembleRelease\n:app:preBuild UP-TO-DATE                                                             \n:app:preReleaseBuild UP-TO-DATE     \n:app:checkReleaseManifest                  \n//省略部分               \n:app:packageRelease                 \n:app:zipalignRelease                 \n:app:assembleRelease                 \n               \nBUILD SUCCESSFUL\n```\nOK，打包成功的apk路径如：E:\\AndroidStudioProjects\\Gradle4Android\\app\\build\\outputs\\apk\\app-release.apk\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android3.png)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n\n# 附录\n[Gradle for Android 第一篇( 从 Gradle 和 AS 开始 )](https://segmentfault.com/a/1190000004229002)\n[使用Gradle管理你的Android Studio工程](http://www.flysnow.org/2015/03/30/manage-your-android-project-with-gradle.html)\n\n","source":"_posts/gradle4android3.md","raw":"title: Gradle for Android（三）多渠道打包、配置签名信息\ndate: 2016-04-01 14:11:14\ntags: Gradle \ncategory: Gradle \n---\n# 系列博客\n> [Gradle for Android（一）基本配置、依赖管理](http://wuxiaolong.me/2016/03/30/gradle4android1/)\n> [Gradle for Android（二）全局设置、自定义BuildConfig、混淆](http://wuxiaolong.me/2016/03/31/gradle4android2/)\n\n# 多渠道打包\n国内有太多Android App市场，每次发版几十个渠道包。还好Android Gradle给我们提供了productFlavors，我们可以对生成的APK包进行定制。\n```\n    productFlavors {//多渠道打包\n        xiaomi {\n            applicationId 'com.wuxiaolong.gradle4android1'\n        }\n\n        googlepaly {\n            applicationId 'com.wuxiaolong.gradle4android2'\n        }\n    }\n```\n<!--more-->\n\n## 定制生成的apk文件名\n```\n   applicationVariants.all { variant ->\n                if (variant.buildType.name.equals('release')) {\n                    variant.outputs.each { output ->\n                        def outputFile = output.outputFile\n                        if (outputFile != null && outputFile.name.endsWith('.apk')) {\n                            def fileName = \"gradle4android_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk\"\n                            output.outputFile = new File(outputFile.parent, fileName)\n                        }\n                    }\n                }\n            }\n```\n输出apk名字：gradle4android_v1.0_2016-03-23_xiaomi.apk\n\n## 占位符\n多渠道打包，还会遇到一个问题，比如友盟统计的渠道号，Gradle处理办法：manifestPlaceholders，它允许我们动态替换我们在AndroidManifest文件里定义的占位符。\nAndroidManifest.xml：\n```\n <meta-data\n            android:name=\"UMENG_CHANNEL\"\n            android:value=\"${UMENG_CHANNEL_VALUE}\" />\n```\n如下，${UMENG_CHANNEL_VALUE}占位符会被dev替换。\n```\n defaultConfig {\n        manifestPlaceholders = [UMENG_CHANNEL_VALUE: 'dev']\n    }\n```\n如果渠道太多，不用这样一个个去写，可以循环：\n```\n productFlavors.all { flavor ->\n                manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\",name)\n            }\n```\n## 渠道打包完整代码：\n```\nandroid {\n//省略部分代码\n     buildTypes {\n        release {\n            minifyEnabled false//是否启动混淆\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            applicationVariants.all { variant ->\n                if (variant.buildType.name.equals('release')) {\n                    variant.outputs.each { output ->\n                        def outputFile = output.outputFile\n                        if (outputFile != null && outputFile.name.endsWith('.apk')) {\n                            def fileName = \"gradleTest_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk\"\n                            output.outputFile = new File(outputFile.parent, fileName)\n                        }\n                    }\n                }\n            }\n            //针对很多渠道\n            //productFlavors.all { flavor ->\n            //   manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\",name)\n            // }\n        }\n    }\n    productFlavors {//多渠道打包，命令行打包：gradlew assembleRelease\n        xiaomi {\n            applicationId 'com.wuxiaolong.gradle4android1'\n            manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\", 'xiaomi')\n        }\n        googlepaly {\n            applicationId 'com.wuxiaolong.gradle4android2'\n            manifestPlaceholders.put(\"UMENG_CHANNEL_VALUE\", 'googlepaly')\n        }\n    }\n //省略部分代码\n\ndef releaseTime() {\n    return new Date().format(\"yyyy-MM-dd\", TimeZone.getTimeZone(\"UTC\"))\n}\n```\n\n# 配置签名信息\n## Android Studio设置默认的签名文件\n新浪微博SSO登录，微信分享这些都需要签名打包，才能看到效果，设置默认签名文件为自己的签名jks，这样就不需要打包了直接运行起来就是正式的签名。\n在android.signingConfigs{}下定义一个或者多个签名信息，然后在buildTypes{}配置使用即可。\n在app目录下添加你的.jks，然后app的build.gradle文件中的增加以下内容：\n第一种：\n```\nandroid {  \n    signingConfigs {  \n        debug {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \t\n}\n```\nbuildTypes没有配置，也是直接取得debug，是不是不配置默认取得是debug呢？\n第二种：\n```\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        debug {\n            signingConfig signingConfigs.release\n        }        \n    }\n}\n```\n# 签名打包\n## 通过Android Studio签名\n这里不细说了。\n## 通过命令行签名\n如上那样配置签名信息\n```\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"WuXiaolong.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.release\n        }      \n    }\n}\n```\n先\"build-clean Project\"，然后Terminal输入命名行：\n```\ngradlew assembleRelease\n```\n打印信息如下：\n```\nE:\\AndroidStudioProjects\\Gradle4Android>gradlew assembleRelease\n:app:preBuild UP-TO-DATE                                                             \n:app:preReleaseBuild UP-TO-DATE     \n:app:checkReleaseManifest                  \n//省略部分               \n:app:packageRelease                 \n:app:zipalignRelease                 \n:app:assembleRelease                 \n               \nBUILD SUCCESSFUL\n```\nOK，打包成功的apk路径如：E:\\AndroidStudioProjects\\Gradle4Android\\app\\build\\outputs\\apk\\app-release.apk\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android3.png)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n\n# 附录\n[Gradle for Android 第一篇( 从 Gradle 和 AS 开始 )](https://segmentfault.com/a/1190000004229002)\n[使用Gradle管理你的Android Studio工程](http://www.flysnow.org/2015/03/30/manage-your-android-project-with-gradle.html)\n\n","slug":"gradle4android3","published":1,"updated":"2016-04-01T01:11:59.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9b005dzspktmowvocy","thumbnailImageUrl":null},{"title":"Gradle for Android（二）全局设置、自定义BuildConfig、混淆","date":"2016-03-31T06:11:14.000Z","_content":"# 系列博客\n> [Gradle for Android（一）基本配置、依赖管理](http://wuxiaolong.me/2016/03/30/gradle4android1/)\n> [Gradle for Android（三）多渠道打包、配置签名信息](http://wuxiaolong.me/2016/04/01/gradle4android3/)\n\n# 全局设置\n如果有很多项目，可以设置全局来统一管理版本号或依赖库，根目录下build.gradle下：\n```\next {\n    compileSdkVersion = 23\n    buildToolsVersion = \"23.0.2\"\n    minSdkVersion = 14\n    targetSdkVersion = 23\n}\n```\n<!--more-->\n\napp/build.gradle\n```\nandroid {\n    compileSdkVersion rootProject.ext.compileSdkVersion\n    buildToolsVersion rootProject.ext.buildToolsVersion\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion rootProject.ext.minSdkVersion\n        targetSdkVersion rootProject.ext.targetSdkVersion\n        versionCode 1\n        versionName \"1.0\"\n    }\n```\n可以在根目录下建个config.gradle，然后只需在根目录下build.gradle最顶部加上下面一行代码，然后同步下，意思就是所有的子项目或者所有的modules都可以从这个配置文件里读取内容。\n```\napply from: \"config.gradle\"\n```\nconfig.gradle\n```\next {\n\n    android = [\n            compileSdkVersion: 23,\n            buildToolsVersion: \"23.0.2\",\n            minSdkVersion    : 14,\n            targetSdkVersion : 22,\n\n    ]\n\n    dependencies = [\n            appcompatV7': 'com.android.support:appcompat-v7:23.2.1',\n            design      : 'com.android.support:design:23.2.1'\n\n    ]\n}\n\n```\napp/build.gradle\n```\nandroid {\n    compileSdkVersion rootProject.ext.android.compileSdkVersion\n    buildToolsVersion rootProject.ext.buildToolsVersion\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion rootProject.ext.android.minSdkVersion\n        targetSdkVersion rootProject.ext.android.targetSdkVersion\n        versionCode 1\n        versionName \"1.0\"\n    }\n  \n...\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile rootProject.ext.dependencies.appcompatV7\n    compile rootProject.ext.dependencies.design\n}\n```\n\n\n# 自定义BuildConfig\n实际开发中服务器可能有正式环境和测试环境，gradle可以通过buildConfigField来配置。\n```\n defaultConfig {\n        buildConfigField 'String','API_SERVER_URL','\"http://wuxiaolong.me/\"'\n    }\n```\nbuildConfigField 一共有3个参数，第一个是数据类型，和Java的类型是对等的；第二个参数是常量名，这里是API_SERVER_URL；第三个参数就是你要配置的值。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android2.png)\n如图路径下就有个常量API_SERVER_URL，如何在代码取得这个常量值：\n```\n  Log.d(\"wxl\", \"API_SERVER_URL=\" + BuildConfig.API_SERVER_URL);\n```\n# 启用proguard混淆\n一般release发布版本是需要启用混淆的，这样别人反编译之后就很难分析你的代码，而我们自己开发调试的时候是不需要混淆的，所以debug不启用混淆。对release启用混淆的配置如下：\n```\nandroid {\n\n    buildTypes {\n        release {\n            minifyEnabled true//是否启动混淆\n\t\t\tshrinkResources true //是否移除无用资源文件，shrinkResources依赖于minifyEnabled，必须和minifyEnabled一起用\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n   }\n}\n```\nminifyEnabled为true表示启用混淆，proguardFile是混淆使用的配置文件，这里是module根目录下的proguard-rules.pro文件\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n","source":"_posts/gradle4android2.md","raw":"title: Gradle for Android（二）全局设置、自定义BuildConfig、混淆\ndate: 2016-03-31 14:11:14\ntags: Gradle \ncategory: Gradle \n---\n# 系列博客\n> [Gradle for Android（一）基本配置、依赖管理](http://wuxiaolong.me/2016/03/30/gradle4android1/)\n> [Gradle for Android（三）多渠道打包、配置签名信息](http://wuxiaolong.me/2016/04/01/gradle4android3/)\n\n# 全局设置\n如果有很多项目，可以设置全局来统一管理版本号或依赖库，根目录下build.gradle下：\n```\next {\n    compileSdkVersion = 23\n    buildToolsVersion = \"23.0.2\"\n    minSdkVersion = 14\n    targetSdkVersion = 23\n}\n```\n<!--more-->\n\napp/build.gradle\n```\nandroid {\n    compileSdkVersion rootProject.ext.compileSdkVersion\n    buildToolsVersion rootProject.ext.buildToolsVersion\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion rootProject.ext.minSdkVersion\n        targetSdkVersion rootProject.ext.targetSdkVersion\n        versionCode 1\n        versionName \"1.0\"\n    }\n```\n可以在根目录下建个config.gradle，然后只需在根目录下build.gradle最顶部加上下面一行代码，然后同步下，意思就是所有的子项目或者所有的modules都可以从这个配置文件里读取内容。\n```\napply from: \"config.gradle\"\n```\nconfig.gradle\n```\next {\n\n    android = [\n            compileSdkVersion: 23,\n            buildToolsVersion: \"23.0.2\",\n            minSdkVersion    : 14,\n            targetSdkVersion : 22,\n\n    ]\n\n    dependencies = [\n            appcompatV7': 'com.android.support:appcompat-v7:23.2.1',\n            design      : 'com.android.support:design:23.2.1'\n\n    ]\n}\n\n```\napp/build.gradle\n```\nandroid {\n    compileSdkVersion rootProject.ext.android.compileSdkVersion\n    buildToolsVersion rootProject.ext.buildToolsVersion\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion rootProject.ext.android.minSdkVersion\n        targetSdkVersion rootProject.ext.android.targetSdkVersion\n        versionCode 1\n        versionName \"1.0\"\n    }\n  \n...\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile rootProject.ext.dependencies.appcompatV7\n    compile rootProject.ext.dependencies.design\n}\n```\n\n\n# 自定义BuildConfig\n实际开发中服务器可能有正式环境和测试环境，gradle可以通过buildConfigField来配置。\n```\n defaultConfig {\n        buildConfigField 'String','API_SERVER_URL','\"http://wuxiaolong.me/\"'\n    }\n```\nbuildConfigField 一共有3个参数，第一个是数据类型，和Java的类型是对等的；第二个参数是常量名，这里是API_SERVER_URL；第三个参数就是你要配置的值。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android2.png)\n如图路径下就有个常量API_SERVER_URL，如何在代码取得这个常量值：\n```\n  Log.d(\"wxl\", \"API_SERVER_URL=\" + BuildConfig.API_SERVER_URL);\n```\n# 启用proguard混淆\n一般release发布版本是需要启用混淆的，这样别人反编译之后就很难分析你的代码，而我们自己开发调试的时候是不需要混淆的，所以debug不启用混淆。对release启用混淆的配置如下：\n```\nandroid {\n\n    buildTypes {\n        release {\n            minifyEnabled true//是否启动混淆\n\t\t\tshrinkResources true //是否移除无用资源文件，shrinkResources依赖于minifyEnabled，必须和minifyEnabled一起用\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n   }\n}\n```\nminifyEnabled为true表示启用混淆，proguardFile是混淆使用的配置文件，这里是module根目录下的proguard-rules.pro文件\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n","slug":"gradle4android2","published":1,"updated":"2016-05-20T08:03:51.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9d005izspkhvu91k7l","thumbnailImageUrl":null},{"title":"Gradle for Android（一）基本配置、依赖管理","date":"2016-03-30T06:11:14.000Z","_content":"> Gradle是一种基于Groovy的动态DSL，而Groovy语言是一种基于jvm的动态语言。这里只分享实际开发中会用到的场景，您不需要去学习Groovy语言，知道Java的您是很容易阅读Groovy语言的。\n> 系列博客涉及的知识点有：Gradle基本配置、依赖管理、全局设置、自定义BuildConfig、混淆、多渠道打包、配置签名信息、单元测试，是不是迫不及待了啊，快来学习学习。\n\n# 基本配置\n新建项目，目录结构如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android1.png)\n<!--more-->\n## app/build.gradle\n初始化的Gradle配置：\n```\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.2\"\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.2.1'\n    compile 'com.android.support:design:23.2.1'\n}\n```\n\n```\napply plugin: ‘com.android.application’，表示该module是一个app module，应用了com.android.application插件，如果是一个android library，那么这里写apply plugin: ‘com.android.library’\n\ncompileSdkVersion：基于哪个SDK编译，这里是API LEVEL\n\nbuildToolsVersion：基于哪个构建工具版本进行构建的。\n\ndefaultConfig：默认配置，如果没有其他的配置覆盖，就会使用这里的。\napplicationId：配置包名的\nversionCode：版本号\nversionName：版本名称\n\nbuildTypes是构建类型，常用的有release和debug两种，可以在这里面启用混淆，启用zipAlign以及配置签名信息等。\n\ndependencies：不属于Android专有的配置了，它定义了该module需要依赖的jar，aar，jcenter库信息。\n```\n## gradle-wrapper.properties\n声明了gradle的目录与下载路径以及当前项目使用的gradle版本，这些默认的路径我们一般不会更改的\n```\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.8-all.zip\n\n```\n\n## 根目录的build.gradle\n定义在这个工程下的所有模块的公共属性\n```\nbuildscript {\n    repositories {\n        jcenter()//使用jcenter库\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'// 依赖android提供的1.5.0的gradle build\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n//为所有的工程的repositories配置为jcenters\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\n```\n\n## setting.gradle\n包含哪些模块，比如有app和library：\n```\ninclude ':app',':library'\n```\n\n# 依赖管理\n## 本地依赖\n### jar\n默认情况下，新建的Android项目会有一个lib文件夹\n```\ndependencies {\n       compile fileTree(dir: 'libs', include: ['*.jar'])//即添加所有在libs文件夹中的jar\n       //compile files('libs/WuXiaolong.jar')//不需要这样一个个去写了\n}\n```\n### so包\n用c或者c++写的library会被叫做so包，Android插件默认情况下支持native包，你需要把.so文件放在对应的文件夹中\n```\napp\n   ├── AndroidManifest.xml\n   └── jniLibs\n       ├── armeabi\n       │   └── WuXiaolong.so\n       ├── armeabi-v7a\n       │   └── WuXiaolong.so\n       ├── mips\n       │   └── WuXiaolong.so\n       └── x86\n           └── WuXiaolong.so\n```\n### aar文件\nlibrary库输出文件是.aar文件，包含了Android 资源文件，在library工程build/output/aar/下\n\n直接依赖library库\n```\ndependencies {\n       compile project(':library名字')\n       compile project(':libraries:library名字')//多个library，libraries是文件夹名字\n  }\n```\n\n依赖.aar文件\n创建一个aars文件夹，然后把.aar文件拷贝到该文件夹里面，然后添加该文件夹作为依赖库：\napp/bulid.gradle\n```\nrepositories {\n    flatDir {\n        dirs 'aars' \n    }\n}\ndependencies {\n       compile(name:'libraryname', ext:'aar')\n}\n```\n注意：如果你的library依赖了第三方库，须app再次依赖。\n\n## 远程仓库\n```\ndependencies {\n\t\tcompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n}\n```\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n\n# 系列博客\n[Gradle for Android（二）全局设置、自定义BuildConfig、混淆](http://wuxiaolong.me/2016/03/31/gradle4android2/)\n[Gradle for Android（三）多渠道打包、配置签名信息](http://wuxiaolong.me/2016/04/01/gradle4android3/)\n\n\n\n","source":"_posts/gradle4android1.md","raw":"title: Gradle for Android（一）基本配置、依赖管理\ndate: 2016-03-30 14:11:14\ntags: Gradle \ncategory: Gradle \n---\n> Gradle是一种基于Groovy的动态DSL，而Groovy语言是一种基于jvm的动态语言。这里只分享实际开发中会用到的场景，您不需要去学习Groovy语言，知道Java的您是很容易阅读Groovy语言的。\n> 系列博客涉及的知识点有：Gradle基本配置、依赖管理、全局设置、自定义BuildConfig、混淆、多渠道打包、配置签名信息、单元测试，是不是迫不及待了啊，快来学习学习。\n\n# 基本配置\n新建项目，目录结构如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/gradle4android1.png)\n<!--more-->\n## app/build.gradle\n初始化的Gradle配置：\n```\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.2\"\n\n    defaultConfig {\n        applicationId \"com.wuxiaolong.gradle4android\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.2.1'\n    compile 'com.android.support:design:23.2.1'\n}\n```\n\n```\napply plugin: ‘com.android.application’，表示该module是一个app module，应用了com.android.application插件，如果是一个android library，那么这里写apply plugin: ‘com.android.library’\n\ncompileSdkVersion：基于哪个SDK编译，这里是API LEVEL\n\nbuildToolsVersion：基于哪个构建工具版本进行构建的。\n\ndefaultConfig：默认配置，如果没有其他的配置覆盖，就会使用这里的。\napplicationId：配置包名的\nversionCode：版本号\nversionName：版本名称\n\nbuildTypes是构建类型，常用的有release和debug两种，可以在这里面启用混淆，启用zipAlign以及配置签名信息等。\n\ndependencies：不属于Android专有的配置了，它定义了该module需要依赖的jar，aar，jcenter库信息。\n```\n## gradle-wrapper.properties\n声明了gradle的目录与下载路径以及当前项目使用的gradle版本，这些默认的路径我们一般不会更改的\n```\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.8-all.zip\n\n```\n\n## 根目录的build.gradle\n定义在这个工程下的所有模块的公共属性\n```\nbuildscript {\n    repositories {\n        jcenter()//使用jcenter库\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'// 依赖android提供的1.5.0的gradle build\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n//为所有的工程的repositories配置为jcenters\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\n```\n\n## setting.gradle\n包含哪些模块，比如有app和library：\n```\ninclude ':app',':library'\n```\n\n# 依赖管理\n## 本地依赖\n### jar\n默认情况下，新建的Android项目会有一个lib文件夹\n```\ndependencies {\n       compile fileTree(dir: 'libs', include: ['*.jar'])//即添加所有在libs文件夹中的jar\n       //compile files('libs/WuXiaolong.jar')//不需要这样一个个去写了\n}\n```\n### so包\n用c或者c++写的library会被叫做so包，Android插件默认情况下支持native包，你需要把.so文件放在对应的文件夹中\n```\napp\n   ├── AndroidManifest.xml\n   └── jniLibs\n       ├── armeabi\n       │   └── WuXiaolong.so\n       ├── armeabi-v7a\n       │   └── WuXiaolong.so\n       ├── mips\n       │   └── WuXiaolong.so\n       └── x86\n           └── WuXiaolong.so\n```\n### aar文件\nlibrary库输出文件是.aar文件，包含了Android 资源文件，在library工程build/output/aar/下\n\n直接依赖library库\n```\ndependencies {\n       compile project(':library名字')\n       compile project(':libraries:library名字')//多个library，libraries是文件夹名字\n  }\n```\n\n依赖.aar文件\n创建一个aars文件夹，然后把.aar文件拷贝到该文件夹里面，然后添加该文件夹作为依赖库：\napp/bulid.gradle\n```\nrepositories {\n    flatDir {\n        dirs 'aars' \n    }\n}\ndependencies {\n       compile(name:'libraryname', ext:'aar')\n}\n```\n注意：如果你的library依赖了第三方库，须app再次依赖。\n\n## 远程仓库\n```\ndependencies {\n\t\tcompile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.4'\n}\n```\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 完整配置\n[https://github.com/WuXiaolong/Gradle4Android](https://github.com/WuXiaolong/Gradle4Android)\n\n# 系列博客\n[Gradle for Android（二）全局设置、自定义BuildConfig、混淆](http://wuxiaolong.me/2016/03/31/gradle4android2/)\n[Gradle for Android（三）多渠道打包、配置签名信息](http://wuxiaolong.me/2016/04/01/gradle4android3/)\n\n\n\n","slug":"gradle4android1","published":1,"updated":"2016-04-22T02:19:39.994Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9f005lzspkorwk7uzb","thumbnailImageUrl":null},{"title":"Android build.gradle文件","date":"2015-11-10T07:03:23.000Z","_content":"app/build.gradle\n\nAndroid Studio使用Gradle 编译运行Android工程，工程的每个模块以及整个工程都有一个build.gradle文件。通常你只需要关注模块的build.gradle文件，该文件存放编译依赖设置，包括defaultConfig设置：\n<!--more-->\n## compiledSdkVersion \n应用将要编译的目标Android版本，此处默认为你的SDK已安装的最新Android版本，我们仍然可以使用较老的版本编译项目，但把该值设为最新版本，可以使用Android的最新特性，同时可以在最新的设备上优化应用来提高用户体验。\n\n## buildToolsVersion\n使用什么版本的编译工具。使用SDK Manager安装多个版本的编译工具。\n\n## applicationId \n创建新项目时指定的包名。\n\n## minSdkVersion \n\n创建项目时指定的最低SDK版本，是新建应用支持的最低SDK版本。\n\n## targetSdkVersion \n表示你测试过你的应用支持的最高Android版本(同样用API level表示)，当Android发布最新版本后，我们应该在最新版本的Android测试自己的应用同时更新target sdk到Android最新版本，以便充分利用Android新版本的特性。举例来说，设置这个值为11或更高，当你的应用运行在Android3.0或更高的系统上时，系统会为你的应用使用新的默认主题（Holo主题），并且当运行在大屏幕的设备上时会禁用屏幕兼容模式（screen compatibility mode），因为支持了 API level 11就暗示了支持大屏幕。\n\n## 附录\n[http://www.jianshu.com/p/02cb9a0eb2a0](Android Studio中Gradle使用详解)","source":"_posts/gradle.md","raw":"title: Android build.gradle文件\ndate: 2015-11-10 15:03:23\ntags: gradle\ncategory: Android\n---\napp/build.gradle\n\nAndroid Studio使用Gradle 编译运行Android工程，工程的每个模块以及整个工程都有一个build.gradle文件。通常你只需要关注模块的build.gradle文件，该文件存放编译依赖设置，包括defaultConfig设置：\n<!--more-->\n## compiledSdkVersion \n应用将要编译的目标Android版本，此处默认为你的SDK已安装的最新Android版本，我们仍然可以使用较老的版本编译项目，但把该值设为最新版本，可以使用Android的最新特性，同时可以在最新的设备上优化应用来提高用户体验。\n\n## buildToolsVersion\n使用什么版本的编译工具。使用SDK Manager安装多个版本的编译工具。\n\n## applicationId \n创建新项目时指定的包名。\n\n## minSdkVersion \n\n创建项目时指定的最低SDK版本，是新建应用支持的最低SDK版本。\n\n## targetSdkVersion \n表示你测试过你的应用支持的最高Android版本(同样用API level表示)，当Android发布最新版本后，我们应该在最新版本的Android测试自己的应用同时更新target sdk到Android最新版本，以便充分利用Android新版本的特性。举例来说，设置这个值为11或更高，当你的应用运行在Android3.0或更高的系统上时，系统会为你的应用使用新的默认主题（Holo主题），并且当运行在大屏幕的设备上时会禁用屏幕兼容模式（screen compatibility mode），因为支持了 API level 11就暗示了支持大屏幕。\n\n## 附录\n[http://www.jianshu.com/p/02cb9a0eb2a0](Android Studio中Gradle使用详解)","slug":"gradle","published":1,"updated":"2016-03-17T00:44:06.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9h005ozspk1gty0ao6","thumbnailImageUrl":null},{"title":"购房车","date":"2013-06-15T14:06:39.000Z","_content":"> 进入公司来，这是我独立完成的第一个项目，主要功能就是“抄”搜房房，基本和人家差不多，对于我这个新手来，难度还是相当的大的，分一期和二期。做完这个项目，我学习了很多，进步也是可见的。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche1.jpg)\n\n<!--more-->\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche4.jpg)\n\n# 应用介绍 \n购房车是国内首款专业房产团购应用。在上海地区已成功运行并帮助众多家庭实现轻松置业，同时正以上海为中心不断向外拓展，囊括当地98%以上的新房信息，为购房者提供团购报名、楼盘最新动态、看房车信息、新房独家优惠、各种购房工具等。可爱图标、动感滑屏、贴心设置都使得团购房屋变成了一件快乐的事。搭购房车——轻轻松松买好房！\n\n# 下载地址\n[360手机助手](http://zhushou.360.cn/detail/index/soft_id/714302?recrefer=SE_D_%E8%B4%AD%E6%88%BF%E8%BD%A6#prev)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。","source":"_posts/goufangche.md","raw":"title: 购房车\ndate: 2013-06-15 22:06:39\ntags: goufangche\ncategory: App\n---\n> 进入公司来，这是我独立完成的第一个项目，主要功能就是“抄”搜房房，基本和人家差不多，对于我这个新手来，难度还是相当的大的，分一期和二期。做完这个项目，我学习了很多，进步也是可见的。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche1.jpg)\n\n<!--more-->\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/goufangche4.jpg)\n\n# 应用介绍 \n购房车是国内首款专业房产团购应用。在上海地区已成功运行并帮助众多家庭实现轻松置业，同时正以上海为中心不断向外拓展，囊括当地98%以上的新房信息，为购房者提供团购报名、楼盘最新动态、看房车信息、新房独家优惠、各种购房工具等。可爱图标、动感滑屏、贴心设置都使得团购房屋变成了一件快乐的事。搭购房车——轻轻松松买好房！\n\n# 下载地址\n[360手机助手](http://zhushou.360.cn/detail/index/soft_id/714302?recrefer=SE_D_%E8%B4%AD%E6%88%BF%E8%BD%A6#prev)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。","slug":"goufangche","published":1,"updated":"2016-03-17T00:44:06.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9i005szspk9whzo9re","thumbnailImageUrl":null},{"title":"不花钱上谷歌","date":"2015-01-11T16:00:00.000Z","_content":"\n>\n不会谷歌的程序猿不是好的程序猿!\n>\n\n![](http://wuxiaolong.qiniudn.com/2015-01-12-google.png)\n在大天朝，上谷歌竟成了一项\"技能\"，当然花钱另说，我当然不会花钱啦，之前goagent翻墙已经不好谷歌了，现在的方案是更改HOSTS（C:\\Windows\\System32\\drivers\\etc），复制以下Hosts文件替换即可：\n\n[http://pan.baidu.com/s/1o63Hqrg](http://pan.baidu.com/s/1o63Hqrg)\n\n<!-- more -->\n\n如果此HOSTS不好用，请留言告知，我将及时更新，祝大家工作愉快，生活愉快！\n\n附：\n[不用翻墙，即可访问google等网站hosts，及修改方法](http://levi.cg.am/archives/3553)\n","source":"_posts/google.md","raw":"title: 不花钱上谷歌\ndate: 2015-01-12 \ncategories: [Life]\ntags: [Life]\n---\n\n>\n不会谷歌的程序猿不是好的程序猿!\n>\n\n![](http://wuxiaolong.qiniudn.com/2015-01-12-google.png)\n在大天朝，上谷歌竟成了一项\"技能\"，当然花钱另说，我当然不会花钱啦，之前goagent翻墙已经不好谷歌了，现在的方案是更改HOSTS（C:\\Windows\\System32\\drivers\\etc），复制以下Hosts文件替换即可：\n\n[http://pan.baidu.com/s/1o63Hqrg](http://pan.baidu.com/s/1o63Hqrg)\n\n<!-- more -->\n\n如果此HOSTS不好用，请留言告知，我将及时更新，祝大家工作愉快，生活愉快！\n\n附：\n[不用翻墙，即可访问google等网站hosts，及修改方法](http://levi.cg.am/archives/3553)\n","slug":"google","published":1,"updated":"2016-03-17T00:44:06.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9o005wzspkudmpi0fk","thumbnailImageUrl":null},{"title":"Android Fragment使用Toolbar","date":"2015-12-21T02:34:49.000Z","_content":"# Activity使用Toolbar\n一般在Activity里使用Toolbar如下：\ntoolbar.xml\n```js \n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v7.widget.Toolbar xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"?attr/colorPrimary\"\n    android:minHeight=\"?actionBarSize\">\n</android.support.v7.widget.Toolbar>\n```\nxml调用：\n```js\n<include\n     layout=\"@layout/toolbar\" />\n```\n<!--more-->\nActivity一般写到基类：\n```java\n public Toolbar initToolbar(int title) {\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n          }\n        return toolbar;\n    }\n\n    public Toolbar initToolbar(CharSequence title) {\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n        return toolbar;\n    }\n```\nActivity调用：\n```java\n  initToolbar(\"标题\");\n```\n# Fragment使用Toolbar\n现在项目需求，每个title不一样，就不能像以上一样写一个toolbar，放在最外层。问题来了，Fragment如何使用Toolbar？像上面一样写吗？No，Fragment没有setSupportActionBar，于是Google，得到：\n```java\npublic class BaseFragment extends Fragment {\n\n    Activity mActivity;\n    AppCompatActivity mAppCompatActivity;\n\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mActivity = getActivity();\n        \n    }\n\n    public Toolbar initToolbar(int title) {\n        AppCompatActivity mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(R.id.toolbar);\n        mAppCompatActivity.setSupportActionBar(toolbar);       \n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);            \n        }\n        return toolbar;\n    }\n\n    public Toolbar initToolbar(CharSequence title) {\n        mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(toolbarId);\n        mAppCompatActivity.setSupportActionBar(R.id.toolbar);\n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);\n        }\n        return toolbar;\n    }\n}\n```\n这样就解决Fragment使用Toolbar，却抛出了一个问题：Fragment标题错乱。\n\n# Fragment标题错乱\n当出来这个问题时，我恍然大悟，Fragment里的Toolbar findViewById取的都是MainActivity，include不能共用一个ID，应该加个ID区别一下：\n```js\n<include\n        android:id=\"@+id/program_toolbar\"\n        layout=\"@layout/toolbar\" />\n```\nBaseFragment 做相应的修改：\n```java\n public Toolbar initToolbar(int toolbarId, int title) {\n        AppCompatActivity mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(toolbarId);\n        mAppCompatActivity.setSupportActionBar(toolbar);\n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);\n            actionBar.setDisplayShowTitleEnabled(false);\n        }\n        return toolbar;\n    }\n```\n好的，这样标题就没有错乱了，然后又来了新的“需求”：Fragment如何让Toolbar菜单生效？\n\n# Fragment让Toolbar菜单生效\n在activity中：\n```java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.main, menu);\n    return super.onCreateOptionsMenu(menu);\n}\n```\n在Fragment中：\n```java\n@Override\npublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        inflater.inflate(R.menu.pictrue_list, menu);\n        super.onCreateOptionsMenu(menu,inflater);\n}\n```\n两者不同的地方在于:\n1、一个有返回值（boolean类型），一个没有返回值。\n2、Fragment中onCreateOptionsMenu的参数多了一个MenuInflater\n\n想让Fragment中的onCreateOptionsMenu生效必须先调用setHasOptionsMenu方法，否则Toolbar没有菜单。\n```java\npublic class BaseFragment extends Fragment {\n    Activity mActivity;   \n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mActivity = getActivity();\n        setHasOptionsMenu(true);\n    }\n }\n```\nsetHasOptionsMenu方法源码如下：\n```java\n  /**\n     * Report that this fragment would like to participate in populating\n     * the options menu by receiving a call to {@link #onCreateOptionsMenu}\n     * and related methods.\n     *\n     * @param hasMenu If true, the fragment has menu items to contribute.\n     */\n    public void setHasOptionsMenu(boolean hasMenu) {\n        if (mHasMenu != hasMenu) {\n            mHasMenu = hasMenu;\n            if (isAdded() && !isHidden()) {\n                mHost.onSupportInvalidateOptionsMenu();\n            }\n        }\n    }\n```\n\n# 单独使用而不与ActionBar进行关联\n多谢@XZoomEye提示，对于Fragment使用Toolbar思维被局限了，在[Android Toolbar](http://wuxiaolong.me/2015/11/10/toolbar/)一文中介绍了单独使用而不与ActionBar进行关联，直接使用ToolBar的inflateMenu方法，Menu的事件也是独立的，需要通过设置ToolBar的setOnMenuItemClickListener来实现，这样做就不会发生标题错乱。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/fragmentToolbar.md","raw":"title: Android Fragment使用Toolbar\ndate: 2015-12-21 10:34:49\ntags: [Fragment,Toolbar]\ncategory: Android \n---\n# Activity使用Toolbar\n一般在Activity里使用Toolbar如下：\ntoolbar.xml\n```js \n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v7.widget.Toolbar xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"?attr/colorPrimary\"\n    android:minHeight=\"?actionBarSize\">\n</android.support.v7.widget.Toolbar>\n```\nxml调用：\n```js\n<include\n     layout=\"@layout/toolbar\" />\n```\n<!--more-->\nActivity一般写到基类：\n```java\n public Toolbar initToolbar(int title) {\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n          }\n        return toolbar;\n    }\n\n    public Toolbar initToolbar(CharSequence title) {\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        ActionBar actionBar = getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(true);\n        }\n        return toolbar;\n    }\n```\nActivity调用：\n```java\n  initToolbar(\"标题\");\n```\n# Fragment使用Toolbar\n现在项目需求，每个title不一样，就不能像以上一样写一个toolbar，放在最外层。问题来了，Fragment如何使用Toolbar？像上面一样写吗？No，Fragment没有setSupportActionBar，于是Google，得到：\n```java\npublic class BaseFragment extends Fragment {\n\n    Activity mActivity;\n    AppCompatActivity mAppCompatActivity;\n\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mActivity = getActivity();\n        \n    }\n\n    public Toolbar initToolbar(int title) {\n        AppCompatActivity mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(R.id.toolbar);\n        mAppCompatActivity.setSupportActionBar(toolbar);       \n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);            \n        }\n        return toolbar;\n    }\n\n    public Toolbar initToolbar(CharSequence title) {\n        mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(toolbarId);\n        mAppCompatActivity.setSupportActionBar(R.id.toolbar);\n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);\n        }\n        return toolbar;\n    }\n}\n```\n这样就解决Fragment使用Toolbar，却抛出了一个问题：Fragment标题错乱。\n\n# Fragment标题错乱\n当出来这个问题时，我恍然大悟，Fragment里的Toolbar findViewById取的都是MainActivity，include不能共用一个ID，应该加个ID区别一下：\n```js\n<include\n        android:id=\"@+id/program_toolbar\"\n        layout=\"@layout/toolbar\" />\n```\nBaseFragment 做相应的修改：\n```java\n public Toolbar initToolbar(int toolbarId, int title) {\n        AppCompatActivity mAppCompatActivity = (AppCompatActivity) mActivity;\n        Toolbar toolbar = (Toolbar) mAppCompatActivity.findViewById(toolbarId);\n        mAppCompatActivity.setSupportActionBar(toolbar);\n        ActionBar actionBar = mAppCompatActivity.getSupportActionBar();\n        if (actionBar != null) {\n            actionBar.setDisplayHomeAsUpEnabled(false);\n            actionBar.setDisplayShowTitleEnabled(false);\n        }\n        return toolbar;\n    }\n```\n好的，这样标题就没有错乱了，然后又来了新的“需求”：Fragment如何让Toolbar菜单生效？\n\n# Fragment让Toolbar菜单生效\n在activity中：\n```java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.main, menu);\n    return super.onCreateOptionsMenu(menu);\n}\n```\n在Fragment中：\n```java\n@Override\npublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        inflater.inflate(R.menu.pictrue_list, menu);\n        super.onCreateOptionsMenu(menu,inflater);\n}\n```\n两者不同的地方在于:\n1、一个有返回值（boolean类型），一个没有返回值。\n2、Fragment中onCreateOptionsMenu的参数多了一个MenuInflater\n\n想让Fragment中的onCreateOptionsMenu生效必须先调用setHasOptionsMenu方法，否则Toolbar没有菜单。\n```java\npublic class BaseFragment extends Fragment {\n    Activity mActivity;   \n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mActivity = getActivity();\n        setHasOptionsMenu(true);\n    }\n }\n```\nsetHasOptionsMenu方法源码如下：\n```java\n  /**\n     * Report that this fragment would like to participate in populating\n     * the options menu by receiving a call to {@link #onCreateOptionsMenu}\n     * and related methods.\n     *\n     * @param hasMenu If true, the fragment has menu items to contribute.\n     */\n    public void setHasOptionsMenu(boolean hasMenu) {\n        if (mHasMenu != hasMenu) {\n            mHasMenu = hasMenu;\n            if (isAdded() && !isHidden()) {\n                mHost.onSupportInvalidateOptionsMenu();\n            }\n        }\n    }\n```\n\n# 单独使用而不与ActionBar进行关联\n多谢@XZoomEye提示，对于Fragment使用Toolbar思维被局限了，在[Android Toolbar](http://wuxiaolong.me/2015/11/10/toolbar/)一文中介绍了单独使用而不与ActionBar进行关联，直接使用ToolBar的inflateMenu方法，Menu的事件也是独立的，需要通过设置ToolBar的setOnMenuItemClickListener来实现，这样做就不会发生标题错乱。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"fragmentToolbar","published":1,"updated":"2016-03-25T07:34:02.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9q005zzspks3gpiyqh","thumbnailImageUrl":null},{"title":"Fragment里更改Activity菜单","date":"2015-06-09T16:00:00.000Z","_content":"\n```java\n  @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        //来指出fragment愿意添加item到选项菜单(否则, fragment将接收不到对 onCreateOptionsMenu()的调用)\n        setHasOptionsMenu(true);\n    }\n    \n @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        getActivity().getMenuInflater().inflate(R.menu.menu_yuqing_search, menu);\n    }\n```\n","source":"_posts/fragmentMenu.md","raw":"title: Fragment里更改Activity菜单\ndate: 2015-06-10\ncategories: [Android]\ntags: [Android,Fragment]\n---\n\n```java\n  @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        //来指出fragment愿意添加item到选项菜单(否则, fragment将接收不到对 onCreateOptionsMenu()的调用)\n        setHasOptionsMenu(true);\n    }\n    \n @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        getActivity().getMenuInflater().inflate(R.menu.menu_yuqing_search, menu);\n    }\n```\n","slug":"fragmentMenu","published":1,"updated":"2016-03-17T00:44:06.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9t0063zspk266qoxnq","thumbnailImageUrl":null},{"title":"Android之emulator ERROR x86 emulation currently requires hardware acceleration","date":"2015-12-03T02:45:38.000Z","_content":"一直在用Genymotion模拟器，话说Android studio将出2.0，速度提速50倍，这是要断Genymotion的路，于是我在家里电脑运行AVD，却报以下错误：\nemulator: ERROR: x86 emulation currently requires hardware acceleration!\nPlease ensure Intel HAXM is properly installed and usable.\nCPU acceleration status: HAX kernel module is not installed!\n\n<!--more-->\n\n## 解决方案\n折腾一番，解决方案如下：\n\n* BIOS\n开机按F2或delete键，进入BIOS，CPU选项，选择Intel Virtualization Technology为enable \n![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError1.gif)\n\n* 下载Intel x86 Emulator Accelerator  \n 打开 SDK Manager，如果没有Intel x86 Emulator Accelerator ，下载\n  ![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError3.png)\n  \n* 安装intelhaxm-android.exe\n你的Android sdk安装目录\\extras\\intel\\Hardware_Accelerated_Execution_Manager\n ![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError2.png)\n\n* 重启\n重启Android Studio，再试下AVD\n\n## 附录\n1. [Emulator: ERROR: x86 emulation currently requires hardware acceleration](http://stackoverflow.com/questions/29136173/emulator-error-x86-emulation-currently-requires-hardware-acceleration)\n2. [Error in launching AVD](http://stackoverflow.com/questions/26355645/error-in-launching-avd)\n\n","source":"_posts/emulatorError.md","raw":"title: Android之emulator ERROR x86 emulation currently requires hardware acceleration\ndate: 2015-12-03 10:45:38\ntags: emulator\ncategory: Android\n---\n一直在用Genymotion模拟器，话说Android studio将出2.0，速度提速50倍，这是要断Genymotion的路，于是我在家里电脑运行AVD，却报以下错误：\nemulator: ERROR: x86 emulation currently requires hardware acceleration!\nPlease ensure Intel HAXM is properly installed and usable.\nCPU acceleration status: HAX kernel module is not installed!\n\n<!--more-->\n\n## 解决方案\n折腾一番，解决方案如下：\n\n* BIOS\n开机按F2或delete键，进入BIOS，CPU选项，选择Intel Virtualization Technology为enable \n![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError1.gif)\n\n* 下载Intel x86 Emulator Accelerator  \n 打开 SDK Manager，如果没有Intel x86 Emulator Accelerator ，下载\n  ![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError3.png)\n  \n* 安装intelhaxm-android.exe\n你的Android sdk安装目录\\extras\\intel\\Hardware_Accelerated_Execution_Manager\n ![](http://7q5c2h.com1.z0.glb.clouddn.com/emulatorError2.png)\n\n* 重启\n重启Android Studio，再试下AVD\n\n## 附录\n1. [Emulator: ERROR: x86 emulation currently requires hardware acceleration](http://stackoverflow.com/questions/29136173/emulator-error-x86-emulation-currently-requires-hardware-acceleration)\n2. [Error in launching AVD](http://stackoverflow.com/questions/26355645/error-in-launching-avd)\n\n","slug":"emulatorError","published":1,"updated":"2016-03-17T00:44:06.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9v0067zspkxcq9pzxm","thumbnailImageUrl":null},{"title":"Eclipse中整合git","date":"2014-08-25T16:00:00.000Z","_content":"首先在github上面创建工程。\n\n在个人主页上点击Responsitories选项卡的New\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-1.png)\n\n填写一些信息，点Create respository\n\n<!-- more -->\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-2.png)\n\ngithub上的项目就创建好了。\n在Eclipse中创建一个工程。\n然后在工程上右击->Team->Share project->git->next.\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-3.png)\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-4.png)\n\n选择Use or create repository in parent folder of project->Create Repository，如下图，点finish。\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-5.png)\n\n执行完成之后项目文件夹下就会创建好一个.git的文件夹，仓库就创建好了。\n\n由于项目中的有一些文件没有必要上传，比如bin文件夹，需要在项目中设置好。\n\n展开对应的项目，有小箭头的表示需要上传到服务器的目录，在不想要上传的目录上右击，Team->Ignoe,该目录就会被忽略了。\n\n下面来commit代码到本机一下。\n\n项目上右击Team->commit。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-6.png)\n\n选中要commit的文件，点commit，完成之后，代码就上传到本地的服务器了。\n\n接下来把代码上传到github的服务器。\n\n命令行中进入到项目的文件夹，运行\ngit remote add origin https://github.com/WuXiaolong/ApkTest.git\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-7.png)\n再执行\ngit push -u origin master\n\n成功执行后就像这样：\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-8.png)\n查看github的项目主页，发现文件已经上传好。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-9.png)\n\n之后在Eclipse中修改好项目代码之后，commit，之后pull，为止代码冲突，然后项目上右击Team->push to Upstream就可以进行代码提交。\n\n\n上传到github上之后，团队中另外的成员可以通过Eclipse->File->Import->Project from Git->URI来提取工程。\n\n在团队开发中，通常在新的一天的开始工作之前，把最新的代码fecth下来。\n\n直接在项目想右击->Team->fetch\n再执行->Team->Merge.\n\n服务器上的新文件就会添加进来了。\n","source":"_posts/eclipse-git.md","raw":"title: Eclipse中整合git\ndate: 2014-08-26 \ncategories: [Life]\ntags: [Life,git]\n---\n首先在github上面创建工程。\n\n在个人主页上点击Responsitories选项卡的New\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-1.png)\n\n填写一些信息，点Create respository\n\n<!-- more -->\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-2.png)\n\ngithub上的项目就创建好了。\n在Eclipse中创建一个工程。\n然后在工程上右击->Team->Share project->git->next.\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-3.png)\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-4.png)\n\n选择Use or create repository in parent folder of project->Create Repository，如下图，点finish。\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-5.png)\n\n执行完成之后项目文件夹下就会创建好一个.git的文件夹，仓库就创建好了。\n\n由于项目中的有一些文件没有必要上传，比如bin文件夹，需要在项目中设置好。\n\n展开对应的项目，有小箭头的表示需要上传到服务器的目录，在不想要上传的目录上右击，Team->Ignoe,该目录就会被忽略了。\n\n下面来commit代码到本机一下。\n\n项目上右击Team->commit。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-6.png)\n\n选中要commit的文件，点commit，完成之后，代码就上传到本地的服务器了。\n\n接下来把代码上传到github的服务器。\n\n命令行中进入到项目的文件夹，运行\ngit remote add origin https://github.com/WuXiaolong/ApkTest.git\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-7.png)\n再执行\ngit push -u origin master\n\n成功执行后就像这样：\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-8.png)\n查看github的项目主页，发现文件已经上传好。\n\n\n\n![](http://wuxiaolong.qiniudn.com/2014-08-26-eclipse-git-9.png)\n\n之后在Eclipse中修改好项目代码之后，commit，之后pull，为止代码冲突，然后项目上右击Team->push to Upstream就可以进行代码提交。\n\n\n上传到github上之后，团队中另外的成员可以通过Eclipse->File->Import->Project from Git->URI来提取工程。\n\n在团队开发中，通常在新的一天的开始工作之前，把最新的代码fecth下来。\n\n直接在项目想右击->Team->fetch\n再执行->Team->Merge.\n\n服务器上的新文件就会添加进来了。\n","slug":"eclipse-git","published":1,"updated":"2016-03-17T00:44:06.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekr9y006bzspk7msmqmbb","thumbnailImageUrl":null},{"title":"大湿说","date":"2015-11-09T00:55:32.000Z","_content":"![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuo_meizu.png)\n魅族应用市场累计下载`4.4万+`，我可没有做过什么推广哦，精品APP，值得下载！\n<!--more-->\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoScreenshots.gif)\n\n## 应用介绍\n大湿说没有复杂的算法，不猜你喜欢，只与您分享简单搞笑的视频，一切只为娱乐。 \n★ 内容 \n大湿说整合时下最热的视频专辑。囊括飞碟说、Big笑工坊、飞碟一分钟、唐唐脱口秀、轻松时刻、万万没想到、暴走大事件、TED等。 \n★ 寄语 \n在这里您可以最短的时间收集灵感，寻找有趣的东西。享受大湿说给您带来的简单生活和乐趣。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n[小米应用市场](http://app.mi.com/detail/65621)\n\n## 花絮\n这两天微博上看到了老湿的一个视频（[http://v.youku.com/v_show/id_XOTE3Nzk0MjQw.html](http://v.youku.com/v_show/id_XOTE3Nzk0MjQw.html)），也是好久没有看到他的视频了。继而想为他做个APP（老湿说）。\n其实这个想法，我个人就能实现，可是联想到之前有个算成功但又失败的经历。那是我刚工作之初（12年），我想业余时间练手视频类APP是如何做的。于是选取了优酷的飞碟说（[http://i.youku.com/u/UNTMxOTkwNjA0](http://i.youku.com/u/UNTMxOTkwNjA0)），一开始限于我技术水平，还只是简单的网页播放，后来用Android的视频控件播放，这个APP也是越做越好。\n\n再之后我不满足飞碟说这一家视频，于是就把优酷比较火的视频专辑（比如暴走大事件、万万没想到等）都加入了这个APP里来。对于用户，只要在我这一家APP，就能看到优酷上很火的搞笑视频，岂不是很爽。这个APP火了一段时间。我个人却一直很低调，担心这个APP火了，飞碟说他们官方找我麻烦。\n\n果不然，去年，飞碟说他们想（那会儿他们很强大了，都有了他们的自己的网站了，可以不依赖优酷平台）做个他们的自己APP，结果发现安卓市场上“飞碟说”这个名字被我给站了。\n\n他们联系到了我，提供了各种资质，说“飞碟说”他们早已注册，他们正在开发他们自己的产品“飞碟说”，让我从安卓市场下架“飞碟说”应用。\n\n无奈我被迫把飞碟说改了个其他的名字，业余时间我也不想继续维护这个项目了，毕竟个人开发者有诸多限制，个人开发者是没这些视频的版权的，某些市场干脆直接不让个人开发者上线视频类应用。\n \n不过我还是利用业余时间完成了这个APP的更名，并使用最新的Android Design Support Library，完成后准备就叫老湿说，老婆大人说上次叫飞碟说，这次又是借老湿名声，专门做擦边球的事，殊不知，没有名声哪来用户下载，我没有时间和精力来打造属于自己的品牌。第二天我咨询了我群里，叫啥名合适，结果“FUCK碟”、“亚麻碟”、“笑你妈逼”、“东京热”、“无码视频”，都出来了，都是淫才啊，在他们调侃中我想到了大师（湿）说，多谢群里的小伙伴们。APP精选精彩搞笑的视频，不乏大师制作。大师（湿）说很是贴切，真是棒极了。","source":"_posts/dashishuo.md","raw":"title: 大湿说\ndate: 2015-11-09 08:55:32\ntags: [Android,Life,App]\ncategory: App\n---\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuo_meizu.png)\n魅族应用市场累计下载`4.4万+`，我可没有做过什么推广哦，精品APP，值得下载！\n<!--more-->\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoScreenshots.gif)\n\n## 应用介绍\n大湿说没有复杂的算法，不猜你喜欢，只与您分享简单搞笑的视频，一切只为娱乐。 \n★ 内容 \n大湿说整合时下最热的视频专辑。囊括飞碟说、Big笑工坊、飞碟一分钟、唐唐脱口秀、轻松时刻、万万没想到、暴走大事件、TED等。 \n★ 寄语 \n在这里您可以最短的时间收集灵感，寻找有趣的东西。享受大湿说给您带来的简单生活和乐趣。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n[小米应用市场](http://app.mi.com/detail/65621)\n\n## 花絮\n这两天微博上看到了老湿的一个视频（[http://v.youku.com/v_show/id_XOTE3Nzk0MjQw.html](http://v.youku.com/v_show/id_XOTE3Nzk0MjQw.html)），也是好久没有看到他的视频了。继而想为他做个APP（老湿说）。\n其实这个想法，我个人就能实现，可是联想到之前有个算成功但又失败的经历。那是我刚工作之初（12年），我想业余时间练手视频类APP是如何做的。于是选取了优酷的飞碟说（[http://i.youku.com/u/UNTMxOTkwNjA0](http://i.youku.com/u/UNTMxOTkwNjA0)），一开始限于我技术水平，还只是简单的网页播放，后来用Android的视频控件播放，这个APP也是越做越好。\n\n再之后我不满足飞碟说这一家视频，于是就把优酷比较火的视频专辑（比如暴走大事件、万万没想到等）都加入了这个APP里来。对于用户，只要在我这一家APP，就能看到优酷上很火的搞笑视频，岂不是很爽。这个APP火了一段时间。我个人却一直很低调，担心这个APP火了，飞碟说他们官方找我麻烦。\n\n果不然，去年，飞碟说他们想（那会儿他们很强大了，都有了他们的自己的网站了，可以不依赖优酷平台）做个他们的自己APP，结果发现安卓市场上“飞碟说”这个名字被我给站了。\n\n他们联系到了我，提供了各种资质，说“飞碟说”他们早已注册，他们正在开发他们自己的产品“飞碟说”，让我从安卓市场下架“飞碟说”应用。\n\n无奈我被迫把飞碟说改了个其他的名字，业余时间我也不想继续维护这个项目了，毕竟个人开发者有诸多限制，个人开发者是没这些视频的版权的，某些市场干脆直接不让个人开发者上线视频类应用。\n \n不过我还是利用业余时间完成了这个APP的更名，并使用最新的Android Design Support Library，完成后准备就叫老湿说，老婆大人说上次叫飞碟说，这次又是借老湿名声，专门做擦边球的事，殊不知，没有名声哪来用户下载，我没有时间和精力来打造属于自己的品牌。第二天我咨询了我群里，叫啥名合适，结果“FUCK碟”、“亚麻碟”、“笑你妈逼”、“东京热”、“无码视频”，都出来了，都是淫才啊，在他们调侃中我想到了大师（湿）说，多谢群里的小伙伴们。APP精选精彩搞笑的视频，不乏大师制作。大师（湿）说很是贴切，真是棒极了。","slug":"dashishuo","published":1,"updated":"2016-03-17T00:44:06.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra0006gzspkqn697rja","thumbnailImageUrl":null},{"title":"Eclipse ADT的Custom debug keystore所需证书规格","date":"2014-06-29T16:00:00.000Z","_content":"自定义的调试证书，也需要保证和默认证书一样的密码，别名alias和别名密码。\n\n默认证书信息如下：\n\n```js\nKeystore name: “debug.keystore”\nKeystore password: “android”\nKey alias: “androiddebugkey”\nKey password: “android”\n```\n\n遵循这个规则就可以用自定义调试证书了。\n\nAndroid apk签名方法\nhttp://hi.baidu.com/40406_jun/item/8b936db4a9a0e79b19469782\n","source":"_posts/custom-debug-keystore.md","raw":"title: Eclipse ADT的Custom debug keystore所需证书规格\ndate: 2014-06-30 \ncategories: [Android]\ntags: [Android]\n---\n自定义的调试证书，也需要保证和默认证书一样的密码，别名alias和别名密码。\n\n默认证书信息如下：\n\n```js\nKeystore name: “debug.keystore”\nKeystore password: “android”\nKey alias: “androiddebugkey”\nKey password: “android”\n```\n\n遵循这个规则就可以用自定义调试证书了。\n\nAndroid apk签名方法\nhttp://hi.baidu.com/40406_jun/item/8b936db4a9a0e79b19469782\n","slug":"custom-debug-keystore","published":1,"updated":"2016-03-17T00:44:06.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra2006mzspks9xrjz4u","thumbnailImageUrl":null},{"title":"Android通讯录索引效果","date":"2015-08-29T03:04:21.000Z","_content":"> 通讯录索引效果，网上很多了，我这里做个记录。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/contactIndex.png)\n<!--more-->\n# SideBar\n此类自定义索引的字母\n```java\npublic class SideBar extends View {\n\n    // 触摸事件\n    private OnTouchingLetterChangedListener onTouchingLetterChangedListener;\n    // 26个字母\n    public static String[] A_Z = {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\",\n            \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\",\n            \"W\", \"X\", \"Y\", \"Z\", \"#\"};\n    private int choose = -1;// 选中\n    private Paint paint = new Paint();\n\n    private TextView mTextDialog;\n\n    /**\n     * 为SideBar设置显示字母的TextView\n     *\n     * @param mTextDialog\n     */\n    public void setTextView(TextView mTextDialog) {\n        this.mTextDialog = mTextDialog;\n    }\n\n\n    public SideBar(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public SideBar(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public SideBar(Context context) {\n        super(context);\n    }\n\n    /**\n     * 重写这个方法\n     */\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        // 获取焦点改变背景颜色.\n        int height = getHeight();// 获取对应高度\n        int width = getWidth(); // 获取对应宽度\n        int singleHeight = height / A_Z.length - 2;// 获取每一个字母的高度  (这里-2仅仅是为了好看而已)\n\n        for (int i = 0; i < A_Z.length; i++) {\n            paint.setColor(Color.rgb(33, 65, 98));  //设置字体颜色\n            paint.setTypeface(Typeface.DEFAULT_BOLD);  //设置字体\n            paint.setAntiAlias(true);  //设置抗锯齿\n            paint.setTextSize(30);  //设置字母字体大小\n            // 选中的状态\n            if (i == choose) {\n                paint.setColor(Color.parseColor(\"#3399ff\"));  //选中的字母改变颜色\n                paint.setFakeBoldText(true);  //设置字体为粗体\n            }\n            // x坐标等于中间-字符串宽度的一半.\n            float xPos = width / 2 - paint.measureText(A_Z[i]) / 2;\n            float yPos = singleHeight * i + singleHeight;\n            canvas.drawText(A_Z[i], xPos, yPos, paint);  //绘制所有的字母\n            paint.reset();// 重置画笔\n        }\n\n    }\n\n    @Override\n    public boolean dispatchTouchEvent(MotionEvent event) {\n        final int action = event.getAction();\n        final float y = event.getY();// 点击y坐标\n        final int oldChoose = choose;\n        final OnTouchingLetterChangedListener listener = onTouchingLetterChangedListener;\n        final int c = (int) (y / getHeight() * A_Z.length);// 点击y坐标所占总高度的比例*b数组的长度就等于点击b中的个数.\n\n        switch (action) {\n            case MotionEvent.ACTION_UP:\n                setBackgroundDrawable(new ColorDrawable(0x00000000));\n                choose = -1;//\n                invalidate();\n                if (mTextDialog != null) {\n                    mTextDialog.setVisibility(View.INVISIBLE);\n                }\n                break;\n\n            default:\n                setBackgroundResource(R.color.colorPrimary);\n                if (oldChoose != c) {  //判断选中字母是否发生改变\n                    if (c >= 0 && c < A_Z.length) {\n                        if (listener != null) {\n                            listener.onTouchingLetterChanged(A_Z[c]);\n                        }\n                        if (mTextDialog != null) {\n                            mTextDialog.setText(A_Z[c]);\n                            mTextDialog.setVisibility(View.VISIBLE);\n                        }\n\n                        choose = c;\n                        invalidate();\n                    }\n                }\n\n                break;\n        }\n        return true;\n    }\n\n    /**\n     * 向外公开的方法\n     *\n     * @param onTouchingLetterChangedListener\n     */\n    public void setOnTouchingLetterChangedListener(\n            OnTouchingLetterChangedListener onTouchingLetterChangedListener) {\n        this.onTouchingLetterChangedListener = onTouchingLetterChangedListener;\n    }\n\n    /**\n     * 接口\n     *\n     * @author coder\n     */\n    public interface OnTouchingLetterChangedListener {\n        public void onTouchingLetterChanged(String s);\n    }\n}\n```\n\n# xml调用\n```js\n <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/mRecyclerView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" />\n\n        <TextView\n            android:id=\"@+id/textDialog\"\n            android:layout_width=\"80dip\"\n            android:layout_height=\"80dip\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:textColor=\"#ffffffff\"\n            android:background=\"@color/colorPrimary\"\n            android:textSize=\"30.0dip\"\n            android:visibility=\"invisible\" />\n\n        <你的包名.SideBar\n            android:id=\"@+id/sidebar\"\n            android:layout_width=\"20dip\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentRight=\"true\" />\n\n    </RelativeLayout>\n```\n# ContactActivity\n```java\npublic class ContactActivity extends BaseActivity {\n    @Bind(R.id.mRecyclerView)\n    RecyclerView mRecyclerView;\n\n    @Bind(R.id.sidebar)\n    SideBar sidebar;\n    @Bind(R.id.textDialog)\n    TextView textDialog;\n    private List<PersonBean> data;\n    ContactAdapter mContactAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_contact);        \n        sidebar.setTextView(textDialog);\n        // 设置字母导航触摸监听\n        sidebar.setOnTouchingLetterChangedListener(new SideBar.OnTouchingLetterChangedListener() {\n\n            @Override\n            public void onTouchingLetterChanged(String s) {\n                // TODO Auto-generated method stub\n                // 该字母首次出现的位置\n                int position = mContactAdapter.getPositionForSelection(s.charAt(0));\n\n                if (position != -1) {\n                    mRecyclerView.getLayoutManager().scrollToPosition(position);\n                }\n            }\n        });\n        data = getData(getResources().getStringArray(R.array.listpersons));\n        // 数据在放在adapter之前需要排序\n        Collections.sort(data, new PinyinComparator());\n        for (int i = 0; i < data.size(); i++) {\n            Log.i(\"wxl\", \"Fpinyin=\" + data.get(i).getFirstPinYin());\n        }\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\n        linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);\n        mRecyclerView.setLayoutManager(linearLayoutManager);\n        mContactAdapter = new ContactAdapter(data);\n        mRecyclerView.setAdapter(mContactAdapter);\n    }\n\n    private List<PersonBean> getData(String[] data) {\n        List<PersonBean> listarray = new ArrayList<PersonBean>();\n        for (int i = 0; i < data.length; i++) {\n            String pinyin = PinyinUtils.getPingYin(data[i]);\n            String Fpinyin = pinyin.substring(0, 1).toUpperCase();\n\n            PersonBean person = new PersonBean();\n            person.setName(data[i]);\n            person.setPinYin(pinyin);\n            // 正则表达式，判断首字母是否是英文字母\n            if (Fpinyin.matches(\"[A-Z]\")) {\n                person.setFirstPinYin(Fpinyin);\n            } else {\n                person.setFirstPinYin(\"#\");\n            }\n\n            listarray.add(person);\n        }\n\n        return listarray;\n\n    }  \n   \n}\n```\n# persons.xml\n模拟数据\n```js \n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string-array name=\"listpersons\">\n        <item> 马云</item>\n        <item> 马化腾</item>\n        <item> 佩兰</item>\n        <item> 奥巴马</item>\n        <item> 普京</item>\n        <item> 金三胖</item>\n        <item> 暗影军团</item>\n        <item> 141特遣队</item>\n        <item> 冲锋号</item>\n        <item> +胜利号</item>\n        <item> 超级赛亚人</item>\n        <item> 金克拉</item>\n        <item> 亚古兽</item>\n        <item> 数码宝贝大冒险</item>\n        <item> 大胜归来</item>\n        <item> 道士下山</item>\n        <item> A利亚克</item>\n        <item> 胜利冲锋龙卷风</item>\n        <item> 走在冷风中</item>\n        <item> 外面的世界</item>\n        <item> 烦恼歌</item>\n        <item> 如果没有你</item>\n        <item> 四季歌</item>\n        <item> 南山南</item>\n        <item> +胜利号</item>\n        <item> 光能使者</item>\n        <item> 铁甲小宝</item>\n        <item> 皮卡丘</item>\n        <item> 奥特曼</item>\n        <item> 开普勒452b</item>\n        <item> 神舟20号</item>\n        <item> 屌炸天的结尾</item>\n    </string-array>\n</resources>\n\n```\n\n# PersonBean\n```java\npublic class PersonBean {\n\n    private String Name;\n    private String PinYin;\n    private String FirstPinYin;\n\n    public String getName() {\n        return Name;\n    }\n\n    public void setName(String name) {\n        Name = name;\n    }\n\n    public String getPinYin() {\n        return PinYin;\n    }\n\n    public void setPinYin(String pinYin) {\n        PinYin = pinYin;\n    }\n\n    public String getFirstPinYin() {\n        return FirstPinYin;\n    }\n\n    public void setFirstPinYin(String firstPinYin) {\n        FirstPinYin = firstPinYin;\n    }\n\n    public String toString() {\n        return \"姓名：\" + getName() + \"   拼音：\" + getPinYin() + \"    首字母：\"\n                + getFirstPinYin();\n\n    }\n}\n```\n# PinyinUtils\n这里需要pinyin4j包，下载地址：http://pinyin4j.sourceforge.net/\n```java\npublic class PinyinUtils {\n    /**\n     * 汉字转拼音\n     */\n    public static String getPingYin(String inputString) {\n        HanyuPinyinOutputFormat format = new HanyuPinyinOutputFormat();\n        format.setCaseType(HanyuPinyinCaseType.LOWERCASE);\n        format.setToneType(HanyuPinyinToneType.WITHOUT_TONE);\n        format.setVCharType(HanyuPinyinVCharType.WITH_V);\n\n        char[] input = inputString.trim().toCharArray();\n        String output = \"\";\n\n        try {\n            for (char curchar : input) {\n                if (java.lang.Character.toString(curchar).matches(\"[\\\\u4E00-\\\\u9FA5]+\")) {\n                    String[] temp = PinyinHelper.toHanyuPinyinStringArray(curchar, format);\n                    output += temp[0];\n                } else\n                    output += java.lang.Character.toString(curchar);\n            }\n        } catch (BadHanyuPinyinOutputFormatCombination e) {\n            e.printStackTrace();\n        }\n        return output;\n    }\n}\n```\n# PinyinComparator\n按照字母排序类\n```java\npublic class PinyinComparator implements Comparator<PersonBean> {\n\n    @Override\n    public int compare(PersonBean lhs, PersonBean rhs) {\n        return sort(lhs, rhs);\n    }\n\n    private int sort(PersonBean lhs, PersonBean rhs) {\n        // 获取ascii值\n        int lhs_ascii = lhs.getFirstPinYin().toUpperCase().charAt(0);\n        int rhs_ascii = rhs.getFirstPinYin().toUpperCase().charAt(0);\n        // 判断若不是字母，则排在字母之后\n        if (lhs_ascii < 65 || lhs_ascii > 90)\n            return 1;\n        else if (rhs_ascii < 65 || rhs_ascii > 90)\n            return -1;\n        else\n            return lhs.getPinYin().compareTo(rhs.getPinYin());\n    }\n}\n\n```\n# ContactAdapter\n```java\npublic class ContactAdapter extends RecyclerView.Adapter<ContactAdapter.ViewHolder> {\n    List<PersonBean> data;\n\n    public ContactAdapter(List<PersonBean> data) {\n        this.data = data;\n    }\n\n    class ViewHolder extends RecyclerView.ViewHolder {\n        TextView nickname;\n        TextView tag;\n\n        public ViewHolder(View itemView) {\n            super(itemView);\n            nickname = (TextView) itemView.findViewById(R.id.nickname);\n            tag = (TextView) itemView.findViewById(R.id.tag);\n        }\n    }\n\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = View.inflate(parent.getContext(), R.layout.contact_item, null);\n        return new ViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        PersonBean person = data.get(position);\n        // 获取首字母的assii值\n        int selection = person.getFirstPinYin().charAt(0);\n        // 通过首字母的assii值来判断是否显示字母\n        int positionForSelection = getPositionForSelection(selection);\n        if (position == positionForSelection) {// 相等说明需要显示字母\n            holder.tag.setVisibility(View.VISIBLE);\n            holder.tag.setText(person.getFirstPinYin());\n        } else {\n            holder.tag.setVisibility(View.GONE);\n\n        }\n        holder.nickname.setText(data.get(position).getName());\n    }\n\n    public int getPositionForSelection(int selection) {\n        for (int i = 0; i < data.size(); i++) {\n            String Fpinyin = data.get(i).getFirstPinYin();\n\n            char first = Fpinyin.toUpperCase().charAt(0);\n            if (first == selection) {\n                return i;\n            }\n        }\n        return -1;\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return data.size();\n    }\n}\n```\n## contact_item.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <!-- 这个TextView就是显示字母的 -->\n    <TextView\n        android:id=\"@+id/tag\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"20dp\"\n        android:background=\"#e6e6e6\"\n        android:gravity=\"center_vertical\"\n        android:paddingLeft=\"10dip\"\n        android:text=\"Z\"\n        android:visibility=\"visible\" />\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <View\n            android:id=\"@+id/view_lv_item_line\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0.5dip\"\n            android:layout_marginLeft=\"10dip\"\n            android:layout_marginRight=\"20dip\"\n            android:background=\"#174465\" />\n\n        <ImageView\n            android:id=\"@+id/iv_lv_item_head\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/view_lv_item_line\"\n            android:layout_marginLeft=\"5dp\"\n            android:src=\"@mipmap/ic_launcher\" />\n\n        <TextView\n            android:id=\"@+id/nickname\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerVertical=\"true\"\n            android:layout_marginLeft=\"5dip\"\n            android:layout_toRightOf=\"@id/iv_lv_item_head\"\n            android:text=\"周华健\" />\n    </RelativeLayout>\n\n</LinearLayout>\n```\n# 附录\n[Android 联系人字母排序（仿微信）](http://www.cnblogs.com/scetopcsa/p/4724308.html)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/contactIndex.md","raw":"title: Android通讯录索引效果\ndate: 2015-08-29 11:04:21\ntags: contact\ncategory: Android\n---\n> 通讯录索引效果，网上很多了，我这里做个记录。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/contactIndex.png)\n<!--more-->\n# SideBar\n此类自定义索引的字母\n```java\npublic class SideBar extends View {\n\n    // 触摸事件\n    private OnTouchingLetterChangedListener onTouchingLetterChangedListener;\n    // 26个字母\n    public static String[] A_Z = {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\",\n            \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\",\n            \"W\", \"X\", \"Y\", \"Z\", \"#\"};\n    private int choose = -1;// 选中\n    private Paint paint = new Paint();\n\n    private TextView mTextDialog;\n\n    /**\n     * 为SideBar设置显示字母的TextView\n     *\n     * @param mTextDialog\n     */\n    public void setTextView(TextView mTextDialog) {\n        this.mTextDialog = mTextDialog;\n    }\n\n\n    public SideBar(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n\n    public SideBar(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public SideBar(Context context) {\n        super(context);\n    }\n\n    /**\n     * 重写这个方法\n     */\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        // 获取焦点改变背景颜色.\n        int height = getHeight();// 获取对应高度\n        int width = getWidth(); // 获取对应宽度\n        int singleHeight = height / A_Z.length - 2;// 获取每一个字母的高度  (这里-2仅仅是为了好看而已)\n\n        for (int i = 0; i < A_Z.length; i++) {\n            paint.setColor(Color.rgb(33, 65, 98));  //设置字体颜色\n            paint.setTypeface(Typeface.DEFAULT_BOLD);  //设置字体\n            paint.setAntiAlias(true);  //设置抗锯齿\n            paint.setTextSize(30);  //设置字母字体大小\n            // 选中的状态\n            if (i == choose) {\n                paint.setColor(Color.parseColor(\"#3399ff\"));  //选中的字母改变颜色\n                paint.setFakeBoldText(true);  //设置字体为粗体\n            }\n            // x坐标等于中间-字符串宽度的一半.\n            float xPos = width / 2 - paint.measureText(A_Z[i]) / 2;\n            float yPos = singleHeight * i + singleHeight;\n            canvas.drawText(A_Z[i], xPos, yPos, paint);  //绘制所有的字母\n            paint.reset();// 重置画笔\n        }\n\n    }\n\n    @Override\n    public boolean dispatchTouchEvent(MotionEvent event) {\n        final int action = event.getAction();\n        final float y = event.getY();// 点击y坐标\n        final int oldChoose = choose;\n        final OnTouchingLetterChangedListener listener = onTouchingLetterChangedListener;\n        final int c = (int) (y / getHeight() * A_Z.length);// 点击y坐标所占总高度的比例*b数组的长度就等于点击b中的个数.\n\n        switch (action) {\n            case MotionEvent.ACTION_UP:\n                setBackgroundDrawable(new ColorDrawable(0x00000000));\n                choose = -1;//\n                invalidate();\n                if (mTextDialog != null) {\n                    mTextDialog.setVisibility(View.INVISIBLE);\n                }\n                break;\n\n            default:\n                setBackgroundResource(R.color.colorPrimary);\n                if (oldChoose != c) {  //判断选中字母是否发生改变\n                    if (c >= 0 && c < A_Z.length) {\n                        if (listener != null) {\n                            listener.onTouchingLetterChanged(A_Z[c]);\n                        }\n                        if (mTextDialog != null) {\n                            mTextDialog.setText(A_Z[c]);\n                            mTextDialog.setVisibility(View.VISIBLE);\n                        }\n\n                        choose = c;\n                        invalidate();\n                    }\n                }\n\n                break;\n        }\n        return true;\n    }\n\n    /**\n     * 向外公开的方法\n     *\n     * @param onTouchingLetterChangedListener\n     */\n    public void setOnTouchingLetterChangedListener(\n            OnTouchingLetterChangedListener onTouchingLetterChangedListener) {\n        this.onTouchingLetterChangedListener = onTouchingLetterChangedListener;\n    }\n\n    /**\n     * 接口\n     *\n     * @author coder\n     */\n    public interface OnTouchingLetterChangedListener {\n        public void onTouchingLetterChanged(String s);\n    }\n}\n```\n\n# xml调用\n```js\n <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/mRecyclerView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" />\n\n        <TextView\n            android:id=\"@+id/textDialog\"\n            android:layout_width=\"80dip\"\n            android:layout_height=\"80dip\"\n            android:layout_centerInParent=\"true\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:textColor=\"#ffffffff\"\n            android:background=\"@color/colorPrimary\"\n            android:textSize=\"30.0dip\"\n            android:visibility=\"invisible\" />\n\n        <你的包名.SideBar\n            android:id=\"@+id/sidebar\"\n            android:layout_width=\"20dip\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignParentRight=\"true\" />\n\n    </RelativeLayout>\n```\n# ContactActivity\n```java\npublic class ContactActivity extends BaseActivity {\n    @Bind(R.id.mRecyclerView)\n    RecyclerView mRecyclerView;\n\n    @Bind(R.id.sidebar)\n    SideBar sidebar;\n    @Bind(R.id.textDialog)\n    TextView textDialog;\n    private List<PersonBean> data;\n    ContactAdapter mContactAdapter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_contact);        \n        sidebar.setTextView(textDialog);\n        // 设置字母导航触摸监听\n        sidebar.setOnTouchingLetterChangedListener(new SideBar.OnTouchingLetterChangedListener() {\n\n            @Override\n            public void onTouchingLetterChanged(String s) {\n                // TODO Auto-generated method stub\n                // 该字母首次出现的位置\n                int position = mContactAdapter.getPositionForSelection(s.charAt(0));\n\n                if (position != -1) {\n                    mRecyclerView.getLayoutManager().scrollToPosition(position);\n                }\n            }\n        });\n        data = getData(getResources().getStringArray(R.array.listpersons));\n        // 数据在放在adapter之前需要排序\n        Collections.sort(data, new PinyinComparator());\n        for (int i = 0; i < data.size(); i++) {\n            Log.i(\"wxl\", \"Fpinyin=\" + data.get(i).getFirstPinYin());\n        }\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\n        linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);\n        mRecyclerView.setLayoutManager(linearLayoutManager);\n        mContactAdapter = new ContactAdapter(data);\n        mRecyclerView.setAdapter(mContactAdapter);\n    }\n\n    private List<PersonBean> getData(String[] data) {\n        List<PersonBean> listarray = new ArrayList<PersonBean>();\n        for (int i = 0; i < data.length; i++) {\n            String pinyin = PinyinUtils.getPingYin(data[i]);\n            String Fpinyin = pinyin.substring(0, 1).toUpperCase();\n\n            PersonBean person = new PersonBean();\n            person.setName(data[i]);\n            person.setPinYin(pinyin);\n            // 正则表达式，判断首字母是否是英文字母\n            if (Fpinyin.matches(\"[A-Z]\")) {\n                person.setFirstPinYin(Fpinyin);\n            } else {\n                person.setFirstPinYin(\"#\");\n            }\n\n            listarray.add(person);\n        }\n\n        return listarray;\n\n    }  \n   \n}\n```\n# persons.xml\n模拟数据\n```js \n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <string-array name=\"listpersons\">\n        <item> 马云</item>\n        <item> 马化腾</item>\n        <item> 佩兰</item>\n        <item> 奥巴马</item>\n        <item> 普京</item>\n        <item> 金三胖</item>\n        <item> 暗影军团</item>\n        <item> 141特遣队</item>\n        <item> 冲锋号</item>\n        <item> +胜利号</item>\n        <item> 超级赛亚人</item>\n        <item> 金克拉</item>\n        <item> 亚古兽</item>\n        <item> 数码宝贝大冒险</item>\n        <item> 大胜归来</item>\n        <item> 道士下山</item>\n        <item> A利亚克</item>\n        <item> 胜利冲锋龙卷风</item>\n        <item> 走在冷风中</item>\n        <item> 外面的世界</item>\n        <item> 烦恼歌</item>\n        <item> 如果没有你</item>\n        <item> 四季歌</item>\n        <item> 南山南</item>\n        <item> +胜利号</item>\n        <item> 光能使者</item>\n        <item> 铁甲小宝</item>\n        <item> 皮卡丘</item>\n        <item> 奥特曼</item>\n        <item> 开普勒452b</item>\n        <item> 神舟20号</item>\n        <item> 屌炸天的结尾</item>\n    </string-array>\n</resources>\n\n```\n\n# PersonBean\n```java\npublic class PersonBean {\n\n    private String Name;\n    private String PinYin;\n    private String FirstPinYin;\n\n    public String getName() {\n        return Name;\n    }\n\n    public void setName(String name) {\n        Name = name;\n    }\n\n    public String getPinYin() {\n        return PinYin;\n    }\n\n    public void setPinYin(String pinYin) {\n        PinYin = pinYin;\n    }\n\n    public String getFirstPinYin() {\n        return FirstPinYin;\n    }\n\n    public void setFirstPinYin(String firstPinYin) {\n        FirstPinYin = firstPinYin;\n    }\n\n    public String toString() {\n        return \"姓名：\" + getName() + \"   拼音：\" + getPinYin() + \"    首字母：\"\n                + getFirstPinYin();\n\n    }\n}\n```\n# PinyinUtils\n这里需要pinyin4j包，下载地址：http://pinyin4j.sourceforge.net/\n```java\npublic class PinyinUtils {\n    /**\n     * 汉字转拼音\n     */\n    public static String getPingYin(String inputString) {\n        HanyuPinyinOutputFormat format = new HanyuPinyinOutputFormat();\n        format.setCaseType(HanyuPinyinCaseType.LOWERCASE);\n        format.setToneType(HanyuPinyinToneType.WITHOUT_TONE);\n        format.setVCharType(HanyuPinyinVCharType.WITH_V);\n\n        char[] input = inputString.trim().toCharArray();\n        String output = \"\";\n\n        try {\n            for (char curchar : input) {\n                if (java.lang.Character.toString(curchar).matches(\"[\\\\u4E00-\\\\u9FA5]+\")) {\n                    String[] temp = PinyinHelper.toHanyuPinyinStringArray(curchar, format);\n                    output += temp[0];\n                } else\n                    output += java.lang.Character.toString(curchar);\n            }\n        } catch (BadHanyuPinyinOutputFormatCombination e) {\n            e.printStackTrace();\n        }\n        return output;\n    }\n}\n```\n# PinyinComparator\n按照字母排序类\n```java\npublic class PinyinComparator implements Comparator<PersonBean> {\n\n    @Override\n    public int compare(PersonBean lhs, PersonBean rhs) {\n        return sort(lhs, rhs);\n    }\n\n    private int sort(PersonBean lhs, PersonBean rhs) {\n        // 获取ascii值\n        int lhs_ascii = lhs.getFirstPinYin().toUpperCase().charAt(0);\n        int rhs_ascii = rhs.getFirstPinYin().toUpperCase().charAt(0);\n        // 判断若不是字母，则排在字母之后\n        if (lhs_ascii < 65 || lhs_ascii > 90)\n            return 1;\n        else if (rhs_ascii < 65 || rhs_ascii > 90)\n            return -1;\n        else\n            return lhs.getPinYin().compareTo(rhs.getPinYin());\n    }\n}\n\n```\n# ContactAdapter\n```java\npublic class ContactAdapter extends RecyclerView.Adapter<ContactAdapter.ViewHolder> {\n    List<PersonBean> data;\n\n    public ContactAdapter(List<PersonBean> data) {\n        this.data = data;\n    }\n\n    class ViewHolder extends RecyclerView.ViewHolder {\n        TextView nickname;\n        TextView tag;\n\n        public ViewHolder(View itemView) {\n            super(itemView);\n            nickname = (TextView) itemView.findViewById(R.id.nickname);\n            tag = (TextView) itemView.findViewById(R.id.tag);\n        }\n    }\n\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = View.inflate(parent.getContext(), R.layout.contact_item, null);\n        return new ViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        PersonBean person = data.get(position);\n        // 获取首字母的assii值\n        int selection = person.getFirstPinYin().charAt(0);\n        // 通过首字母的assii值来判断是否显示字母\n        int positionForSelection = getPositionForSelection(selection);\n        if (position == positionForSelection) {// 相等说明需要显示字母\n            holder.tag.setVisibility(View.VISIBLE);\n            holder.tag.setText(person.getFirstPinYin());\n        } else {\n            holder.tag.setVisibility(View.GONE);\n\n        }\n        holder.nickname.setText(data.get(position).getName());\n    }\n\n    public int getPositionForSelection(int selection) {\n        for (int i = 0; i < data.size(); i++) {\n            String Fpinyin = data.get(i).getFirstPinYin();\n\n            char first = Fpinyin.toUpperCase().charAt(0);\n            if (first == selection) {\n                return i;\n            }\n        }\n        return -1;\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return data.size();\n    }\n}\n```\n## contact_item.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <!-- 这个TextView就是显示字母的 -->\n    <TextView\n        android:id=\"@+id/tag\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"20dp\"\n        android:background=\"#e6e6e6\"\n        android:gravity=\"center_vertical\"\n        android:paddingLeft=\"10dip\"\n        android:text=\"Z\"\n        android:visibility=\"visible\" />\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n\n        <View\n            android:id=\"@+id/view_lv_item_line\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0.5dip\"\n            android:layout_marginLeft=\"10dip\"\n            android:layout_marginRight=\"20dip\"\n            android:background=\"#174465\" />\n\n        <ImageView\n            android:id=\"@+id/iv_lv_item_head\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@id/view_lv_item_line\"\n            android:layout_marginLeft=\"5dp\"\n            android:src=\"@mipmap/ic_launcher\" />\n\n        <TextView\n            android:id=\"@+id/nickname\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_centerVertical=\"true\"\n            android:layout_marginLeft=\"5dip\"\n            android:layout_toRightOf=\"@id/iv_lv_item_head\"\n            android:text=\"周华健\" />\n    </RelativeLayout>\n\n</LinearLayout>\n```\n# 附录\n[Android 联系人字母排序（仿微信）](http://www.cnblogs.com/scetopcsa/p/4724308.html)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"contactIndex","published":1,"updated":"2016-03-17T00:44:06.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra3006pzspk0ndaz7x1","thumbnailImageUrl":null},{"title":"企业通","date":"2014-12-29T16:00:00.000Z","_content":"\n>\n灵感源于生活，进而反馈生活。\n>\n\n前段时间坐公交突然一个想法，咱们公司不是人数很多，除了本部门人认识，其他部门基本不认识，也没交集，能不能有款App把大家连起来，于是有了“企业通”。企业通针对企业，便于企业内部交流。\n\n\n##（一）前提\n该企业开放程度较高，员工可以言论自由\n\n##（二）模块划分\n* 最新公告\n \n发布公司重大信息\n<!-- more -->\n\n* 部门论坛\n\n根据各个公司，细分各部门板块，各部门的人在相应的部门发帖吐槽等，看其他部门帖子可以评论\n\n* 通讯录\n\n列出公司所有人，可以查看相应的介绍，聊天\n\n##（三）盈利模式\n买给其他企业，只需要更改服务器地址就能配置成他们公司企业通\n","source":"_posts/company.md","raw":"title: 企业通\ndate: 2014-12-30 \ncategories: [Life]\ntags: [Life]\n---\n\n>\n灵感源于生活，进而反馈生活。\n>\n\n前段时间坐公交突然一个想法，咱们公司不是人数很多，除了本部门人认识，其他部门基本不认识，也没交集，能不能有款App把大家连起来，于是有了“企业通”。企业通针对企业，便于企业内部交流。\n\n\n##（一）前提\n该企业开放程度较高，员工可以言论自由\n\n##（二）模块划分\n* 最新公告\n \n发布公司重大信息\n<!-- more -->\n\n* 部门论坛\n\n根据各个公司，细分各部门板块，各部门的人在相应的部门发帖吐槽等，看其他部门帖子可以评论\n\n* 通讯录\n\n列出公司所有人，可以查看相应的介绍，聊天\n\n##（三）盈利模式\n买给其他企业，只需要更改服务器地址就能配置成他们公司企业通\n","slug":"company","published":1,"updated":"2016-03-17T00:44:06.355Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra5006tzspk3si5xxcz","thumbnailImageUrl":null},{"title":"Android判断权限被限制","date":"2015-06-09T16:00:00.000Z","_content":"\n开发过程，如果某个权限被第三方限制了，比如录音，网上查了下\n\n```java\n String permName = \"android.permission.RECORD_AUDIO\";\n        String pkgName = getPackageName();\n        // 结果为0则表示使用了该权限，-1则表求没有使用该权限\n        int reslut = getPackageManager().checkPermission(permName, pkgName);\n        Log.d(\"wxl\", \"reslut=\" + reslut + \"======\"\n                + PackageManager.PERMISSION_GRANTED);\n```\n实际这个方法只是检测你的APP是否使用了某个权限，但是不能检测是否被限制了。\n\n<!-- more -->\n\n我以为做不了，找了微信，限制录音权限，结果提示录音权限被限，于是我仔细看了异常信息。\n\n```js\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ java.io.IOException: Recording permission has been disabled for current app\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at com.lbe.security.service.core.client.MultimediaClient.mrShouldBlock(Unknown Source)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder._setOutputFile(Native Method)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder.prepare(MediaRecorder.java:769)\n```\n对比Recording permission has been disabled for current app，做相应的提示就OK！\n\n","source":"_posts/checkPermission.md","raw":"title: Android判断权限被限制\ndate: 2015-06-10 \ncategories: [Android]\ntags: [Android,Permission]\n---\n\n开发过程，如果某个权限被第三方限制了，比如录音，网上查了下\n\n```java\n String permName = \"android.permission.RECORD_AUDIO\";\n        String pkgName = getPackageName();\n        // 结果为0则表示使用了该权限，-1则表求没有使用该权限\n        int reslut = getPackageManager().checkPermission(permName, pkgName);\n        Log.d(\"wxl\", \"reslut=\" + reslut + \"======\"\n                + PackageManager.PERMISSION_GRANTED);\n```\n实际这个方法只是检测你的APP是否使用了某个权限，但是不能检测是否被限制了。\n\n<!-- more -->\n\n我以为做不了，找了微信，限制录音权限，结果提示录音权限被限，于是我仔细看了异常信息。\n\n```js\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ java.io.IOException: Recording permission has been disabled for current app\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at com.lbe.security.service.core.client.MultimediaClient.mrShouldBlock(Unknown Source)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder._setOutputFile(Native Method)\n06-11 11:33:58.644    7706-7706/cn.cntv.tvt W/System.err﹕ at android.media.MediaRecorder.prepare(MediaRecorder.java:769)\n```\n对比Recording permission has been disabled for current app，做相应的提示就OK！\n\n","slug":"checkPermission","published":1,"updated":"2016-03-17T00:44:06.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra6006wzspklt2ey81u","thumbnailImageUrl":null},{"title":"Android Studio如何更改JDK和SDK的路径","date":"2014-11-21T16:00:00.000Z","_content":"安装Android Studio后它默认在自己的文件目录下又安装了一个sdk，然后SDK路径默认到这个文件下。\n今天更新Android Studio到0.8.14，提示要移动这个sdk，但是我在设置中始终没有找到更改sdk的路径的地方。\n网上找了，我没有想到居然在这里设置，直接上图：\n![](http://wuxiaolong.qiniudn.com/2014-11-22-change-sdk-path.png)\n","source":"_posts/change-sdk-path.md","raw":"title: Android Studio如何更改JDK和SDK的路径\ndate: 2014-11-22 \ncategories: [Android Studio]\ntags: [Android Studio]\n---\n安装Android Studio后它默认在自己的文件目录下又安装了一个sdk，然后SDK路径默认到这个文件下。\n今天更新Android Studio到0.8.14，提示要移动这个sdk，但是我在设置中始终没有找到更改sdk的路径的地方。\n网上找了，我没有想到居然在这里设置，直接上图：\n![](http://wuxiaolong.qiniudn.com/2014-11-22-change-sdk-path.png)\n","slug":"change-sdk-path","published":1,"updated":"2016-03-17T00:44:06.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekra80071zspkbwd6g5ba","thumbnailImageUrl":null},{"title":"手把手教你建github技术博客by jekyll","date":"2014-10-25T23:56:29.000Z","_content":"\n\n******\n\n## <a name=\"index\"/>目录\n* [一、适合人群](#for-the-crowd)\n* [二、github创建博客](#build-blog)\n\t* 注册账号\n\t* 创建页面仓库\n\t* 项目设置\n\t* 页面生成器\n\t* 创建用户页面\n\t* 页面发布\n\t* 查看效果\n* [三、如何发布博客](#write-blog)\n\t* 安装 Ruby\n\t* 安装 DevKit\n\t* 安装 Python\n\t* 安装 Jekyll\n\t* 启动 Jekyll\n\t* 图床\n* [四、总结](#ps)\n* [五、附录](#appendix)\n\n<!-- more -->\n\n<a name=\"for-the-crowd\"/>\n\n## 一、适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n\n\n<a name=\"build-blog\"/>\n\n## 二、github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n* ### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式:`yourname`.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n\n* ### 项目设置\n![4](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-4.png)\n\n* ### 页面生成器\n![5](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-5.png)\n\n* ### 创建用户页面\n![6](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-6.png)\n\n* ### 页面发布\n![7](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-7.png)\n\n* ### 查看效果\n需要等待十分钟，自此，完成了github的博客创建，访问地址：yourname.github.io\n![8](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-8.png)\n<a name=\"write-blog\"/>\n\n## 三、如何发布博客\n\n以上只是创建了博客，那怎么发布自己的博客？共分为以下几个重要步骤（window下）：\n\n* 安装 Ruby\n* 安装 DevKit\n* 安装 Python\n* 安装 Jekyll\n\n### 安装 Ruby\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 安装\n\t* 最好保持默认的路径 C:\\Ruby200-x64， 因为安装包明确提出 “请不要使用带有空格的文件夹 (如： Program Files)”。\n\t* 勾选 “Add Ruby executables to your PATH”，这样执行程序会被自动添加至 PATH 而避免不必要的头疼。\n\t\n![9](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-9.png)\n\t* 命令行ruby -v来检测Ruby是否成功安装\t    \n\t\n```js \n\tC:\\Users\\WuXL>ruby -v\t\n\t返回ruby 2.1.3p242 (2014-09-19 revision 47630) [x64-mingw32]，ok\n\t\n```\n\t\n### 五、安装 DevKit\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 下载同系统及 Ruby 版本相对应的 DevKit 安装包。 例如，DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe 适用于64位 Windows 系统上的 Ruby 2.0.0 x64。\n* 运行安装包并解压缩至某文件夹，如 C:\\DevKit\n* 通过初始化来创建 config.yml 文件。在命令行窗口内，输入下列命令：\n\n```js\n\tcd “C:\\DevKit”\n\truby dk.rb init\n\tnotepad config.yml\n```\n\n* 在打开的记事本窗口中，于末尾添加新的一行 - C:\\Ruby200-x64，保存文件并退出。\n* 回到命令行窗口内，审查（非必须）并安装。\n\n```js\n\truby dk.rb review\n\truby dk.rb install\n```\n### 安装 pyhton\n\n* 下载地址：[http://www.python.org/download/](http://www.python.org/download/) \n* 添加安装路径 (如C:\\Python27)至PATH。\n\n### 安装 Jekyll\n\n\n* 查看是否安装 gem 成功\n\n```js\n\tgem --version\n\t返回2.2.2，OK\n```\n\n* 更新为 淘宝镜像<br>\n\tRubyGems镜像换为 淘宝、防止下载包出错(官网https://ruby.taobao.org/)\n\n* 移除旧地址\n \n```js\n\tgem sources --remove https://rubygems.org/ \n\t返回https://rubygems.org/ removed from sources，ok\n```\n* 更新为淘宝镜像\n\n```js\n\tgem sources -a https://ruby.taobao.org/\n\t返回https://ruby.taobao.org/ added to sources，ok\n```\n* 安装jekyll\n\n```js\n\tgem install jekyll \n```\n* 查看是否安装jekyll成功\n\n```js\n\tjekyll -version\n\t返回jekyll 2.4.0，ok\n```\n* 安装 依赖包 \n\n```js\n\tgem install wdm\n```\n* 安装依赖包代码 高亮 \n\n```js\n\tgem install rdiscount\n```\n* 安装 ‘Easy Install’\n \n```js\n\t浏览 https://pypi.python.org/pypi/setuptools#installation-instructions 来查看详细的安装指南。\n\t对于 Windows 7 的机器，下载 ez_setup.py 并保存，例如，至C:\\。 然后从命令行使用 Python 运行此文件：python “C:\\ez_setup.py”\n\t添加 ‘Python Scripts’ 路径 (如： C:\\Python27\\Scripts) 至 PATH\n```\n* 安装 Pygments\n\n```js\n\t确保 easy_install 已经正确安装\n\teasy_install --version\n\t输出示例：\n\tsetuptools 3.1\n```\n* 使用 “easy_install” 来安装 Pygments\n\n```js\n\teasy_install Pygments\n```\n* 安装指定版本的yajl\n\n\n```js\n\t删除86版本的yajl\n\tC:\\OpenSources\\liyouhai>gem uninstall yajl-ruby\n\tSuccessfully uninstalled yajl-ruby-1.1.0-x86-mingw32\n\t安装指定版本的yajl\n\tC:\\OpenSources\\liyouhai>gem install yajl-ruby -v 1.1.0 --platform=ruby\n\tFetching: yajl-ruby-1.1.0.gem (100%)\n\tTemporarily enhancing PATH to include DevKit...\n\tBuilding native extensions.  This could take a while...\n\tSuccessfully installed yajl-ruby-1.1.0\n\tParsing documentation for yajl-ruby-1.1.0\n\tunable to convert \"\\x90\" from ASCII-8BIT to UTF-8 for lib/yajl/yajl.so, skipping\n\tInstalling ri documentation for yajl-ruby-1.1.0\n\t1 gem installed\n```\n\n### 启动 Jekyll\n\n按照官方的 Jekyll[`快速开始手册`](http://jekyllrb.com/docs/quickstart/)的步骤，或者克隆[`模板`](https://github.com/jekyll/jekyll/wiki/Sites)到本地，cmd下cd进入目录运行如下命令，就能在 localhost:4000 中预览了，大功告成。\n\n```js\n\tjekyll serve -watch (或jekyll serve -w)\n```\n### 图床\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n<a name=\"ps\"/>\n\n## 四、总结\n\n一开始认为 GitHub.io 技术博客很有难度，从10月23日着手，经历24日一天摸索，知道了jekyll，MarkDown(其实就是github的 READ.md ,幸亏之前自学过READ.md语法），也有幸自学了git，不然还不知道这个建博客 什么时候能做好，进jekyll安装就花了半天，反正各种错误，然后各种谷歌百度  ，25日一天就写了这个博客（集众建博客的帖子所长），问题主要是没有 文章摘要 ，一下子全部显示出来，我有强迫症，不能接受这个，到26日才解决，如果您没有一定的编程基础，爱折腾，坚持不懈的精神，还是不要建自己的 GitHub.io 技术博客吧。\n\n<a name=\"appendix\"/>\n\n## 五、附录\n\njekyll中文官网：[http://jekyllcn.com/](http://jekyllcn.com/) <br>\nMarkdown 语法说明：[http://wowubuntu.com/markdown/#autoescape](http://wowubuntu.com/markdown/#autoescape) \n\n","source":"_posts/build-blog.md","raw":"title: 手把手教你建github技术博客by jekyll\ndate: 2014-10-26 07:56:29 \ncategories: jekyll\ntags: [github,jekyll]\n---\n\n\n******\n\n## <a name=\"index\"/>目录\n* [一、适合人群](#for-the-crowd)\n* [二、github创建博客](#build-blog)\n\t* 注册账号\n\t* 创建页面仓库\n\t* 项目设置\n\t* 页面生成器\n\t* 创建用户页面\n\t* 页面发布\n\t* 查看效果\n* [三、如何发布博客](#write-blog)\n\t* 安装 Ruby\n\t* 安装 DevKit\n\t* 安装 Python\n\t* 安装 Jekyll\n\t* 启动 Jekyll\n\t* 图床\n* [四、总结](#ps)\n* [五、附录](#appendix)\n\n<!-- more -->\n\n<a name=\"for-the-crowd\"/>\n\n## 一、适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n\n\n<a name=\"build-blog\"/>\n\n## 二、github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n* ### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式:`yourname`.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n\n* ### 项目设置\n![4](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-4.png)\n\n* ### 页面生成器\n![5](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-5.png)\n\n* ### 创建用户页面\n![6](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-6.png)\n\n* ### 页面发布\n![7](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-7.png)\n\n* ### 查看效果\n需要等待十分钟，自此，完成了github的博客创建，访问地址：yourname.github.io\n![8](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-8.png)\n<a name=\"write-blog\"/>\n\n## 三、如何发布博客\n\n以上只是创建了博客，那怎么发布自己的博客？共分为以下几个重要步骤（window下）：\n\n* 安装 Ruby\n* 安装 DevKit\n* 安装 Python\n* 安装 Jekyll\n\n### 安装 Ruby\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 安装\n\t* 最好保持默认的路径 C:\\Ruby200-x64， 因为安装包明确提出 “请不要使用带有空格的文件夹 (如： Program Files)”。\n\t* 勾选 “Add Ruby executables to your PATH”，这样执行程序会被自动添加至 PATH 而避免不必要的头疼。\n\t\n![9](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-9.png)\n\t* 命令行ruby -v来检测Ruby是否成功安装\t    \n\t\n```js \n\tC:\\Users\\WuXL>ruby -v\t\n\t返回ruby 2.1.3p242 (2014-09-19 revision 47630) [x64-mingw32]，ok\n\t\n```\n\t\n### 五、安装 DevKit\n\n* 下载地址：[http://rubyinstaller.org/downloads/](http://rubyinstaller.org/downloads/) \n* 下载同系统及 Ruby 版本相对应的 DevKit 安装包。 例如，DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe 适用于64位 Windows 系统上的 Ruby 2.0.0 x64。\n* 运行安装包并解压缩至某文件夹，如 C:\\DevKit\n* 通过初始化来创建 config.yml 文件。在命令行窗口内，输入下列命令：\n\n```js\n\tcd “C:\\DevKit”\n\truby dk.rb init\n\tnotepad config.yml\n```\n\n* 在打开的记事本窗口中，于末尾添加新的一行 - C:\\Ruby200-x64，保存文件并退出。\n* 回到命令行窗口内，审查（非必须）并安装。\n\n```js\n\truby dk.rb review\n\truby dk.rb install\n```\n### 安装 pyhton\n\n* 下载地址：[http://www.python.org/download/](http://www.python.org/download/) \n* 添加安装路径 (如C:\\Python27)至PATH。\n\n### 安装 Jekyll\n\n\n* 查看是否安装 gem 成功\n\n```js\n\tgem --version\n\t返回2.2.2，OK\n```\n\n* 更新为 淘宝镜像<br>\n\tRubyGems镜像换为 淘宝、防止下载包出错(官网https://ruby.taobao.org/)\n\n* 移除旧地址\n \n```js\n\tgem sources --remove https://rubygems.org/ \n\t返回https://rubygems.org/ removed from sources，ok\n```\n* 更新为淘宝镜像\n\n```js\n\tgem sources -a https://ruby.taobao.org/\n\t返回https://ruby.taobao.org/ added to sources，ok\n```\n* 安装jekyll\n\n```js\n\tgem install jekyll \n```\n* 查看是否安装jekyll成功\n\n```js\n\tjekyll -version\n\t返回jekyll 2.4.0，ok\n```\n* 安装 依赖包 \n\n```js\n\tgem install wdm\n```\n* 安装依赖包代码 高亮 \n\n```js\n\tgem install rdiscount\n```\n* 安装 ‘Easy Install’\n \n```js\n\t浏览 https://pypi.python.org/pypi/setuptools#installation-instructions 来查看详细的安装指南。\n\t对于 Windows 7 的机器，下载 ez_setup.py 并保存，例如，至C:\\。 然后从命令行使用 Python 运行此文件：python “C:\\ez_setup.py”\n\t添加 ‘Python Scripts’ 路径 (如： C:\\Python27\\Scripts) 至 PATH\n```\n* 安装 Pygments\n\n```js\n\t确保 easy_install 已经正确安装\n\teasy_install --version\n\t输出示例：\n\tsetuptools 3.1\n```\n* 使用 “easy_install” 来安装 Pygments\n\n```js\n\teasy_install Pygments\n```\n* 安装指定版本的yajl\n\n\n```js\n\t删除86版本的yajl\n\tC:\\OpenSources\\liyouhai>gem uninstall yajl-ruby\n\tSuccessfully uninstalled yajl-ruby-1.1.0-x86-mingw32\n\t安装指定版本的yajl\n\tC:\\OpenSources\\liyouhai>gem install yajl-ruby -v 1.1.0 --platform=ruby\n\tFetching: yajl-ruby-1.1.0.gem (100%)\n\tTemporarily enhancing PATH to include DevKit...\n\tBuilding native extensions.  This could take a while...\n\tSuccessfully installed yajl-ruby-1.1.0\n\tParsing documentation for yajl-ruby-1.1.0\n\tunable to convert \"\\x90\" from ASCII-8BIT to UTF-8 for lib/yajl/yajl.so, skipping\n\tInstalling ri documentation for yajl-ruby-1.1.0\n\t1 gem installed\n```\n\n### 启动 Jekyll\n\n按照官方的 Jekyll[`快速开始手册`](http://jekyllrb.com/docs/quickstart/)的步骤，或者克隆[`模板`](https://github.com/jekyll/jekyll/wiki/Sites)到本地，cmd下cd进入目录运行如下命令，就能在 localhost:4000 中预览了，大功告成。\n\n```js\n\tjekyll serve -watch (或jekyll serve -w)\n```\n### 图床\n\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n<a name=\"ps\"/>\n\n## 四、总结\n\n一开始认为 GitHub.io 技术博客很有难度，从10月23日着手，经历24日一天摸索，知道了jekyll，MarkDown(其实就是github的 READ.md ,幸亏之前自学过READ.md语法），也有幸自学了git，不然还不知道这个建博客 什么时候能做好，进jekyll安装就花了半天，反正各种错误，然后各种谷歌百度  ，25日一天就写了这个博客（集众建博客的帖子所长），问题主要是没有 文章摘要 ，一下子全部显示出来，我有强迫症，不能接受这个，到26日才解决，如果您没有一定的编程基础，爱折腾，坚持不懈的精神，还是不要建自己的 GitHub.io 技术博客吧。\n\n<a name=\"appendix\"/>\n\n## 五、附录\n\njekyll中文官网：[http://jekyllcn.com/](http://jekyllcn.com/) <br>\nMarkdown 语法说明：[http://wowubuntu.com/markdown/#autoescape](http://wowubuntu.com/markdown/#autoescape) \n\n","slug":"build-blog","published":1,"updated":"2016-03-17T00:44:06.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekraa0075zspkpm1stlyo","thumbnailImageUrl":null},{"title":"手把手教你建github技术博客by hexo","date":"2015-07-31T06:22:35.000Z","_content":"## 适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n<!-- more -->\n\n## 环境准备\n\n### 安装Git\n下载 [msysgit](http://msysgit.github.io/) 并执行即可完成安装。\n\n### 安装Node.js\n在 Windows 环境下安装 [Node.js](http://nodejs.org/) 非常简单，仅须下载安装文件并执行即可完成安装。\n\n### 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```js\nnpm install -g hexo\n```\n`问题`\n* npm ERR! registry error parsing json 错误\n\n可能需要设置npm代理,执行命令\n```js \nnpm config set registry http://registry.cnpmjs.org\n```\n\n* hexo:command not found\n删除刚刚安装的npm目录，重新执行命令npm install -g hexo安装hexo，\n\n\n### 创建hexo文件夹\n安装完成后，在你喜爱的文件夹下（如H:\\hexo），执行以下指令(在H:\\hexo内点击鼠标右键，选择Git bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\n```js\nhexo init\n```\n\n### 安装依赖包\n```js\nnpm install\n```\n\n### 本地查看\n\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在H:\\hexo)，然后到浏览器输入localhost:4000看看。\n```js\nhexo generate\nhexo server\n```\n好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。\n\n`问题`\n* 执行hexo server提示找不到该指令 \n解决办法： \n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```js\nnpm install hexo -server --save \n```\n安装此server后再试，问题解决\n\n## github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式: yourname.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n`注意`\n命名规则：你的github账号.github.io，我这里被坑了，之前是jekell写的，现在换成hexo，所以我是另建创库了。\n\n### 生成SSH密钥\nssh-keygen -t rsa -C \"你的邮箱地址\"，按3个回车，密码为空。\n\n在C:\\Users\\Administrator\\.ssh下，得到两个文件id_rsa和id_rsa.pub。\n\n### 在GitHub上添加SSH密钥\n打开id_rsa.pub，复制全文。[https://github.com/settings/ssh](https://github.com/settings/ssh) ，Add SSH key，粘贴进去。\n\n## hexo使用\n\n### 目录结构\n\n.\n├── .deploy       #需要部署的文件\n├── node_modules  #Hexo插件\n├── public        #生成的静态网页文件\n├── scaffolds     #模板\n├── source        #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n|   ├── _drafts   #草稿\n|   └── _posts    #文章\n├── themes        #主题\n├── _config.yml   #全局配置文件\n└── package.json\n\n### 全局配置 _config.yml\n\n```js\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Site #站点信息\ntitle:  #标题\nsubtitle:  #副标题\ndescription:  #站点描述，给搜索引擎看的\nauthor:  #作者\nemail:  #电子邮箱\nlanguage: zh-CN #语言\n# URL #链接格式\nurl:  #网址\nroot: / #根目录\npermalink: :year/:month/:day/:title/ #文章的链接格式\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #分类目录\ncode_dir: downloads/code\npermalink_defaults:\n# Directory #目录\nsource_dir: source #源文件目录\npublic_dir: public #生成的网页文件目录\n# Writing #写作\nnew_post_name: :title.md #新文章标题\ndefault_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）\ntitlecase: false #标题转换成大写\nexternal_link: true #在新选项卡中打开连接\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nhighlight: #语法高亮\n  enable: true #是否启用\n  line_number: true #显示行号\n  tab_replace:\n# Category & Tag #分类和标签\ndefault_category: uncategorized #默认分类\ncategory_map:\ntag_map:\n# Archives\n2: 开启分页\n1: 禁用分页\n0: 全部禁用\narchive: 2\ncategory: 2\ntag: 2\n# Server #本地服务器\nport: 4000 #端口号\nserver_ip: localhost #IP 地址\nlogger: false\nlogger_format: dev\n# Date / Time format #日期时间格式\ndate_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/\ntime_format: H:mm:ss\n# Pagination #分页\nper_page: 10 #每页文章数，设置成 0 禁用分页\npagination_dir: page\n# Disqus #Disqus评论，替换为多说\ndisqus_shortname:\n# Extensions #拓展插件\ntheme: landscape-plus #主题\nexclude_generator:\nplugins: #插件，例如生成 RSS 和站点地图的\n- hexo-generator-feed\n- hexo-generator-sitemap\n# Deployment #部署，将 lmintlcx 改成用户名\ndeploy:\n  type: git\n  repo: 刚刚github创库地址.git\n  branch: master\n```\n`注意`\n* 配置文件的冒号“:”后面有一个空格\n* repo: 刚刚github创库地址.git\n\n### hexo命令行使用\n\n常用命令：\n\n```js\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n\n简写：\n\n```js\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n### 编辑文章\n\n新建文章\n\n```js\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件标题.md\n```js\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n```\n编辑完后保存，hexo server 预览\n\n## hexo部署\n\n执行下列指令即可完成部署。\n```js\nhexo generate\nhexo deploy\n```\nhexo deploy问题：Deployer not found: git\n执行\n```java\nnpm install hexo-deployer-git --save\n```\n重新deploy即可\n\n以下提示说明部署成功\n```js\n[info] Deploy done: git\n```\n点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at http://wuxiaolong.me (这是我买的域名)\n\n## 图床\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n## 域名\n### 将独立域名与GitHub Pages的空间绑定\n方法一：在站点source目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n方法二：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n\n### DNS设置\n用[DNSpod](https://www.dnspod.cn/)，快，免费，稳定。\n注册DNSpod，添加域名，如下图设置。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-1.png)\n其中A的两条记录指向的ip地址是github Pages的提供的ip\n如何知道你的github上项目的IP，如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-2.png)\n\n### 去Godaddy修改DNS地址\n更改godaddy的Nameservers为DNSpod的NameServers。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-5.png)\n\n## 总结\n之前用的jekell写的，[手把手教你建github技术博客by jekyll](http://wuxiaolong.github.io/2014/10/26/build-blog/)，也是折腾了几天才做成自己满意的，昨天决定换成hexo，也是花了一天半时间，为了追求更好，必须折腾！\n\n## AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n## 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n## 附录\n* [hexo系列教程：（一）hexo介绍](http://zipperary.com/2013/05/28/hexo-guide-1/)\n* [使用Hexo搭建博客](http://blog.lmintlcx.com/post/blog-with-hexo.html)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [windows下搭建hexo博客并将其部署到GitCafe终极教程](http://www.jianshu.com/p/e858a90d0a17)\n* [GoDaddy优惠码](http://www.dute.me/)\n* [Godaddy购买域名及配置](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [GitHub配置域名（Godaddy）](http://blog.csdn.net/yuguiyang1990/article/details/39523005)\n\n\n\n","source":"_posts/build-blog-by-hexo.md","raw":"title: 手把手教你建github技术博客by hexo\ndate: 2015-07-31 14:22:35\ntags: [github,hexo]\ncategory: hexo\n---\n## 适合人群\n\n* 喜欢写Blog的人\n* 有一定的编程基础\n* 爱折腾的人\n* 熟练使用版本控制Git\n* 了解使用Github\n* 熟悉基本的MarkDown语法\n\n<!-- more -->\n\n## 环境准备\n\n### 安装Git\n下载 [msysgit](http://msysgit.github.io/) 并执行即可完成安装。\n\n### 安装Node.js\n在 Windows 环境下安装 [Node.js](http://nodejs.org/) 非常简单，仅须下载安装文件并执行即可完成安装。\n\n### 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```js\nnpm install -g hexo\n```\n`问题`\n* npm ERR! registry error parsing json 错误\n\n可能需要设置npm代理,执行命令\n```js \nnpm config set registry http://registry.cnpmjs.org\n```\n\n* hexo:command not found\n删除刚刚安装的npm目录，重新执行命令npm install -g hexo安装hexo，\n\n\n### 创建hexo文件夹\n安装完成后，在你喜爱的文件夹下（如H:\\hexo），执行以下指令(在H:\\hexo内点击鼠标右键，选择Git bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\n```js\nhexo init\n```\n\n### 安装依赖包\n```js\nnpm install\n```\n\n### 本地查看\n\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在H:\\hexo)，然后到浏览器输入localhost:4000看看。\n```js\nhexo generate\nhexo server\n```\n好了，至此，本地博客已经搭建起来了，只是本地哦，别人看不到的。下面，我们要部署到Github。\n\n`问题`\n* 执行hexo server提示找不到该指令 \n解决办法： \n在Hexo 3.0 后server被单独出来了，需要安装server，安装的命令如下：\n```js\nnpm install hexo -server --save \n```\n安装此server后再试，问题解决\n\n## github 创建博客\n\n* ### 注册账号\n地址：[https://github.com/](https://github.com/)  \n输入账号、邮箱、密码,然后点击注册按钮.\n![1](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-1.png)\n\n### 创建页面仓库\n这个仓库的名字需要和你的账号对应，格式: yourname.github.io\n输入基本信息，然后点击创建仓库.\n![2](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-2.png)\n![3](http://7q5c2h.com1.z0.glb.clouddn.com/2014-10-26-build-blog-3.png)\n`注意`\n命名规则：你的github账号.github.io，我这里被坑了，之前是jekell写的，现在换成hexo，所以我是另建创库了。\n\n### 生成SSH密钥\nssh-keygen -t rsa -C \"你的邮箱地址\"，按3个回车，密码为空。\n\n在C:\\Users\\Administrator\\.ssh下，得到两个文件id_rsa和id_rsa.pub。\n\n### 在GitHub上添加SSH密钥\n打开id_rsa.pub，复制全文。[https://github.com/settings/ssh](https://github.com/settings/ssh) ，Add SSH key，粘贴进去。\n\n## hexo使用\n\n### 目录结构\n\n.\n├── .deploy       #需要部署的文件\n├── node_modules  #Hexo插件\n├── public        #生成的静态网页文件\n├── scaffolds     #模板\n├── source        #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n|   ├── _drafts   #草稿\n|   └── _posts    #文章\n├── themes        #主题\n├── _config.yml   #全局配置文件\n└── package.json\n\n### 全局配置 _config.yml\n\n```js\n# Hexo Configuration\n## Docs: http://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n# Site #站点信息\ntitle:  #标题\nsubtitle:  #副标题\ndescription:  #站点描述，给搜索引擎看的\nauthor:  #作者\nemail:  #电子邮箱\nlanguage: zh-CN #语言\n# URL #链接格式\nurl:  #网址\nroot: / #根目录\npermalink: :year/:month/:day/:title/ #文章的链接格式\ntag_dir: tags #标签目录\narchive_dir: archives #存档目录\ncategory_dir: categories #分类目录\ncode_dir: downloads/code\npermalink_defaults:\n# Directory #目录\nsource_dir: source #源文件目录\npublic_dir: public #生成的网页文件目录\n# Writing #写作\nnew_post_name: :title.md #新文章标题\ndefault_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）\ntitlecase: false #标题转换成大写\nexternal_link: true #在新选项卡中打开连接\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nhighlight: #语法高亮\n  enable: true #是否启用\n  line_number: true #显示行号\n  tab_replace:\n# Category & Tag #分类和标签\ndefault_category: uncategorized #默认分类\ncategory_map:\ntag_map:\n# Archives\n2: 开启分页\n1: 禁用分页\n0: 全部禁用\narchive: 2\ncategory: 2\ntag: 2\n# Server #本地服务器\nport: 4000 #端口号\nserver_ip: localhost #IP 地址\nlogger: false\nlogger_format: dev\n# Date / Time format #日期时间格式\ndate_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/\ntime_format: H:mm:ss\n# Pagination #分页\nper_page: 10 #每页文章数，设置成 0 禁用分页\npagination_dir: page\n# Disqus #Disqus评论，替换为多说\ndisqus_shortname:\n# Extensions #拓展插件\ntheme: landscape-plus #主题\nexclude_generator:\nplugins: #插件，例如生成 RSS 和站点地图的\n- hexo-generator-feed\n- hexo-generator-sitemap\n# Deployment #部署，将 lmintlcx 改成用户名\ndeploy:\n  type: git\n  repo: 刚刚github创库地址.git\n  branch: master\n```\n`注意`\n* 配置文件的冒号“:”后面有一个空格\n* repo: 刚刚github创库地址.git\n\n### hexo命令行使用\n\n常用命令：\n\n```js\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n\n简写：\n\n```js\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n### 编辑文章\n\n新建文章\n\n```js\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件标题.md\n```js\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n```\n编辑完后保存，hexo server 预览\n\n## hexo部署\n\n执行下列指令即可完成部署。\n```js\nhexo generate\nhexo deploy\n```\nhexo deploy问题：Deployer not found: git\n执行\n```java\nnpm install hexo-deployer-git --save\n```\n重新deploy即可\n\n以下提示说明部署成功\n```js\n[info] Deploy done: git\n```\n点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at http://wuxiaolong.me (这是我买的域名)\n\n## 图床\n1.墙裂推荐七牛云储存,[注册地址](https://portal.qiniu.com/signup?code=3lk4saqepkdhu)。\n\n2.七牛云储存提供10G的免费空间,以及每月10G的流量.存放个人博客图片最好不过了\n\n3.七牛云储存还有各种图形处理功能、缩略图、视频存放速度也给力（非打广告）。\n\n具体使用见[使用七牛作为github博客的图床](http://wuxiaolong.github.io/blog/2014/10/30/qiniu-photo-bed.html)\n\n## 域名\n### 将独立域名与GitHub Pages的空间绑定\n方法一：在站点source目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n方法二：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，比如wuxiaolong.me\n\n### DNS设置\n用[DNSpod](https://www.dnspod.cn/)，快，免费，稳定。\n注册DNSpod，添加域名，如下图设置。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-1.png)\n其中A的两条记录指向的ip地址是github Pages的提供的ip\n如何知道你的github上项目的IP，如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-2.png)\n\n### 去Godaddy修改DNS地址\n更改godaddy的Nameservers为DNSpod的NameServers。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/build-blog-by-hexo-5.png)\n\n## 总结\n之前用的jekell写的，[手把手教你建github技术博客by jekyll](http://wuxiaolong.github.io/2014/10/26/build-blog/)，也是折腾了几天才做成自己满意的，昨天决定换成hexo，也是花了一天半时间，为了追求更好，必须折腾！\n\n## AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n## 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n## 附录\n* [hexo系列教程：（一）hexo介绍](http://zipperary.com/2013/05/28/hexo-guide-1/)\n* [使用Hexo搭建博客](http://blog.lmintlcx.com/post/blog-with-hexo.html)\n* [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [windows下搭建hexo博客并将其部署到GitCafe终极教程](http://www.jianshu.com/p/e858a90d0a17)\n* [GoDaddy优惠码](http://www.dute.me/)\n* [Godaddy购买域名及配置](http://blog.csdn.net/poem_of_sunshine/article/details/29369785)\n* [GitHub配置域名（Godaddy）](http://blog.csdn.net/yuguiyang1990/article/details/39523005)\n\n\n\n","slug":"build-blog-by-hexo","published":1,"updated":"2016-08-05T04:39:34.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrac007bzspkgk87j0sd","thumbnailImageUrl":null},{"title":"播恩堂","date":"2013-10-15T14:34:14.000Z","_content":"> 我的第二个独立完成的项目，已经很轻车熟路，没有第一个独立项目[购房车](http://wuxiaolong.me/2013/10/15/goufangche/)那么紧张了。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang5.jpg)\n\n# 应用介绍 \n传播农业智慧，提升生命品质。播恩堂具备养猪行业最新动态及全方位的综合支持服务，包括：农业新闻、价格行情、饲养技术、播恩营养、产品资讯、专家论坛等，具有真实性、专业性、技术性、互动性的资讯，并具有查询当地当日价格，行情趋势分析，专家论坛及在线问答，猪病大全等应用功能，不管你身在何处，拿出手机，轻松一点，便能实现您的需求！\n\n# 下载地址\n[安智市场](http://www.anzhi.com/soft_2014610.html)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。\n","source":"_posts/boentang.md","raw":"title: 播恩堂\ndate: 2013-10-15 22:34:14\ntags: boentang\ncategory: App\n---\n> 我的第二个独立完成的项目，已经很轻车熟路，没有第一个独立项目[购房车](http://wuxiaolong.me/2013/10/15/goufangche/)那么紧张了。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang1.jpg)\n<!--more-->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang2.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang3.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang4.jpg)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/boentang5.jpg)\n\n# 应用介绍 \n传播农业智慧，提升生命品质。播恩堂具备养猪行业最新动态及全方位的综合支持服务，包括：农业新闻、价格行情、饲养技术、播恩营养、产品资讯、专家论坛等，具有真实性、专业性、技术性、互动性的资讯，并具有查询当地当日价格，行情趋势分析，专家论坛及在线问答，猪病大全等应用功能，不管你身在何处，拿出手机，轻松一点，便能实现您的需求！\n\n# 下载地址\n[安智市场](http://www.anzhi.com/soft_2014610.html)\n\n`温馨提示：`由于时间过久，某些机型未适配，或某些手机已经打不开此APP啦。\n","slug":"boentang","published":1,"updated":"2016-03-17T00:44:06.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrae007fzspkerc7wtcv","thumbnailImageUrl":null},{"title":"Android Support Library 之 夜间模式","date":"2016-07-12T15:12:23.000Z","_content":"# 前言\n夜间模式实现方式\n1、通过切换theme来实现夜间模式。\n优点：可以匹配多套主题，并不局限于黑白模式\n缺点：需要大量定义主题\n详见博客：http://wuxiaolong.me/2015/08/19/ChangeTheme/\n\n2、通过修改uiMode来切换夜间模式。\n修改uimode是修改Configuration，这种主题切换只限于黑白模式，没有其他模式，不需要大量定义主题，即本文介绍的内容。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/nightTheme.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n<!--more-->\n# 如何使用\n## 第一步 \n（1）app/build.gradle\n```java\ncompile 'com.android.support:appcompat-v7:24.0.0'\n```\n（2）Activity须继承AppCompatActivity\n\n（3）Theme.AppCompat.DayNight\n```java\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight\">\n     <!-- Customize your theme here. -->\n     <item name=\"colorPrimary\">@color/colorPrimary</item>\n     <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n     <item name=\"colorAccent\">@color/colorAccent</item>\n </style>\n <style name=\"AppTheme.NoActionBar\">\n     <item name=\"windowActionBar\">false</item>\n     <item name=\"windowNoTitle\">true</item>\n </style>\n```\n## 第二步\n应用全局主题推荐在 Application 的onCreate()中进行设置\nAppCompatDelegate.setDefaultNightMode(int mode);\n\n它有四个可选值，分别是：\nMODE_NIGHT_NO： 使用亮色(light)主题，不使用夜间模式\nMODE_NIGHT_YES：使用暗色(dark)主题，使用夜间模式\nMODE_NIGHT_AUTO：根据当前时间自动切换 亮色(light)/暗色(dark)主题\nMODE_NIGHT_FOLLOW_SYSTEM(默认选项)：设置为跟随系统，通常为 MODE_NIGHT_NO\n\n## 第三步\n动态的设定主题，需要切换主题调用：\n```java\nAppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);\n//调用recreate()使设置生效\nrecreate();\n```\n\n# 注意事项\n## setDefaultNightMode()与setLocalNightMode()区别\nAppCompatDelegate.setDefaultNightMode()是对整个App中theme为DayNight主题生效\ngetDelegate().setLocalNightMode()只对特定的组件生效\n\n## 夜间资源\n把夜晚主题的color等资源放在values-night中，程序在运行时就会自动调用\n\n## 获取应用当前的主题\n```java\nint currentNightMode = getResources().getConfiguration().uiMode\n        & Configuration.UI_MODE_NIGHT_MASK;\nswitch (currentNightMode) {\n    case Configuration.UI_MODE_NIGHT_NO:\n        // Night mode is not active, we're in day time\n    case Configuration.UI_MODE_NIGHT_YES:\n        // Night mode is active, we're at night!\n    case Configuration.UI_MODE_NIGHT_UNDEFINED:\n        // We don't know what mode we're in, assume notnight\n}\n```\n如果切换了主题，本想通过这个方法，下次启动程序的时候，来设置。发现并没有记住这个值，还是只能SharedPreference读取，然后根据用户设置，调用 setDefaultNightMode() 方法。\n\n## 适配文字图片\n尽可能的使用主题属性（theme attributes）\n\n* android:textColor=\"?android:attr/textColorPrimary\" 或者android:textColor=\"?android:textColorPrimary\"\n系统默认的文字颜色。在亮色（light）主题下，颜色接近黑色，在暗色（dark）主题下，颜色接近白色。\n\n* android:background=\"?android:colorBackground\"\n系统默认的背景颜色\n\n* ?attr/colorControlNormal. 系统默认的图标颜色\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n\n# 源码地址\nhttps://github.com/WuXiaolong/DesignSupportLibrarySample","source":"_posts/appcompatDayNight.md","raw":"title: Android Support Library 之 夜间模式\ndate: 2016-07-12 23:12:23\ntags: NightTheme\ncategory: SupportLibrary\n---\n# 前言\n夜间模式实现方式\n1、通过切换theme来实现夜间模式。\n优点：可以匹配多套主题，并不局限于黑白模式\n缺点：需要大量定义主题\n详见博客：http://wuxiaolong.me/2015/08/19/ChangeTheme/\n\n2、通过修改uiMode来切换夜间模式。\n修改uimode是修改Configuration，这种主题切换只限于黑白模式，没有其他模式，不需要大量定义主题，即本文介绍的内容。\n\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/nightTheme.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n<!--more-->\n# 如何使用\n## 第一步 \n（1）app/build.gradle\n```java\ncompile 'com.android.support:appcompat-v7:24.0.0'\n```\n（2）Activity须继承AppCompatActivity\n\n（3）Theme.AppCompat.DayNight\n```java\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight\">\n     <!-- Customize your theme here. -->\n     <item name=\"colorPrimary\">@color/colorPrimary</item>\n     <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n     <item name=\"colorAccent\">@color/colorAccent</item>\n </style>\n <style name=\"AppTheme.NoActionBar\">\n     <item name=\"windowActionBar\">false</item>\n     <item name=\"windowNoTitle\">true</item>\n </style>\n```\n## 第二步\n应用全局主题推荐在 Application 的onCreate()中进行设置\nAppCompatDelegate.setDefaultNightMode(int mode);\n\n它有四个可选值，分别是：\nMODE_NIGHT_NO： 使用亮色(light)主题，不使用夜间模式\nMODE_NIGHT_YES：使用暗色(dark)主题，使用夜间模式\nMODE_NIGHT_AUTO：根据当前时间自动切换 亮色(light)/暗色(dark)主题\nMODE_NIGHT_FOLLOW_SYSTEM(默认选项)：设置为跟随系统，通常为 MODE_NIGHT_NO\n\n## 第三步\n动态的设定主题，需要切换主题调用：\n```java\nAppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);\n//调用recreate()使设置生效\nrecreate();\n```\n\n# 注意事项\n## setDefaultNightMode()与setLocalNightMode()区别\nAppCompatDelegate.setDefaultNightMode()是对整个App中theme为DayNight主题生效\ngetDelegate().setLocalNightMode()只对特定的组件生效\n\n## 夜间资源\n把夜晚主题的color等资源放在values-night中，程序在运行时就会自动调用\n\n## 获取应用当前的主题\n```java\nint currentNightMode = getResources().getConfiguration().uiMode\n        & Configuration.UI_MODE_NIGHT_MASK;\nswitch (currentNightMode) {\n    case Configuration.UI_MODE_NIGHT_NO:\n        // Night mode is not active, we're in day time\n    case Configuration.UI_MODE_NIGHT_YES:\n        // Night mode is active, we're at night!\n    case Configuration.UI_MODE_NIGHT_UNDEFINED:\n        // We don't know what mode we're in, assume notnight\n}\n```\n如果切换了主题，本想通过这个方法，下次启动程序的时候，来设置。发现并没有记住这个值，还是只能SharedPreference读取，然后根据用户设置，调用 setDefaultNightMode() 方法。\n\n## 适配文字图片\n尽可能的使用主题属性（theme attributes）\n\n* android:textColor=\"?android:attr/textColorPrimary\" 或者android:textColor=\"?android:textColorPrimary\"\n系统默认的文字颜色。在亮色（light）主题下，颜色接近黑色，在暗色（dark）主题下，颜色接近白色。\n\n* android:background=\"?android:colorBackground\"\n系统默认的背景颜色\n\n* ?attr/colorControlNormal. 系统默认的图标颜色\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n\n# 源码地址\nhttps://github.com/WuXiaolong/DesignSupportLibrarySample","slug":"appcompatDayNight","published":1,"updated":"2016-08-05T06:39:20.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrag007jzspk2p6y40wm","thumbnailImageUrl":null},{"title":"Android词汇","date":"2014-10-29T06:55:47.000Z","_content":">关于Android一些只言片语……\n\n## Activity生命周期\n* onCreate()\n* onStart()\n* onResume()\n* onPause()\n* onStop()\n* onDestroy()\n* onRestart()\n* onSaveInstanceState()\n通常来说，跳转到其他的activity或者是点击Home都会导致当前的activity执行onSaveInstanceState\n* onRestoreInstanceState()\n在 onStart() 方法之后执行. 系统仅仅会在存在需要恢复的状态信息时才会调用 onRestoreInstanceState() \n<!--more-->\n## Fragment\n为了执行fragment的增加或者移除操作，必须通过调用 getSupportFragmentManager()方法获取FragmentManager，\n然后调用 beginTransaction() 方法创建一个FragmentTransaction对象, \nFragmentTransaction提供了用来增加、移除、替换以及其它一些操作。\n\n## File\n* internal 内存\n* external SD card\n* Environment.getExternalStorageState()\n\n## \n* explicit 显式\n* implicit 隐式\n* startActivityForResult() \n\n## AsyncTask \n* doInBackground()\n* onPostExecute()\n\n## 网络操作\n* HttpURLConnection\n* Apache HttpClient\n* InputStream\n* Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\n* InputStreamReader\n* ConnectivityManager \n* NetworkInfo \n* NetworkReceiver \n\n## 解析 XML 数据\n* XmlPullParser\n\n\n","source":"_posts/androidwords.md","raw":"title: Android词汇\ndate: 2014-10-29 14:55:47\ntags: Android\ncategory: Android\n---\n>关于Android一些只言片语……\n\n## Activity生命周期\n* onCreate()\n* onStart()\n* onResume()\n* onPause()\n* onStop()\n* onDestroy()\n* onRestart()\n* onSaveInstanceState()\n通常来说，跳转到其他的activity或者是点击Home都会导致当前的activity执行onSaveInstanceState\n* onRestoreInstanceState()\n在 onStart() 方法之后执行. 系统仅仅会在存在需要恢复的状态信息时才会调用 onRestoreInstanceState() \n<!--more-->\n## Fragment\n为了执行fragment的增加或者移除操作，必须通过调用 getSupportFragmentManager()方法获取FragmentManager，\n然后调用 beginTransaction() 方法创建一个FragmentTransaction对象, \nFragmentTransaction提供了用来增加、移除、替换以及其它一些操作。\n\n## File\n* internal 内存\n* external SD card\n* Environment.getExternalStorageState()\n\n## \n* explicit 显式\n* implicit 隐式\n* startActivityForResult() \n\n## AsyncTask \n* doInBackground()\n* onPostExecute()\n\n## 网络操作\n* HttpURLConnection\n* Apache HttpClient\n* InputStream\n* Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\n* InputStreamReader\n* ConnectivityManager \n* NetworkInfo \n* NetworkReceiver \n\n## 解析 XML 数据\n* XmlPullParser\n\n\n","slug":"androidwords","published":1,"updated":"2016-03-17T00:44:06.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrai007ozspkh6qq3cax","thumbnailImageUrl":null},{"title":"【译】Android Studio、Android SDK在线更新","date":"2016-04-08T12:23:25.000Z","_content":"> 重点介绍网站http://www.androiddevtools.cn/，收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。感谢脉脉不得语，分享这么棒的AndroidTools！\n\n# 号外\n![](http://7q5c2h.com1.z0.glb.clouddn.com/as2.0.png)\n就在今天，Android Studio终于迎来了2.0正式版更新（此版本最重要的两个更新是：即时运行和 GPU Profiler。同时还有全新的 Android 开发套件，速度强行提升 50 倍），之前Android Studio Preview和Beta版本还存在很多bug，因此不建议更新。\n\n升级注意问题\n1、点击Check for Update不能出现上面的`增量升级`提示，多点击几次Check for Update\n2、升级完成，默认配置gradle1.5，进入后会报错，会有提示，做相应gradle同步\n<!--more-->\n# 前言\n> 原文地址:[http://android-mirror.bugly.qq.com:8080/include/usage.html](http://android-mirror.bugly.qq.com:8080/include/usage.html)\n\n`新手必知技能`：您去更新升级Android Studio时却提示 Connection failed. Please check your network connection and try again，shit，由于墙内，您也无法更新Android SDK，这里分享一篇教程帮您解决此烦恼，原文是英文，我适当做了翻译（本身我英文是渣渣，基本是意译）。\n\n# Android Studio在线更新\n\n1、打开Android Studio安装的bin目录，如'D:\\Android Studio\\bin' \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd1.png)\n\n2、用文本编辑器（Notepad++），64位，打开 'studio64.exe.vmoptions'，32位，则打开studio.exe.vmoptions' \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd2.png)\n\n3、在studio64.exe.vmoptions文件添加如下：\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://android-mirror.bugly.qq.com:8080/AndroidStudio/patches/updates.xml\n-Didea.patches.url=http://android-mirror.bugly.qq.com:8080/AndroidStudio/patches/ \n\n4、点击检测升级Android Studio\n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd3.png)\n\n点击 'Update and Restart'. \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/incremental.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/restart.png)\n\n笔者：到此，Android Studio更新版本完成。\n\n# Android SDK在线更新镜像服务器\n\n1、 打开 Android SDK Manager  \n![](http://7q5c2h.com1.z0.glb.clouddn.com/sdk_manager.png)\n2、配置用户自定义网站\n点击 \"User Defined Sites\"，新建，添加http://android-mirror.bugly.qq.com:8080/android/repository/addon.xml  \n![](http://7q5c2h.com1.z0.glb.clouddn.com/site.png)\n3、配置端口\n勾上 Force https://... sources to be fetched using http://... \n ![](http://7q5c2h.com1.z0.glb.clouddn.com/proxy.png)\n\n笔者：重新打开Android SDK Manager，发现居然能在线更新 \n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n","source":"_posts/androidSdkStudioUpdate.md","raw":"title: 【译】Android Studio、Android SDK在线更新\ndate: 2016-04-08 20:23:25\ntags: [SDK,Android Studio]\ncategory: Android\n---\n> 重点介绍网站http://www.androiddevtools.cn/，收集整理Android开发所需的Android SDK、开发中用到的工具、Android开发教程、Android设计规范，免费的设计素材等。感谢脉脉不得语，分享这么棒的AndroidTools！\n\n# 号外\n![](http://7q5c2h.com1.z0.glb.clouddn.com/as2.0.png)\n就在今天，Android Studio终于迎来了2.0正式版更新（此版本最重要的两个更新是：即时运行和 GPU Profiler。同时还有全新的 Android 开发套件，速度强行提升 50 倍），之前Android Studio Preview和Beta版本还存在很多bug，因此不建议更新。\n\n升级注意问题\n1、点击Check for Update不能出现上面的`增量升级`提示，多点击几次Check for Update\n2、升级完成，默认配置gradle1.5，进入后会报错，会有提示，做相应gradle同步\n<!--more-->\n# 前言\n> 原文地址:[http://android-mirror.bugly.qq.com:8080/include/usage.html](http://android-mirror.bugly.qq.com:8080/include/usage.html)\n\n`新手必知技能`：您去更新升级Android Studio时却提示 Connection failed. Please check your network connection and try again，shit，由于墙内，您也无法更新Android SDK，这里分享一篇教程帮您解决此烦恼，原文是英文，我适当做了翻译（本身我英文是渣渣，基本是意译）。\n\n# Android Studio在线更新\n\n1、打开Android Studio安装的bin目录，如'D:\\Android Studio\\bin' \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd1.png)\n\n2、用文本编辑器（Notepad++），64位，打开 'studio64.exe.vmoptions'，32位，则打开studio.exe.vmoptions' \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd2.png)\n\n3、在studio64.exe.vmoptions文件添加如下：\n-Djava.net.preferIPv4Stack=true\n-Didea.updates.url=http://android-mirror.bugly.qq.com:8080/AndroidStudio/patches/updates.xml\n-Didea.patches.url=http://android-mirror.bugly.qq.com:8080/AndroidStudio/patches/ \n\n4、点击检测升级Android Studio\n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd3.png)\n\n点击 'Update and Restart'. \n![](http://7q5c2h.com1.z0.glb.clouddn.com/asd4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/incremental.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/restart.png)\n\n笔者：到此，Android Studio更新版本完成。\n\n# Android SDK在线更新镜像服务器\n\n1、 打开 Android SDK Manager  \n![](http://7q5c2h.com1.z0.glb.clouddn.com/sdk_manager.png)\n2、配置用户自定义网站\n点击 \"User Defined Sites\"，新建，添加http://android-mirror.bugly.qq.com:8080/android/repository/addon.xml  \n![](http://7q5c2h.com1.z0.glb.clouddn.com/site.png)\n3、配置端口\n勾上 Force https://... sources to be fetched using http://... \n ![](http://7q5c2h.com1.z0.glb.clouddn.com/proxy.png)\n\n笔者：重新打开Android SDK Manager，发现居然能在线更新 \n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n","slug":"androidSdkStudioUpdate","published":1,"updated":"2016-04-12T03:23:12.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrak007rzspk6pk0em6c","thumbnailImageUrl":null},{"title":"Android studio share项目到svn仓库","date":"2015-05-24T16:00:00.000Z","_content":"\n##import into SVN\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-1.png)\n\n##忽略文件\n\nAndroid Studio 中建议过滤的文件：<br>\n.idea 文件夹<br>\n.gradle 文件夹<br>\n所有的 build 文件夹<br>\n所有的 .iml 文件<br>\nlocal.properties 文件<br>\n\nAndroid studio已经自动生成了git的忽略文件，如图：\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-4.png)\n\n但是SVN如下设置不知道为什么没有效果\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-3.png)\n\n目前有两种解决方案：\n\n1、通过TortoiseSVN设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-6.png)\n\n2、上传代码忽略以上提及的文件\n\n##update和commit\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-5.png)\n\n如果没有这两个按钮，通过下面的设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-2.png)\n\n附：\n\n[【AndroidStudio】关于SVN的相关配置简介](http://blog.csdn.net/zhouzme/article/details/22790395)\n\n[Android studio share项目到svn仓库](http://blog.csdn.net/hymking/article/details/45199077)\n\n\n\n","source":"_posts/android-studio-share-to-svn.md","raw":"title: Android studio share项目到svn仓库\ndate: 2015-05-25 \ncategories: [Android Studio]\ntags: [Android Studio]\n---\n\n##import into SVN\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-1.png)\n\n##忽略文件\n\nAndroid Studio 中建议过滤的文件：<br>\n.idea 文件夹<br>\n.gradle 文件夹<br>\n所有的 build 文件夹<br>\n所有的 .iml 文件<br>\nlocal.properties 文件<br>\n\nAndroid studio已经自动生成了git的忽略文件，如图：\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-4.png)\n\n但是SVN如下设置不知道为什么没有效果\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-3.png)\n\n目前有两种解决方案：\n\n1、通过TortoiseSVN设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-6.png)\n\n2、上传代码忽略以上提及的文件\n\n##update和commit\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-5.png)\n\n如果没有这两个按钮，通过下面的设置\n\n![](http://wuxiaolong.qiniudn.com/2015-05-25-android-studio-share-to-svn-2.png)\n\n附：\n\n[【AndroidStudio】关于SVN的相关配置简介](http://blog.csdn.net/zhouzme/article/details/22790395)\n\n[Android studio share项目到svn仓库](http://blog.csdn.net/hymking/article/details/45199077)\n\n\n\n","slug":"android-studio-share-to-svn","published":1,"updated":"2016-03-17T00:44:06.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekram007wzspkuhi1las8","thumbnailImageUrl":null},{"title":"Android小知识库","date":"2015-08-10T06:32:49.000Z","_content":"> 这份是我工作以来，总结的小知识库，有些知识点现在看来太LOW了，把还觉得有用的分享出来！\n\n\n<!--more-->\n# The APK file does not exist on disk.Error while Installing APK\n解决方案：\n![](http://i.stack.imgur.com/2KSyU.png)\n\n\n# Android Studio获取SHA1\n1、全局配置jdk1.8.0_45\\bin（或cd进入bin目录）\n2、keytool -v -list -keystore 你的keystore路径\n3、输入秘钥库口令：如果没设置，这里就是空，直接回车就进去了。\n\n# Genymotion下载虚拟镜像Connection timeout\nAdd new device出现的问题：\n> Failed to deploy virtual device.\n> Unable to create virtual device.Connection timeout occurred.\n\n解决方案：\n1. 当选择Google Nexus 5 - 6.0.0 - API 23 - 1080x1920下载device失败后，到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova下看到genymotion_vbox86p_6.0_160114_090449.ova，大小却是0KB，在C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\genymotion.log，打开该文件，找到类似“http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160114_090449.ova”路径，即您想要下载的镜像文件URL；\n2. 用迅雷去下载，下载完成后放到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova；\n3. 重新点击Google Nexus 5 - 6.0.0 - API 23 - 1080x1920去下载，验证安装后即会显示在设备列表中。\n\n# Android Studio 如何Debug\n单击F5(Step Over)，单行一个个方法执行\n单击F6(Step Into)，单行执行\n单击F7(Step Out)，不往下执行，回到上一行\n单击F8(Resume Program)，跳出当前断点\n\n# Android Studio设置默认的签名文件\n新浪微博SSO登录，微信分享这些都需要签名打包，才能看到效果，设置默认签名文件为自己的签名jks，这样就不需要打包了。\n在app目录下添加你的.jks，然后app的build.gradle文件中的增加以下内容：\n第一种：\n```java\nandroid {  \n    signingConfigs {  \n        debug {  \n            storeFile file(\"你的.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \t\n}\n```\n第二种：\n```java\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"你的.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        debug {\n            signingConfig signingConfigs.release\n        }        \n    }\n}\n```\n这样编译出来的debug版本直接用的是你的正式签名\n\n# Fragment懒加载\n```java\n protected boolean isVisible;\n\n    @Override\n    public void setUserVisibleHint(boolean isVisibleToUser) {\n        super.setUserVisibleHint(isVisibleToUser);\n        if (getUserVisibleHint()) {\n            isVisible = true;\n            onVisible();\n        } else {\n            isVisible = false;\n            onInvisible();\n        }\n    }\n\n    protected void onVisible() {\n       lazyLoad();\n    }\n\t\n    protected void lazyLoad() {\n        if (!isVisible) {\n            return;\n        }\n        getData();\n    }\n\n    protected void onInvisible() {\n    }\n```\n# Android studio头注释和方法注释\nFile | Settings | Editor|File and Code Templates|Includes|File Header\n```java\n/**\n * Created by ${USER} on ${DATE}.\n */\n```\n输入我们想要设置的注释模板\n\n# adapter.getPositionForSelection()和getSectionForPosition()\ngetPositionForSection()根据分类列的索引号获得该序列的首个位置\ngetSectionForPosition()通过该项的位置，获得所在分类组的索引号\n\n# getResources().getColor(R.color.color_name) is deprecated和drawableTop\n```java\n textView.setTextColor(Color.parseColor(\"#FFFFFF\"));\n //或者\n ContextCompat.getColor(context, R.color.color_name)\n```\n\n# showPopupWindow\n```java\n    private void showPopupMenu(View v) {\n        final View bgView = View.inflate(DemoApplication.getContext(), R.layout.demo_popup_window_bg, null);\n        bgView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                hidePopupWindow();\n            }\n        });\n        if (mPopupBackground == null) {\n            mPopupBackground = new PopupWindow(bgView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n        }\n        mPopupBackground.showAtLocation(v, Gravity.BOTTOM, 0, 0);\n    }\n```\nv：父布局\ndemo_popup_window_bg.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/aliwx_common_alpha_black\">\n\n</LinearLayout>\n\n```\n\n# onFinishInflate()\nview的onFinishInflate()何时调用的？\n当View中所有的子控件均被映射成xml后触发；\nMyView mv = (MyView)View.inflate (context,R.layout.my_view,null);\n当加载完成xml后，就会执行那个方法；\n我们一般使用View的流程是在onCreate中使用setContentView来设置要显示Layout文件或直接创建一个View，在当设置了ContentView之后系统会对这个View进行解析，然后回调当前视图View中的onFinishInflate方法。只有解析了这个View我们才能在这个View容器中获取到拥有Id的组件，同样因为系统解析完View之后才会调用onFinishInflate方法，所以我们自定义组件时可以onFinishInflate方法中获取指定子View的引用。\n\n# Fragment设置隐藏或显示某个Fragment\nMainFragment点击\n```java\npublic void onItemClick(AdapterView<?> adapterView, View view,\n                            int position, long id) {\n       \n        ((MainActivity) getActivity()).showImageFragment(true, mData.get(position).get(\"title\").toString(), mData.get(position).get(\"imgUrl\").toString());\n        \n    }\n```\nMainActivity\n```java\npublic void showImageFragment(boolean show, String imgTxt, String imgUrl) {\n        // showActionbarWithTabs(!show);\n        if (show) {\n            getSupportFragmentManager().beginTransaction()\n                    .show(imageDetailFragment).commit();\n            imageDetailFragment.setImgData(imgTxt, imgUrl);\n        } else {\n            getSupportFragmentManager().beginTransaction()\n                    .hide(imageDetailFragment).commit();\n        }\n\n    }\n```\n\n# 获取arrt的值\n不同主题下需要把颜色，数值写成attr属性\nxml里，我们可以简单的引用attr属性值\n```js\nandroid:background=\"?attr/colorPrimary\"\n```\n\n代码获取\n```java\nTypedValue typedValue = new TypedValue();\nmContext.getTheme().resolveAttribute(R.attr.colorPrimary, typedValue, true);\nint colorPrimary = typedValue.data;//value.data里面存储着的就是获取到的colorPrimary的值\n```\n\n# 拨号盘拨打电话\n```java\nIntent intent = new Intent(Intent.ACTION_CALL,\nUri.parse(\"tel:\" + \"400-036-1977\"));\n// intent.setAction(Intent.ACTION_CALL);// 直接拨号\nintent.setAction(Intent.ACTION_DIAL);// 拨号盘\nstartActivity(intent);\n```\n\n# Drawable /Bitmap、String/InputStream、Bitmap/byte[]互转\n[http://wuxiaolong.me/2015/08/10/Drawable-to-Bitmap/](http://wuxiaolong.me/2015/08/10/Drawable-to-Bitmap/)\n\n# ProgressDialog\n```java\nfinal ProgressDialog progress = new ProgressDialog(LoginActivity.this);\n\t\tprogress.setMessage(\"请稍等...\");\n\t\tprogress.setCanceledOnTouchOutside(false);\n\t\tprogress.show();\nprogress.dismiss();\n```\n\n# 毫秒\n毫秒Calendar.getInstance().getTimeInMillis()和System.currentTimeMillis()\n\n# Fragment  setUserVisibleHint(boolean isVisibleToUser)\n```java\n @Override\n    public void setUserVisibleHint(boolean isVisibleToUser) {\n        super.setUserVisibleHint(isVisibleToUser);\n        if (isVisibleToUser) {\n            //相当于Fragment的onResume\n        } else {\n            //相当于Fragment的onPause\n        }\n    }\n```\n\n# Fragment  onActivityResult\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tgetActivity();\n\t\tif (resultCode == Activity.RESULT_OK\n\t\t\t\t&& requestCode == AppUtils.REQUEST_CODE_ISLOGIN) {\n\t\t\t// 检查是否完善资料\n\n\t\t\tif (AppUtils.getSharedPreferences(getActivity()).getBoolean(\n\t\t\t\t\t\"hasPersonalData\", false)) {\n\t\t\t\t// 取本地存取是否完善资料,完善直接提示咨询对话框\n\t\t\t\tconsultationDialog();\n\t\t\t} else {\n\t\t\t\tgetCheckPersonalData();\n\t\t\t}\n\n\t\t}\n\t} \n\nstartActivityForResult(intent,\n\t\t\t\t\t\t\tAppConfig.REQUEST_CODE_DIALOGUE);// 不是调用 getActivity().startActivityForResult()。\n```\n\t\t\t\t\t\t\t\n# dimen代码取值\ngetDimension方法获取到资源文件中定义的dimension值。\n```js\nResources res = getResources();\nfloat fontSize = res.getDimension(R.dimen.font_size);\n```\n\n\n# 数组初始化赋值\n1、创建数组后，通过循环对数组赋值。\n例如代码：\nint [] nums = new int [100];\nfor(int i=0;i<10;i++){\nnums[i] = i;\n}\n2、例如代码：\nint [] nums = {0,1,2,3,4,5,6,7,8,9};\n3、int [] nums = new int[]{0,1,2,3,4,5,6,7,8,9};\n\n4、数组增加元素\n//增加ruby\nList list = new ArrayList();\nfor (int i=0; i\nlist.add(str[i]);\n}\nlist.add(2, \"ruby\"); //list.add(\"ruby\")\nSystem.out.println();\nString[] newStr = list.toArray(new String[1]); //返回一个包含所有对象的指定类型的数组\n\n# Fragment.isAdded()\n```java\nFragment mBeforeFragment = new Fragment();\npublic void switchFragment(Fragment currentFragment) {\nif (currentFragment.isAdded()) {\ngetSupportFragmentManager().beginTransaction().hide(mBeforeFragment).show(currentFragment).commit();\n} else {\ngetSupportFragmentManager().beginTransaction().hide(mBeforeFragment).add(R.id.container, currentFragment).commit();\n}\nmBeforeFragment = currentFragment;\n}\n```\n调用：\n```java\nswitchFragment(HomeFragment.newInstance()); \n```\nHomeFragment\n```java\npublic static HomeFragment homeFragment = null;\n\npublic static HomeFragment newInstance() {\nif (homeFragment == null) {\nhomeFragment = new HomeFragment();\n}\nreturn homeFragment;\n} \n```\n\n# android之inputType属性\n```js\n<EditText android:layout_width=\"fill_parent\" \nandroid:layout_height=\"wrap_content\" \nandroid:inputType=\"phone\" />\n//文本类型，多为大写、小写和数字符号。\n    android:inputType=\"none\"\n    android:inputType=\"text\"\n    android:inputType=\"textCapCharacters\" 字母大写\n    android:inputType=\"textCapWords\" 首字母大写\n    android:inputType=\"textCapSentences\" 仅第一个字母大写\n    android:inputType=\"textAutoCorrect\" 自动完成\n    android:inputType=\"textAutoComplete\" 自动完成\n    android:inputType=\"textMultiLine\" 多行输入\n    android:inputType=\"textImeMultiLine\" 输入法多行（如果支持）\n    android:inputType=\"textNoSuggestions\" 不提示\n    android:inputType=\"textUri\" 网址\n    android:inputType=\"textEmailAddress\" 电子邮件地址\n    android:inputType=\"textEmailSubject\" 邮件主题\n    android:inputType=\"textShortMessage\" 短讯\n    android:inputType=\"textLongMessage\" 长信息\n    android:inputType=\"textPersonName\" 人名\n    android:inputType=\"textPostalAddress\" 地址\n    android:inputType=\"textPassword\" 密码\n    android:inputType=\"textVisiblePassword\" 可见密码\n    android:inputType=\"textWebEditText\" 作为网页表单的文本\n    android:inputType=\"textFilter\" 文本筛选过滤\n    android:inputType=\"textPhonetic\" 拼音输入\n//数值类型\n    android:inputType=\"number\" 数字\n    android:inputType=\"numberSigned\" 带符号数字格式\n    android:inputType=\"numberDecimal\" 带小数点的浮点格式\n    android:inputType=\"phone\" 拨号键盘\n    android:inputType=\"datetime\" 时间日期\n    android:inputType=\"date\" 日期键盘\nandroid:inputType=\"time\" 时间键盘\n```\n\n# ImageView.ScaleType\n（1）ImageView.ScaleType.center:图片位于视图中间，但不执行缩放。\n（2）ImageView.ScaleType.CENTER_CROP 按统一比例缩放图片（保持图片的尺寸比例）便于图片的两维（宽度和高度）等于或者大于相应的视图的维度\n（3）ImageView.ScaleType.CENTER_INSIDE按统一比例缩放图片（保持图片的尺寸比例）便于图片的两维（宽度和高度）等于或者小于相应的视图的维度\n（4）ImageView.ScaleType.FIT_CENTER缩放图片使用center\n（5）ImageView.ScaleType.FIT_END缩放图片使用END\n（6）ImageView.ScaleType.FIT_START缩放图片使用START\n（7）ImageView.ScaleType.FIT_XY缩放图片使用XY\n（8）ImageView.ScaleType.MATRIX当绘制时使用图片矩阵缩放\n\n\n# 调用系统发送短信界面\n```java\n/**\n* 发送短信\n* @param smsBody\n*/\nprivate void sendSMS(String smsBody)\n{\n//Uri smsToUri = Uri.parse(\"smsto:10000\"); //如果想指定发送人\nUri smsToUri = Uri.parse(\"smsto:\");\nIntent intent = new Intent(Intent.ACTION_SENDTO, smsToUri);\nintent.putExtra(\"sms_body\", smsBody);\nstartActivity(intent);\n}\n```\n\n# 跳转市场搜索某款软件\n```java\nIntent intent = new Intent(\n\t\t\t\t\"android.intent.action.VIEW\");\n\t\tintent.setData(Uri\n\t\t\t\t.parse(\"market://details?id=com.adobe.flashplayer\"));\n\t\tstartActivity(intent);\n```\n\n# 检测系统中是否安装某款软件\n```java\n//检测系统中是否已经安装了adobe flash player插件，插件的packageName是com.adobe.flashplayer：\nprivate boolean check() {\n\t\tPackageManager pm = getPackageManager();\n\t\tList<PackageInfo> infoList = pm\n\t\t\t\t.getInstalledPackages(PackageManager.GET_SERVICES);\n\t\tfor (PackageInfo info : infoList) {\n\t\t\tif (\"com.adobe.flashplayer\".equals(info.packageName)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n}\n\nprivate void isAvilible(String packageName) {\n\n\t\tPackageInfo packageInfo;\n\t\ttry {\n\t\t\tpackageInfo = this.getPackageManager().getPackageInfo(packageName,\n\t\t\t\t\t0);\n\n\t\t} catch (NameNotFoundException e) {\n\t\t\tpackageInfo = null;\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (packageInfo != null) {\n//1、通过包名\n\t\t\tIntent intent = new Intent();\n\t\t\tintent = getPackageManager().getLaunchIntentForPackage(packageName);\n\t\t\tstartActivity(intent);\n//2、通过类名： \nIntent intent=new Intent();  \nintent.setComponent(new ComponentName(packageName, \"com.joe.internet.Main\"));  \nstartActivity(intent);  \n\t\t} \n\n\t}\n```\n\n# 对话框菜单\n```java\nnew AlertDialog.Builder(this)\n\t\t\t\t\t\t.setTitle(\"choice\")\n\t\t\t\t\t\t.setItems(new String[] { \"选择1\", \"选择2\", \"选择3\", \"选择4\" },\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog,\n\t\t\t\t\t\t\t\t\t\t\tint which) {\n\t\t\t\t\t\t\t\t\t\tToast.makeText(MyContentActivity.this,\n\t\t\t\t\t\t\t\t\t\t\t\twhich + \"\", Toast.LENGTH_SHORT)\n\t\t\t\t\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).show();\n```\n\n# 定义ProgressBar \n```js\n<ProgressBar\n        android:id=\"@+id/mProgress\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"          android:indeterminateDrawable=\"@drawable/progress_rotate\" />\n```\nprogress_rotate：\n```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <item>\n        <rotate\n            android:drawable=\"@drawable/progressbar\"\n            android:duration=\"300\"\n            android:fromDegrees=\"0.0\"\n            android:pivotX=\"50.0%\"\n            android:pivotY=\"50.0%\"\n            android:toDegrees=\"360.0\" />\n    </item>\n</layer-list>\n```\n\n# 幻灯片效果\nxml\n```js\n<ProgressBar\n        android:id=\"@+id/ProgressBar01\"\n        style=\"@style/animStyle\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:layout_centerInParent=\"true\" />\n```\nstyle\n```js\n<style name=\"animStyle\" parent=\"@android:style/Widget.ProgressBar.Large\">\n        <item name=\"android:indeterminateDrawable\">@anim/test</item>\n</style>\n```\nanim\n```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:oneshot=\"false\" >\n\n    <item\n        android:drawable=\"@drawable/t1\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t2\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t3\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t4\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t5\"\n        android:duration=\"500\"/>\n\n</animation-list>\n```\n\n# MD5加密\n```java\npublic String Md5(String plainText) {\n\t\tString result = \"\";\n\t\ttry {\n\t\t\tMessageDigest md = MessageDigest.getInstance(\"MD5\");\n\t\t\tmd.update(plainText.getBytes());\n\t\t\tbyte b[] = md.digest();\n\n\t\t\tint i;\n\n\t\t\tStringBuffer buf = new StringBuffer(\"\");\n\t\t\tfor (int offset = 0; offset < b.length; offset++) {\n\t\t\t\ti = b[offset];\n\t\t\t\tif (i < 0)\n\t\t\t\t\ti += 256;\n\t\t\t\tif (i < 16)\n\t\t\t\t\tbuf.append(\"0\");\n\t\t\t\tbuf.append(Integer.toHexString(i));\n\t\t\t}\n\t\t\tresult = buf.toString().toUpperCase();// 32位的加密（转成大写）\n\n\t\t\tbuf.toString().substring(8, 24);// 16位的加密\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn result;\n\t}\n```\n\n# 设置自动跳转页面\n## Timer\n```java\nTimer timer = new Timer();\n\t\ttimer.schedule(new TimerTask() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tIntent goIntent = new Intent();\n\t\t\t\tgoIntent.setClass(LauncherActivity.this, DemoActivity.class);\n\t\t\t\tstartActivity(goIntent);\n\t\t\t}\n\t\t}, 3 * 1000);\n\t}\n```\n\n## Handler\n```java\nnew Handler().postDelayed(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tstartActivity(new Intent(SplashScreen.this,\n\t\t\t\t\t\tDomobSampleActivity.class));\n\t\t\t\tfinish();\n\t\t\t}\n\t\t}, 1000);\n```\n\n# 随机取数\n```java\nList<Integer> list = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tlist.add(i);\n\t\t}\n\t\tCollections.shuffle(list);\n\t\tfor (int v : list) {\n\t\t\tLog.d(\"wxl\", \"V===\" + v);\n\t\t}\n```\n或：\n```java\nRandom random = new Random();\nint ran = random.nextInt(keywordsList.size());\n\t\t\tString tmp = keywordsList.get(ran).get(\"keyword\").toString();\n```\n\n# selector下的属性值\n\nandroid:state_pressed\n如果是true，当被点击时显示该图片，如果是false没被按下时显示默认。\nandroid:state_focused\ntrue，获得焦点时显示；false，没获得焦点显示默认。\nandroid:state_selected\ntrue，当被选择时显示该图片；false，当未被选择时显示该图片。\nandroid:state_checkable\ntrue，当\t能使用时显示该图片；false，当CheckBox不能使用时显示该图片。\nandroid:state_checked\ntrue，当CheckBox选中时显示该图片；false，当CheckBox为选中时显示该图片。\nandroid:state_enabled\ntrue，当该组件能使用时显示该图片；false，当该组件不能使用时显示该图片。\nandroid:state_window_focused\ntrue，当此activity获得焦点在最前面时显示该图片；false，当没在最前面时显示该图片。\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\"\n          android:drawable=\"@drawable/button_pressed\"/><!-- pressed -->\n    <item android:state_focused=\"true\"\n          android:drawable=\"@drawable/button_focused\"/><!-- focused -->\n    <item android:drawable=\"@drawable/button_normal\"/><!-- default -->\n</selector>\n```\n\n# 带下划线的EditText\n```java\npublic class LinedEditText extends EditText {\n\tprivate Paint linePaint;\n\tprivate float margin;\n\tprivate int paperColor;\n\n\tpublic LinedEditText(Context paramContext, AttributeSet paramAttributeSet) {\n\t\tsuper(paramContext, paramAttributeSet);\n\t\tthis.linePaint = new Paint();\n\t}\n\t@Override\n\tprotected void onDraw(Canvas paramCanvas) {\n\t\tparamCanvas.drawColor(this.paperColor);\n\t\tint i = getLineCount();// 得到总的行數\n\t\tint j = getHeight();// 获得TextView的高度\n\t\tint k = getLineHeight();// 获得TextView的行高\n\t\tint m = j / k + 1;// 总的线数\n\t\tif (i < m)\n\t\t\ti = m;\n\t\tint n = getCompoundPaddingTop();\n\t\tLog.d(\"wxl\", \"n----\" + n);\n\t\tparamCanvas.drawLine(0.0F, n, getRight(), n, this.linePaint);\n\t\tfor (int i2 = 0;; i2++) {\n\t\t\tif (i2 >= i) {\n\t\t\t\tsetPadding(10 + (int) this.margin, 0, 0, 0);\n\t\t\t\tsuper.onDraw(paramCanvas);\n\t\t\t\tparamCanvas.restore();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tn += k;\n\t\t\tparamCanvas.drawLine(0.0F, n, getRight(), n, this.linePaint);\n\t\t\tparamCanvas.save();\n\t\t}\n\t}\n}\n```\n主要工作就是重载onDraw方法，利用从TextView继承下来的getLineCount函数获取文本所占的行数，以及getLineBounds来获取特定行的基准高度值，而且这个函数第二个参数会返回此行的“外包装”值。再利用这些值绘制这一行的线条。为了让界面的View使用自定义的EditText类，必须在配置文件中进行设置\n\n\n\n# 关闭键盘\n```java\npublic static void hideSoftInput(Activity activity) {\n        if (activity.getCurrentFocus() != null)\n            ((InputMethodManager) activity\n                    .getSystemService(Context.INPUT_METHOD_SERVICE))\n                    .hideSoftInputFromWindow(activity.getCurrentFocus()\n                            .getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);\n    }\n```\n\n# 界面不被弹出的键盘盖住\n一进入activity就弹出键盘\n```js\nandroid:windowSoftInputMode=\"adjustResize\" \nandroid:windowSoftInputMode=\"adjustPan|stateAlwaysVisible\"\n```\n第一个软键盘和输入框会完全分离，而第二个输入框还是会被软键盘盖住一点点\n而且第二个要把两个属性叠加起来，为什么要叠加起来呢，因为如果只用adjustPan 的话需要点击输入框才会弹出软键盘\n\n在 AndroidMainfest.xml中选择哪个activity，设置windowSoftInputMode属性为 \n```js\nadjustUnspecified|stateHidden\nandroid:windowSoftInputMode=\"adjustUnspecified|stateHidden\"\n```\nwindowSoftInputMode各值的含义：\n\nstateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置\n\nstateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示\n\nstateHidden：用户选择activity时，软键盘总是被隐藏\n\nstateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的\n\nstateVisible：软键盘通常是可见的\n\nstateAlwaysVisible：用户选择activity时，软键盘总是显示的状态\n\nadjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示\n\nadjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间\n\nadjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分\n\n# 控件美化Shape\n[http://wuxiaolong.me/2013/07/09/shape/](http://wuxiaolong.me/2013/07/09/shape/)\n\n# 获取版本名称 VersionName\n```java\npublic String getVersionName(Context context) {\n\t\tPackageManager manager = context.getPackageManager();\n\t\tString packageName = context.getPackageName();\n\t\ttry {\n\t\t\tPackageInfo info = manager.getPackageInfo(packageName, 0);\n\t\t\treturn info.versionName;\n\t\t} catch (NameNotFoundException e) {\n\t\t\treturn \"1.0\";\n\t\t}\n\t}\n```\n\n# 获取Android手机设备的IMSI / IMEI 信息\n```java\nTelephonyManager mTelephonyMgr = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\nString imsi = mTelephonyMgr.getSubscriberId(); \nString imei = mTelephonyMgr.getDeviceId(); \nLog.i(\"wxl\", \"imsi=\"+imsi);为null\nLog.i(\"wxl\", \"imei=\"+imei); \n另外不要忘了在AndroidManifest.xml中加上读取手机状态的权限\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n```\n\n# 自定义Log是否显示\n```java\n public class Log {\n        private static final String TAG = \"wxl\";\n        private static final boolean LOG = true;\n        public static void i(String msg) {\n            if (LOG)\n                android.util.Log.i(TAG , msg);\n        }\n        public static void d(String msg) {\n            if (LOG)\n                android.util.Log.d(TAG , msg);\n        }\n        public static void w(String msg) {\n            if (LOG)\n                android.util.Log.w(TAG , msg);\n        }\n        public static void w(String msg, Throwable throwable) {\n            if (LOG)\n                android.util.Log.w(TAG , msg, throwable);\n        }\n        public static void v(String msg) {\n            if (LOG)\n                android.util.Log.v(TAG , msg);\n        }\n        public static void e(String msg) {\n            android.util.Log.e(TAG , msg);\n        }\n        public static void e(String msg, Throwable throwable) {\n            android.util.Log.e(TAG , msg, throwable);\n        }\n    }\n```\n\n# 异步操作AsyncTask \n```java\n参数1：向后台任务的执行方法传递参数的类型 ； \n参数2：在后台任务执行过程中，要求主UI线程处理中间状态，通常是一些UI处理中传递的参数类型；\n参数3：后台任务执行完返回时的参数类型。\n private class MyAsyncTask extends AsyncTask<Integer, String, Void> {\n\n\t\t// 实现抽象方法doInBackground()，代码将在后台线程中执行，由execute()触发\n\t\tprotected Void doInBackground(Integer... params) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// 任务启动，可以在这里显示一个对话框，这里简单处理\n\t\tprotected void onPreExecute() {\n\t\t\tsuper.onPreExecute();\n\t\t}\n\n\t\t// 取消\n\t\tprotected void onCancelled() {\n\t\t\tsuper.onCancelled();\n\t\t}\n\n\t\t// 定义后台进程执行完后的处理\n\t\tprotected void onPostExecute(Void result) {\n\t\t\tsuper.onPostExecute(result);\n\t\t\tToast.makeText(MainActivity.this, \"OK\", Toast.LENGTH_SHORT).show();\n\t\t}\n\n\t\t// 更新进度,在UI主线程执行的内容，将item加入list中。方法中的参数为范式方式，实质为数组，由于我们只传递了item一个String，要获取，为values[0]\n\t\tprotected void onProgressUpdate(String... values) {\n\t\t\tsuper.onProgressUpdate(values);\n\t\t}\n\n\t}\n```\n调用：\n```java\nnew MyAsyncTask().execute(参数1);// 创建后台任务的对象\n```\n\n# 检查网络状态\n```java\npublic boolean checkNetworkInfo() {\n\t\tConnectivityManager conMan = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t\t// mobile 3G Data Network\n\t\tState mobile = conMan.getNetworkInfo(ConnectivityManager.TYPE_MOBILE)\n\t\t\t\t.getState();\n\t\t// wifi\n\t\tState wifi = conMan.getNetworkInfo(ConnectivityManager.TYPE_WIFI)\n\t\t\t\t.getState();\n\t\t// 如果3G网络和wifi网络都未连接，且不是处于正在连接状态 则进入Network Setting界面 由用户配置网络连接\n\t\tif (mobile == State.CONNECTED || mobile == State.CONNECTING)\n\t\t\treturn true;\n\t\tif (wifi == State.CONNECTED || wifi == State.CONNECTING)\n\t\t\treturn true;\n\t\tAlertDialog.Builder builder = new AlertDialog.Builder(this);\n\t\tbuilder.setMessage(getResources().getString(R.string.no_network))\n\t\t\t\t.setCancelable(false)\n\t\t\t\t.setPositiveButton(\n\t\t\t\t\t\tgetResources().getString(R.string.configuration),\n\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int id) {\n\n\t\t\t\t\t\t\t\t// 进入无线网络配置界面\n\t\t\t\t\t\t\t\tstartActivity(new Intent(\n\t\t\t\t\t\t\t\t\t\tSettings.ACTION_WIRELESS_SETTINGS));\n\t\t\t\t\t\t\t\tMainActivity.this.finish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t.setNegativeButton(getResources().getString(R.string.quit),\n\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int id) {\n\t\t\t\t\t\t\t\tMainActivity.this.finish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\tbuilder.show();\n\t\treturn false;\n\t}\n```\n代码判断调用：\n```java\n// 检查网络状态\n\t\tif (!checkNetworkInfo()) {\n\t\t\treturn;\n\t\t}\n```\n\n# Html.fromHtml（）\n让数据接受网页的格式\n```java\nURLEncoder.encode(String s); 网址请求中文解析\n&#8230;代表省略号\n```\n# URLEncoder.encode\n网址请求带中文\n```java\nURLEncoder.encode(content, \"utf-8\")\n```\n\n# Android中字体加粗\n* 在xml文件中使用\n```js\nandroid:textStyle=”bold”\n```\n* Java 代码\n\n（网上查XML不能将中文设置成粗体，只能通过Java code。Android 2.2 可以通过XML将中文设置成粗体）\n\n```java\n  TextView tv = (TextView)findViewById(R.id.TextView01); \n  TextPaint tp = tv.getPaint();\n  tp.setFakeBoldText(true);\n```\n* Html.fromHtml(\"\\<\\b>\")\n\n```java\n(1)viewHolder.title.setText(Html.fromHtml(\"<b>\"\n\t\t\t\t+ listTitle.get(position).get(\"title\") + \"</b>\"));\n(2)TextView.setText(Html.fromHtml(\"<font color=#FF0000>hello</font>\"));\n```\n\n# 代码设置背景图setImageResource/setBackgroundResource\n```java\ntextView.setBackgroundResource(R.drawable.bg_menu_1);设置背景图片\ntextView.setBackgroundColor(0xffffffff);\nsetImageResource與xml中的src的屬性才是相匹配的，而setBackgroundResource是與xml中的background屬性相匹配\n的\nholder.chat_sound_iv_right.setBackgroundResource(0);//没有图片\n```\n\n# android中的ellipsize\n```java\n用法如下：\n在xml中\nandroid:ellipsize = \"end\"　　  省略号在结尾\nandroid:ellipsize = \"start\" 　　省略号在开头\nandroid:ellipsize = \"middle\"     省略号在中间\nandroid:ellipsize = \"marquee\"  跑马灯\n最好加一个约束android:singleline = \"true\"\n跑马灯\nandroid:singleLine=\"true\"\nandroid:ellipsize=\"marquee\"\nandroid:focusableInTouchMode=\"true\"\nandroid:focusable=\"true\"\nandroid:marqueeRepeatLimit=\"marquee_forever\"\nandroid:singleLine=true 表示使用单行文字，多行文字也就无所谓使用Marquee效果了。\nandroid:marqueeRepeatLimit，设置走马灯滚动的次数。\nandroid:ellipsize，设置了文字过长时如何切断文字，可以有none, start,middle, end, 如果使用走马灯效果则设为marquee.\nandroid:focusable，Android的缺省行为是在控件获得Focus时才会显示走马灯效果\n```\n\n# 控件点击效果\n```js\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_focused=\"true\" android:state_pressed=\"false\" android:drawable=\"@drawable/professional_1\"/>\n    <item android:state_focused=\"false\" android:state_pressed=\"true\" android:drawable=\"@drawable/professional_1\"/>\n    <item android:drawable=\"@drawable/professional\"/>\n</selector>\n```\n\n# 保留小数点\n方法一：\n```java\nprivate DecimalFormat df;\ndf = new DecimalFormat(\"0.0\");\nfloat data;\ndf.format(data);//返回值\n```\n方法二：\n```java\ndouble juli = 1569;\nString result = String.format(\"%.1f\", juli/1000);\n```\n\n# RadioGroup\n```js\n<RadioGroup\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"vertical\" >\n\n       <RadioButton\n           android:id=\"@+id/open\"\n           android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:layout_marginLeft=\"10dip\"\n           android:layout_marginTop=\"10dip\"\n           android:button=\"@drawable/radiobutton\"\n           android:checked=\"true\"\n           android:text=\"@string/open_album\"\n           android:textColor=\"#000000\"\n           android:textSize=\"16dip\" />\n\n       <RadioButton\n           android:id=\"@+id/secrecy\"\n           android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:layout_marginLeft=\"10dip\"\n           android:button=\"@drawable/radiobutton\"\n           android:text=\"@string/secrecy_album\"\n           android:textColor=\"#000000\"\n           android:textSize=\"16dip\" />\n   </RadioGroup>\n\n```\nandroid:button=\"@null\"  去除RadioButton前面的圆点\nandroid:background=\"@drawable/radio\" 使用定义的样式\n\n# 占位符%s替换\n%d   （表示整数）\n%f    （表示浮点数）\n%s   （表示字符串）\ntxt.setText(String.format (“被替换%1$s”,”替换内容”));\n\n# TextView中嵌套图片Drawable\n```java\nDrawable drawable = getResources().getDrawable(R.drawable.ji_dot_nor);\ndrawable.setBounds(0, 0, drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight());\ntextView.setCompoundDrawablesWithIntrinsicBounds(null, drawable, null, null);  \n说明：setCompoundDrawablesWithIntrinsicBounds(left, top, right, bottom)\n意思是设置Drawable显示在text的左、上、右、下位置。(Textview、Button都可以)\n```\n\n# TextView做成分割线\n```js\n<TextView\n     android:id=\"@id/textView2\"\n     android:layout_width=\"fill_parent\"\n     android:layout_height=\"2.0px\"\nandroid:background=\"@color/orange\" />\n```\n\n# SpannableString单击文字链接\n```java\nSpannableString spannableString = new SpannableString(str);\n\t\tspannableString.setSpan(new ClickableSpan() {\n\t\t\tpublic void onClick(View view) {\n\t\t\t\t// Intent intent = new Intent(ApkTest.this, Apk.class);\n\t\t\t\tIntent intent = new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:\"\n\t\t\t\t\t\t+ \"15261589767\"));\n\t\t\t\tstartActivity(intent);\n\t\t\t}\n\t\t}, 0, str.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n\t\tTextView.setText(spannableString);\n\t\tTextView.setMovementMethod(LinkMovementMethod.getInstance());\n```\n\n# TextView中文字通过SpannableString\n来设置超链接、颜色、字体等属性\n```java\nString  title =”123456”;\nSpannableString titleStr = new SpannableString(title);\ntitleStr.setSpan(new ForegroundColorSpan(Color.RED), 0,\n\t\t\t\t\t\ttitleStr.length(), 0);\ntextView.setText(titleStr);\n```\n\n# android:drawableTop属性\n写在TextView里，实现图片+文字\n\n# 获取分辨率\n```java\nDisplayMetrics displayMetrics = new DisplayMetrics();\ngetWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n\ndisplayMetrics.widthPixels + \"x\"\n\t\t\t\t+ displayMetrics.heightPixels;\n```\n# 代码完成控件\n\nButton\n```java\nlinearLayout = (LinearLayout) findViewById(R.id.linearLayout2);\nLayoutParams layoutParams = new LinearLayout.LayoutParams(0,\n\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT, 1);//1均分属性\nlayoutParams.setMargins(10, 10, 10, 10);\n\nButton button = new Button(MainActivity.this);\nbutton.setLayoutParams(layoutParams);\nlinearLayout.addView(button);\n```\nTextView\n```java\nprivate TextView overlay;\nprivate void initOverlay() {\n\t\tLayoutInflater inflater = LayoutInflater.from(this);\n\t\toverlay = (TextView) inflater.inflate(R.layout.overlay, null);\n\t\toverlay.setVisibility(View.INVISIBLE);\n\t\tWindowManager.LayoutParams lp = new WindowManager.LayoutParams(\n\t\t\t\tLayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT,\n\t\t\t\tWindowManager.LayoutParams.TYPE_APPLICATION,\n\t\t\t\tWindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n\t\t\t\t\t\t| WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\n\t\t\t\tPixelFormat.TRANSLUCENT);\n\t\tWindowManager windowManager = (WindowManager) this\n\t\t\t\t.getSystemService(Context.WINDOW_SERVICE);\n\t\twindowManager.addView(overlay, lp);\n\t}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:background=\"#ffffff\"\n    android:gravity=\"center\"\n    android:maxWidth=\"80dip\"\n    android:minWidth=\"80dip\"\n    android:padding=\"5dip\"\n    android:textColor=\"#3399ff\"\n    android:textSize=\"70sp\" />\n\n\nprivate LinearLayout.LayoutParams layoutParams = null;\n\t\tprivate LinearLayout.LayoutParams btnParmas;\n\nlayoutParams = new LinearLayout.LayoutParams(\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT,\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT);\n\t\t\t\t\tlayoutParams.setMargins(\n\t\t\t\t\t\t\t(int) getResources().getDimension(\n\t\t\t\t\t\t\t\t\tR.dimen.lable_left), 0, 0, 0);\n\t\t\t\t\tbtnParmas = new LinearLayout.LayoutParams(\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT,\n\t\t\t\t\t\t\t(int) getResources().getDimension(\n\t\t\t\t\t\t\t\t\tR.dimen.lable_height));\n\n\t\t\t\t\tfor (int i = 0; i < lables.length; i++) {\n\t\t\t\t\t\tLinearLayout linearLayout = new LinearLayout(activity);\n\t\t\t\t\t\tlableColor = random.nextInt(lableColors.length);\n\t\t\t\t\t\tButton lable = new Button(activity);\n\t\t\t\t\t\tlable.setText(lables[i]);\n\t\t\t\t\t\tlable.setGravity(Gravity.CENTER_HORIZONTAL\n\t\t\t\t\t\t\t\t| Gravity.CENTER_VERTICAL);\n\t\t\t\t\t\tlable.setTextSize(getResources().getDimension(\n\t\t\t\t\t\t\t\tR.dimen.lable));\n\t\t\t\t\t\tlable.setTextColor(getResources().getColor(\n\t\t\t\t\t\t\t\tR.color.white));\n\t\t\t\t\t\tlable.setBackgroundResource(lableColors[i]);\n\t\t\t\t\t\tlinearLayout.addView(lable, btnParmas);\n\t\t\t\t\t\tholder.play_lables.addView(linearLayout, layoutParams);\n\t\t\t\t\t}\n```\n# TextWatcher\n```java\neditText1.addTextChangedListener(watcher);\nTextWatcher watcher = new TextWatcher() {\n\t\tpublic void onTextChanged(CharSequence arg0, int arg1, int arg2,\n\t\t\t\tint arg3) {\n\t\t}\n\t\tpublic void beforeTextChanged(CharSequence arg0, int arg1, int arg2,\n\t\t\t\tint arg3) {\n\t\t}\n\t\tpublic void afterTextChanged(Editable arg0) {\t\t\t\n\t\t}\n\t};\n```\n# 屏幕旋转时不销毁\n```js\nAndroidManifest加入\nandroid:configChanges=\"orientation|keyboardHidden\"\n```\n获取屏幕方向\n```java\nConfiguration newConfig = getResources().getConfiguration();    \n        if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE){    \n            //横屏    \n         }else if(newConfig.orientation == Configuration.ORIENTATION_PORTRAIT){    \n            //竖屏    \n         }else if(newConfig.hardKeyboardHidden == Configuration.KEYBOARDHIDDEN_NO){    \n            //键盘没关闭。屏幕方向为横屏    \n         }else if(newConfig.hardKeyboardHidden == Configuration.KEYBOARDHIDDEN_YES){    \n            //键盘关闭。屏幕方向为竖屏    \n         } \n```\n\n# List增加数据\n## 简单\n```java\nprivate List<String> getData() {\n\t\tList<String> data = new ArrayList<String>();\n\t\tdata.add(\"123\");\n\t\tdata.add(\"345\");\n\t\tdata.add(\"456\");\n\t\tdata.add(\"567\");\n\t\treturn data;\n\t}\n```\n## 键值对\n```java\nprivate List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();\n \n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(\"title\", \"G1\");\n        map.put(\"info\", \"google 1\");\n        map.put(\"img\", R.drawable.i1);\n        list.add(map);\n \n        map = new HashMap<String, Object>();\n        map.put(\"title\", \"G2\");\n        map.put(\"info\", \"google 2\");\n        map.put(\"img\", R.drawable.i2);\n        list.add(map);\n \n        map = new HashMap<String, Object>();\n        map.put(\"title\", \"G3\");\n        map.put(\"info\", \"google 3\");\n        map.put(\"img\", R.drawable.i3);\n        list.add(map);\n         \n        return list;\n    }\n```\n清除数据：\n```java\ndata.clear();\nlistView.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_expandable_list_item_1,getData()));\n```\n## LinkedList\n```java\nLinkedList<String> list = new LinkedList<String>();\nlist.addFirst(\"000\");\n```\n\n# 验证是否手机号码\n```java\npublic boolean isMobileNO(String mobiles) {\n\t\tString expression = \"((^(13|15|18)[0-9]{9}$)|(^0[1,2]{1}\\\\d{1}-?\\\\d{8}$)|(^0[3-9] {1}\\\\d{2}-?\\\\d{7,8}$)|(^0[1,2]{1}\\\\d{1}-?\\\\d{8}-(\\\\d{1,4})$)|(^0[3-9]{1}\\\\d{2}-? \\\\d{7,8}-(\\\\d{1,4})$))\";\n\t\tPattern pattern = Pattern.compile(expression);\n\t\tMatcher matcher = pattern.matcher(mobiles);\n\t\tLog.d(\"wxl\", matcher.matches() + \"\");\n\t\treturn matcher.matches();\n\t}\n```\n\n# 正则表达式数字验证\n```java\npublic boolean isNumber(String str)\n    {\n        java.util.regex.Pattern pattern=java.util.regex.Pattern.compile(\"[0-9]*\");\n        java.util.regex.Matcher match=pattern.matcher(str);\n        if(match.matches()==false)\n        {\n             return false;\n        }\n        else\n        {\n             return true;\n        }\n    }\n```\n\n# SharedPreferences\n## SharedPreferences存数据\n```java\nSharedPreferences sharedPreferences = getSharedPreferences(\"test\", Context.MODE_PRIVATE);\nEditor editor = sharedPreferences.edit();//获取编辑器\neditor.putString(\"name\", \"张三\");\neditor.putInt(\"age\", 24);\neditor.putBoolean(\"AutoLogin\", false);\n\neditor.commit();//提交修改\n```\n## SharedPreferences取数据\n```java\nSharedPreferences sharedPreferences = getSharedPreferences(\"test\", Context.MODE_PRIVATE);\n//getString()第二个参数为缺省值,如果preference中不存在该key,将返回缺省值\nString name = sharedPreferences.getString(\"name\", \"\");\nint age = sharedPreferences.getInt(\"age\", 1);\nboolean autoLogin= sharedPreferences. getBoolean(\"AutoLogin\", false);\n```\n# Intent 传值\n\n## 简单传值\nActivityPage\n```java\nIntent intent = new Intent(ActivityPage.this, Player.class);\n\t\t\t//保存信息\n\t\t\tBundle mBundle = new Bundle();\n\t\t\tmBundle.putString(\"realname \", realname);\n\t\t\tintent.putExtras(mBundle);\n```\nPlayer接受\n```java\nrealname = this.getIntent().getStringExtra(\"realname\");\nIntent intent = new Intent();\nintent.setClass(HomeActivity.this, CompanyActivity.class);\nintent.putExtra(\"mCompanySupply\", mCompanySupply);\n\t\t\t\tstartActivity(intent);\nCompanyActivity.class:\nArrayList<ClassifySub3Bean>  mCompanySupply = (ArrayList<ClassifySub3Bean>) getIntent()\n\t\t\t\t.getSerializableExtra(\"mCompanySupply\");\n```\n# 复杂传值\nA页面：\n```java\nprivate static final int REQUEST_CODE_A = 0;\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\n\t\t\t\tBundle bundle = new Bundle();\n\t\t\t\tintent.setClass(MainActivity.this, TestBActivity.class);\n\t\t\t\tbundle.putString(\"msg\", textView.getText().toString());\n\t\t\t\tintent.putExtras(bundle);\n\t\t\t\tstartActivityForResult(intent, REQUEST_CODE_A);\n\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (requestCode == REQUEST_CODE_A && resultCode == RESULT_OK) {\n\t\t\tString str=data.getExtras().getString(\"result\");\n\t\t}\n\t}\n```\nB页面\n```java\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\n\t\t\t\tintent.putExtra(\"result\", textView.getText().toString());\n\t\t\t\tsetResult(RESULT_OK, intent);\n\t\t\t\tfinish();\n\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n\t\tif (keyCode == KeyEvent.KEYCODE_BACK) {\n\t\t\tIntent intent = new Intent();\n\t\t\tintent.putExtra(\"result\", \"直接返回\");\n\t\t\tsetResult(RESULT_OK, intent);\n\t\t\tthis.finish();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onKeyDown(keyCode, event);\n\t\t}\n\t}\n```\n## List\n```java\nIntent intent = new Intent();\n\t\t\t\t\tintent.putStringArrayListExtra(\"mSelectedPhotos\",\n\t\t\t\t\t\t\tmSelectedPhotos);\n\t\t\t\t\tsetResult(RESULT_OK, intent);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tArrayList<String> mSelectedPhotos = (ArrayList<String>) intent\n\t\t\t\t\t\t.getStringArrayListExtra(\"mSelectedPhotos\");\n```\n# xml文件中导入另一个xml文件的方法include\n```js\n<include \nandroid:id=\"@+id/included1\"\nlayout=\"@layout/anotherlayout\" />\n```\n# 单击返回键两次退出\n```java\nprivate static Boolean isExit = false;\n        @Override\n        public boolean onKeyDown(int keyCode, KeyEvent event) {\n                if (keyCode == KeyEvent.KEYCODE_BACK) {\n                        if (isExit == false) {\n                                isExit = true;\n                                Toast.makeText(this, \"再按一次退出程序\", Toast.LENGTH_SHORT).show();\n                                new Timer().schedule(new TimerTask() {\n                                        @Override\n                                        public void run() {\n                                                isExit = false;\n                                        }\n                                }, 2000);\n                        } else {\n                                finish();\n                                System.exit(0);\n                        }\n                }\n                return false;\n        }\n```\n或者\n```java\n@Override \n    public boolean onKeyUp(int keyCode, KeyEvent event) { \n        if (keyCode == KeyEvent.KEYCODE_BACK) { \n            long secondTime = System.currentTimeMillis(); \n            if (secondTime - firstTime > 800) {//如果两次按键时间间隔大于800毫秒，则不退出 \n                Toast.makeText(MainActivity.this, \"再按一次退出程序...\", \n                        Toast.LENGTH_SHORT).show(); \n                firstTime = secondTime;//更新firstTime \n                return true; \n            } else { \n                System.exit(0);//否则退出程序 \n            } \n        } \n        return super.onKeyUp(keyCode, event); \n    }\n```\n\n# 图片左右循环移动\n```java\nTranslateAnimation left, right;\nright = new TranslateAnimation(Animation.RELATIVE_TO_PARENT, -1f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, -2f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, 0f, Animation.RELATIVE_TO_PARENT,\n\t\t\t\t0f);\n\t\tleft = new TranslateAnimation(Animation.RELATIVE_TO_PARENT, -2f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, -1f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, 0f, Animation.RELATIVE_TO_PARENT,\n\t\t\t\t0f);\n\t\tright.setDuration(25000);\n\t\tleft.setDuration(25000);\n\t\tright.setFillAfter(true);\n\t\tleft.setFillAfter(true);\n\n\t\tright.setAnimationListener(new Animation.AnimationListener() {\n\t\t\t@Override\n\t\t\tpublic void onAnimationStart(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationRepeat(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationEnd(Animation animation) {\n\t\t\t\trunImage.startAnimation(left);\n\t\t\t}\n\t\t});\n\t\tleft.setAnimationListener(new Animation.AnimationListener() {\n\t\t\t@Override\n\t\t\tpublic void onAnimationStart(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationRepeat(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationEnd(Animation animation) {\n\t\t\t\trunImage.startAnimation(right);\n\t\t\t}\n\t\t});\n\t\trunImage.startAnimation(right);\n```\n\n\n# 控件左右抖动\nres下anim\nanimlayout.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"1000\"\n    android:fromXDelta=\"0\"\n    android:interpolator=\"@anim/cycle_7\"\n    android:toXDelta=\"10\" />\n```\ncycle_7.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<cycleInterpolator xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:cycles=\"7\" />\n```\n(2)java代码\n```java\nAnimation shake = AnimationUtils.loadAnimation(\n\t\t\t\t\t\tMainActivity.this, R.anim.animlayout);\n\t\t\t\tbtn.setAnimation(shake);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/android-small-knowledge-base.md","raw":"title: Android小知识库\ndate: 2015-08-10 14:32:49\ntags: Android\ncategory: [Android]\n---\n> 这份是我工作以来，总结的小知识库，有些知识点现在看来太LOW了，把还觉得有用的分享出来！\n\n\n<!--more-->\n# The APK file does not exist on disk.Error while Installing APK\n解决方案：\n![](http://i.stack.imgur.com/2KSyU.png)\n\n\n# Android Studio获取SHA1\n1、全局配置jdk1.8.0_45\\bin（或cd进入bin目录）\n2、keytool -v -list -keystore 你的keystore路径\n3、输入秘钥库口令：如果没设置，这里就是空，直接回车就进去了。\n\n# Genymotion下载虚拟镜像Connection timeout\nAdd new device出现的问题：\n> Failed to deploy virtual device.\n> Unable to create virtual device.Connection timeout occurred.\n\n解决方案：\n1. 当选择Google Nexus 5 - 6.0.0 - API 23 - 1080x1920下载device失败后，到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova下看到genymotion_vbox86p_6.0_160114_090449.ova，大小却是0KB，在C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\genymotion.log，打开该文件，找到类似“http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160114_090449.ova”路径，即您想要下载的镜像文件URL；\n2. 用迅雷去下载，下载完成后放到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova；\n3. 重新点击Google Nexus 5 - 6.0.0 - API 23 - 1080x1920去下载，验证安装后即会显示在设备列表中。\n\n# Android Studio 如何Debug\n单击F5(Step Over)，单行一个个方法执行\n单击F6(Step Into)，单行执行\n单击F7(Step Out)，不往下执行，回到上一行\n单击F8(Resume Program)，跳出当前断点\n\n# Android Studio设置默认的签名文件\n新浪微博SSO登录，微信分享这些都需要签名打包，才能看到效果，设置默认签名文件为自己的签名jks，这样就不需要打包了。\n在app目录下添加你的.jks，然后app的build.gradle文件中的增加以下内容：\n第一种：\n```java\nandroid {  \n    signingConfigs {  \n        debug {  \n            storeFile file(\"你的.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \t\n}\n```\n第二种：\n```java\nandroid {  \n    signingConfigs {  \n        release {  \n            storeFile file(\"你的.jks\")\n            storePassword 'android'\n            keyAlias 'android'\n            keyPassword 'android'\n        }          \n    }  \n\tbuildTypes {\n        debug {\n            signingConfig signingConfigs.release\n        }        \n    }\n}\n```\n这样编译出来的debug版本直接用的是你的正式签名\n\n# Fragment懒加载\n```java\n protected boolean isVisible;\n\n    @Override\n    public void setUserVisibleHint(boolean isVisibleToUser) {\n        super.setUserVisibleHint(isVisibleToUser);\n        if (getUserVisibleHint()) {\n            isVisible = true;\n            onVisible();\n        } else {\n            isVisible = false;\n            onInvisible();\n        }\n    }\n\n    protected void onVisible() {\n       lazyLoad();\n    }\n\t\n    protected void lazyLoad() {\n        if (!isVisible) {\n            return;\n        }\n        getData();\n    }\n\n    protected void onInvisible() {\n    }\n```\n# Android studio头注释和方法注释\nFile | Settings | Editor|File and Code Templates|Includes|File Header\n```java\n/**\n * Created by ${USER} on ${DATE}.\n */\n```\n输入我们想要设置的注释模板\n\n# adapter.getPositionForSelection()和getSectionForPosition()\ngetPositionForSection()根据分类列的索引号获得该序列的首个位置\ngetSectionForPosition()通过该项的位置，获得所在分类组的索引号\n\n# getResources().getColor(R.color.color_name) is deprecated和drawableTop\n```java\n textView.setTextColor(Color.parseColor(\"#FFFFFF\"));\n //或者\n ContextCompat.getColor(context, R.color.color_name)\n```\n\n# showPopupWindow\n```java\n    private void showPopupMenu(View v) {\n        final View bgView = View.inflate(DemoApplication.getContext(), R.layout.demo_popup_window_bg, null);\n        bgView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                hidePopupWindow();\n            }\n        });\n        if (mPopupBackground == null) {\n            mPopupBackground = new PopupWindow(bgView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n        }\n        mPopupBackground.showAtLocation(v, Gravity.BOTTOM, 0, 0);\n    }\n```\nv：父布局\ndemo_popup_window_bg.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/aliwx_common_alpha_black\">\n\n</LinearLayout>\n\n```\n\n# onFinishInflate()\nview的onFinishInflate()何时调用的？\n当View中所有的子控件均被映射成xml后触发；\nMyView mv = (MyView)View.inflate (context,R.layout.my_view,null);\n当加载完成xml后，就会执行那个方法；\n我们一般使用View的流程是在onCreate中使用setContentView来设置要显示Layout文件或直接创建一个View，在当设置了ContentView之后系统会对这个View进行解析，然后回调当前视图View中的onFinishInflate方法。只有解析了这个View我们才能在这个View容器中获取到拥有Id的组件，同样因为系统解析完View之后才会调用onFinishInflate方法，所以我们自定义组件时可以onFinishInflate方法中获取指定子View的引用。\n\n# Fragment设置隐藏或显示某个Fragment\nMainFragment点击\n```java\npublic void onItemClick(AdapterView<?> adapterView, View view,\n                            int position, long id) {\n       \n        ((MainActivity) getActivity()).showImageFragment(true, mData.get(position).get(\"title\").toString(), mData.get(position).get(\"imgUrl\").toString());\n        \n    }\n```\nMainActivity\n```java\npublic void showImageFragment(boolean show, String imgTxt, String imgUrl) {\n        // showActionbarWithTabs(!show);\n        if (show) {\n            getSupportFragmentManager().beginTransaction()\n                    .show(imageDetailFragment).commit();\n            imageDetailFragment.setImgData(imgTxt, imgUrl);\n        } else {\n            getSupportFragmentManager().beginTransaction()\n                    .hide(imageDetailFragment).commit();\n        }\n\n    }\n```\n\n# 获取arrt的值\n不同主题下需要把颜色，数值写成attr属性\nxml里，我们可以简单的引用attr属性值\n```js\nandroid:background=\"?attr/colorPrimary\"\n```\n\n代码获取\n```java\nTypedValue typedValue = new TypedValue();\nmContext.getTheme().resolveAttribute(R.attr.colorPrimary, typedValue, true);\nint colorPrimary = typedValue.data;//value.data里面存储着的就是获取到的colorPrimary的值\n```\n\n# 拨号盘拨打电话\n```java\nIntent intent = new Intent(Intent.ACTION_CALL,\nUri.parse(\"tel:\" + \"400-036-1977\"));\n// intent.setAction(Intent.ACTION_CALL);// 直接拨号\nintent.setAction(Intent.ACTION_DIAL);// 拨号盘\nstartActivity(intent);\n```\n\n# Drawable /Bitmap、String/InputStream、Bitmap/byte[]互转\n[http://wuxiaolong.me/2015/08/10/Drawable-to-Bitmap/](http://wuxiaolong.me/2015/08/10/Drawable-to-Bitmap/)\n\n# ProgressDialog\n```java\nfinal ProgressDialog progress = new ProgressDialog(LoginActivity.this);\n\t\tprogress.setMessage(\"请稍等...\");\n\t\tprogress.setCanceledOnTouchOutside(false);\n\t\tprogress.show();\nprogress.dismiss();\n```\n\n# 毫秒\n毫秒Calendar.getInstance().getTimeInMillis()和System.currentTimeMillis()\n\n# Fragment  setUserVisibleHint(boolean isVisibleToUser)\n```java\n @Override\n    public void setUserVisibleHint(boolean isVisibleToUser) {\n        super.setUserVisibleHint(isVisibleToUser);\n        if (isVisibleToUser) {\n            //相当于Fragment的onResume\n        } else {\n            //相当于Fragment的onPause\n        }\n    }\n```\n\n# Fragment  onActivityResult\n```java\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tgetActivity();\n\t\tif (resultCode == Activity.RESULT_OK\n\t\t\t\t&& requestCode == AppUtils.REQUEST_CODE_ISLOGIN) {\n\t\t\t// 检查是否完善资料\n\n\t\t\tif (AppUtils.getSharedPreferences(getActivity()).getBoolean(\n\t\t\t\t\t\"hasPersonalData\", false)) {\n\t\t\t\t// 取本地存取是否完善资料,完善直接提示咨询对话框\n\t\t\t\tconsultationDialog();\n\t\t\t} else {\n\t\t\t\tgetCheckPersonalData();\n\t\t\t}\n\n\t\t}\n\t} \n\nstartActivityForResult(intent,\n\t\t\t\t\t\t\tAppConfig.REQUEST_CODE_DIALOGUE);// 不是调用 getActivity().startActivityForResult()。\n```\n\t\t\t\t\t\t\t\n# dimen代码取值\ngetDimension方法获取到资源文件中定义的dimension值。\n```js\nResources res = getResources();\nfloat fontSize = res.getDimension(R.dimen.font_size);\n```\n\n\n# 数组初始化赋值\n1、创建数组后，通过循环对数组赋值。\n例如代码：\nint [] nums = new int [100];\nfor(int i=0;i<10;i++){\nnums[i] = i;\n}\n2、例如代码：\nint [] nums = {0,1,2,3,4,5,6,7,8,9};\n3、int [] nums = new int[]{0,1,2,3,4,5,6,7,8,9};\n\n4、数组增加元素\n//增加ruby\nList list = new ArrayList();\nfor (int i=0; i\nlist.add(str[i]);\n}\nlist.add(2, \"ruby\"); //list.add(\"ruby\")\nSystem.out.println();\nString[] newStr = list.toArray(new String[1]); //返回一个包含所有对象的指定类型的数组\n\n# Fragment.isAdded()\n```java\nFragment mBeforeFragment = new Fragment();\npublic void switchFragment(Fragment currentFragment) {\nif (currentFragment.isAdded()) {\ngetSupportFragmentManager().beginTransaction().hide(mBeforeFragment).show(currentFragment).commit();\n} else {\ngetSupportFragmentManager().beginTransaction().hide(mBeforeFragment).add(R.id.container, currentFragment).commit();\n}\nmBeforeFragment = currentFragment;\n}\n```\n调用：\n```java\nswitchFragment(HomeFragment.newInstance()); \n```\nHomeFragment\n```java\npublic static HomeFragment homeFragment = null;\n\npublic static HomeFragment newInstance() {\nif (homeFragment == null) {\nhomeFragment = new HomeFragment();\n}\nreturn homeFragment;\n} \n```\n\n# android之inputType属性\n```js\n<EditText android:layout_width=\"fill_parent\" \nandroid:layout_height=\"wrap_content\" \nandroid:inputType=\"phone\" />\n//文本类型，多为大写、小写和数字符号。\n    android:inputType=\"none\"\n    android:inputType=\"text\"\n    android:inputType=\"textCapCharacters\" 字母大写\n    android:inputType=\"textCapWords\" 首字母大写\n    android:inputType=\"textCapSentences\" 仅第一个字母大写\n    android:inputType=\"textAutoCorrect\" 自动完成\n    android:inputType=\"textAutoComplete\" 自动完成\n    android:inputType=\"textMultiLine\" 多行输入\n    android:inputType=\"textImeMultiLine\" 输入法多行（如果支持）\n    android:inputType=\"textNoSuggestions\" 不提示\n    android:inputType=\"textUri\" 网址\n    android:inputType=\"textEmailAddress\" 电子邮件地址\n    android:inputType=\"textEmailSubject\" 邮件主题\n    android:inputType=\"textShortMessage\" 短讯\n    android:inputType=\"textLongMessage\" 长信息\n    android:inputType=\"textPersonName\" 人名\n    android:inputType=\"textPostalAddress\" 地址\n    android:inputType=\"textPassword\" 密码\n    android:inputType=\"textVisiblePassword\" 可见密码\n    android:inputType=\"textWebEditText\" 作为网页表单的文本\n    android:inputType=\"textFilter\" 文本筛选过滤\n    android:inputType=\"textPhonetic\" 拼音输入\n//数值类型\n    android:inputType=\"number\" 数字\n    android:inputType=\"numberSigned\" 带符号数字格式\n    android:inputType=\"numberDecimal\" 带小数点的浮点格式\n    android:inputType=\"phone\" 拨号键盘\n    android:inputType=\"datetime\" 时间日期\n    android:inputType=\"date\" 日期键盘\nandroid:inputType=\"time\" 时间键盘\n```\n\n# ImageView.ScaleType\n（1）ImageView.ScaleType.center:图片位于视图中间，但不执行缩放。\n（2）ImageView.ScaleType.CENTER_CROP 按统一比例缩放图片（保持图片的尺寸比例）便于图片的两维（宽度和高度）等于或者大于相应的视图的维度\n（3）ImageView.ScaleType.CENTER_INSIDE按统一比例缩放图片（保持图片的尺寸比例）便于图片的两维（宽度和高度）等于或者小于相应的视图的维度\n（4）ImageView.ScaleType.FIT_CENTER缩放图片使用center\n（5）ImageView.ScaleType.FIT_END缩放图片使用END\n（6）ImageView.ScaleType.FIT_START缩放图片使用START\n（7）ImageView.ScaleType.FIT_XY缩放图片使用XY\n（8）ImageView.ScaleType.MATRIX当绘制时使用图片矩阵缩放\n\n\n# 调用系统发送短信界面\n```java\n/**\n* 发送短信\n* @param smsBody\n*/\nprivate void sendSMS(String smsBody)\n{\n//Uri smsToUri = Uri.parse(\"smsto:10000\"); //如果想指定发送人\nUri smsToUri = Uri.parse(\"smsto:\");\nIntent intent = new Intent(Intent.ACTION_SENDTO, smsToUri);\nintent.putExtra(\"sms_body\", smsBody);\nstartActivity(intent);\n}\n```\n\n# 跳转市场搜索某款软件\n```java\nIntent intent = new Intent(\n\t\t\t\t\"android.intent.action.VIEW\");\n\t\tintent.setData(Uri\n\t\t\t\t.parse(\"market://details?id=com.adobe.flashplayer\"));\n\t\tstartActivity(intent);\n```\n\n# 检测系统中是否安装某款软件\n```java\n//检测系统中是否已经安装了adobe flash player插件，插件的packageName是com.adobe.flashplayer：\nprivate boolean check() {\n\t\tPackageManager pm = getPackageManager();\n\t\tList<PackageInfo> infoList = pm\n\t\t\t\t.getInstalledPackages(PackageManager.GET_SERVICES);\n\t\tfor (PackageInfo info : infoList) {\n\t\t\tif (\"com.adobe.flashplayer\".equals(info.packageName)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n}\n\nprivate void isAvilible(String packageName) {\n\n\t\tPackageInfo packageInfo;\n\t\ttry {\n\t\t\tpackageInfo = this.getPackageManager().getPackageInfo(packageName,\n\t\t\t\t\t0);\n\n\t\t} catch (NameNotFoundException e) {\n\t\t\tpackageInfo = null;\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (packageInfo != null) {\n//1、通过包名\n\t\t\tIntent intent = new Intent();\n\t\t\tintent = getPackageManager().getLaunchIntentForPackage(packageName);\n\t\t\tstartActivity(intent);\n//2、通过类名： \nIntent intent=new Intent();  \nintent.setComponent(new ComponentName(packageName, \"com.joe.internet.Main\"));  \nstartActivity(intent);  \n\t\t} \n\n\t}\n```\n\n# 对话框菜单\n```java\nnew AlertDialog.Builder(this)\n\t\t\t\t\t\t.setTitle(\"choice\")\n\t\t\t\t\t\t.setItems(new String[] { \"选择1\", \"选择2\", \"选择3\", \"选择4\" },\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog,\n\t\t\t\t\t\t\t\t\t\t\tint which) {\n\t\t\t\t\t\t\t\t\t\tToast.makeText(MyContentActivity.this,\n\t\t\t\t\t\t\t\t\t\t\t\twhich + \"\", Toast.LENGTH_SHORT)\n\t\t\t\t\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}).show();\n```\n\n# 定义ProgressBar \n```js\n<ProgressBar\n        android:id=\"@+id/mProgress\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"          android:indeterminateDrawable=\"@drawable/progress_rotate\" />\n```\nprogress_rotate：\n```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <item>\n        <rotate\n            android:drawable=\"@drawable/progressbar\"\n            android:duration=\"300\"\n            android:fromDegrees=\"0.0\"\n            android:pivotX=\"50.0%\"\n            android:pivotY=\"50.0%\"\n            android:toDegrees=\"360.0\" />\n    </item>\n</layer-list>\n```\n\n# 幻灯片效果\nxml\n```js\n<ProgressBar\n        android:id=\"@+id/ProgressBar01\"\n        style=\"@style/animStyle\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:layout_centerInParent=\"true\" />\n```\nstyle\n```js\n<style name=\"animStyle\" parent=\"@android:style/Widget.ProgressBar.Large\">\n        <item name=\"android:indeterminateDrawable\">@anim/test</item>\n</style>\n```\nanim\n```js\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:oneshot=\"false\" >\n\n    <item\n        android:drawable=\"@drawable/t1\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t2\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t3\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t4\"\n        android:duration=\"500\"/>\n    <item\n        android:drawable=\"@drawable/t5\"\n        android:duration=\"500\"/>\n\n</animation-list>\n```\n\n# MD5加密\n```java\npublic String Md5(String plainText) {\n\t\tString result = \"\";\n\t\ttry {\n\t\t\tMessageDigest md = MessageDigest.getInstance(\"MD5\");\n\t\t\tmd.update(plainText.getBytes());\n\t\t\tbyte b[] = md.digest();\n\n\t\t\tint i;\n\n\t\t\tStringBuffer buf = new StringBuffer(\"\");\n\t\t\tfor (int offset = 0; offset < b.length; offset++) {\n\t\t\t\ti = b[offset];\n\t\t\t\tif (i < 0)\n\t\t\t\t\ti += 256;\n\t\t\t\tif (i < 16)\n\t\t\t\t\tbuf.append(\"0\");\n\t\t\t\tbuf.append(Integer.toHexString(i));\n\t\t\t}\n\t\t\tresult = buf.toString().toUpperCase();// 32位的加密（转成大写）\n\n\t\t\tbuf.toString().substring(8, 24);// 16位的加密\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn result;\n\t}\n```\n\n# 设置自动跳转页面\n## Timer\n```java\nTimer timer = new Timer();\n\t\ttimer.schedule(new TimerTask() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tIntent goIntent = new Intent();\n\t\t\t\tgoIntent.setClass(LauncherActivity.this, DemoActivity.class);\n\t\t\t\tstartActivity(goIntent);\n\t\t\t}\n\t\t}, 3 * 1000);\n\t}\n```\n\n## Handler\n```java\nnew Handler().postDelayed(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tstartActivity(new Intent(SplashScreen.this,\n\t\t\t\t\t\tDomobSampleActivity.class));\n\t\t\t\tfinish();\n\t\t\t}\n\t\t}, 1000);\n```\n\n# 随机取数\n```java\nList<Integer> list = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tlist.add(i);\n\t\t}\n\t\tCollections.shuffle(list);\n\t\tfor (int v : list) {\n\t\t\tLog.d(\"wxl\", \"V===\" + v);\n\t\t}\n```\n或：\n```java\nRandom random = new Random();\nint ran = random.nextInt(keywordsList.size());\n\t\t\tString tmp = keywordsList.get(ran).get(\"keyword\").toString();\n```\n\n# selector下的属性值\n\nandroid:state_pressed\n如果是true，当被点击时显示该图片，如果是false没被按下时显示默认。\nandroid:state_focused\ntrue，获得焦点时显示；false，没获得焦点显示默认。\nandroid:state_selected\ntrue，当被选择时显示该图片；false，当未被选择时显示该图片。\nandroid:state_checkable\ntrue，当\t能使用时显示该图片；false，当CheckBox不能使用时显示该图片。\nandroid:state_checked\ntrue，当CheckBox选中时显示该图片；false，当CheckBox为选中时显示该图片。\nandroid:state_enabled\ntrue，当该组件能使用时显示该图片；false，当该组件不能使用时显示该图片。\nandroid:state_window_focused\ntrue，当此activity获得焦点在最前面时显示该图片；false，当没在最前面时显示该图片。\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_pressed=\"true\"\n          android:drawable=\"@drawable/button_pressed\"/><!-- pressed -->\n    <item android:state_focused=\"true\"\n          android:drawable=\"@drawable/button_focused\"/><!-- focused -->\n    <item android:drawable=\"@drawable/button_normal\"/><!-- default -->\n</selector>\n```\n\n# 带下划线的EditText\n```java\npublic class LinedEditText extends EditText {\n\tprivate Paint linePaint;\n\tprivate float margin;\n\tprivate int paperColor;\n\n\tpublic LinedEditText(Context paramContext, AttributeSet paramAttributeSet) {\n\t\tsuper(paramContext, paramAttributeSet);\n\t\tthis.linePaint = new Paint();\n\t}\n\t@Override\n\tprotected void onDraw(Canvas paramCanvas) {\n\t\tparamCanvas.drawColor(this.paperColor);\n\t\tint i = getLineCount();// 得到总的行數\n\t\tint j = getHeight();// 获得TextView的高度\n\t\tint k = getLineHeight();// 获得TextView的行高\n\t\tint m = j / k + 1;// 总的线数\n\t\tif (i < m)\n\t\t\ti = m;\n\t\tint n = getCompoundPaddingTop();\n\t\tLog.d(\"wxl\", \"n----\" + n);\n\t\tparamCanvas.drawLine(0.0F, n, getRight(), n, this.linePaint);\n\t\tfor (int i2 = 0;; i2++) {\n\t\t\tif (i2 >= i) {\n\t\t\t\tsetPadding(10 + (int) this.margin, 0, 0, 0);\n\t\t\t\tsuper.onDraw(paramCanvas);\n\t\t\t\tparamCanvas.restore();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tn += k;\n\t\t\tparamCanvas.drawLine(0.0F, n, getRight(), n, this.linePaint);\n\t\t\tparamCanvas.save();\n\t\t}\n\t}\n}\n```\n主要工作就是重载onDraw方法，利用从TextView继承下来的getLineCount函数获取文本所占的行数，以及getLineBounds来获取特定行的基准高度值，而且这个函数第二个参数会返回此行的“外包装”值。再利用这些值绘制这一行的线条。为了让界面的View使用自定义的EditText类，必须在配置文件中进行设置\n\n\n\n# 关闭键盘\n```java\npublic static void hideSoftInput(Activity activity) {\n        if (activity.getCurrentFocus() != null)\n            ((InputMethodManager) activity\n                    .getSystemService(Context.INPUT_METHOD_SERVICE))\n                    .hideSoftInputFromWindow(activity.getCurrentFocus()\n                            .getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);\n    }\n```\n\n# 界面不被弹出的键盘盖住\n一进入activity就弹出键盘\n```js\nandroid:windowSoftInputMode=\"adjustResize\" \nandroid:windowSoftInputMode=\"adjustPan|stateAlwaysVisible\"\n```\n第一个软键盘和输入框会完全分离，而第二个输入框还是会被软键盘盖住一点点\n而且第二个要把两个属性叠加起来，为什么要叠加起来呢，因为如果只用adjustPan 的话需要点击输入框才会弹出软键盘\n\n在 AndroidMainfest.xml中选择哪个activity，设置windowSoftInputMode属性为 \n```js\nadjustUnspecified|stateHidden\nandroid:windowSoftInputMode=\"adjustUnspecified|stateHidden\"\n```\nwindowSoftInputMode各值的含义：\n\nstateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置\n\nstateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示\n\nstateHidden：用户选择activity时，软键盘总是被隐藏\n\nstateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的\n\nstateVisible：软键盘通常是可见的\n\nstateAlwaysVisible：用户选择activity时，软键盘总是显示的状态\n\nadjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示\n\nadjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间\n\nadjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分\n\n# 控件美化Shape\n[http://wuxiaolong.me/2013/07/09/shape/](http://wuxiaolong.me/2013/07/09/shape/)\n\n# 获取版本名称 VersionName\n```java\npublic String getVersionName(Context context) {\n\t\tPackageManager manager = context.getPackageManager();\n\t\tString packageName = context.getPackageName();\n\t\ttry {\n\t\t\tPackageInfo info = manager.getPackageInfo(packageName, 0);\n\t\t\treturn info.versionName;\n\t\t} catch (NameNotFoundException e) {\n\t\t\treturn \"1.0\";\n\t\t}\n\t}\n```\n\n# 获取Android手机设备的IMSI / IMEI 信息\n```java\nTelephonyManager mTelephonyMgr = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\nString imsi = mTelephonyMgr.getSubscriberId(); \nString imei = mTelephonyMgr.getDeviceId(); \nLog.i(\"wxl\", \"imsi=\"+imsi);为null\nLog.i(\"wxl\", \"imei=\"+imei); \n另外不要忘了在AndroidManifest.xml中加上读取手机状态的权限\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\n```\n\n# 自定义Log是否显示\n```java\n public class Log {\n        private static final String TAG = \"wxl\";\n        private static final boolean LOG = true;\n        public static void i(String msg) {\n            if (LOG)\n                android.util.Log.i(TAG , msg);\n        }\n        public static void d(String msg) {\n            if (LOG)\n                android.util.Log.d(TAG , msg);\n        }\n        public static void w(String msg) {\n            if (LOG)\n                android.util.Log.w(TAG , msg);\n        }\n        public static void w(String msg, Throwable throwable) {\n            if (LOG)\n                android.util.Log.w(TAG , msg, throwable);\n        }\n        public static void v(String msg) {\n            if (LOG)\n                android.util.Log.v(TAG , msg);\n        }\n        public static void e(String msg) {\n            android.util.Log.e(TAG , msg);\n        }\n        public static void e(String msg, Throwable throwable) {\n            android.util.Log.e(TAG , msg, throwable);\n        }\n    }\n```\n\n# 异步操作AsyncTask \n```java\n参数1：向后台任务的执行方法传递参数的类型 ； \n参数2：在后台任务执行过程中，要求主UI线程处理中间状态，通常是一些UI处理中传递的参数类型；\n参数3：后台任务执行完返回时的参数类型。\n private class MyAsyncTask extends AsyncTask<Integer, String, Void> {\n\n\t\t// 实现抽象方法doInBackground()，代码将在后台线程中执行，由execute()触发\n\t\tprotected Void doInBackground(Integer... params) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// 任务启动，可以在这里显示一个对话框，这里简单处理\n\t\tprotected void onPreExecute() {\n\t\t\tsuper.onPreExecute();\n\t\t}\n\n\t\t// 取消\n\t\tprotected void onCancelled() {\n\t\t\tsuper.onCancelled();\n\t\t}\n\n\t\t// 定义后台进程执行完后的处理\n\t\tprotected void onPostExecute(Void result) {\n\t\t\tsuper.onPostExecute(result);\n\t\t\tToast.makeText(MainActivity.this, \"OK\", Toast.LENGTH_SHORT).show();\n\t\t}\n\n\t\t// 更新进度,在UI主线程执行的内容，将item加入list中。方法中的参数为范式方式，实质为数组，由于我们只传递了item一个String，要获取，为values[0]\n\t\tprotected void onProgressUpdate(String... values) {\n\t\t\tsuper.onProgressUpdate(values);\n\t\t}\n\n\t}\n```\n调用：\n```java\nnew MyAsyncTask().execute(参数1);// 创建后台任务的对象\n```\n\n# 检查网络状态\n```java\npublic boolean checkNetworkInfo() {\n\t\tConnectivityManager conMan = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n\t\t// mobile 3G Data Network\n\t\tState mobile = conMan.getNetworkInfo(ConnectivityManager.TYPE_MOBILE)\n\t\t\t\t.getState();\n\t\t// wifi\n\t\tState wifi = conMan.getNetworkInfo(ConnectivityManager.TYPE_WIFI)\n\t\t\t\t.getState();\n\t\t// 如果3G网络和wifi网络都未连接，且不是处于正在连接状态 则进入Network Setting界面 由用户配置网络连接\n\t\tif (mobile == State.CONNECTED || mobile == State.CONNECTING)\n\t\t\treturn true;\n\t\tif (wifi == State.CONNECTED || wifi == State.CONNECTING)\n\t\t\treturn true;\n\t\tAlertDialog.Builder builder = new AlertDialog.Builder(this);\n\t\tbuilder.setMessage(getResources().getString(R.string.no_network))\n\t\t\t\t.setCancelable(false)\n\t\t\t\t.setPositiveButton(\n\t\t\t\t\t\tgetResources().getString(R.string.configuration),\n\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int id) {\n\n\t\t\t\t\t\t\t\t// 进入无线网络配置界面\n\t\t\t\t\t\t\t\tstartActivity(new Intent(\n\t\t\t\t\t\t\t\t\t\tSettings.ACTION_WIRELESS_SETTINGS));\n\t\t\t\t\t\t\t\tMainActivity.this.finish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t.setNegativeButton(getResources().getString(R.string.quit),\n\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int id) {\n\t\t\t\t\t\t\t\tMainActivity.this.finish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\tbuilder.show();\n\t\treturn false;\n\t}\n```\n代码判断调用：\n```java\n// 检查网络状态\n\t\tif (!checkNetworkInfo()) {\n\t\t\treturn;\n\t\t}\n```\n\n# Html.fromHtml（）\n让数据接受网页的格式\n```java\nURLEncoder.encode(String s); 网址请求中文解析\n&#8230;代表省略号\n```\n# URLEncoder.encode\n网址请求带中文\n```java\nURLEncoder.encode(content, \"utf-8\")\n```\n\n# Android中字体加粗\n* 在xml文件中使用\n```js\nandroid:textStyle=”bold”\n```\n* Java 代码\n\n（网上查XML不能将中文设置成粗体，只能通过Java code。Android 2.2 可以通过XML将中文设置成粗体）\n\n```java\n  TextView tv = (TextView)findViewById(R.id.TextView01); \n  TextPaint tp = tv.getPaint();\n  tp.setFakeBoldText(true);\n```\n* Html.fromHtml(\"\\<\\b>\")\n\n```java\n(1)viewHolder.title.setText(Html.fromHtml(\"<b>\"\n\t\t\t\t+ listTitle.get(position).get(\"title\") + \"</b>\"));\n(2)TextView.setText(Html.fromHtml(\"<font color=#FF0000>hello</font>\"));\n```\n\n# 代码设置背景图setImageResource/setBackgroundResource\n```java\ntextView.setBackgroundResource(R.drawable.bg_menu_1);设置背景图片\ntextView.setBackgroundColor(0xffffffff);\nsetImageResource與xml中的src的屬性才是相匹配的，而setBackgroundResource是與xml中的background屬性相匹配\n的\nholder.chat_sound_iv_right.setBackgroundResource(0);//没有图片\n```\n\n# android中的ellipsize\n```java\n用法如下：\n在xml中\nandroid:ellipsize = \"end\"　　  省略号在结尾\nandroid:ellipsize = \"start\" 　　省略号在开头\nandroid:ellipsize = \"middle\"     省略号在中间\nandroid:ellipsize = \"marquee\"  跑马灯\n最好加一个约束android:singleline = \"true\"\n跑马灯\nandroid:singleLine=\"true\"\nandroid:ellipsize=\"marquee\"\nandroid:focusableInTouchMode=\"true\"\nandroid:focusable=\"true\"\nandroid:marqueeRepeatLimit=\"marquee_forever\"\nandroid:singleLine=true 表示使用单行文字，多行文字也就无所谓使用Marquee效果了。\nandroid:marqueeRepeatLimit，设置走马灯滚动的次数。\nandroid:ellipsize，设置了文字过长时如何切断文字，可以有none, start,middle, end, 如果使用走马灯效果则设为marquee.\nandroid:focusable，Android的缺省行为是在控件获得Focus时才会显示走马灯效果\n```\n\n# 控件点击效果\n```js\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:state_focused=\"true\" android:state_pressed=\"false\" android:drawable=\"@drawable/professional_1\"/>\n    <item android:state_focused=\"false\" android:state_pressed=\"true\" android:drawable=\"@drawable/professional_1\"/>\n    <item android:drawable=\"@drawable/professional\"/>\n</selector>\n```\n\n# 保留小数点\n方法一：\n```java\nprivate DecimalFormat df;\ndf = new DecimalFormat(\"0.0\");\nfloat data;\ndf.format(data);//返回值\n```\n方法二：\n```java\ndouble juli = 1569;\nString result = String.format(\"%.1f\", juli/1000);\n```\n\n# RadioGroup\n```js\n<RadioGroup\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"vertical\" >\n\n       <RadioButton\n           android:id=\"@+id/open\"\n           android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:layout_marginLeft=\"10dip\"\n           android:layout_marginTop=\"10dip\"\n           android:button=\"@drawable/radiobutton\"\n           android:checked=\"true\"\n           android:text=\"@string/open_album\"\n           android:textColor=\"#000000\"\n           android:textSize=\"16dip\" />\n\n       <RadioButton\n           android:id=\"@+id/secrecy\"\n           android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:layout_marginLeft=\"10dip\"\n           android:button=\"@drawable/radiobutton\"\n           android:text=\"@string/secrecy_album\"\n           android:textColor=\"#000000\"\n           android:textSize=\"16dip\" />\n   </RadioGroup>\n\n```\nandroid:button=\"@null\"  去除RadioButton前面的圆点\nandroid:background=\"@drawable/radio\" 使用定义的样式\n\n# 占位符%s替换\n%d   （表示整数）\n%f    （表示浮点数）\n%s   （表示字符串）\ntxt.setText(String.format (“被替换%1$s”,”替换内容”));\n\n# TextView中嵌套图片Drawable\n```java\nDrawable drawable = getResources().getDrawable(R.drawable.ji_dot_nor);\ndrawable.setBounds(0, 0, drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight());\ntextView.setCompoundDrawablesWithIntrinsicBounds(null, drawable, null, null);  \n说明：setCompoundDrawablesWithIntrinsicBounds(left, top, right, bottom)\n意思是设置Drawable显示在text的左、上、右、下位置。(Textview、Button都可以)\n```\n\n# TextView做成分割线\n```js\n<TextView\n     android:id=\"@id/textView2\"\n     android:layout_width=\"fill_parent\"\n     android:layout_height=\"2.0px\"\nandroid:background=\"@color/orange\" />\n```\n\n# SpannableString单击文字链接\n```java\nSpannableString spannableString = new SpannableString(str);\n\t\tspannableString.setSpan(new ClickableSpan() {\n\t\t\tpublic void onClick(View view) {\n\t\t\t\t// Intent intent = new Intent(ApkTest.this, Apk.class);\n\t\t\t\tIntent intent = new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:\"\n\t\t\t\t\t\t+ \"15261589767\"));\n\t\t\t\tstartActivity(intent);\n\t\t\t}\n\t\t}, 0, str.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n\t\tTextView.setText(spannableString);\n\t\tTextView.setMovementMethod(LinkMovementMethod.getInstance());\n```\n\n# TextView中文字通过SpannableString\n来设置超链接、颜色、字体等属性\n```java\nString  title =”123456”;\nSpannableString titleStr = new SpannableString(title);\ntitleStr.setSpan(new ForegroundColorSpan(Color.RED), 0,\n\t\t\t\t\t\ttitleStr.length(), 0);\ntextView.setText(titleStr);\n```\n\n# android:drawableTop属性\n写在TextView里，实现图片+文字\n\n# 获取分辨率\n```java\nDisplayMetrics displayMetrics = new DisplayMetrics();\ngetWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n\ndisplayMetrics.widthPixels + \"x\"\n\t\t\t\t+ displayMetrics.heightPixels;\n```\n# 代码完成控件\n\nButton\n```java\nlinearLayout = (LinearLayout) findViewById(R.id.linearLayout2);\nLayoutParams layoutParams = new LinearLayout.LayoutParams(0,\n\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT, 1);//1均分属性\nlayoutParams.setMargins(10, 10, 10, 10);\n\nButton button = new Button(MainActivity.this);\nbutton.setLayoutParams(layoutParams);\nlinearLayout.addView(button);\n```\nTextView\n```java\nprivate TextView overlay;\nprivate void initOverlay() {\n\t\tLayoutInflater inflater = LayoutInflater.from(this);\n\t\toverlay = (TextView) inflater.inflate(R.layout.overlay, null);\n\t\toverlay.setVisibility(View.INVISIBLE);\n\t\tWindowManager.LayoutParams lp = new WindowManager.LayoutParams(\n\t\t\t\tLayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT,\n\t\t\t\tWindowManager.LayoutParams.TYPE_APPLICATION,\n\t\t\t\tWindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n\t\t\t\t\t\t| WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\n\t\t\t\tPixelFormat.TRANSLUCENT);\n\t\tWindowManager windowManager = (WindowManager) this\n\t\t\t\t.getSystemService(Context.WINDOW_SERVICE);\n\t\twindowManager.addView(overlay, lp);\n\t}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:background=\"#ffffff\"\n    android:gravity=\"center\"\n    android:maxWidth=\"80dip\"\n    android:minWidth=\"80dip\"\n    android:padding=\"5dip\"\n    android:textColor=\"#3399ff\"\n    android:textSize=\"70sp\" />\n\n\nprivate LinearLayout.LayoutParams layoutParams = null;\n\t\tprivate LinearLayout.LayoutParams btnParmas;\n\nlayoutParams = new LinearLayout.LayoutParams(\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT,\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT);\n\t\t\t\t\tlayoutParams.setMargins(\n\t\t\t\t\t\t\t(int) getResources().getDimension(\n\t\t\t\t\t\t\t\t\tR.dimen.lable_left), 0, 0, 0);\n\t\t\t\t\tbtnParmas = new LinearLayout.LayoutParams(\n\t\t\t\t\t\t\tLinearLayout.LayoutParams.WRAP_CONTENT,\n\t\t\t\t\t\t\t(int) getResources().getDimension(\n\t\t\t\t\t\t\t\t\tR.dimen.lable_height));\n\n\t\t\t\t\tfor (int i = 0; i < lables.length; i++) {\n\t\t\t\t\t\tLinearLayout linearLayout = new LinearLayout(activity);\n\t\t\t\t\t\tlableColor = random.nextInt(lableColors.length);\n\t\t\t\t\t\tButton lable = new Button(activity);\n\t\t\t\t\t\tlable.setText(lables[i]);\n\t\t\t\t\t\tlable.setGravity(Gravity.CENTER_HORIZONTAL\n\t\t\t\t\t\t\t\t| Gravity.CENTER_VERTICAL);\n\t\t\t\t\t\tlable.setTextSize(getResources().getDimension(\n\t\t\t\t\t\t\t\tR.dimen.lable));\n\t\t\t\t\t\tlable.setTextColor(getResources().getColor(\n\t\t\t\t\t\t\t\tR.color.white));\n\t\t\t\t\t\tlable.setBackgroundResource(lableColors[i]);\n\t\t\t\t\t\tlinearLayout.addView(lable, btnParmas);\n\t\t\t\t\t\tholder.play_lables.addView(linearLayout, layoutParams);\n\t\t\t\t\t}\n```\n# TextWatcher\n```java\neditText1.addTextChangedListener(watcher);\nTextWatcher watcher = new TextWatcher() {\n\t\tpublic void onTextChanged(CharSequence arg0, int arg1, int arg2,\n\t\t\t\tint arg3) {\n\t\t}\n\t\tpublic void beforeTextChanged(CharSequence arg0, int arg1, int arg2,\n\t\t\t\tint arg3) {\n\t\t}\n\t\tpublic void afterTextChanged(Editable arg0) {\t\t\t\n\t\t}\n\t};\n```\n# 屏幕旋转时不销毁\n```js\nAndroidManifest加入\nandroid:configChanges=\"orientation|keyboardHidden\"\n```\n获取屏幕方向\n```java\nConfiguration newConfig = getResources().getConfiguration();    \n        if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE){    \n            //横屏    \n         }else if(newConfig.orientation == Configuration.ORIENTATION_PORTRAIT){    \n            //竖屏    \n         }else if(newConfig.hardKeyboardHidden == Configuration.KEYBOARDHIDDEN_NO){    \n            //键盘没关闭。屏幕方向为横屏    \n         }else if(newConfig.hardKeyboardHidden == Configuration.KEYBOARDHIDDEN_YES){    \n            //键盘关闭。屏幕方向为竖屏    \n         } \n```\n\n# List增加数据\n## 简单\n```java\nprivate List<String> getData() {\n\t\tList<String> data = new ArrayList<String>();\n\t\tdata.add(\"123\");\n\t\tdata.add(\"345\");\n\t\tdata.add(\"456\");\n\t\tdata.add(\"567\");\n\t\treturn data;\n\t}\n```\n## 键值对\n```java\nprivate List<Map<String, Object>> getData() {\n        List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();\n \n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(\"title\", \"G1\");\n        map.put(\"info\", \"google 1\");\n        map.put(\"img\", R.drawable.i1);\n        list.add(map);\n \n        map = new HashMap<String, Object>();\n        map.put(\"title\", \"G2\");\n        map.put(\"info\", \"google 2\");\n        map.put(\"img\", R.drawable.i2);\n        list.add(map);\n \n        map = new HashMap<String, Object>();\n        map.put(\"title\", \"G3\");\n        map.put(\"info\", \"google 3\");\n        map.put(\"img\", R.drawable.i3);\n        list.add(map);\n         \n        return list;\n    }\n```\n清除数据：\n```java\ndata.clear();\nlistView.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_expandable_list_item_1,getData()));\n```\n## LinkedList\n```java\nLinkedList<String> list = new LinkedList<String>();\nlist.addFirst(\"000\");\n```\n\n# 验证是否手机号码\n```java\npublic boolean isMobileNO(String mobiles) {\n\t\tString expression = \"((^(13|15|18)[0-9]{9}$)|(^0[1,2]{1}\\\\d{1}-?\\\\d{8}$)|(^0[3-9] {1}\\\\d{2}-?\\\\d{7,8}$)|(^0[1,2]{1}\\\\d{1}-?\\\\d{8}-(\\\\d{1,4})$)|(^0[3-9]{1}\\\\d{2}-? \\\\d{7,8}-(\\\\d{1,4})$))\";\n\t\tPattern pattern = Pattern.compile(expression);\n\t\tMatcher matcher = pattern.matcher(mobiles);\n\t\tLog.d(\"wxl\", matcher.matches() + \"\");\n\t\treturn matcher.matches();\n\t}\n```\n\n# 正则表达式数字验证\n```java\npublic boolean isNumber(String str)\n    {\n        java.util.regex.Pattern pattern=java.util.regex.Pattern.compile(\"[0-9]*\");\n        java.util.regex.Matcher match=pattern.matcher(str);\n        if(match.matches()==false)\n        {\n             return false;\n        }\n        else\n        {\n             return true;\n        }\n    }\n```\n\n# SharedPreferences\n## SharedPreferences存数据\n```java\nSharedPreferences sharedPreferences = getSharedPreferences(\"test\", Context.MODE_PRIVATE);\nEditor editor = sharedPreferences.edit();//获取编辑器\neditor.putString(\"name\", \"张三\");\neditor.putInt(\"age\", 24);\neditor.putBoolean(\"AutoLogin\", false);\n\neditor.commit();//提交修改\n```\n## SharedPreferences取数据\n```java\nSharedPreferences sharedPreferences = getSharedPreferences(\"test\", Context.MODE_PRIVATE);\n//getString()第二个参数为缺省值,如果preference中不存在该key,将返回缺省值\nString name = sharedPreferences.getString(\"name\", \"\");\nint age = sharedPreferences.getInt(\"age\", 1);\nboolean autoLogin= sharedPreferences. getBoolean(\"AutoLogin\", false);\n```\n# Intent 传值\n\n## 简单传值\nActivityPage\n```java\nIntent intent = new Intent(ActivityPage.this, Player.class);\n\t\t\t//保存信息\n\t\t\tBundle mBundle = new Bundle();\n\t\t\tmBundle.putString(\"realname \", realname);\n\t\t\tintent.putExtras(mBundle);\n```\nPlayer接受\n```java\nrealname = this.getIntent().getStringExtra(\"realname\");\nIntent intent = new Intent();\nintent.setClass(HomeActivity.this, CompanyActivity.class);\nintent.putExtra(\"mCompanySupply\", mCompanySupply);\n\t\t\t\tstartActivity(intent);\nCompanyActivity.class:\nArrayList<ClassifySub3Bean>  mCompanySupply = (ArrayList<ClassifySub3Bean>) getIntent()\n\t\t\t\t.getSerializableExtra(\"mCompanySupply\");\n```\n# 复杂传值\nA页面：\n```java\nprivate static final int REQUEST_CODE_A = 0;\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\n\t\t\t\tBundle bundle = new Bundle();\n\t\t\t\tintent.setClass(MainActivity.this, TestBActivity.class);\n\t\t\t\tbundle.putString(\"msg\", textView.getText().toString());\n\t\t\t\tintent.putExtras(bundle);\n\t\t\t\tstartActivityForResult(intent, REQUEST_CODE_A);\n\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (requestCode == REQUEST_CODE_A && resultCode == RESULT_OK) {\n\t\t\tString str=data.getExtras().getString(\"result\");\n\t\t}\n\t}\n```\nB页面\n```java\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\n\t\t\t\tintent.putExtra(\"result\", textView.getText().toString());\n\t\t\t\tsetResult(RESULT_OK, intent);\n\t\t\t\tfinish();\n\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n\t\tif (keyCode == KeyEvent.KEYCODE_BACK) {\n\t\t\tIntent intent = new Intent();\n\t\t\tintent.putExtra(\"result\", \"直接返回\");\n\t\t\tsetResult(RESULT_OK, intent);\n\t\t\tthis.finish();\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn super.onKeyDown(keyCode, event);\n\t\t}\n\t}\n```\n## List\n```java\nIntent intent = new Intent();\n\t\t\t\t\tintent.putStringArrayListExtra(\"mSelectedPhotos\",\n\t\t\t\t\t\t\tmSelectedPhotos);\n\t\t\t\t\tsetResult(RESULT_OK, intent);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tArrayList<String> mSelectedPhotos = (ArrayList<String>) intent\n\t\t\t\t\t\t.getStringArrayListExtra(\"mSelectedPhotos\");\n```\n# xml文件中导入另一个xml文件的方法include\n```js\n<include \nandroid:id=\"@+id/included1\"\nlayout=\"@layout/anotherlayout\" />\n```\n# 单击返回键两次退出\n```java\nprivate static Boolean isExit = false;\n        @Override\n        public boolean onKeyDown(int keyCode, KeyEvent event) {\n                if (keyCode == KeyEvent.KEYCODE_BACK) {\n                        if (isExit == false) {\n                                isExit = true;\n                                Toast.makeText(this, \"再按一次退出程序\", Toast.LENGTH_SHORT).show();\n                                new Timer().schedule(new TimerTask() {\n                                        @Override\n                                        public void run() {\n                                                isExit = false;\n                                        }\n                                }, 2000);\n                        } else {\n                                finish();\n                                System.exit(0);\n                        }\n                }\n                return false;\n        }\n```\n或者\n```java\n@Override \n    public boolean onKeyUp(int keyCode, KeyEvent event) { \n        if (keyCode == KeyEvent.KEYCODE_BACK) { \n            long secondTime = System.currentTimeMillis(); \n            if (secondTime - firstTime > 800) {//如果两次按键时间间隔大于800毫秒，则不退出 \n                Toast.makeText(MainActivity.this, \"再按一次退出程序...\", \n                        Toast.LENGTH_SHORT).show(); \n                firstTime = secondTime;//更新firstTime \n                return true; \n            } else { \n                System.exit(0);//否则退出程序 \n            } \n        } \n        return super.onKeyUp(keyCode, event); \n    }\n```\n\n# 图片左右循环移动\n```java\nTranslateAnimation left, right;\nright = new TranslateAnimation(Animation.RELATIVE_TO_PARENT, -1f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, -2f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, 0f, Animation.RELATIVE_TO_PARENT,\n\t\t\t\t0f);\n\t\tleft = new TranslateAnimation(Animation.RELATIVE_TO_PARENT, -2f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, -1f,\n\t\t\t\tAnimation.RELATIVE_TO_PARENT, 0f, Animation.RELATIVE_TO_PARENT,\n\t\t\t\t0f);\n\t\tright.setDuration(25000);\n\t\tleft.setDuration(25000);\n\t\tright.setFillAfter(true);\n\t\tleft.setFillAfter(true);\n\n\t\tright.setAnimationListener(new Animation.AnimationListener() {\n\t\t\t@Override\n\t\t\tpublic void onAnimationStart(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationRepeat(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationEnd(Animation animation) {\n\t\t\t\trunImage.startAnimation(left);\n\t\t\t}\n\t\t});\n\t\tleft.setAnimationListener(new Animation.AnimationListener() {\n\t\t\t@Override\n\t\t\tpublic void onAnimationStart(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationRepeat(Animation animation) {\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onAnimationEnd(Animation animation) {\n\t\t\t\trunImage.startAnimation(right);\n\t\t\t}\n\t\t});\n\t\trunImage.startAnimation(right);\n```\n\n\n# 控件左右抖动\nres下anim\nanimlayout.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"1000\"\n    android:fromXDelta=\"0\"\n    android:interpolator=\"@anim/cycle_7\"\n    android:toXDelta=\"10\" />\n```\ncycle_7.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<cycleInterpolator xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:cycles=\"7\" />\n```\n(2)java代码\n```java\nAnimation shake = AnimationUtils.loadAnimation(\n\t\t\t\t\t\tMainActivity.this, R.anim.animlayout);\n\t\t\t\tbtn.setAnimation(shake);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"android-small-knowledge-base","published":1,"updated":"2016-06-03T09:06:26.309Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekran007zzspkojx5e48l","thumbnailImageUrl":null},{"title":"Android实战Samples之下载","date":"2015-01-20T16:00:00.000Z","_content":"本Samples演示了如何在通知栏里下载，分为默认和自定义的。\n\n###效果图：\n![](http://wuxiaolong.qiniudn.com/2014-11-21-android-samples-download.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n\n\n###拓展\n>[Android 通知栏Notification学习](http://blog.csdn.net/vipzjyno1/article/details/25248021)\n","source":"_posts/android-samples-download.md","raw":"title: Android实战Samples之下载\ndate: 2015-01-21 \ncategories: [Android]\ntags: [Android]\n---\n本Samples演示了如何在通知栏里下载，分为默认和自定义的。\n\n###效果图：\n![](http://wuxiaolong.qiniudn.com/2014-11-21-android-samples-download.gif)\n\n<!-- more -->\n\n###源码\n[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n\n\n\n###拓展\n>[Android 通知栏Notification学习](http://blog.csdn.net/vipzjyno1/article/details/25248021)\n","slug":"android-samples-download","published":1,"updated":"2016-03-17T00:44:06.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrap0082zspk7666wroq","thumbnailImageUrl":null},{"title":"Android开发者应该保持以下特质","date":"2013-06-13T16:00:00.000Z","_content":"1. 深读SDK文档\n2. 深读SDK的APIDemo和Samples\n3. 掌握GIT开源代码\n4. 多了解Android开源项目，学习别人的手法写程序\n","source":"_posts/android-developers-should-keep-the-following-characteristics.md","raw":"title: Android开发者应该保持以下特质\ncategories: [Android]\ntags: [Android]\ndate: 2013-06-14\n---\n1. 深读SDK文档\n2. 深读SDK的APIDemo和Samples\n3. 掌握GIT开源代码\n4. 多了解Android开源项目，学习别人的手法写程序\n","slug":"android-developers-should-keep-the-following-characteristics","published":1,"updated":"2016-03-17T00:44:06.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrar0085zspkii3wqm53","thumbnailImageUrl":null},{"title":"github之android-async-http使用","date":"2014-10-27T07:28:24.000Z","_content":"## 源码地址\n[https://github.com/loopj/android-async-http](https://github.com/loopj/android-async-http)\n\n## 官方博客\n[http://loopj.com/android-async-http/](http://loopj.com/android-async-http/)\n## Gradle\n\n","source":"_posts/android-async-http.md","raw":"title: github之android-async-http使用\ndate: 2014-10-27 15:28:24\ntags: async-http\ncategory: github\n---\n## 源码地址\n[https://github.com/loopj/android-async-http](https://github.com/loopj/android-async-http)\n\n## 官方博客\n[http://loopj.com/android-async-http/](http://loopj.com/android-async-http/)\n## Gradle\n\n","slug":"android-async-http","published":1,"updated":"2016-03-17T00:44:06.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrat0088zspkgb940eqg","thumbnailImageUrl":null},{"title":"Android ListView addHeaderView","date":"2015-11-10T02:57:25.000Z","_content":"最近在调试我的个人[大湿说app](http://wuxiaolong.github.io/2015/11/09/dashishuo/)，发现在4.2系统下直接崩溃了，看log，原来是ListView addHeaderView和setAdapter方法调用顺利不同导致的错误，这里做下记录。\n<!--more-->\n## 正确调用\n```java\n mListView.addHeaderView(mHeadView);\n mListView.setAdapter(mListViewAdapter);\n```\n## 究其原因\nAndroid-18（4.3）的addHeaderView源码：\n```java\npublic void addHeaderView(View v, Object data, boolean isSelectable) {\n        final FixedViewInfo info = new FixedViewInfo();\n        info.view = v;\n        info.data = data;\n        info.isSelectable = isSelectable;\n        mHeaderViewInfos.add(info);\n \n        // Wrap the adapter if it wasn't already wrapped.\n        if (mAdapter != null) {\n            if (!(mAdapter instanceof HeaderViewListAdapter)) {\n                mAdapter = new HeaderViewListAdapter(mHeaderViewInfos, mFooterViewInfos, mAdapter);\n            }\n \n            // In the case of re-adding a header view, or adding one later on,\n            // we need to notify the observer.\n            if (mDataSetObserver != null) {\n                mDataSetObserver.onChanged();\n            }\n        }\n}\n```\nAndroid-17（4.2）的addHeaderView的源码：\n```java\npublic void addHeaderView(View v, Object data, boolean isSelectable) {\n \n        if (mAdapter != null && ! (mAdapter instanceof HeaderViewListAdapter)) {\n            throw new IllegalStateException(\n                    \"Cannot add header view to list -- setAdapter has already been called.\");\n        }\n \n        FixedViewInfo info = new FixedViewInfo();\n        info.view = v;\n        info.data = data;\n        info.isSelectable = isSelectable;\n        mHeaderViewInfos.add(info);\n \n        // in the case of re-adding a header view, or adding one later on,\n        // we need to notify the observer\n        if (mAdapter != null && mDataSetObserver != null) {\n            mDataSetObserver.onChanged();\n        }\n}\n```\n在17版本中，只要adapter不为空的话，那就直接会抛出异常，而这个异常恰好就是我们文章开头说到的异常。在18版本中，如果adapter不为空的话，则会新建一个adapter，这个adapter会包含了headerview和footerview以及我们传进来的原来的adapter。这是在18版本以后做的一个处理。\n以上源码分析来自:[从源码上分析ListView的addHeaderView和setAdapter的调用顺序](http://blog.csdn.net/wuzhipeng1991/article/details/39023883)\n\n## 大湿说\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuo_meizu.png)\n魅族应用市场累计下载`4.4万+`，我可没有做过什么推广哦，精品APP，值得下载！\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n[小米应用市场](http://app.mi.com/detail/65621)","source":"_posts/addHeaderView.md","raw":"title: Android ListView addHeaderView\ndate: 2015-11-10 10:57:25\ntags: [ListView,addHeaderView]\ncategory: Android\n---\n最近在调试我的个人[大湿说app](http://wuxiaolong.github.io/2015/11/09/dashishuo/)，发现在4.2系统下直接崩溃了，看log，原来是ListView addHeaderView和setAdapter方法调用顺利不同导致的错误，这里做下记录。\n<!--more-->\n## 正确调用\n```java\n mListView.addHeaderView(mHeadView);\n mListView.setAdapter(mListViewAdapter);\n```\n## 究其原因\nAndroid-18（4.3）的addHeaderView源码：\n```java\npublic void addHeaderView(View v, Object data, boolean isSelectable) {\n        final FixedViewInfo info = new FixedViewInfo();\n        info.view = v;\n        info.data = data;\n        info.isSelectable = isSelectable;\n        mHeaderViewInfos.add(info);\n \n        // Wrap the adapter if it wasn't already wrapped.\n        if (mAdapter != null) {\n            if (!(mAdapter instanceof HeaderViewListAdapter)) {\n                mAdapter = new HeaderViewListAdapter(mHeaderViewInfos, mFooterViewInfos, mAdapter);\n            }\n \n            // In the case of re-adding a header view, or adding one later on,\n            // we need to notify the observer.\n            if (mDataSetObserver != null) {\n                mDataSetObserver.onChanged();\n            }\n        }\n}\n```\nAndroid-17（4.2）的addHeaderView的源码：\n```java\npublic void addHeaderView(View v, Object data, boolean isSelectable) {\n \n        if (mAdapter != null && ! (mAdapter instanceof HeaderViewListAdapter)) {\n            throw new IllegalStateException(\n                    \"Cannot add header view to list -- setAdapter has already been called.\");\n        }\n \n        FixedViewInfo info = new FixedViewInfo();\n        info.view = v;\n        info.data = data;\n        info.isSelectable = isSelectable;\n        mHeaderViewInfos.add(info);\n \n        // in the case of re-adding a header view, or adding one later on,\n        // we need to notify the observer\n        if (mAdapter != null && mDataSetObserver != null) {\n            mDataSetObserver.onChanged();\n        }\n}\n```\n在17版本中，只要adapter不为空的话，那就直接会抛出异常，而这个异常恰好就是我们文章开头说到的异常。在18版本中，如果adapter不为空的话，则会新建一个adapter，这个adapter会包含了headerview和footerview以及我们传进来的原来的adapter。这是在18版本以后做的一个处理。\n以上源码分析来自:[从源码上分析ListView的addHeaderView和setAdapter的调用顺序](http://blog.csdn.net/wuzhipeng1991/article/details/39023883)\n\n## 大湿说\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuo_meizu.png)\n魅族应用市场累计下载`4.4万+`，我可没有做过什么推广哦，精品APP，值得下载！\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n[小米应用市场](http://app.mi.com/detail/65621)","slug":"addHeaderView","published":1,"updated":"2016-03-17T00:44:06.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekraw008czspkzzocg0pr","thumbnailImageUrl":null},{"title":"剩者为王","date":"2015-11-25T06:57:37.000Z","_content":"> 此项目当初为了练手Android studio beta版，项目开源。现进行重构和优化，采用MVP模式。\n\n## 效果预览\n![](https://github.com/WuXiaolong/WeWin/raw/master/screenshots/screenshots.gif)\n<!--more-->\n## APK演示\n\n项目apk文件夹下附带安装包\n\n[点击下载](https://github.com/WuXiaolong/WeWin/raw/master/apk/app-debug.apk)\n\n## 应用市场\n[魅族应用商店](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolongstudio.wewin)\n\n[小米应用商店](http://app.mi.com/detail/67787)\n\n## 源码地址\n[https://github.com/WuXiaolong/WeWin](https://github.com/WuXiaolong/WeWin)\n\n## 用到的开源库\n目前用到的一些开源库，感谢作者无私开源和服务。\n\n* [PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)，实现RecyclerView下拉刷新和上拉加载更多以及瀑布流效果\n* [Titanic](https://github.com/RomainPiel/Titanic)，TextView一闪一闪动画效果\n* [ButterKnife](https://github.com/JakeWharton/butterknife)，轻量级View注入框架，省去各种findViewById\n* [PhotoView](https://github.com/chrisbanes/PhotoView)，点击放大缩小\n* [picasso](https://github.com/square/picasso)，图片缓存机制\n* [android-async-http](https://github.com/loopj/android-async-http)，网络请求框架\n* 整体框架，侧滑菜单，类QQ效果。\n* [CustomShapeImageView](https://github.com/MostafaGazar/CustomShapeImageView)，各种圆角\n* [NineOldAndroids](https://github.com/JakeWharton/NineOldAndroids)，3.0以下兼容动画\n* [AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)，Android MVP 实例\n* 友盟，包括友盟的统计、升级、意见反馈、推送\n* 数据来源：[http://www.juzimi.com/meitumeiju](http://www.juzimi.com/meitumeiju)\n\n\n## 更多交流\n### Android技术交流群\n<!---\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=5017aa79b1bc2726134ce1d6bc3060306022d1a2155f303709b02824d47a8e59\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a><br><br>\n-->\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n### 作者博客\n[http://wuxiaolong.me/](http://wuxiaolong.me/)\n\n### 微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n\n\n\n","source":"_posts/WeWin.md","raw":"title: 剩者为王\ndate: 2015-11-25 14:57:37\ntags: [Life,WeWin]\ncategory: App\n---\n> 此项目当初为了练手Android studio beta版，项目开源。现进行重构和优化，采用MVP模式。\n\n## 效果预览\n![](https://github.com/WuXiaolong/WeWin/raw/master/screenshots/screenshots.gif)\n<!--more-->\n## APK演示\n\n项目apk文件夹下附带安装包\n\n[点击下载](https://github.com/WuXiaolong/WeWin/raw/master/apk/app-debug.apk)\n\n## 应用市场\n[魅族应用商店](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolongstudio.wewin)\n\n[小米应用商店](http://app.mi.com/detail/67787)\n\n## 源码地址\n[https://github.com/WuXiaolong/WeWin](https://github.com/WuXiaolong/WeWin)\n\n## 用到的开源库\n目前用到的一些开源库，感谢作者无私开源和服务。\n\n* [PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)，实现RecyclerView下拉刷新和上拉加载更多以及瀑布流效果\n* [Titanic](https://github.com/RomainPiel/Titanic)，TextView一闪一闪动画效果\n* [ButterKnife](https://github.com/JakeWharton/butterknife)，轻量级View注入框架，省去各种findViewById\n* [PhotoView](https://github.com/chrisbanes/PhotoView)，点击放大缩小\n* [picasso](https://github.com/square/picasso)，图片缓存机制\n* [android-async-http](https://github.com/loopj/android-async-http)，网络请求框架\n* 整体框架，侧滑菜单，类QQ效果。\n* [CustomShapeImageView](https://github.com/MostafaGazar/CustomShapeImageView)，各种圆角\n* [NineOldAndroids](https://github.com/JakeWharton/NineOldAndroids)，3.0以下兼容动画\n* [AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)，Android MVP 实例\n* 友盟，包括友盟的统计、升级、意见反馈、推送\n* 数据来源：[http://www.juzimi.com/meitumeiju](http://www.juzimi.com/meitumeiju)\n\n\n## 更多交流\n### Android技术交流群\n<!---\n②群：376526418<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=5017aa79b1bc2726134ce1d6bc3060306022d1a2155f303709b02824d47a8e59\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王②群\" title=\"剩者为王②群\"></a><br><br>\n-->\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n### 作者博客\n[http://wuxiaolong.me/](http://wuxiaolong.me/)\n\n### 微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n\n\n\n","slug":"WeWin","published":1,"updated":"2016-03-17T00:44:06.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekray008hzspk5juthx4z","thumbnailImageUrl":null},{"title":"Android Volley使用","date":"2015-10-16T08:46:49.000Z","_content":"## 导入Volley\nVolley貌似没有官方的Maven repository，你必须依赖官方的源代码。从它的repository 下载Volley源码。使用Git命令：\n\n```java\ngit clone https://android.googlesource.com/platform/frameworks/volley\n```\n不过还有第三种方法，你可以在build.gradle 文件的依赖部分添加这行代码：\n\n```java\ncompile 'com.mcxiaoke.volley:library-aar:1.0.15'\n```\n<!--more-->\n\n## 准备工作\n* 权限\n```js\n<uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n```\n* 变量\n RequestQueue mRequestQueue = Volley.newRequestQueue(this);\n\n## 实践\nVolley实现了三种常见的请求类型：\nStringRequest\nJsonObjectRequest\nImageRequest\n\n### StringRequest\n```java\nprivate void stringRequest() {\n\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://wuxiaolong.me/\";\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {\n            @Override\n            public void onResponse(String response) {\n                showMsg.setText(\"stringRequest==\" + response);\n                progressBar.setVisibility(View.GONE);\n                Log.d(\"wxl\", \"stringRequest==\" + response);\n            }\n        }, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                Log.d(\"wxl\", \"StringRequest error==\" + error);\n                progressBar.setVisibility(View.GONE);\n            }\n        });\n        stringRequest.setTag(\"stringRequest\");\n        //如果要取消stringRequest请求，只需简单的添加下面的一行代码：\n        // mRequestQueue.cancelAll(\"stringRequest\");\n        mRequestQueue.add(stringRequest);\n    }\n```\n\n### JsonObjectRequest\n```java\n private void jsonObjectRequest() {\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://httpbin.org/get?site=code&network=tutsplus\";\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\n            @Override\n            public void onResponse(JSONObject response) {\n                showMsg.setText(\"JsonObjectRequest==\" + response);\n                progressBar.setVisibility(View.GONE);\n            }\n        }, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                showMsg.setText(\"JsonObjectRequest error==\" + error);\n                progressBar.setVisibility(View.GONE);\n            }\n        });\n        mRequestQueue.add(jsonObjectRequest);\n    }\n```\n如果请求JSONArray ，只需用JsonArrayRequest 替代aJsonObjectRequest就可以了\n\n### ImageRequest\n有三种请求图片的方法。\n* ImageRequest\n```java\n/**\n     * 第一个参数是图片的url，\n     * 第二个是结果的listener，\n     * 第三、第四个参数是maxWidth（最大宽度） 和 maxHeight（最大高度），你可以设置为0来忽略他们。\n     * 第五个参数是用于计算图片所需大小的ScaleType，\n     * 第六个参数是用于指定图片压缩方式的参数，建议总是使用 Bitmap.Config.ARGB_8888\n     */\n    private void iamgeRequest() {\n\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        showImage.setImageBitmap(null);\n        String url = \"http://p3.so.qhimg.com/t012befc69d1b6d8f88.jpg\";\n        ImageRequest imageRequest = new ImageRequest(url, new Response.Listener<Bitmap>() {\n            @Override\n            public void onResponse(Bitmap response) {\n                showImage.setImageBitmap(response);\n                progressBar.setVisibility(View.GONE);\n            }\n        }, 0, 0, ImageView.ScaleType.FIT_XY, Bitmap.Config.ARGB_8888, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                progressBar.setVisibility(View.GONE);\n                showMsg.setText(\"ImageRequest error==\" + error);\n            }\n        });\n        mRequestQueue.add(imageRequest);\n    }\n```\n\n* imageLoader+NetworkImageView\nNetworkImageView xml\n```js\n <com.android.volley.toolbox.NetworkImageView\n                android:id=\"@+id/networkImageView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_gravity=\"center_horizontal\"\n                android:src=\"@mipmap/ic_launcher\" />\n```\nNetworkImageView在加载图片的时候会自动获取自身控件的宽高，然后对比网络图片的宽度，再决定是否需要对图片进行压缩。也就是说，压缩过程是在内部完全自动化的，并不需要我们关心，NetworkImageView会始终呈现给我们一张大小刚刚好的网络图片，不会多占用任何一点内存。\n\n如果不想对图片进行压缩的话，只需要在布局文件中把NetworkImageView的layout_width和layout_height都设置成wrap_content就可以了，这样NetworkImageView就会将该图片的原始大小展示出来，不会进行任何压缩。\n```java\n  /**\n     * 数量庞大的ImageRequests，比如生成一个带有图片的ListView\n     */\n    private void imageLoader() {\n\n        showMsg.setText(\"\");\n        showImage.setImageBitmap(null);\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://p0.so.qhimg.com/t0191efbe9e784617e5.jpg\";\n        int maxSize = 10 * 1024 * 1024;//设置缓存图片的大小为10M\n        final LruCache<String, Bitmap> lruCache = new LruCache<String, Bitmap>(maxSize) {\n            @Override\n            protected int sizeOf(String key, Bitmap bitmap) {\n                return bitmap.getRowBytes() * bitmap.getHeight();\n            }\n        };\n        ImageLoader imageLoader = new ImageLoader(mRequestQueue, new ImageLoader.ImageCache() {\n            @Override\n            public Bitmap getBitmap(String url) {\n                return lruCache.get(url);\n            }\n\n            @Override\n            public void putBitmap(String url, Bitmap bitmap) {\n                lruCache.put(url, bitmap);\n            }\n        });\n        imageLoader.get(url, new ImageLoader.ImageListener() {\n            @Override\n            public void onResponse(ImageLoader.ImageContainer response, boolean isImmediate) {\n                showImage.setImageBitmap(response.getBitmap());\n                progressBar.setVisibility(View.GONE);\n            }\n\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                progressBar.setVisibility(View.GONE);\n                showMsg.setText(\"ImageRequest error==\" + error);\n            }\n        }, 0, 0, ImageView.ScaleType.FIT_XY);\n\t\t//以下是NetworkImageView部分\n        networkImageView.setDefaultImageResId(R.mipmap.ic_launcher);\n        networkImageView.setErrorImageResId(R.mipmap.ic_launcher);\n        networkImageView.setImageUrl(\"http://p2.so.qhimg.com/t01ac4a335801991667.jpg\", imageLoader);\n    }\n\n```\n\n### postRequest\n```java\n private void postRequest() {\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://httpbin.org/post\";\n\n        StringRequest postRequest = new StringRequest(Request.Method.POST, url,\n                new Response.Listener<String>() {\n                    @Override\n                    public void onResponse(String response) {\n                        try {\n                            JSONObject jsonResponse = new JSONObject(response).getJSONObject(\"form\");\n                            String site = jsonResponse.getString(\"site\"),\n                                    network = jsonResponse.getString(\"network\");\n                            System.out.println(\"Site: \" + site + \"\\nNetwork: \" + network);\n                            showMsg.setText(\"PostRequest==\" + \"Site: \" + site + \"\\nNetwork: \" + network);\n                            progressBar.setVisibility(View.GONE);\n                        } catch (JSONException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                },\n                new Response.ErrorListener() {\n                    @Override\n                    public void onErrorResponse(VolleyError error) {\n                        error.printStackTrace();\n                        showMsg.setText(\"PostRequest error==\" + error);\n                        progressBar.setVisibility(View.GONE);\n                    }\n                }\n        ) {\n            @Override\n            protected Map<String, String> getParams() {\n                Map<String, String> params = new HashMap<>();\n                // the POST parameters:\n                params.put(\"site\", \"code\");\n                params.put(\"network\", \"tutsplus\");\n                return params;\n            }\n        };\n        mRequestQueue.add(postRequest);\n    }\n```\n\n## 取消Volley\n```java\n @Override\n    protected void onStop() {\n        super.onStop();\n        mRequestQueue.cancelAll(new RequestQueue.RequestFilter() {\n            @Override\n            public boolean apply(Request<?> request) {\n                // do I have to cancel this?\n                return true; // -> always yes\n            }\n        });\n    }\n```\n## 源码地址\n[https://github.com/WuXiaolong/VolleySample](https://github.com/WuXiaolong/VolleySample)\n\n## 附录\n[网络请求库Volley详解](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0526/2934.html)\n[Android开源：网络框架volley使用(一)](http://glblong.blog.51cto.com/3058613/1406758)","source":"_posts/Volley.md","raw":"title: Android Volley使用\ndate: 2015-10-16 16:46:49\ntags: [Android,Volley]\ncategory: Android\n---\n## 导入Volley\nVolley貌似没有官方的Maven repository，你必须依赖官方的源代码。从它的repository 下载Volley源码。使用Git命令：\n\n```java\ngit clone https://android.googlesource.com/platform/frameworks/volley\n```\n不过还有第三种方法，你可以在build.gradle 文件的依赖部分添加这行代码：\n\n```java\ncompile 'com.mcxiaoke.volley:library-aar:1.0.15'\n```\n<!--more-->\n\n## 准备工作\n* 权限\n```js\n<uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n```\n* 变量\n RequestQueue mRequestQueue = Volley.newRequestQueue(this);\n\n## 实践\nVolley实现了三种常见的请求类型：\nStringRequest\nJsonObjectRequest\nImageRequest\n\n### StringRequest\n```java\nprivate void stringRequest() {\n\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://wuxiaolong.me/\";\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, url, new Response.Listener<String>() {\n            @Override\n            public void onResponse(String response) {\n                showMsg.setText(\"stringRequest==\" + response);\n                progressBar.setVisibility(View.GONE);\n                Log.d(\"wxl\", \"stringRequest==\" + response);\n            }\n        }, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                Log.d(\"wxl\", \"StringRequest error==\" + error);\n                progressBar.setVisibility(View.GONE);\n            }\n        });\n        stringRequest.setTag(\"stringRequest\");\n        //如果要取消stringRequest请求，只需简单的添加下面的一行代码：\n        // mRequestQueue.cancelAll(\"stringRequest\");\n        mRequestQueue.add(stringRequest);\n    }\n```\n\n### JsonObjectRequest\n```java\n private void jsonObjectRequest() {\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://httpbin.org/get?site=code&network=tutsplus\";\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\n            @Override\n            public void onResponse(JSONObject response) {\n                showMsg.setText(\"JsonObjectRequest==\" + response);\n                progressBar.setVisibility(View.GONE);\n            }\n        }, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                showMsg.setText(\"JsonObjectRequest error==\" + error);\n                progressBar.setVisibility(View.GONE);\n            }\n        });\n        mRequestQueue.add(jsonObjectRequest);\n    }\n```\n如果请求JSONArray ，只需用JsonArrayRequest 替代aJsonObjectRequest就可以了\n\n### ImageRequest\n有三种请求图片的方法。\n* ImageRequest\n```java\n/**\n     * 第一个参数是图片的url，\n     * 第二个是结果的listener，\n     * 第三、第四个参数是maxWidth（最大宽度） 和 maxHeight（最大高度），你可以设置为0来忽略他们。\n     * 第五个参数是用于计算图片所需大小的ScaleType，\n     * 第六个参数是用于指定图片压缩方式的参数，建议总是使用 Bitmap.Config.ARGB_8888\n     */\n    private void iamgeRequest() {\n\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        showImage.setImageBitmap(null);\n        String url = \"http://p3.so.qhimg.com/t012befc69d1b6d8f88.jpg\";\n        ImageRequest imageRequest = new ImageRequest(url, new Response.Listener<Bitmap>() {\n            @Override\n            public void onResponse(Bitmap response) {\n                showImage.setImageBitmap(response);\n                progressBar.setVisibility(View.GONE);\n            }\n        }, 0, 0, ImageView.ScaleType.FIT_XY, Bitmap.Config.ARGB_8888, new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                progressBar.setVisibility(View.GONE);\n                showMsg.setText(\"ImageRequest error==\" + error);\n            }\n        });\n        mRequestQueue.add(imageRequest);\n    }\n```\n\n* imageLoader+NetworkImageView\nNetworkImageView xml\n```js\n <com.android.volley.toolbox.NetworkImageView\n                android:id=\"@+id/networkImageView\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"10dp\"\n                android:layout_gravity=\"center_horizontal\"\n                android:src=\"@mipmap/ic_launcher\" />\n```\nNetworkImageView在加载图片的时候会自动获取自身控件的宽高，然后对比网络图片的宽度，再决定是否需要对图片进行压缩。也就是说，压缩过程是在内部完全自动化的，并不需要我们关心，NetworkImageView会始终呈现给我们一张大小刚刚好的网络图片，不会多占用任何一点内存。\n\n如果不想对图片进行压缩的话，只需要在布局文件中把NetworkImageView的layout_width和layout_height都设置成wrap_content就可以了，这样NetworkImageView就会将该图片的原始大小展示出来，不会进行任何压缩。\n```java\n  /**\n     * 数量庞大的ImageRequests，比如生成一个带有图片的ListView\n     */\n    private void imageLoader() {\n\n        showMsg.setText(\"\");\n        showImage.setImageBitmap(null);\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://p0.so.qhimg.com/t0191efbe9e784617e5.jpg\";\n        int maxSize = 10 * 1024 * 1024;//设置缓存图片的大小为10M\n        final LruCache<String, Bitmap> lruCache = new LruCache<String, Bitmap>(maxSize) {\n            @Override\n            protected int sizeOf(String key, Bitmap bitmap) {\n                return bitmap.getRowBytes() * bitmap.getHeight();\n            }\n        };\n        ImageLoader imageLoader = new ImageLoader(mRequestQueue, new ImageLoader.ImageCache() {\n            @Override\n            public Bitmap getBitmap(String url) {\n                return lruCache.get(url);\n            }\n\n            @Override\n            public void putBitmap(String url, Bitmap bitmap) {\n                lruCache.put(url, bitmap);\n            }\n        });\n        imageLoader.get(url, new ImageLoader.ImageListener() {\n            @Override\n            public void onResponse(ImageLoader.ImageContainer response, boolean isImmediate) {\n                showImage.setImageBitmap(response.getBitmap());\n                progressBar.setVisibility(View.GONE);\n            }\n\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                progressBar.setVisibility(View.GONE);\n                showMsg.setText(\"ImageRequest error==\" + error);\n            }\n        }, 0, 0, ImageView.ScaleType.FIT_XY);\n\t\t//以下是NetworkImageView部分\n        networkImageView.setDefaultImageResId(R.mipmap.ic_launcher);\n        networkImageView.setErrorImageResId(R.mipmap.ic_launcher);\n        networkImageView.setImageUrl(\"http://p2.so.qhimg.com/t01ac4a335801991667.jpg\", imageLoader);\n    }\n\n```\n\n### postRequest\n```java\n private void postRequest() {\n        showMsg.setText(\"\");\n        progressBar.setVisibility(View.VISIBLE);\n        String url = \"http://httpbin.org/post\";\n\n        StringRequest postRequest = new StringRequest(Request.Method.POST, url,\n                new Response.Listener<String>() {\n                    @Override\n                    public void onResponse(String response) {\n                        try {\n                            JSONObject jsonResponse = new JSONObject(response).getJSONObject(\"form\");\n                            String site = jsonResponse.getString(\"site\"),\n                                    network = jsonResponse.getString(\"network\");\n                            System.out.println(\"Site: \" + site + \"\\nNetwork: \" + network);\n                            showMsg.setText(\"PostRequest==\" + \"Site: \" + site + \"\\nNetwork: \" + network);\n                            progressBar.setVisibility(View.GONE);\n                        } catch (JSONException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                },\n                new Response.ErrorListener() {\n                    @Override\n                    public void onErrorResponse(VolleyError error) {\n                        error.printStackTrace();\n                        showMsg.setText(\"PostRequest error==\" + error);\n                        progressBar.setVisibility(View.GONE);\n                    }\n                }\n        ) {\n            @Override\n            protected Map<String, String> getParams() {\n                Map<String, String> params = new HashMap<>();\n                // the POST parameters:\n                params.put(\"site\", \"code\");\n                params.put(\"network\", \"tutsplus\");\n                return params;\n            }\n        };\n        mRequestQueue.add(postRequest);\n    }\n```\n\n## 取消Volley\n```java\n @Override\n    protected void onStop() {\n        super.onStop();\n        mRequestQueue.cancelAll(new RequestQueue.RequestFilter() {\n            @Override\n            public boolean apply(Request<?> request) {\n                // do I have to cancel this?\n                return true; // -> always yes\n            }\n        });\n    }\n```\n## 源码地址\n[https://github.com/WuXiaolong/VolleySample](https://github.com/WuXiaolong/VolleySample)\n\n## 附录\n[网络请求库Volley详解](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0526/2934.html)\n[Android开源：网络框架volley使用(一)](http://glblong.blog.51cto.com/3058613/1406758)","slug":"Volley","published":1,"updated":"2016-03-17T00:44:06.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekraz008mzspk3mtm4wcz","thumbnailImageUrl":null},{"title":"Android ViewDragHelper实例","date":"2015-12-04T08:45:12.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ViewDragHelper.gif)\n\n## ViewDragHelper创建\n```java\n   //创建ViewDragHelper的实例，第一个参数是ViewGroup，传自己，\n   // 第二个参数就是滑动灵敏度的意思,可以随意设置，第三个是回调\n   mViewDragHelper = ViewDragHelper.create(this, 1.0f, new DragHelperCallback());\n```\n<!--more-->\n这里列举常用的ViewDragHelper.Callback方法\n```java\nclass DragHelperCallback extends ViewDragHelper.Callback {\n\n        /**\n         * 根据返回结果决定当前child是否可以拖拽\n         *\n         * @param child 当前被拖拽的view\n         * @param pointerId 区分多点触摸的id\n         * @return\n         */\n        @Override\n        public boolean tryCaptureView(View child, int pointerId) {\n             return false;\n        }\n\n        /**\n         * 返回拖拽的范围，不对拖拽进行真正的限制，仅仅决定了动画执行速度\n         * @param child\n         * @return\n         */\n        @Override\n        public int getViewHorizontalDragRange(View child) {\n            return super.getViewHorizontalDragRange(child);\n        }\n\n        /**\n         * @param child\n          * @param left  代表你将要移动到的位置的坐标,返回值就是最终确定的移动的位置,\n         *              判断如果这个坐标在layout之内,那我们就返回这个坐标值，\n         *              不能让他超出这个范围, 除此之外就是如果你的layout设置了padding的话，\n         *              让子view的活动范围在padding之内的\n         * @param dx\n         * @return\n         */\n        @Override\n        public int clampViewPositionHorizontal(View child, int left, int dx) {\n\t\t return super.clampViewPositionHorizontal(child, left, dx);\n        }\n\n\n        /**\n         * 位置改变时回调，常用于滑动是更改scale进行缩放等效果\n         *\n         * @param changedView\n         * @param left\n         * @param top\n         * @param dx 横向滑动的加速度\n         * @param dy\n         */\n        @Override\n        public void onViewPositionChanged(View changedView, int left, int top, int dx, int dy) {\n\t\t  super.onViewPositionChanged(changedView, left, top, dx, dy);\n        }\n\n        /**\n         * 拖动结束后调用\n         *\n         * @param releasedChild\n         * @param xvel 水平方向的速度  向右为正\n         * @param yvel 竖直方向的速度  向下为正\n         */\n        @Override\n        public void onViewReleased(View releasedChild, float xvel, float yvel) {\n            super.onViewReleased(releasedChild, xvel, yvel);\n        }\n    }\n```\n## 实例代码\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.TargetApi;\nimport android.content.Context;\nimport android.os.Build;\nimport android.support.v4.view.GestureDetectorCompat;\nimport android.support.v4.view.ViewCompat;\nimport android.support.v4.widget.ViewDragHelper;\nimport android.util.AttributeSet;\nimport android.view.GestureDetector;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.LinearLayout;\n\n/**\n * Created by WuXiaolong on 2015/12/4.\n */\npublic class ViewDragLayout extends LinearLayout {\n    /**\n     * 内容界面\n     */\n    private ViewGroup mContentLayout;\n\n    /**\n     * 遮盖界面\n     */\n    private ViewGroup mBehindLayout;\n\n    private ViewDragHelper mViewDragHelper;\n\n    /**\n     * 手势事件类\n     */\n    private GestureDetectorCompat mGestureDetectorCompat;\n\n    /**\n     * 滑动距离\n     */\n    private int mViewDragRange;\n\n    /**\n     * 左滑最大距离\n     */\n    private int mBehindLayoutWidth;\n    /**\n     * 宽度\n     */\n    private int mContentLayoutWidth;\n\n    private ViewDragListener mViewDragListener;\n\n    private boolean isOpen = false;\n\n    public ViewDragLayout(Context context) {\n        super(context);\n        init();\n    }\n\n    public ViewDragLayout(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public ViewDragLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public ViewDragLayout(Context context, AttributeSet attrs,\n                          int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init();\n    }\n\n    /**\n     * View中所有的子控件均被映射成xml后触发\n     */\n    @Override\n    protected void onFinishInflate() {\n        mContentLayout = (ViewGroup) getChildAt(0);\n        mBehindLayout = (ViewGroup) getChildAt(1);\n        mBehindLayout.setClickable(true);\n        mContentLayout.setClickable(true);\n        super.onFinishInflate();\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n        mContentLayoutWidth = mContentLayout.getMeasuredWidth();\n        mBehindLayoutWidth = mBehindLayout.getMeasuredWidth();\n\n    }\n\n    /**\n     * 设置监听\n     */\n    public void setOnViewDragListener(ViewDragListener viewDragListener) {\n        this.mViewDragListener = viewDragListener;\n    }\n\n\n    public interface ViewDragListener {\n        void onOpen();\n\n        void onClose();\n\n        void onDrag(float percent);\n\n    }\n\n\n    /**\n     * 滑动时松手后以一定速率继续自动滑动下去并逐渐停止，\n     * 类似于扔东西或者松手后自动滑动到指定位置\n     */\n    @Override\n    public void computeScroll() {\n        if (mViewDragHelper.continueSettling(true)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n    }\n\n    /**\n     * 初始化\n     */\n    private void init() {\n        //创建ViewDragHelper的实例，第一个参数是ViewGroup，传自己，\n        // 第二个参数就是滑动灵敏度的意思,可以随意设置，第三个是回调\n        mViewDragHelper = ViewDragHelper.create(this, 1.0f, new DragHelperCallback());\n        //手势操作，第二参数什么意思看下面\n        mGestureDetectorCompat = new GestureDetectorCompat(getContext(), new XScrollDetector());\n    }\n\n    class DragHelperCallback extends ViewDragHelper.Callback {\n\n        /**\n         * 根据返回结果决定当前child是否可以拖拽\n         *\n         * @param child     当前被拖拽的view\n         * @param pointerId 区分多点触摸的id\n         * @return\n         */\n        @Override\n        public boolean tryCaptureView(View child, int pointerId) {\n            return mContentLayout == child;\n        }\n\n        /**\n         * 返回拖拽的范围，不对拖拽进行真正的限制，仅仅决定了动画执行速度\n         *\n         * @param child\n         * @return\n         */\n        @Override\n        public int getViewHorizontalDragRange(View child) {\n            return mContentLayoutWidth;\n        }\n\n        /**\n         * @param child\n         * @param left  代表你将要移动到的位置的坐标,返回值就是最终确定的移动的位置,\n         *              判断如果这个坐标在layout之内,那我们就返回这个坐标值，\n         *              不能让他超出这个范围, 除此之外就是如果你的layout设置了padding的话，\n         *              让子view的活动范围在padding之内的\n         * @param dx\n         * @return\n         */\n        @Override\n        public int clampViewPositionHorizontal(View child, int left, int dx) {\n//            Log.d(\"wxl\", \"clampViewPositionHorizontal left=\" + left);\n            if (child == mContentLayout) {\n                int newLeft = Math.min(\n                        Math.max((-getPaddingLeft() - mBehindLayoutWidth), left), 0);\n                return newLeft;\n            } else {\n                int newLeft = Math.min(\n                        Math.max(left, getPaddingLeft() + mContentLayoutWidth - mBehindLayoutWidth),\n                        (getPaddingLeft() + mContentLayoutWidth + getPaddingRight()));\n                return newLeft;\n            }\n        }\n\n\n        /**\n         * 位置改变时回调，常用于滑动是更改scale进行缩放等效果\n         *\n         * @param changedView\n         * @param left\n         * @param top\n         * @param dx          横向滑动的加速度\n         * @param dy\n         */\n        @Override\n        public void onViewPositionChanged(\n                View changedView, int left, int top, int dx, int dy) {\n//            Log.d(\"wxl\", \"onViewPositionChanged left=\" + left);\n            mViewDragRange = left;\n            float percent = Math.abs((float) left / (float) mContentLayoutWidth);\n            if (null != mViewDragListener)\n                mViewDragListener.onDrag(percent);\n            if (changedView == mContentLayout) {\n                mBehindLayout.offsetLeftAndRight(dx);\n            } else {\n                mContentLayout.offsetLeftAndRight(dx);\n            }\n            invalidate();\n        }\n\n        /**\n         * 拖动结束后调用\n         *\n         * @param releasedChild\n         * @param xvel          水平方向的速度  向右为正\n         * @param yvel          竖直方向的速度  向下为正\n         */\n        @Override\n        public void onViewReleased(View releasedChild, float xvel, float yvel) {\n            if (releasedChild == mContentLayout) {\n                if (xvel <= 0) {//向左滑动\n                    if (-mViewDragRange >= mBehindLayoutWidth / 2\n                            && -mViewDragRange <= mBehindLayoutWidth) {\n                        open();\n                    } else {\n                        close();\n                    }\n                } else {//向右滑动\n                    if (-mViewDragRange >= 0\n                            && -mViewDragRange <= mBehindLayoutWidth) {\n                        close();\n                    } else {\n                        open();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 打开\n     */\n    public void open() {\n        if (mViewDragHelper.smoothSlideViewTo(\n                mContentLayout, -mBehindLayoutWidth, 0)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n        if (null != mViewDragListener)\n            mViewDragListener.onOpen();\n        isOpen = true;\n    }\n\n    /**\n     * 关闭\n     */\n    public void close() {\n        if (mViewDragHelper.smoothSlideViewTo(mContentLayout, 0, 0)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n        if (null != mViewDragListener)\n            mViewDragListener.onClose();\n        isOpen = false;\n    }\n\n    public boolean isOpen() {\n        return isOpen;\n    }\n\n    /**\n     * 手势监听回调,\n     * SimpleOnGestureListener为了不用重写那么多监听的帮助类\n     */\n    private class XScrollDetector extends GestureDetector.SimpleOnGestureListener {\n\n        @Override\n        public boolean onScroll(MotionEvent e1, MotionEvent e2,\n                                float distanceX, float distanceY) {\n            //判断是否是滑动的x距离>y距离\n            return Math.abs(distanceY) <= Math.abs(distanceX);\n        }\n\n    }\n\n    /**\n     * 事件拦截下来,相当于把自定义控件的事件交给ViewDragHelper去处理\n     *\n     * @param ev\n     * @return\n     */\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return mViewDragHelper.shouldInterceptTouchEvent(ev)\n                && mGestureDetectorCompat.onTouchEvent(ev);\n    }\n\n    /**\n     * 事件监听，交给ViewDragHelper处理\n     *\n     * @param e\n     * @return\n     */\n    @Override\n    public boolean onTouchEvent(MotionEvent e) {\n        try {\n            mViewDragHelper.processTouchEvent(e);\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        }\n        return false;\n    }\n}\n\n\n```\nxml引用\n```js\n<com.wuxiaolong.apksample.ViewDragLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"200dp\"\n        android:background=\"#ffff00\">\n\n        <LinearLayout\n            android:id=\"@+id/mContentLayout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"80dp\"\n            android:gravity=\"center\"\n            android:orientation=\"vertical\">\n\n             <TextView\n                android:id=\"@+id/text\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center_vertical\"\n                android:paddingLeft=\"5dp\"\n                android:text=\"小尛龙\n                \\ngithub地址：https://github.com/WuXiaolong\n                \\n新浪微博：吴小龙同學\"\n                android:textColor=\"#202020\"\n                android:textSize=\"16sp\" />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/mBehindLayout\"\n            android:layout_width=\"140dp\"\n            android:layout_height=\"80dp\">\n\n            <ImageView\n                android:id=\"@+id/add\"\n                android:layout_width=\"70dp\"\n                android:layout_height=\"match_parent\"\n                android:background=\"#4cd964\"\n                android:paddingLeft=\"25dp\"\n                android:paddingRight=\"25dp\"\n                android:src=\"@android:drawable/ic_menu_add\" />\n\n            <ImageView\n                android:id=\"@+id/delete\"\n                android:layout_width=\"70dp\"\n                android:layout_height=\"match_parent\"\n                android:background=\"#ff2020\"\n                android:paddingLeft=\"25dp\"\n                android:paddingRight=\"25dp\"\n                android:src=\"@android:drawable/ic_menu_delete\" />\n        </LinearLayout>\n\n    </com.wuxiaolong.apksample.ViewDragLayout>\n```\n## WeWin\n如果想了解更多，可参考WeWin项目，其中仿QQ侧滑效果就是ViewDragHelper做的。项目地址：[https://github.com/WuXiaolong/WeWin](https://github.com/WuXiaolong/WeWin)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/ViewDragHelper.md","raw":"title: Android ViewDragHelper实例\ndate: 2015-12-04 16:45:12\ntags: ViewDragHelper\ncategory: Android\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/ViewDragHelper.gif)\n\n## ViewDragHelper创建\n```java\n   //创建ViewDragHelper的实例，第一个参数是ViewGroup，传自己，\n   // 第二个参数就是滑动灵敏度的意思,可以随意设置，第三个是回调\n   mViewDragHelper = ViewDragHelper.create(this, 1.0f, new DragHelperCallback());\n```\n<!--more-->\n这里列举常用的ViewDragHelper.Callback方法\n```java\nclass DragHelperCallback extends ViewDragHelper.Callback {\n\n        /**\n         * 根据返回结果决定当前child是否可以拖拽\n         *\n         * @param child 当前被拖拽的view\n         * @param pointerId 区分多点触摸的id\n         * @return\n         */\n        @Override\n        public boolean tryCaptureView(View child, int pointerId) {\n             return false;\n        }\n\n        /**\n         * 返回拖拽的范围，不对拖拽进行真正的限制，仅仅决定了动画执行速度\n         * @param child\n         * @return\n         */\n        @Override\n        public int getViewHorizontalDragRange(View child) {\n            return super.getViewHorizontalDragRange(child);\n        }\n\n        /**\n         * @param child\n          * @param left  代表你将要移动到的位置的坐标,返回值就是最终确定的移动的位置,\n         *              判断如果这个坐标在layout之内,那我们就返回这个坐标值，\n         *              不能让他超出这个范围, 除此之外就是如果你的layout设置了padding的话，\n         *              让子view的活动范围在padding之内的\n         * @param dx\n         * @return\n         */\n        @Override\n        public int clampViewPositionHorizontal(View child, int left, int dx) {\n\t\t return super.clampViewPositionHorizontal(child, left, dx);\n        }\n\n\n        /**\n         * 位置改变时回调，常用于滑动是更改scale进行缩放等效果\n         *\n         * @param changedView\n         * @param left\n         * @param top\n         * @param dx 横向滑动的加速度\n         * @param dy\n         */\n        @Override\n        public void onViewPositionChanged(View changedView, int left, int top, int dx, int dy) {\n\t\t  super.onViewPositionChanged(changedView, left, top, dx, dy);\n        }\n\n        /**\n         * 拖动结束后调用\n         *\n         * @param releasedChild\n         * @param xvel 水平方向的速度  向右为正\n         * @param yvel 竖直方向的速度  向下为正\n         */\n        @Override\n        public void onViewReleased(View releasedChild, float xvel, float yvel) {\n            super.onViewReleased(releasedChild, xvel, yvel);\n        }\n    }\n```\n## 实例代码\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.TargetApi;\nimport android.content.Context;\nimport android.os.Build;\nimport android.support.v4.view.GestureDetectorCompat;\nimport android.support.v4.view.ViewCompat;\nimport android.support.v4.widget.ViewDragHelper;\nimport android.util.AttributeSet;\nimport android.view.GestureDetector;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.LinearLayout;\n\n/**\n * Created by WuXiaolong on 2015/12/4.\n */\npublic class ViewDragLayout extends LinearLayout {\n    /**\n     * 内容界面\n     */\n    private ViewGroup mContentLayout;\n\n    /**\n     * 遮盖界面\n     */\n    private ViewGroup mBehindLayout;\n\n    private ViewDragHelper mViewDragHelper;\n\n    /**\n     * 手势事件类\n     */\n    private GestureDetectorCompat mGestureDetectorCompat;\n\n    /**\n     * 滑动距离\n     */\n    private int mViewDragRange;\n\n    /**\n     * 左滑最大距离\n     */\n    private int mBehindLayoutWidth;\n    /**\n     * 宽度\n     */\n    private int mContentLayoutWidth;\n\n    private ViewDragListener mViewDragListener;\n\n    private boolean isOpen = false;\n\n    public ViewDragLayout(Context context) {\n        super(context);\n        init();\n    }\n\n    public ViewDragLayout(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public ViewDragLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public ViewDragLayout(Context context, AttributeSet attrs,\n                          int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init();\n    }\n\n    /**\n     * View中所有的子控件均被映射成xml后触发\n     */\n    @Override\n    protected void onFinishInflate() {\n        mContentLayout = (ViewGroup) getChildAt(0);\n        mBehindLayout = (ViewGroup) getChildAt(1);\n        mBehindLayout.setClickable(true);\n        mContentLayout.setClickable(true);\n        super.onFinishInflate();\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n        mContentLayoutWidth = mContentLayout.getMeasuredWidth();\n        mBehindLayoutWidth = mBehindLayout.getMeasuredWidth();\n\n    }\n\n    /**\n     * 设置监听\n     */\n    public void setOnViewDragListener(ViewDragListener viewDragListener) {\n        this.mViewDragListener = viewDragListener;\n    }\n\n\n    public interface ViewDragListener {\n        void onOpen();\n\n        void onClose();\n\n        void onDrag(float percent);\n\n    }\n\n\n    /**\n     * 滑动时松手后以一定速率继续自动滑动下去并逐渐停止，\n     * 类似于扔东西或者松手后自动滑动到指定位置\n     */\n    @Override\n    public void computeScroll() {\n        if (mViewDragHelper.continueSettling(true)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n    }\n\n    /**\n     * 初始化\n     */\n    private void init() {\n        //创建ViewDragHelper的实例，第一个参数是ViewGroup，传自己，\n        // 第二个参数就是滑动灵敏度的意思,可以随意设置，第三个是回调\n        mViewDragHelper = ViewDragHelper.create(this, 1.0f, new DragHelperCallback());\n        //手势操作，第二参数什么意思看下面\n        mGestureDetectorCompat = new GestureDetectorCompat(getContext(), new XScrollDetector());\n    }\n\n    class DragHelperCallback extends ViewDragHelper.Callback {\n\n        /**\n         * 根据返回结果决定当前child是否可以拖拽\n         *\n         * @param child     当前被拖拽的view\n         * @param pointerId 区分多点触摸的id\n         * @return\n         */\n        @Override\n        public boolean tryCaptureView(View child, int pointerId) {\n            return mContentLayout == child;\n        }\n\n        /**\n         * 返回拖拽的范围，不对拖拽进行真正的限制，仅仅决定了动画执行速度\n         *\n         * @param child\n         * @return\n         */\n        @Override\n        public int getViewHorizontalDragRange(View child) {\n            return mContentLayoutWidth;\n        }\n\n        /**\n         * @param child\n         * @param left  代表你将要移动到的位置的坐标,返回值就是最终确定的移动的位置,\n         *              判断如果这个坐标在layout之内,那我们就返回这个坐标值，\n         *              不能让他超出这个范围, 除此之外就是如果你的layout设置了padding的话，\n         *              让子view的活动范围在padding之内的\n         * @param dx\n         * @return\n         */\n        @Override\n        public int clampViewPositionHorizontal(View child, int left, int dx) {\n//            Log.d(\"wxl\", \"clampViewPositionHorizontal left=\" + left);\n            if (child == mContentLayout) {\n                int newLeft = Math.min(\n                        Math.max((-getPaddingLeft() - mBehindLayoutWidth), left), 0);\n                return newLeft;\n            } else {\n                int newLeft = Math.min(\n                        Math.max(left, getPaddingLeft() + mContentLayoutWidth - mBehindLayoutWidth),\n                        (getPaddingLeft() + mContentLayoutWidth + getPaddingRight()));\n                return newLeft;\n            }\n        }\n\n\n        /**\n         * 位置改变时回调，常用于滑动是更改scale进行缩放等效果\n         *\n         * @param changedView\n         * @param left\n         * @param top\n         * @param dx          横向滑动的加速度\n         * @param dy\n         */\n        @Override\n        public void onViewPositionChanged(\n                View changedView, int left, int top, int dx, int dy) {\n//            Log.d(\"wxl\", \"onViewPositionChanged left=\" + left);\n            mViewDragRange = left;\n            float percent = Math.abs((float) left / (float) mContentLayoutWidth);\n            if (null != mViewDragListener)\n                mViewDragListener.onDrag(percent);\n            if (changedView == mContentLayout) {\n                mBehindLayout.offsetLeftAndRight(dx);\n            } else {\n                mContentLayout.offsetLeftAndRight(dx);\n            }\n            invalidate();\n        }\n\n        /**\n         * 拖动结束后调用\n         *\n         * @param releasedChild\n         * @param xvel          水平方向的速度  向右为正\n         * @param yvel          竖直方向的速度  向下为正\n         */\n        @Override\n        public void onViewReleased(View releasedChild, float xvel, float yvel) {\n            if (releasedChild == mContentLayout) {\n                if (xvel <= 0) {//向左滑动\n                    if (-mViewDragRange >= mBehindLayoutWidth / 2\n                            && -mViewDragRange <= mBehindLayoutWidth) {\n                        open();\n                    } else {\n                        close();\n                    }\n                } else {//向右滑动\n                    if (-mViewDragRange >= 0\n                            && -mViewDragRange <= mBehindLayoutWidth) {\n                        close();\n                    } else {\n                        open();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 打开\n     */\n    public void open() {\n        if (mViewDragHelper.smoothSlideViewTo(\n                mContentLayout, -mBehindLayoutWidth, 0)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n        if (null != mViewDragListener)\n            mViewDragListener.onOpen();\n        isOpen = true;\n    }\n\n    /**\n     * 关闭\n     */\n    public void close() {\n        if (mViewDragHelper.smoothSlideViewTo(mContentLayout, 0, 0)) {\n            ViewCompat.postInvalidateOnAnimation(this);\n        }\n        if (null != mViewDragListener)\n            mViewDragListener.onClose();\n        isOpen = false;\n    }\n\n    public boolean isOpen() {\n        return isOpen;\n    }\n\n    /**\n     * 手势监听回调,\n     * SimpleOnGestureListener为了不用重写那么多监听的帮助类\n     */\n    private class XScrollDetector extends GestureDetector.SimpleOnGestureListener {\n\n        @Override\n        public boolean onScroll(MotionEvent e1, MotionEvent e2,\n                                float distanceX, float distanceY) {\n            //判断是否是滑动的x距离>y距离\n            return Math.abs(distanceY) <= Math.abs(distanceX);\n        }\n\n    }\n\n    /**\n     * 事件拦截下来,相当于把自定义控件的事件交给ViewDragHelper去处理\n     *\n     * @param ev\n     * @return\n     */\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return mViewDragHelper.shouldInterceptTouchEvent(ev)\n                && mGestureDetectorCompat.onTouchEvent(ev);\n    }\n\n    /**\n     * 事件监听，交给ViewDragHelper处理\n     *\n     * @param e\n     * @return\n     */\n    @Override\n    public boolean onTouchEvent(MotionEvent e) {\n        try {\n            mViewDragHelper.processTouchEvent(e);\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        }\n        return false;\n    }\n}\n\n\n```\nxml引用\n```js\n<com.wuxiaolong.apksample.ViewDragLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"200dp\"\n        android:background=\"#ffff00\">\n\n        <LinearLayout\n            android:id=\"@+id/mContentLayout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"80dp\"\n            android:gravity=\"center\"\n            android:orientation=\"vertical\">\n\n             <TextView\n                android:id=\"@+id/text\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:layout_gravity=\"center\"\n                android:gravity=\"center_vertical\"\n                android:paddingLeft=\"5dp\"\n                android:text=\"小尛龙\n                \\ngithub地址：https://github.com/WuXiaolong\n                \\n新浪微博：吴小龙同學\"\n                android:textColor=\"#202020\"\n                android:textSize=\"16sp\" />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:id=\"@+id/mBehindLayout\"\n            android:layout_width=\"140dp\"\n            android:layout_height=\"80dp\">\n\n            <ImageView\n                android:id=\"@+id/add\"\n                android:layout_width=\"70dp\"\n                android:layout_height=\"match_parent\"\n                android:background=\"#4cd964\"\n                android:paddingLeft=\"25dp\"\n                android:paddingRight=\"25dp\"\n                android:src=\"@android:drawable/ic_menu_add\" />\n\n            <ImageView\n                android:id=\"@+id/delete\"\n                android:layout_width=\"70dp\"\n                android:layout_height=\"match_parent\"\n                android:background=\"#ff2020\"\n                android:paddingLeft=\"25dp\"\n                android:paddingRight=\"25dp\"\n                android:src=\"@android:drawable/ic_menu_delete\" />\n        </LinearLayout>\n\n    </com.wuxiaolong.apksample.ViewDragLayout>\n```\n## WeWin\n如果想了解更多，可参考WeWin项目，其中仿QQ侧滑效果就是ViewDragHelper做的。项目地址：[https://github.com/WuXiaolong/WeWin](https://github.com/WuXiaolong/WeWin)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"ViewDragHelper","published":1,"updated":"2016-03-17T00:44:06.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrb1008rzspk5zsdsgm2","thumbnailImageUrl":null},{"title":"Android之视图动画Animation","date":"2015-09-08T06:14:05.000Z","_content":"官网说明见：[http://developer.android.com/intl/zh-cn/guide/topics/graphics/view-animation.html](http://developer.android.com/intl/zh-cn/guide/topics/graphics/view-animation.html)\nView Animation主要有两种动画模式：\n一种是tweened animation(渐变动画):\nXML中：alpha\nJavaCode：AlphaAnimation\n\nXML中：scale\nJavaCode：ScaleAnimation\n\n一种是frame by frame(画面转换动画)\nXML中：translate\nJavaCode：TranslateAnimation\n\nXML中：rotate\nJavaCode：RotateAnimation\n<!--more-->\n##  alpha透明度控制动画效果\n文件名:my_alpha_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<alpha xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromAlpha=\"0.1\"\nandroid:toAlpha=\"1.0\"\nandroid:duration=\"3000\"\n/> \n```\n透明度控制动画效果 alpha\n浮点型值：\n        fromAlpha 属性为动画起始时透明度\n        toAlpha   属性为动画结束时透明度\n        说明: \n        0.0表示完全透明\n        1.0表示完全不透明\n       以上值取0.0-1.0之间的float数据类型的数字\n        长整型值：\n        duration  属性为动画持续时间\n        说明:   \n        时间以毫秒为单位\n\n\n在程序中引用XML资源核心代码如下：\n```java\n\tAnimation mAnimation ;\n\tmAnimation = AnimationUtils.loadAnimation(this, R.anim.anim);\n\tTextView text = (TextView)findViewById(R.id.textview00);\n\ttext.setAnimation(mAnimation);\n```\n①private AlphaAnimation myAnimation_Alpha;\n//AlphaAnimation类对象构造\n②AlphaAnimation(float fromAlpha, float toAlpha) \n//第一个参数fromAlpha为 动画开始时候透明度\n//第二个参数toAlpha为 动画结束时候透明度\nmyAnimation_Alpha=new AlphaAnimation(0.1f, 1.0f);\n//说明: \n// 0.0表示完全透明\n// 1.0表示完全不透明\n设置动画持续时间\nmyAnimation_Alpha.setDuration(5000);\n//设置时间持续时间为 5000毫秒\n\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## rotate旋转动画效果\n文件名: my_rotate_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <rotate  xmlns:android=\"http://schemas.android.com/apk/res/android\"    \n          android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"  \n        android:fromDegrees=\"0\" \n        android:toDegrees=\"+350\"             \n        android:pivotX=\"50%\" \n        android:pivotY=\"50%\"            \n        android:duration=\"3000\" />\n```\n   rotate 旋转动画效果\n       属性：interpolator 指定一个动画的插入器\n                在我试验过程中，使用android.res.anim中的资源时候发现有三种动画插入器\n        accelerate_decelerate_interpolator  加速-减速 动画插入器\n        accelerate_interpolator        加速-动画插入器\n        decelerate_interpolator        减速- 动画插入器\n        \n   其他的属于特定的动画效果    \n        浮点数型值:\n        fromDegrees 属性为动画起始时物件的角度    \n        toDegrees   属性为动画结束时物件旋转的角度 可以大于360度      \n        说明:\n         当角度为负数——表示逆时针旋转\n         当角度为正数——表示顺时针旋转                      \n        (负数from——to正数:顺时针旋转)   \n        (负数from——to负数:逆时针旋转) \n        (正数from——to正数:顺时针旋转) \n        (正数from——to负数:逆时针旋转)       \n        pivotX     属性为动画相对于物件的X坐标的开始位置\n        pivotY     属性为动画相对于物件的Y坐标的开始位置\n        说明:\n        以上两个属性值 从0%-100%中取值\n        50%为物件的X或Y方向坐标上的中点位置\n    \n   长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n\n\n①RotateAnimation类对象定义\nprivate AlphaAnimation myAnimation_Alpha;\n②RotateAnimation类对象构造\nRotateAnimation(float fromDegrees, float toDegrees, \n            int pivotXType, float pivotXValue, int pivotYType, float pivotYValue)\n//第一个参数fromDegrees为动画起始时的旋转角度    \n//第二个参数toDegrees为动画旋转到的角度   \n//第三个参数pivotXType为动画在X轴相对于物件位置类型  \n//第四个参数pivotXValue为动画相对于物件的X坐标的开始位置\n//第五个参数pivotXType为动画在Y轴相对于物件位置类型   \n//第六个参数pivotYValue为动画相对于物件的Y坐标的开始位置\nmyAnimation_Rotate=new RotateAnimation(0.0f, +350.0f,\n               Animation.RELATIVE_TO_SELF,0.5f,Animation.RELATIVE_TO_SELF, 0.5f);\n③设置动画持续时间\nmyAnimation_Rotate.setDuration(3000);\n//设置时间持续时间为 3000毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## scale尺寸伸缩动画效果 \n文件名: my_scale_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <scale xmlns:android=\"http://schemas.android.com/apk/res/android\">\nandroid:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"         \n          android:fromXScale=\"0.0\"\n          android:toXScale=\"1.4\"\n          \n          android:fromYScale=\"0.0\"\n          android:toYScale=\"1.4\"\n          \n          android:pivotX=\"50%\"\n          android:pivotY=\"50%\"\n          \n          android:fillAfter=\"false\"\n          android:duration=\"700\" />\n```\n 尺寸伸缩动画效果 scale\n       属性：interpolator 指定一个动画的插入器\n       在我试验过程中，使用android.res.anim中的资源时候发现有三种动画插入器\n        \n   accelerate_decelerate_interpolator  加速-减速 动画插入器\n        accelerate_interpolator        加速-动画插入器\n        decelerate_interpolator        减速- 动画插入器\n        \n   其他的属于特定的动画效果 \n  浮点型值：         \n        fromXScale 属性为动画起始时 X坐标上的伸缩尺寸    \n        toXScale   属性为动画结束时 X坐标上的伸缩尺寸     \n        \n   fromYScale 属性为动画起始时Y坐标上的伸缩尺寸    \n       toYScale   属性为动画结束时Y坐标上的伸缩尺寸    \n        \n   说明:\n        以上四种属性值  \n        \n   0.0表示收缩到没有 \n        1.0表示正常无伸缩     \n        值小于1.0表示收缩  \n        值大于1.0表示放大\n        pivotX     属性为动画相对于物件的X坐标的开始位置\n        pivotY     属性为动画相对于物件的Y坐标的开始位置\n        \n   说明:\n        以上两个属性值 从0%-100%中取值\n        50%为物件的X或Y方向坐标上的中点位置\n        \n   长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n  \n   布尔型值:\n        fillAfter 属性 当设置为true ，该动画转化在动画结束后被应用\n\n①ScaleAnimation类对象定义\nprivate AlphaAnimation myAnimation_Alpha;\n②ScaleAnimation类对象构造\nScaleAnimation(float fromX, float toX, float fromY, float toY,\n           int pivotXType, float pivotXValue, int pivotYType, float pivotYValue) \n//第一个参数fromX为动画起始时 X坐标上的伸缩尺寸    \n//第二个参数toX为动画结束时 X坐标上的伸缩尺寸     \n//第三个参数fromY为动画起始时Y坐标上的伸缩尺寸    \n//第四个参数toY为动画结束时Y坐标上的伸缩尺寸  \n/*说明:\n以上四种属性值    \n0.0表示收缩到没有 \n1.0表示正常无伸缩     \n值小于1.0表示收缩  \n值大于1.0表示放大\n*/\n//第五个参数pivotXType为动画在X轴相对于物件位置类型  \n//第六个参数pivotXValue为动画相对于物件的X坐标的开始位置\n//第七个参数pivotXType为动画在Y轴相对于物件位置类型   \n//第八个参数pivotYValue为动画相对于物件的Y坐标的开始位置\nmyAnimation_Scale =new ScaleAnimation(0.0f, 1.4f, 0.0f, 1.4f,\n             Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\n③　设置动画持续时间\nmyAnimation_Scale.setDuration(700);\n//设置时间持续时间为 700毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## translate位置转移动画效果 \n文件名: my_translate_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<translate\nandroid:fromXDelta=\"30\"\nandroid:toXDelta=\"-80\"\nandroid:fromYDelta=\"30\"\nandroid:toYDelta=\"300\"\nandroid:duration=\"800\"\n/>\n```\n translate 位置转移动画效果\n        整型值:\n        fromXDelta 属性为动画起始时 X坐标上的位置    \n        toXDelta   属性为动画结束时 X坐标上的位置\n        \n   fromYDelta 属性为动画起始时 Y坐标上的位置\n        toYDelta   属性为动画结束时 Y坐标上的位置\n        注意:\n        没有指定fromXType toXType fromYType toYType 时候，默认是以自己为相对参照物 \n         长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n\n①TranslateAnimation类对象定义\nprivate TranslateAnimation myAnimation_Translate;\n②TranslateAnimation类对象构造\nTranslateAnimation(float fromXDelta, float toXDelta,\n                       float fromYDelta, float toYDelta) \n//第一个参数fromXDelta为动画起始时 X坐标上的移动位置    \n//第二个参数toXDelta为动画结束时 X坐标上的移动位置      \n//第三个参数fromYDelta为动画起始时Y坐标上的移动位置     \n//第四个参数toYDelta为动画结束时Y坐标上的移动位置\n③　设置动画持续时间\nmyAnimation_Translate.setDuration(2000);\n//设置时间持续时间为 2000毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/ViewAnimation.md","raw":"title: Android之视图动画Animation\ndate: 2015-09-08 14:14:05\ntags: Animation\ncategory: Android\n---\n官网说明见：[http://developer.android.com/intl/zh-cn/guide/topics/graphics/view-animation.html](http://developer.android.com/intl/zh-cn/guide/topics/graphics/view-animation.html)\nView Animation主要有两种动画模式：\n一种是tweened animation(渐变动画):\nXML中：alpha\nJavaCode：AlphaAnimation\n\nXML中：scale\nJavaCode：ScaleAnimation\n\n一种是frame by frame(画面转换动画)\nXML中：translate\nJavaCode：TranslateAnimation\n\nXML中：rotate\nJavaCode：RotateAnimation\n<!--more-->\n##  alpha透明度控制动画效果\n文件名:my_alpha_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<alpha xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:fromAlpha=\"0.1\"\nandroid:toAlpha=\"1.0\"\nandroid:duration=\"3000\"\n/> \n```\n透明度控制动画效果 alpha\n浮点型值：\n        fromAlpha 属性为动画起始时透明度\n        toAlpha   属性为动画结束时透明度\n        说明: \n        0.0表示完全透明\n        1.0表示完全不透明\n       以上值取0.0-1.0之间的float数据类型的数字\n        长整型值：\n        duration  属性为动画持续时间\n        说明:   \n        时间以毫秒为单位\n\n\n在程序中引用XML资源核心代码如下：\n```java\n\tAnimation mAnimation ;\n\tmAnimation = AnimationUtils.loadAnimation(this, R.anim.anim);\n\tTextView text = (TextView)findViewById(R.id.textview00);\n\ttext.setAnimation(mAnimation);\n```\n①private AlphaAnimation myAnimation_Alpha;\n//AlphaAnimation类对象构造\n②AlphaAnimation(float fromAlpha, float toAlpha) \n//第一个参数fromAlpha为 动画开始时候透明度\n//第二个参数toAlpha为 动画结束时候透明度\nmyAnimation_Alpha=new AlphaAnimation(0.1f, 1.0f);\n//说明: \n// 0.0表示完全透明\n// 1.0表示完全不透明\n设置动画持续时间\nmyAnimation_Alpha.setDuration(5000);\n//设置时间持续时间为 5000毫秒\n\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## rotate旋转动画效果\n文件名: my_rotate_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <rotate  xmlns:android=\"http://schemas.android.com/apk/res/android\"    \n          android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"  \n        android:fromDegrees=\"0\" \n        android:toDegrees=\"+350\"             \n        android:pivotX=\"50%\" \n        android:pivotY=\"50%\"            \n        android:duration=\"3000\" />\n```\n   rotate 旋转动画效果\n       属性：interpolator 指定一个动画的插入器\n                在我试验过程中，使用android.res.anim中的资源时候发现有三种动画插入器\n        accelerate_decelerate_interpolator  加速-减速 动画插入器\n        accelerate_interpolator        加速-动画插入器\n        decelerate_interpolator        减速- 动画插入器\n        \n   其他的属于特定的动画效果    \n        浮点数型值:\n        fromDegrees 属性为动画起始时物件的角度    \n        toDegrees   属性为动画结束时物件旋转的角度 可以大于360度      \n        说明:\n         当角度为负数——表示逆时针旋转\n         当角度为正数——表示顺时针旋转                      \n        (负数from——to正数:顺时针旋转)   \n        (负数from——to负数:逆时针旋转) \n        (正数from——to正数:顺时针旋转) \n        (正数from——to负数:逆时针旋转)       \n        pivotX     属性为动画相对于物件的X坐标的开始位置\n        pivotY     属性为动画相对于物件的Y坐标的开始位置\n        说明:\n        以上两个属性值 从0%-100%中取值\n        50%为物件的X或Y方向坐标上的中点位置\n    \n   长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n\n\n①RotateAnimation类对象定义\nprivate AlphaAnimation myAnimation_Alpha;\n②RotateAnimation类对象构造\nRotateAnimation(float fromDegrees, float toDegrees, \n            int pivotXType, float pivotXValue, int pivotYType, float pivotYValue)\n//第一个参数fromDegrees为动画起始时的旋转角度    \n//第二个参数toDegrees为动画旋转到的角度   \n//第三个参数pivotXType为动画在X轴相对于物件位置类型  \n//第四个参数pivotXValue为动画相对于物件的X坐标的开始位置\n//第五个参数pivotXType为动画在Y轴相对于物件位置类型   \n//第六个参数pivotYValue为动画相对于物件的Y坐标的开始位置\nmyAnimation_Rotate=new RotateAnimation(0.0f, +350.0f,\n               Animation.RELATIVE_TO_SELF,0.5f,Animation.RELATIVE_TO_SELF, 0.5f);\n③设置动画持续时间\nmyAnimation_Rotate.setDuration(3000);\n//设置时间持续时间为 3000毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## scale尺寸伸缩动画效果 \n文件名: my_scale_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <scale xmlns:android=\"http://schemas.android.com/apk/res/android\">\nandroid:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"         \n          android:fromXScale=\"0.0\"\n          android:toXScale=\"1.4\"\n          \n          android:fromYScale=\"0.0\"\n          android:toYScale=\"1.4\"\n          \n          android:pivotX=\"50%\"\n          android:pivotY=\"50%\"\n          \n          android:fillAfter=\"false\"\n          android:duration=\"700\" />\n```\n 尺寸伸缩动画效果 scale\n       属性：interpolator 指定一个动画的插入器\n       在我试验过程中，使用android.res.anim中的资源时候发现有三种动画插入器\n        \n   accelerate_decelerate_interpolator  加速-减速 动画插入器\n        accelerate_interpolator        加速-动画插入器\n        decelerate_interpolator        减速- 动画插入器\n        \n   其他的属于特定的动画效果 \n  浮点型值：         \n        fromXScale 属性为动画起始时 X坐标上的伸缩尺寸    \n        toXScale   属性为动画结束时 X坐标上的伸缩尺寸     \n        \n   fromYScale 属性为动画起始时Y坐标上的伸缩尺寸    \n       toYScale   属性为动画结束时Y坐标上的伸缩尺寸    \n        \n   说明:\n        以上四种属性值  \n        \n   0.0表示收缩到没有 \n        1.0表示正常无伸缩     \n        值小于1.0表示收缩  \n        值大于1.0表示放大\n        pivotX     属性为动画相对于物件的X坐标的开始位置\n        pivotY     属性为动画相对于物件的Y坐标的开始位置\n        \n   说明:\n        以上两个属性值 从0%-100%中取值\n        50%为物件的X或Y方向坐标上的中点位置\n        \n   长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n  \n   布尔型值:\n        fillAfter 属性 当设置为true ，该动画转化在动画结束后被应用\n\n①ScaleAnimation类对象定义\nprivate AlphaAnimation myAnimation_Alpha;\n②ScaleAnimation类对象构造\nScaleAnimation(float fromX, float toX, float fromY, float toY,\n           int pivotXType, float pivotXValue, int pivotYType, float pivotYValue) \n//第一个参数fromX为动画起始时 X坐标上的伸缩尺寸    \n//第二个参数toX为动画结束时 X坐标上的伸缩尺寸     \n//第三个参数fromY为动画起始时Y坐标上的伸缩尺寸    \n//第四个参数toY为动画结束时Y坐标上的伸缩尺寸  \n/*说明:\n以上四种属性值    \n0.0表示收缩到没有 \n1.0表示正常无伸缩     \n值小于1.0表示收缩  \n值大于1.0表示放大\n*/\n//第五个参数pivotXType为动画在X轴相对于物件位置类型  \n//第六个参数pivotXValue为动画相对于物件的X坐标的开始位置\n//第七个参数pivotXType为动画在Y轴相对于物件位置类型   \n//第八个参数pivotYValue为动画相对于物件的Y坐标的开始位置\nmyAnimation_Scale =new ScaleAnimation(0.0f, 1.4f, 0.0f, 1.4f,\n             Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\n③　设置动画持续时间\nmyAnimation_Scale.setDuration(700);\n//设置时间持续时间为 700毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## translate位置转移动画效果 \n文件名: my_translate_action.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<translate xmlns:android=\"http://schemas.android.com/apk/res/android\">\n<translate\nandroid:fromXDelta=\"30\"\nandroid:toXDelta=\"-80\"\nandroid:fromYDelta=\"30\"\nandroid:toYDelta=\"300\"\nandroid:duration=\"800\"\n/>\n```\n translate 位置转移动画效果\n        整型值:\n        fromXDelta 属性为动画起始时 X坐标上的位置    \n        toXDelta   属性为动画结束时 X坐标上的位置\n        \n   fromYDelta 属性为动画起始时 Y坐标上的位置\n        toYDelta   属性为动画结束时 Y坐标上的位置\n        注意:\n        没有指定fromXType toXType fromYType toYType 时候，默认是以自己为相对参照物 \n         长整型值：\n        duration  属性为动画持续时间\n        说明:     \n        时间以毫秒为单位\n\n①TranslateAnimation类对象定义\nprivate TranslateAnimation myAnimation_Translate;\n②TranslateAnimation类对象构造\nTranslateAnimation(float fromXDelta, float toXDelta,\n                       float fromYDelta, float toYDelta) \n//第一个参数fromXDelta为动画起始时 X坐标上的移动位置    \n//第二个参数toXDelta为动画结束时 X坐标上的移动位置      \n//第三个参数fromYDelta为动画起始时Y坐标上的移动位置     \n//第四个参数toYDelta为动画结束时Y坐标上的移动位置\n③　设置动画持续时间\nmyAnimation_Translate.setDuration(2000);\n//设置时间持续时间为 2000毫秒\n如何使用Java代码中的动画效果\npublic void startAnimation (Animation animation)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"ViewAnimation","published":1,"updated":"2016-03-17T00:44:06.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrb3008vzspkr9rmbn3c","thumbnailImageUrl":null},{"title":"今日情感","date":"2015-08-04T08:27:21.000Z","_content":"\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/todayEmotionAppScreenshots.gif)\n\n<!--more-->\n\n## 应用介绍\n【今日情感】专注于分享情感故事、情感美文、情感语录；情感是人适应生存的心理工具，也是人际通信交流的重要手段。 \n★ 内容 \n情感文章栏目主要内容有情感美文、情侣恋爱技巧与爱情知识、爱情文章故事、朋友间的友情，家庭亲情中夫妻关系、子女关系、父母关系相处技巧。 \n★寄语 \n偶遇今日情感，希望您在这里找到共鸣。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TodayEmotionAppDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n[小米应用市场](http://app.mi.com/detail/30499)\n\n## 更新日志\n* v3.8\n1、新增职场指南和经典语录模块\n2、新增美图美句图片长按保存\n3、美图美句详情图片放大缩小优化\n\n* v3.7\n1、新增美图美句模块，享受小清新文字\n2、新增阅读量，记录每天阅读\n\n* v3.6\n1、新增微信、QQ、微博等分享\n2、全新Material Design风格\n\n* v3.5\n1、新增 情感圈，交流、分享、学习\n2、新增 我的下载\n3、文章列表 新增发布时间\n4、布局优化\n\n* v3.4\n1、新增夜间/白天模式切换，夜晚阅读不伤眼\n2、文章详情 新增下载功能，喜欢文章一键下载\n\n\n* v3.3\n1、文章详情 新增 发表评论\n2、设置 新增 用户中心\n3、欢迎页 优化 “一语倾心”\n\n* v3.1\n1、欢迎页 新增 “一语倾心”\n2、文章详情 新增 收藏功能\n3、文章详情 长按 复制功能\n4、设置 新增 我的收藏\n5、我的收藏 长按 删除收藏\n\n","source":"_posts/TodayEmotion.md","raw":"title: 今日情感\ndate: 2015-08-04 16:27:21\ntags: [Android,Life,App]\ncategory: App\n---\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/todayEmotionAppScreenshots.gif)\n\n<!--more-->\n\n## 应用介绍\n【今日情感】专注于分享情感故事、情感美文、情感语录；情感是人适应生存的心理工具，也是人际通信交流的重要手段。 \n★ 内容 \n情感文章栏目主要内容有情感美文、情侣恋爱技巧与爱情知识、爱情文章故事、朋友间的友情，家庭亲情中夫妻关系、子女关系、父母关系相处技巧。 \n★寄语 \n偶遇今日情感，希望您在这里找到共鸣。\n\n## 二维码下载\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TodayEmotionAppDownload.png)\n\n## 应用市场\n[魅族应用市场](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n[小米应用市场](http://app.mi.com/detail/30499)\n\n## 更新日志\n* v3.8\n1、新增职场指南和经典语录模块\n2、新增美图美句图片长按保存\n3、美图美句详情图片放大缩小优化\n\n* v3.7\n1、新增美图美句模块，享受小清新文字\n2、新增阅读量，记录每天阅读\n\n* v3.6\n1、新增微信、QQ、微博等分享\n2、全新Material Design风格\n\n* v3.5\n1、新增 情感圈，交流、分享、学习\n2、新增 我的下载\n3、文章列表 新增发布时间\n4、布局优化\n\n* v3.4\n1、新增夜间/白天模式切换，夜晚阅读不伤眼\n2、文章详情 新增下载功能，喜欢文章一键下载\n\n\n* v3.3\n1、文章详情 新增 发表评论\n2、设置 新增 用户中心\n3、欢迎页 优化 “一语倾心”\n\n* v3.1\n1、欢迎页 新增 “一语倾心”\n2、文章详情 新增 收藏功能\n3、文章详情 长按 复制功能\n4、设置 新增 我的收藏\n5、我的收藏 长按 删除收藏\n\n","slug":"TodayEmotion","published":1,"updated":"2016-03-17T00:44:06.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrb5008zzspkvtzcrars","thumbnailImageUrl":null},{"title":"时间工具类TimeUtil","date":"2015-07-07T16:00:00.000Z","_content":"\n```java\npublic class TimeUtil {\n\n\n    /**\n     * 获取当前时间\n     *\n     * @param format \"yyyy-MM-dd HH:mm:ss\"\n     */\n    public static String getCurrentTime(String format) {\n        Date date = new Date();\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format, Locale.getDefault());\n        return simpleDateFormat.format(date);\n    }\n\n    /**\n     * 获取当前时间为本月的第几周\n     */\n    public static int getWeekOfMonth() {\n        Calendar calendar = Calendar.getInstance();\n        int week = calendar.get(Calendar.WEEK_OF_MONTH);\n        return week - 1;\n    }\n\n    /**\n     * 获取当前时间为本周的第几天\n     */\n    public static int getDayOfWeek() {\n        Calendar calendar = Calendar.getInstance();\n        int day = calendar.get(Calendar.DAY_OF_WEEK);\n        if (day == 1) {\n            day = 7;\n        } else {\n            day = day - 1;\n        }\n        return day;\n    }\n\n    /**\n     * 获取当前时间的年份\n     */\n    public static int getYear() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.YEAR);\n    }\n\n    /**\n     * 获取当前时间的月份\n     */\n    public static int getMonth() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.MONTH);\n    }\n\n    /**\n     * 获取当前时间是哪天\n     */\n    public static int getDay() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.DATE);\n    }\n\n    /**\n     * @param date1\n     * @param date2\n     * @return 1:date1大于date2；\n     * -1:date1小于date2\n     */\n    public static int compareDate(String date1, String date2, String format) {\n        DateFormat df = new SimpleDateFormat(format, Locale.getDefault());\n        try {\n            Date dt1 = df.parse(date1);\n            Date dt2 = df.parse(date2);\n            if (dt1.getTime() > dt2.getTime()) {\n                return 1;\n            } else if (dt1.getTime() < dt2.getTime()) {\n                return -1;\n            } else {\n                return 0;\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n        return 0;\n    }\n\t /**\n     * 时间加减\n     *\n     * @param day       如\"2015-09-22\"\n     * @param dayAddNum 加减值\n     * @return\n     */\n    public static String timeAddSubtract(String day, int dayAddNum) {\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault());\n        try {\n            Date newDate = new Date(simpleDateFormat.parse(day).getTime() + dayAddNum * 24 * 60 * 60 * 1000);\n            return simpleDateFormat.format(newDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return null;\n\n    }\n\t /**\n     * 毫秒格式化\n     *\n     * @param millisecond 如\"1449455517602\"\n     * @param format 如\"yyyy-MM-dd HH:mm:ss\"\n     * @return\n     */\n\t public static String millisecond2String(long millisecond, String format) {\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format, Locale.getDefault());\n        return simpleDateFormat.format(millisecond);\n    }\n}\n```\n","source":"_posts/TimeUtil.md","raw":"title: 时间工具类TimeUtil\ndate: 2015-07-08\ncategories: [Android]\ntags: [Android]\n---\n\n```java\npublic class TimeUtil {\n\n\n    /**\n     * 获取当前时间\n     *\n     * @param format \"yyyy-MM-dd HH:mm:ss\"\n     */\n    public static String getCurrentTime(String format) {\n        Date date = new Date();\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format, Locale.getDefault());\n        return simpleDateFormat.format(date);\n    }\n\n    /**\n     * 获取当前时间为本月的第几周\n     */\n    public static int getWeekOfMonth() {\n        Calendar calendar = Calendar.getInstance();\n        int week = calendar.get(Calendar.WEEK_OF_MONTH);\n        return week - 1;\n    }\n\n    /**\n     * 获取当前时间为本周的第几天\n     */\n    public static int getDayOfWeek() {\n        Calendar calendar = Calendar.getInstance();\n        int day = calendar.get(Calendar.DAY_OF_WEEK);\n        if (day == 1) {\n            day = 7;\n        } else {\n            day = day - 1;\n        }\n        return day;\n    }\n\n    /**\n     * 获取当前时间的年份\n     */\n    public static int getYear() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.YEAR);\n    }\n\n    /**\n     * 获取当前时间的月份\n     */\n    public static int getMonth() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.MONTH);\n    }\n\n    /**\n     * 获取当前时间是哪天\n     */\n    public static int getDay() {\n        Calendar calendar = GregorianCalendar.getInstance();\n        return calendar.get(Calendar.DATE);\n    }\n\n    /**\n     * @param date1\n     * @param date2\n     * @return 1:date1大于date2；\n     * -1:date1小于date2\n     */\n    public static int compareDate(String date1, String date2, String format) {\n        DateFormat df = new SimpleDateFormat(format, Locale.getDefault());\n        try {\n            Date dt1 = df.parse(date1);\n            Date dt2 = df.parse(date2);\n            if (dt1.getTime() > dt2.getTime()) {\n                return 1;\n            } else if (dt1.getTime() < dt2.getTime()) {\n                return -1;\n            } else {\n                return 0;\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n        return 0;\n    }\n\t /**\n     * 时间加减\n     *\n     * @param day       如\"2015-09-22\"\n     * @param dayAddNum 加减值\n     * @return\n     */\n    public static String timeAddSubtract(String day, int dayAddNum) {\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault());\n        try {\n            Date newDate = new Date(simpleDateFormat.parse(day).getTime() + dayAddNum * 24 * 60 * 60 * 1000);\n            return simpleDateFormat.format(newDate);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        return null;\n\n    }\n\t /**\n     * 毫秒格式化\n     *\n     * @param millisecond 如\"1449455517602\"\n     * @param format 如\"yyyy-MM-dd HH:mm:ss\"\n     * @return\n     */\n\t public static String millisecond2String(long millisecond, String format) {\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format, Locale.getDefault());\n        return simpleDateFormat.format(millisecond);\n    }\n}\n```\n","slug":"TimeUtil","published":1,"updated":"2016-03-17T00:44:06.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrb70094zspkqi7k4s8w","thumbnailImageUrl":null},{"title":"生命不息，折腾不止","date":"2016-03-04T12:28:43.000Z","_content":" 本来我可以选择安逸的生活，过着朝九晚六的国企生活，为什么我还要出去？\n1、生于忧患，死于安乐\n<!-- more -->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation1.jpeg)\n\n2、比你成功的、比你有钱的、比你聪明的人，往往都比你努力啊…\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation2.jpg)\n3、每天做点有意义的事，每天进步一点点！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation3.jpg)\n4、内心深处一直埋藏着一颗创业的躁动的心\n\nNooooooooooooooooooooo！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation4.gif)\n追根究底：\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation5.jpg)\n\n<center><embed src=\"http://player.youku.com/player.php/sid/XMjEzNjU2NTI0/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"></embed></center>\n","source":"_posts/TheSecondResignation.md","raw":"title: 生命不息，折腾不止\ndate: 2016-03-04 20:28:43\ntags: Life\ncategory: Life\n---\n 本来我可以选择安逸的生活，过着朝九晚六的国企生活，为什么我还要出去？\n1、生于忧患，死于安乐\n<!-- more -->\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation1.jpeg)\n\n2、比你成功的、比你有钱的、比你聪明的人，往往都比你努力啊…\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation2.jpg)\n3、每天做点有意义的事，每天进步一点点！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation3.jpg)\n4、内心深处一直埋藏着一颗创业的躁动的心\n\nNooooooooooooooooooooo！\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation4.gif)\n追根究底：\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TheSecondResignation5.jpg)\n\n<center><embed src=\"http://player.youku.com/player.php/sid/XMjEzNjU2NTI0/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"></embed></center>\n","slug":"TheSecondResignation","published":1,"updated":"2016-03-17T00:44:06.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrb80097zspkwmvm1e0o","thumbnailImageUrl":null},{"title":"Android Design Support Library之TabLayout","date":"2015-08-03T01:26:54.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TabLayout1.gif)\n<!--more-->\n## 实例APK\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 使用方法\nGradle 中添加下面依赖\n```js\n compile 'com.android.support:design:22.2.0'\n```\n\n## 使用style\n```js\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"colorPrimary\">@color/primary</item>\n        <item name=\"colorPrimaryDark\">@color/primary_dark</item>\n</style>\n```\n## xml布局\n```js\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\">\n\n        <android.support.design.widget.TabLayout\n            android:id=\"@+id/tabs\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:tabBackground=\"?attr/colorPrimary\"\n            app:tabSelectedTextColor=\"@color/white\"\n\t\t\tapp:tabTextColor=\"?attr/cursorTextColor\" />\n\n   \n    <android.support.v4.view.ViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"?attr/backgroundColor\"\n       />\n\n</LinearLayout>\n```\n## ViewPager的适配器\n```java\nclass ViewPagerAdapter extends FragmentPagerAdapter {\n        private final List<Fragment> mFragmentList = new ArrayList<>();\n        private final List<String> mFragmentTitleList = new ArrayList<>();\n\n        public ViewPagerAdapter(FragmentManager manager) {\n            super(manager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return mFragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return mFragmentList.size();\n        }\n\n        public void addFrag(Fragment fragment, String title) {\n            mFragmentList.add(fragment);\n            mFragmentTitleList.add(title);\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return mFragmentTitleList.get(position);\n        }\n    }\n    \n  private void setupViewPager(ViewPager viewPager) {\n        ViewPagerAdapter adapter = new ViewPagerAdapter(getActivity().getSupportFragmentManager());\n\n\n        Fragment newfragment = new TodayEmotionFragment();\n        Bundle data = new Bundle();\n        data.putInt(\"id\", 0);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.classical_article));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 3);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"职场指南\");\n\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 1);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.emotion_daily));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 2);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.love_marriage));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 4);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"经典语录\");\n\n        viewPager.setAdapter(adapter);\n\n        viewPager.setOffscreenPageLimit(5);\n    }\n```\n## 设置TabLayout\n```java\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        TabLayout tabLayout = (TabLayout) view.findViewById(R.id.tabs);\n\n        ViewPager viewPager = (ViewPager) view.findViewById(R.id.viewPager);\n        setupViewPager(viewPager);\n        // 设置ViewPager的数据等\n        tabLayout.setupWithViewPager(viewPager);\n        tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);//适合很多tab\n        //tabLayout.setTabMode(TabLayout.MODE_FIXED);//tab均分,适合少的tab\n\t\t//tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);//tab均分,适合少的tab,TabLayout.GRAVITY_CENTER\n    }\n```\n## 定义TabLayout的样式\n[参考博客](http://chenfuduo.me/2015/07/30/TabLayout-of-design-support-library/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n## 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)","source":"_posts/TabLayout.md","raw":"title: Android Design Support Library之TabLayout \ndate: 2015-08-03 09:26:54\ntags: TabLayout\ncategory: SupportLibrary\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/TabLayout1.gif)\n<!--more-->\n## 实例APK\n[fir.im](https://fir.im/jinriqinggan)\n[小米应用商店](http://app.mi.com/detail/30499)\n[魅族应用中心](http://app.meizu.com/apps/public/detail?package_name=com.android.xiaomolongstudio.danhuaer)\n\n\n## 使用方法\nGradle 中添加下面依赖\n```js\n compile 'com.android.support:design:22.2.0'\n```\n\n## 使用style\n```js\n <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"colorPrimary\">@color/primary</item>\n        <item name=\"colorPrimaryDark\">@color/primary_dark</item>\n</style>\n```\n## xml布局\n```js\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\">\n\n        <android.support.design.widget.TabLayout\n            android:id=\"@+id/tabs\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_scrollFlags=\"scroll|enterAlways\"\n            app:tabBackground=\"?attr/colorPrimary\"\n            app:tabSelectedTextColor=\"@color/white\"\n\t\t\tapp:tabTextColor=\"?attr/cursorTextColor\" />\n\n   \n    <android.support.v4.view.ViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"?attr/backgroundColor\"\n       />\n\n</LinearLayout>\n```\n## ViewPager的适配器\n```java\nclass ViewPagerAdapter extends FragmentPagerAdapter {\n        private final List<Fragment> mFragmentList = new ArrayList<>();\n        private final List<String> mFragmentTitleList = new ArrayList<>();\n\n        public ViewPagerAdapter(FragmentManager manager) {\n            super(manager);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return mFragmentList.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return mFragmentList.size();\n        }\n\n        public void addFrag(Fragment fragment, String title) {\n            mFragmentList.add(fragment);\n            mFragmentTitleList.add(title);\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return mFragmentTitleList.get(position);\n        }\n    }\n    \n  private void setupViewPager(ViewPager viewPager) {\n        ViewPagerAdapter adapter = new ViewPagerAdapter(getActivity().getSupportFragmentManager());\n\n\n        Fragment newfragment = new TodayEmotionFragment();\n        Bundle data = new Bundle();\n        data.putInt(\"id\", 0);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.classical_article));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 3);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"职场指南\");\n\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 1);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.emotion_daily));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 2);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, getString(R.string.love_marriage));\n\n        newfragment = new TodayEmotionFragment();\n        data = new Bundle();\n        data.putInt(\"id\", 4);\n        newfragment.setArguments(data);\n        adapter.addFrag(newfragment, \"经典语录\");\n\n        viewPager.setAdapter(adapter);\n\n        viewPager.setOffscreenPageLimit(5);\n    }\n```\n## 设置TabLayout\n```java\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        TabLayout tabLayout = (TabLayout) view.findViewById(R.id.tabs);\n\n        ViewPager viewPager = (ViewPager) view.findViewById(R.id.viewPager);\n        setupViewPager(viewPager);\n        // 设置ViewPager的数据等\n        tabLayout.setupWithViewPager(viewPager);\n        tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);//适合很多tab\n        //tabLayout.setTabMode(TabLayout.MODE_FIXED);//tab均分,适合少的tab\n\t\t//tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);//tab均分,适合少的tab,TabLayout.GRAVITY_CENTER\n    }\n```\n## 定义TabLayout的样式\n[参考博客](http://chenfuduo.me/2015/07/30/TabLayout-of-design-support-library/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n## 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)","slug":"TabLayout","published":1,"updated":"2016-08-05T06:39:20.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrba009azspkgh6weluz","thumbnailImageUrl":null},{"title":"Android之SqliteSample","date":"2015-04-20T16:00:00.000Z","_content":"原文：[https://developer.android.com/training/basics/data-storage/databases.html](https://developer.android.com/training/basics/data-storage/databases.html)\n\n* Define a Schema and Contract\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.provider.BaseColumns;\n\npublic final class FeedReaderContract {\n\tpublic FeedReaderContract() {\n\t}\n\n\tpublic static abstract class FeedEntry implements BaseColumns {\n\t\tpublic static final String TABLE_NAME = \"entry\";\n\t\tpublic static final String COLUMN_NAME_ENTRY_ID = \"entryid\";\n\t\tpublic static final String COLUMN_NAME_TITLE = \"title\";\n\t\tpublic static final String COLUMN_NAME_SUBTITLE = \"subtitle\";\n\n\t}\n}\n\n```\n<!-- more -->\n* FeedEntryDb\n\n```java\npackage com.xiaomolong.sqlitesample;\n\npublic class FeedEntryDb {\n\tpublic String entryid;\n\tpublic String title;\n\tpublic String subtitle;\n\n\tpublic String getEntryid() {\n\t\treturn entryid;\n\t}\n\n\tpublic void setEntryid(String entryid) {\n\t\tthis.entryid = entryid;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\n\tpublic String getSubtitle() {\n\t\treturn subtitle;\n\t}\n\n\tpublic void setSubtitle(String subtitle) {\n\t\tthis.subtitle = subtitle;\n\t}\n}\n\n```\n\n\n* Create a Database Using a SQL Helper\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteDatabase.CursorFactory;\nimport android.database.sqlite.SQLiteOpenHelper;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class FeedReaderDbHelper extends SQLiteOpenHelper {\n\tpublic static final int DATABASE_VERSION = 1;\n\tpublic static final String DATABASE_NAME = \"FeedReader.db\";\n\tprivate static final String TEXT_TYPE = \" TEXT\";\n\tprivate static final String COMMA_SEP = \",\";\n\tprivate static final String SQL_CREATE_ENTRIES = \"CREATE TABLE \"\n\t\t\t+ FeedEntry.TABLE_NAME + \" (\" + FeedEntry._ID\n\t\t\t+ \" INTEGER PRIMARY KEY,\" + FeedEntry.COLUMN_NAME_ENTRY_ID\n\t\t\t+ TEXT_TYPE + COMMA_SEP + FeedEntry.COLUMN_NAME_TITLE + TEXT_TYPE\n\t\t\t+ COMMA_SEP + FeedEntry.COLUMN_NAME_SUBTITLE + TEXT_TYPE +\n\t\t\t// Any other options for the CREATE command\n\t\t\t\" )\";\n\n\tprivate static final String SQL_DELETE_ENTRIES = \"DROP TABLE IF EXISTS \"\n\t\t\t+ FeedEntry.TABLE_NAME;\n\n\tpublic FeedReaderDbHelper(Context context) {\n\t\tsuper(context, DATABASE_NAME, null, DATABASE_VERSION);\n\t}\n\n\tpublic FeedReaderDbHelper(Context context, String name,\n\t\t\tCursorFactory factory, int version) {\n\t\tsuper(context, name, factory, version);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase db) {\n\t\tdb.execSQL(SQL_CREATE_ENTRIES);\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n\t\tdb.execSQL(SQL_DELETE_ENTRIES);\n\t\tonCreate(db);\n\t}\n\n}\n\n```\n\n * DatabaseManger，包括增删改查\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.content.ContentValues;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class DatabaseManger {\n\n\tprivate static FeedReaderDbHelper mFeedReaderDbHelper = null;\n\n\tDatabaseManger(Context context) {\n\t\tgetInstance(context);\n\t}\n\n\tpublic static void getInstance(Context context) {\n\t\tif (mFeedReaderDbHelper == null) {\n\t\t\tmFeedReaderDbHelper = new FeedReaderDbHelper(context);\n\t\t}\n\t}\n\n\t/**\n\t * 插入\n\t * \n\t * @return the row ID of the newly inserted row, or -1 if an error occurred\n\t */\n\tpublic long insert(FeedEntryDb feedEntry) {\n\n\t\t// Gets the data repository in write mode\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getWritableDatabase();\n\n\t\t// Create a new map of values, where column names are the keys\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_ENTRY_ID, feedEntry.getEntryid());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntry.getTitle());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_SUBTITLE, feedEntry.getSubtitle());\n\n\t\t// Insert the new row, returning the primary key value of the new row\n\t\tlong newRowId;\n\t\tnewRowId = db.insert(FeedEntry.TABLE_NAME, null, values);\n\t\tdb.close();\n\t\treturn newRowId;\n\n\t}\n\n\t/**\n\t * 查询或通过条件查询\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic List<FeedEntryDb> query(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\n\t\t// Define a projection that specifies which columns from the database\n\t\t// you will actually use after this query.\n\t\tString[] projection = { FeedEntry._ID, FeedEntry.COLUMN_NAME_ENTRY_ID,\n\t\t\t\tFeedEntry.COLUMN_NAME_TITLE, FeedEntry.COLUMN_NAME_SUBTITLE };\n\t\tString selection = null;\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\tif (rowId != -1) {// 通过条件查询\n\t\t\tselection = FeedEntry._ID + \" = ?\";\n\t\t} else {\n\t\t\tselectionArgs = null;\n\t\t}\n\t\t// How you want the results sorted in the resulting Cursor\n\t\tString sortOrder = FeedEntry.COLUMN_NAME_TITLE + \" DESC\";\n\n\t\tCursor cursor = db.query(FeedEntry.TABLE_NAME, // The table to query\n\t\t\t\tprojection, // The columns to return\n\t\t\t\tselection, // The columns for the WHERE clause\n\t\t\t\tselectionArgs, // The values for the WHERE clause\n\t\t\t\tnull, // don't group the rows\n\t\t\t\tnull, // don't filter by row groups\n\t\t\t\tsortOrder // The sort order\n\t\t\t\t);\n\t\tList<FeedEntryDb> feedEntryDbList = new ArrayList<FeedEntryDb>();\n\t\twhile (cursor.moveToNext()) {\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tlong itemId = cursor.getLong(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry._ID));\n\t\t\tfeedEntryDb.setEntryid(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_ENTRY_ID)));\n\t\t\tfeedEntryDb.setTitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_TITLE)));\n\t\t\tfeedEntryDb.setSubtitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_SUBTITLE)));\n\t\t\tfeedEntryDbList.add(feedEntryDb);\n\t\t}\n\t\tcursor.close();\n\t\tdb.close();\n\t\treturn feedEntryDbList;\n\n\t}\n\n\t/**\n\t * 更新\n\t * \n\t * @param feedEntry\n\t * @param rowId\n\t * @return\n\t */\n\tpublic int update(FeedEntryDb feedEntryDb, int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// New value for one column\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntryDb.getTitle()\n\t\t\t\t.toString());\n\n\t\t// Which row to update, based on the ID\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\n\t\tint count = db.update(FeedEntry.TABLE_NAME, values, selection,\n\t\t\t\tselectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n\n\t/**\n\t * 删除\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic int delete(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// Define 'where' part of query.\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\t// Specify arguments in placeholder order.\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\t// Issue SQL statement.\n\t\tint count = db.delete(FeedEntry.TABLE_NAME, selection, selectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n}\n\n ```\n \n * 方法调用\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class MainActivity extends Activity implements OnClickListener {\n\tDatabaseManger mDatabaseManger;\n\tTextView textView;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\ttextView = (TextView) findViewById(R.id.textView);\n\t\tfindViewById(R.id.btnAdd).setOnClickListener(this);\n\t\tfindViewById(R.id.btnQuery).setOnClickListener(this);\n\t\tfindViewById(R.id.btnUpdate).setOnClickListener(this);\n\t\tfindViewById(R.id.btnDelete).setOnClickListener(this);\n\t\tmDatabaseManger = new DatabaseManger(this);\n\t}\n\n\t@Override\n\tpublic void onClick(View v) {\n\t\tswitch (v.getId()) {\n\t\tcase R.id.btnAdd:\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\t\tfeedEntryDb.setEntryid(i + \"\");\n\t\t\t\tfeedEntryDb.setTitle(\"title\" + i + \"\");\n\t\t\t\tfeedEntryDb.setSubtitle(\"subtitle\" + i + \"\");\n\t\t\t\tmDatabaseManger.insert(feedEntryDb);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase R.id.btnQuery:\n\t\t\tList<FeedEntryDb> feedEntryDbList = mDatabaseManger.query(-1);\n\t\t\tString t = \"\";\n\t\t\tfor (int i = 0; i < feedEntryDbList.size(); i++) {\n\n\t\t\t\tt = t + feedEntryDbList.get(i).getTitle() + \"\\n\"\n\t\t\t\t\t\t+ feedEntryDbList.get(i).getSubtitle() + \"\\n\\n\";\n\t\t\t}\n\t\t\ttextView.setText(t);\n\t\t\tbreak;\n\t\tcase R.id.btnUpdate:\n\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tfeedEntryDb.setTitle(\"修改\");\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.update(feedEntryDb, 1));\n\n\t\t\tbreak;\n\t\tcase R.id.btnDelete:\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.delete(1));\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.main, menu);\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n\t\t// Handle action bar item clicks here. The action bar will\n\t\t// automatically handle clicks on the Home/Up button, so long\n\t\t// as you specify a parent activity in AndroidManifest.xml.\n\t\tint id = item.getItemId();\n\t\tif (id == R.id.action_settings) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onOptionsItemSelected(item);\n\t}\n\n}\n\n ```\n","source":"_posts/SqliteSample.md","raw":"title: Android之SqliteSample\ndate: 2015-04-21\ncategories: [Android]\ntags: [Android,Sqlite]\n---\n原文：[https://developer.android.com/training/basics/data-storage/databases.html](https://developer.android.com/training/basics/data-storage/databases.html)\n\n* Define a Schema and Contract\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.provider.BaseColumns;\n\npublic final class FeedReaderContract {\n\tpublic FeedReaderContract() {\n\t}\n\n\tpublic static abstract class FeedEntry implements BaseColumns {\n\t\tpublic static final String TABLE_NAME = \"entry\";\n\t\tpublic static final String COLUMN_NAME_ENTRY_ID = \"entryid\";\n\t\tpublic static final String COLUMN_NAME_TITLE = \"title\";\n\t\tpublic static final String COLUMN_NAME_SUBTITLE = \"subtitle\";\n\n\t}\n}\n\n```\n<!-- more -->\n* FeedEntryDb\n\n```java\npackage com.xiaomolong.sqlitesample;\n\npublic class FeedEntryDb {\n\tpublic String entryid;\n\tpublic String title;\n\tpublic String subtitle;\n\n\tpublic String getEntryid() {\n\t\treturn entryid;\n\t}\n\n\tpublic void setEntryid(String entryid) {\n\t\tthis.entryid = entryid;\n\t}\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\n\tpublic String getSubtitle() {\n\t\treturn subtitle;\n\t}\n\n\tpublic void setSubtitle(String subtitle) {\n\t\tthis.subtitle = subtitle;\n\t}\n}\n\n```\n\n\n* Create a Database Using a SQL Helper\n\n```java\npackage com.xiaomolong.sqlitesample;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteDatabase.CursorFactory;\nimport android.database.sqlite.SQLiteOpenHelper;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class FeedReaderDbHelper extends SQLiteOpenHelper {\n\tpublic static final int DATABASE_VERSION = 1;\n\tpublic static final String DATABASE_NAME = \"FeedReader.db\";\n\tprivate static final String TEXT_TYPE = \" TEXT\";\n\tprivate static final String COMMA_SEP = \",\";\n\tprivate static final String SQL_CREATE_ENTRIES = \"CREATE TABLE \"\n\t\t\t+ FeedEntry.TABLE_NAME + \" (\" + FeedEntry._ID\n\t\t\t+ \" INTEGER PRIMARY KEY,\" + FeedEntry.COLUMN_NAME_ENTRY_ID\n\t\t\t+ TEXT_TYPE + COMMA_SEP + FeedEntry.COLUMN_NAME_TITLE + TEXT_TYPE\n\t\t\t+ COMMA_SEP + FeedEntry.COLUMN_NAME_SUBTITLE + TEXT_TYPE +\n\t\t\t// Any other options for the CREATE command\n\t\t\t\" )\";\n\n\tprivate static final String SQL_DELETE_ENTRIES = \"DROP TABLE IF EXISTS \"\n\t\t\t+ FeedEntry.TABLE_NAME;\n\n\tpublic FeedReaderDbHelper(Context context) {\n\t\tsuper(context, DATABASE_NAME, null, DATABASE_VERSION);\n\t}\n\n\tpublic FeedReaderDbHelper(Context context, String name,\n\t\t\tCursorFactory factory, int version) {\n\t\tsuper(context, name, factory, version);\n\t}\n\n\t@Override\n\tpublic void onCreate(SQLiteDatabase db) {\n\t\tdb.execSQL(SQL_CREATE_ENTRIES);\n\t}\n\n\t@Override\n\tpublic void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n\t\tdb.execSQL(SQL_DELETE_ENTRIES);\n\t\tonCreate(db);\n\t}\n\n}\n\n```\n\n * DatabaseManger，包括增删改查\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport android.content.ContentValues;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.xiaomolong.sqlitesample.FeedReaderContract.FeedEntry;\n\npublic class DatabaseManger {\n\n\tprivate static FeedReaderDbHelper mFeedReaderDbHelper = null;\n\n\tDatabaseManger(Context context) {\n\t\tgetInstance(context);\n\t}\n\n\tpublic static void getInstance(Context context) {\n\t\tif (mFeedReaderDbHelper == null) {\n\t\t\tmFeedReaderDbHelper = new FeedReaderDbHelper(context);\n\t\t}\n\t}\n\n\t/**\n\t * 插入\n\t * \n\t * @return the row ID of the newly inserted row, or -1 if an error occurred\n\t */\n\tpublic long insert(FeedEntryDb feedEntry) {\n\n\t\t// Gets the data repository in write mode\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getWritableDatabase();\n\n\t\t// Create a new map of values, where column names are the keys\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_ENTRY_ID, feedEntry.getEntryid());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntry.getTitle());\n\t\tvalues.put(FeedEntry.COLUMN_NAME_SUBTITLE, feedEntry.getSubtitle());\n\n\t\t// Insert the new row, returning the primary key value of the new row\n\t\tlong newRowId;\n\t\tnewRowId = db.insert(FeedEntry.TABLE_NAME, null, values);\n\t\tdb.close();\n\t\treturn newRowId;\n\n\t}\n\n\t/**\n\t * 查询或通过条件查询\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic List<FeedEntryDb> query(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\n\t\t// Define a projection that specifies which columns from the database\n\t\t// you will actually use after this query.\n\t\tString[] projection = { FeedEntry._ID, FeedEntry.COLUMN_NAME_ENTRY_ID,\n\t\t\t\tFeedEntry.COLUMN_NAME_TITLE, FeedEntry.COLUMN_NAME_SUBTITLE };\n\t\tString selection = null;\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\tif (rowId != -1) {// 通过条件查询\n\t\t\tselection = FeedEntry._ID + \" = ?\";\n\t\t} else {\n\t\t\tselectionArgs = null;\n\t\t}\n\t\t// How you want the results sorted in the resulting Cursor\n\t\tString sortOrder = FeedEntry.COLUMN_NAME_TITLE + \" DESC\";\n\n\t\tCursor cursor = db.query(FeedEntry.TABLE_NAME, // The table to query\n\t\t\t\tprojection, // The columns to return\n\t\t\t\tselection, // The columns for the WHERE clause\n\t\t\t\tselectionArgs, // The values for the WHERE clause\n\t\t\t\tnull, // don't group the rows\n\t\t\t\tnull, // don't filter by row groups\n\t\t\t\tsortOrder // The sort order\n\t\t\t\t);\n\t\tList<FeedEntryDb> feedEntryDbList = new ArrayList<FeedEntryDb>();\n\t\twhile (cursor.moveToNext()) {\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tlong itemId = cursor.getLong(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry._ID));\n\t\t\tfeedEntryDb.setEntryid(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_ENTRY_ID)));\n\t\t\tfeedEntryDb.setTitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_TITLE)));\n\t\t\tfeedEntryDb.setSubtitle(cursor.getString(cursor\n\t\t\t\t\t.getColumnIndexOrThrow(FeedEntry.COLUMN_NAME_SUBTITLE)));\n\t\t\tfeedEntryDbList.add(feedEntryDb);\n\t\t}\n\t\tcursor.close();\n\t\tdb.close();\n\t\treturn feedEntryDbList;\n\n\t}\n\n\t/**\n\t * 更新\n\t * \n\t * @param feedEntry\n\t * @param rowId\n\t * @return\n\t */\n\tpublic int update(FeedEntryDb feedEntryDb, int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// New value for one column\n\t\tContentValues values = new ContentValues();\n\t\tvalues.put(FeedEntry.COLUMN_NAME_TITLE, feedEntryDb.getTitle()\n\t\t\t\t.toString());\n\n\t\t// Which row to update, based on the ID\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\n\t\tint count = db.update(FeedEntry.TABLE_NAME, values, selection,\n\t\t\t\tselectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n\n\t/**\n\t * 删除\n\t * \n\t * @param rowId\n\t * @return\n\t */\n\tpublic int delete(int rowId) {\n\t\tSQLiteDatabase db = mFeedReaderDbHelper.getReadableDatabase();\n\t\t// Define 'where' part of query.\n\t\tString selection = FeedEntry._ID + \" = ?\";\n\t\t// Specify arguments in placeholder order.\n\t\tString[] selectionArgs = { String.valueOf(rowId) };\n\t\t// Issue SQL statement.\n\t\tint count = db.delete(FeedEntry.TABLE_NAME, selection, selectionArgs);\n\t\tdb.close();\n\t\treturn count;\n\t}\n}\n\n ```\n \n * 方法调用\n \n ```java\n package com.xiaomolong.sqlitesample;\n\nimport java.util.List;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.TextView;\n\npublic class MainActivity extends Activity implements OnClickListener {\n\tDatabaseManger mDatabaseManger;\n\tTextView textView;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\ttextView = (TextView) findViewById(R.id.textView);\n\t\tfindViewById(R.id.btnAdd).setOnClickListener(this);\n\t\tfindViewById(R.id.btnQuery).setOnClickListener(this);\n\t\tfindViewById(R.id.btnUpdate).setOnClickListener(this);\n\t\tfindViewById(R.id.btnDelete).setOnClickListener(this);\n\t\tmDatabaseManger = new DatabaseManger(this);\n\t}\n\n\t@Override\n\tpublic void onClick(View v) {\n\t\tswitch (v.getId()) {\n\t\tcase R.id.btnAdd:\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\t\tfeedEntryDb.setEntryid(i + \"\");\n\t\t\t\tfeedEntryDb.setTitle(\"title\" + i + \"\");\n\t\t\t\tfeedEntryDb.setSubtitle(\"subtitle\" + i + \"\");\n\t\t\t\tmDatabaseManger.insert(feedEntryDb);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase R.id.btnQuery:\n\t\t\tList<FeedEntryDb> feedEntryDbList = mDatabaseManger.query(-1);\n\t\t\tString t = \"\";\n\t\t\tfor (int i = 0; i < feedEntryDbList.size(); i++) {\n\n\t\t\t\tt = t + feedEntryDbList.get(i).getTitle() + \"\\n\"\n\t\t\t\t\t\t+ feedEntryDbList.get(i).getSubtitle() + \"\\n\\n\";\n\t\t\t}\n\t\t\ttextView.setText(t);\n\t\t\tbreak;\n\t\tcase R.id.btnUpdate:\n\n\t\t\tFeedEntryDb feedEntryDb = new FeedEntryDb();\n\t\t\tfeedEntryDb.setTitle(\"修改\");\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.update(feedEntryDb, 1));\n\n\t\t\tbreak;\n\t\tcase R.id.btnDelete:\n\t\t\tLog.d(\"wxl\", \"count=\" + mDatabaseManger.delete(1));\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.main, menu);\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\n\t\t// Handle action bar item clicks here. The action bar will\n\t\t// automatically handle clicks on the Home/Up button, so long\n\t\t// as you specify a parent activity in AndroidManifest.xml.\n\t\tint id = item.getItemId();\n\t\tif (id == R.id.action_settings) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onOptionsItemSelected(item);\n\t}\n\n}\n\n ```\n","slug":"SqliteSample","published":1,"updated":"2016-03-17T00:44:06.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbb009ezspk9yetaded","thumbnailImageUrl":null},{"title":"Android字符串分割","date":"2015-04-26T16:00:00.000Z","_content":"\n```java\nsplit(\"|\")实现字符串分割\n```\n\n下面同样的效果\n\n```java\nString chartest = \"abcdefghijk\";\n\t\tchar[] chs = chartest.toCharArray();// 注：这里一定要用char来定义。\n\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t// Log.d(\"wxl\", \"chs=========\" + chs[i]);\n\t\t}\n\t\t// 输出: a b c d e f g h i j k\n```\n\nString[] strs = str.split(\"\\\\|\\\\|\");\n\n就可以了。|在正则表达式里表示或者的意思，转一下就好了。\n","source":"_posts/Split.md","raw":"title: Android字符串分割\ndate: 2015-04-27 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n```java\nsplit(\"|\")实现字符串分割\n```\n\n下面同样的效果\n\n```java\nString chartest = \"abcdefghijk\";\n\t\tchar[] chs = chartest.toCharArray();// 注：这里一定要用char来定义。\n\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t// Log.d(\"wxl\", \"chs=========\" + chs[i]);\n\t\t}\n\t\t// 输出: a b c d e f g h i j k\n```\n\nString[] strs = str.split(\"\\\\|\\\\|\");\n\n就可以了。|在正则表达式里表示或者的意思，转一下就好了。\n","slug":"Split","published":1,"updated":"2016-03-17T00:44:06.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbd009jzspk7vltgjsx","thumbnailImageUrl":null},{"title":"微言之自定义分享PopupWindow","date":"2015-09-02T01:54:41.000Z","_content":"\n>自定义分享PopupWindow，有需要的直接拿走。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanSharePopupWindowScreenshots.gif)\n\n<!--more-->\n\n## 应用实例\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 核心代码\n### SharePopupWindow代码\n```java\npublic class SharePopupWindow extends PopupWindow {\n    private View mMenuView;\n    private Activity mActivity;\n    private String mShareContent;\n    private View mParent;\n    private Bitmap mGetSaveBitmap;\n\n    public SharePopupWindow(Activity activity, String shareContent, View parent) {\n        super(activity);\n        this.mActivity = activity;\n        this.mShareContent = shareContent;\n        this.mParent = parent;\n        initView();\n    }\n\n    private void initView() {\n        mMenuView = View.inflate(mActivity, R.layout.share_popup, null);\n        // 设置按钮监听\n        mMenuView.findViewById(R.id.btn_friend).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_quan).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_collection).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_qq).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_qzone).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_sina).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_tx).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_cancel).setOnClickListener(\n                new View.OnClickListener() {\n\n                    @Override\n                    public void onClick(View v) {\n                        dismiss();\n\n                    }\n                });\n\n        // 设置SelectPicPopupWindow的View\n        this.setContentView(mMenuView);\n        // 设置SelectPicPopupWindow弹出窗体的宽\n        this.setWidth(LayoutParams.MATCH_PARENT);\n        // 设置SelectPicPopupWindow弹出窗体的高\n        this.setHeight(LayoutParams.WRAP_CONTENT);\n        // 设置SelectPicPopupWindow弹出窗体可点击\n        this.setFocusable(true);\n        // 设置SelectPicPopupWindow弹出窗体动画效果\n        // this.setAnimationStyle(R.style.AnimBottom);\n        // 实例化一个ColorDrawable颜色为半透明\n        ColorDrawable dw = new ColorDrawable(00000000);\n        // 设置SelectPicPopupWindow弹出窗体的背景\n        this.setBackgroundDrawable(dw);\n        this.showAtLocation(mParent, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0);\n        // mMenuView添加OnTouchListener监听判断获取触屏位置如果在选择框外面则销毁弹出框\n        mMenuView.setOnTouchListener(new OnTouchListener() {\n\n            public boolean onTouch(View v, MotionEvent event) {\n\n                int height = mMenuView.findViewById(R.id.pop_layout).getTop();\n                int y = (int) event.getY();\n                if (event.getAction() == MotionEvent.ACTION_UP) {\n                    if (y < height) {\n                        dismiss();\n                    }\n                }\n                return true;\n            }\n        });\n\n    }\n\n\n    /**\n     * 为弹出窗口实现监听类\n     */\n    private View.OnClickListener shareItemsOnClick = new View.OnClickListener() {\n\n        public void onClick(View v) {\n\n\n            switch (v.getId()) {\n                case R.id.btn_friend:\n                   //具体分享需要自己写\n                    break;\n                case R.id.btn_quan:\n                   \n                    break;\n                case R.id.btn_collection:\n                   \n                    break;\n                case R.id.btn_qq:\n                  \n                    break;\n                case R.id.btn_qzone:\n                  \n                    break;\n                case R.id.btn_sina:\n                  \n                    break;\n                case R.id.btn_tx:\n               \n                    break;\n                default:\n                    break;\n            }\n\n        }\n\n    };\n}\n```\n\n### share_popup.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#50000000\"\n    android:gravity=\"center_horizontal\"\n    android:orientation=\"vertical\">\n\n    <LinearLayout\n        android:id=\"@+id/pop_layout\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:background=\"@android:color/white\"\n        android:orientation=\"vertical\">\n\n        <LinearLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@android:color/white\"\n            android:orientation=\"horizontal\">\n\n            <TextView\n                android:id=\"@+id/btn_friend\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_wechat\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"微信好友\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_quan\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_wxcircle\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"朋友圈\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_collection\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/wx_collect\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"微信收藏\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_qq\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_qq_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"QQ\"\n                android:textColor=\"@color/txt_black\" />\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@android:color/white\"\n            android:orientation=\"horizontal\">\n\n            <TextView\n                android:id=\"@+id/btn_sina\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_sina_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"新浪微博\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_qzone\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_qzone_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"QQ空间\"\n                android:textColor=\"@color/txt_black\" />\n\n\n            <TextView\n                android:id=\"@+id/btn_tx\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_tx_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"腾讯微博\"\n                android:textColor=\"@color/txt_black\"\n                android:visibility=\"invisible\" />\n\n            <TextView\n                android:id=\"@+id/btn_more\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"更多分享\"\n                android:textColor=\"@color/txt_black\"\n                android:visibility=\"invisible\" />\n        </LinearLayout>\n\n        <Button\n            android:id=\"@+id/btn_cancel\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"45dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@drawable/shape_round_gray\"\n            android:gravity=\"center_horizontal|center_vertical\"\n            android:onClick=\"shareItemsOnClick\"\n            android:text=\"@string/cancel\"\n            android:textColor=\"@android:color/white\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n### SharePopupWindow调用\n```java\nnew SharePopupWindow(ContentActivity.this, shareContent, ContentActivity.this.findViewById(R.id.content_layout));            \n```\n第三个参数，是需要的分享页面的根ID，如：\n```js\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/content_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/bg\"\n    tools:context=\"com.android.xiaomolongstudio.hua.activity.JokeTextDetailActivity\">\n</RelativeLayout>\n```\n","source":"_posts/SharePopupWindow.md","raw":"title: 微言之自定义分享PopupWindow\ndate: 2015-09-02 09:54:41\ntags: [Android,PopupWindow,WeiYan]\ncategory: Android\n---\n\n>自定义分享PopupWindow，有需要的直接拿走。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanSharePopupWindowScreenshots.gif)\n\n<!--more-->\n\n## 应用实例\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 核心代码\n### SharePopupWindow代码\n```java\npublic class SharePopupWindow extends PopupWindow {\n    private View mMenuView;\n    private Activity mActivity;\n    private String mShareContent;\n    private View mParent;\n    private Bitmap mGetSaveBitmap;\n\n    public SharePopupWindow(Activity activity, String shareContent, View parent) {\n        super(activity);\n        this.mActivity = activity;\n        this.mShareContent = shareContent;\n        this.mParent = parent;\n        initView();\n    }\n\n    private void initView() {\n        mMenuView = View.inflate(mActivity, R.layout.share_popup, null);\n        // 设置按钮监听\n        mMenuView.findViewById(R.id.btn_friend).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_quan).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_collection).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_qq).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_qzone).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_sina).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_tx).setOnClickListener(shareItemsOnClick);\n        mMenuView.findViewById(R.id.btn_cancel).setOnClickListener(\n                new View.OnClickListener() {\n\n                    @Override\n                    public void onClick(View v) {\n                        dismiss();\n\n                    }\n                });\n\n        // 设置SelectPicPopupWindow的View\n        this.setContentView(mMenuView);\n        // 设置SelectPicPopupWindow弹出窗体的宽\n        this.setWidth(LayoutParams.MATCH_PARENT);\n        // 设置SelectPicPopupWindow弹出窗体的高\n        this.setHeight(LayoutParams.WRAP_CONTENT);\n        // 设置SelectPicPopupWindow弹出窗体可点击\n        this.setFocusable(true);\n        // 设置SelectPicPopupWindow弹出窗体动画效果\n        // this.setAnimationStyle(R.style.AnimBottom);\n        // 实例化一个ColorDrawable颜色为半透明\n        ColorDrawable dw = new ColorDrawable(00000000);\n        // 设置SelectPicPopupWindow弹出窗体的背景\n        this.setBackgroundDrawable(dw);\n        this.showAtLocation(mParent, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0);\n        // mMenuView添加OnTouchListener监听判断获取触屏位置如果在选择框外面则销毁弹出框\n        mMenuView.setOnTouchListener(new OnTouchListener() {\n\n            public boolean onTouch(View v, MotionEvent event) {\n\n                int height = mMenuView.findViewById(R.id.pop_layout).getTop();\n                int y = (int) event.getY();\n                if (event.getAction() == MotionEvent.ACTION_UP) {\n                    if (y < height) {\n                        dismiss();\n                    }\n                }\n                return true;\n            }\n        });\n\n    }\n\n\n    /**\n     * 为弹出窗口实现监听类\n     */\n    private View.OnClickListener shareItemsOnClick = new View.OnClickListener() {\n\n        public void onClick(View v) {\n\n\n            switch (v.getId()) {\n                case R.id.btn_friend:\n                   //具体分享需要自己写\n                    break;\n                case R.id.btn_quan:\n                   \n                    break;\n                case R.id.btn_collection:\n                   \n                    break;\n                case R.id.btn_qq:\n                  \n                    break;\n                case R.id.btn_qzone:\n                  \n                    break;\n                case R.id.btn_sina:\n                  \n                    break;\n                case R.id.btn_tx:\n               \n                    break;\n                default:\n                    break;\n            }\n\n        }\n\n    };\n}\n```\n\n### share_popup.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#50000000\"\n    android:gravity=\"center_horizontal\"\n    android:orientation=\"vertical\">\n\n    <LinearLayout\n        android:id=\"@+id/pop_layout\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:background=\"@android:color/white\"\n        android:orientation=\"vertical\">\n\n        <LinearLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@android:color/white\"\n            android:orientation=\"horizontal\">\n\n            <TextView\n                android:id=\"@+id/btn_friend\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_wechat\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"微信好友\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_quan\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_wxcircle\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"朋友圈\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_collection\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/wx_collect\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"微信收藏\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_qq\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_qq_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"QQ\"\n                android:textColor=\"@color/txt_black\" />\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@android:color/white\"\n            android:orientation=\"horizontal\">\n\n            <TextView\n                android:id=\"@+id/btn_sina\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_sina_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"新浪微博\"\n                android:textColor=\"@color/txt_black\" />\n\n            <TextView\n                android:id=\"@+id/btn_qzone\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_qzone_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"QQ空间\"\n                android:textColor=\"@color/txt_black\" />\n\n\n            <TextView\n                android:id=\"@+id/btn_tx\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:drawableTop=\"@drawable/umeng_socialize_tx_on\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"腾讯微博\"\n                android:textColor=\"@color/txt_black\"\n                android:visibility=\"invisible\" />\n\n            <TextView\n                android:id=\"@+id/btn_more\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"10dp\"\n                android:layout_weight=\"1\"\n                android:gravity=\"center_horizontal\"\n                android:onClick=\"shareItemsOnClick\"\n                android:text=\"更多分享\"\n                android:textColor=\"@color/txt_black\"\n                android:visibility=\"invisible\" />\n        </LinearLayout>\n\n        <Button\n            android:id=\"@+id/btn_cancel\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"45dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_marginLeft=\"22dp\"\n            android:layout_marginRight=\"22dp\"\n            android:layout_marginTop=\"10dp\"\n            android:background=\"@drawable/shape_round_gray\"\n            android:gravity=\"center_horizontal|center_vertical\"\n            android:onClick=\"shareItemsOnClick\"\n            android:text=\"@string/cancel\"\n            android:textColor=\"@android:color/white\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n### SharePopupWindow调用\n```java\nnew SharePopupWindow(ContentActivity.this, shareContent, ContentActivity.this.findViewById(R.id.content_layout));            \n```\n第三个参数，是需要的分享页面的根ID，如：\n```js\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/content_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@color/bg\"\n    tools:context=\"com.android.xiaomolongstudio.hua.activity.JokeTextDetailActivity\">\n</RelativeLayout>\n```\n","slug":"SharePopupWindow","published":1,"updated":"2016-03-17T00:44:06.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbf009ozspkjegev55v","thumbnailImageUrl":null},{"title":"Actionbar之SearchView","date":"2014-12-10T16:00:00.000Z","_content":"\n```js\n <item\n        android:id=\"@+id/menu_search\"\n        android:actionLayout=\"@layout/searchview\"//自定义\n        android:icon=\"@drawable/ic_action_search\"\n        android:showAsAction=\"always|collapseActionView\"\n        android:title=\"Search\"/>\n        android:actionViewClass=\"android.widget.SearchView\"//系统的\n```\n我们设定 showAsAction这个属性的时候，加了collapseActionView这么一个参数，它的意思是说，将item引用的布局隐藏起来，当你点击该item的时候，再将其展现出来。通过这个属性，我们就可以将每个item复杂的布局隐藏起来，从而有效的节约了actionbar的布局空间。\n<!-- more -->\nsearchview.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <EditText\n        android:id=\"@+id/search\"\n        style=\"@android:style/Widget.Holo.EditText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:hint=\"搜索视频\"\n        android:imeOptions=\"actionSearch\"\n        android:singleLine=\"true\"\n        android:textColor=\"@android:color/black\"\n        android:textCursorDrawable=\"@null\" />\n\n</LinearLayout>\n```\n\n代码\n\n```java\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.activity_main, menu);\n\t\tinitSearch(menu);\n\t\treturn true;\n\t}\n\n\tprivate VideoFragment videoFragment;\n\n\t/**\n\t * 搜索动作\n\t * \n\t * @param menu\n\t */\n\tprivate void initSearch(Menu menu) {\n\t\tMenuItem item = menu.findItem(R.id.menu_search);\n\t\tView view = item.getActionView();\n\t\tfinal EditText search = (EditText) view.findViewById(R.id.search);\n\t\tMenuItemCompat.setOnActionExpandListener(item,\n\t\t\t\tnew OnActionExpandListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啊哦，我隐藏起来了！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.clearFocus(); // 清除焦点\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tif (search.getText().length() > 0) {// 重新恢复搜索之前的数据\n\t\t\t\t\t\t\tvideoFragment.searchVideoTable(false, \"\");//\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啦啦啦，我出现喽！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.requestFocus(); // 请求获取焦点\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * 调起软键盘\n\t\t\t\t\t\t */\n\t\t\t\t\t\tInputMethodManager m = (InputMethodManager)     getSystemService(Context.INPUT_METHOD_SERVICE);\n\t\t\t\t\t\tm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tsearch.setOnEditorActionListener(new OnEditorActionListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onEditorAction(TextView v, int actionId,\n\t\t\t\t\tKeyEvent event) {\n\t\t\t\tif (actionId == EditorInfo.IME_ACTION_SEARCH) {\n\t\t\t\t\tif (search.getText().length() > 0) {// 搜索\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tvideoFragment.searchVideoTable(true, search.getText()\n\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n```\n\n* 参考\n\n[Android ActionBar 的其它用法（搜索、分享、隐藏复杂布局，模仿Google Play,微信）](http://blog.csdn.net/xy_nyle/article/details/18894755)\n\n[Android在EditText中开启软键盘的＂Done＂按钮](http://www.fengfly.com/plus/view-206564-1.html)\n\n[输入法软键盘显示/隐藏的监听和控制](http://glblong.blog.51cto.com/3058613/1543172)\n\n[修改Android EditText光标颜色](http://blog.csdn.net/cw2004100021124/article/details/12649671)\n\n[Android:自定义输入框光标颜色](http://my.oschina.net/xsjayz/blog/104344)\n","source":"_posts/SearchView.md","raw":"title: Actionbar之SearchView\ndate: 2014-12-11 \ncategories: [Android]\ntags: [Android,Actionbar,SearchView]\n---\n\n```js\n <item\n        android:id=\"@+id/menu_search\"\n        android:actionLayout=\"@layout/searchview\"//自定义\n        android:icon=\"@drawable/ic_action_search\"\n        android:showAsAction=\"always|collapseActionView\"\n        android:title=\"Search\"/>\n        android:actionViewClass=\"android.widget.SearchView\"//系统的\n```\n我们设定 showAsAction这个属性的时候，加了collapseActionView这么一个参数，它的意思是说，将item引用的布局隐藏起来，当你点击该item的时候，再将其展现出来。通过这个属性，我们就可以将每个item复杂的布局隐藏起来，从而有效的节约了actionbar的布局空间。\n<!-- more -->\nsearchview.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <EditText\n        android:id=\"@+id/search\"\n        style=\"@android:style/Widget.Holo.EditText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:hint=\"搜索视频\"\n        android:imeOptions=\"actionSearch\"\n        android:singleLine=\"true\"\n        android:textColor=\"@android:color/black\"\n        android:textCursorDrawable=\"@null\" />\n\n</LinearLayout>\n```\n\n代码\n\n```java\n\t@Override\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.activity_main, menu);\n\t\tinitSearch(menu);\n\t\treturn true;\n\t}\n\n\tprivate VideoFragment videoFragment;\n\n\t/**\n\t * 搜索动作\n\t * \n\t * @param menu\n\t */\n\tprivate void initSearch(Menu menu) {\n\t\tMenuItem item = menu.findItem(R.id.menu_search);\n\t\tView view = item.getActionView();\n\t\tfinal EditText search = (EditText) view.findViewById(R.id.search);\n\t\tMenuItemCompat.setOnActionExpandListener(item,\n\t\t\t\tnew OnActionExpandListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionCollapse(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啊哦，我隐藏起来了！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.clearFocus(); // 清除焦点\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tif (search.getText().length() > 0) {// 重新恢复搜索之前的数据\n\t\t\t\t\t\t\tvideoFragment.searchVideoTable(false, \"\");//\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onMenuItemActionExpand(MenuItem item) {\n\t\t\t\t\t\t// Toast.makeText(MainDrawerActivity.this, \"啦啦啦，我出现喽！\",\n\t\t\t\t\t\t// Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\tsearch.requestFocus(); // 请求获取焦点\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * 调起软键盘\n\t\t\t\t\t\t */\n\t\t\t\t\t\tInputMethodManager m = (InputMethodManager)     getSystemService(Context.INPUT_METHOD_SERVICE);\n\t\t\t\t\t\tm.toggleSoftInput(0, InputMethodManager.HIDE_NOT_ALWAYS);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tsearch.setOnEditorActionListener(new OnEditorActionListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onEditorAction(TextView v, int actionId,\n\t\t\t\t\tKeyEvent event) {\n\t\t\t\tif (actionId == EditorInfo.IME_ACTION_SEARCH) {\n\t\t\t\t\tif (search.getText().length() > 0) {// 搜索\n\t\t\t\t\t\tAppUtil.hideSoftInput(MainDrawerActivity.this);\n\t\t\t\t\t\tvideoFragment.searchVideoTable(true, search.getText()\n\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n```\n\n* 参考\n\n[Android ActionBar 的其它用法（搜索、分享、隐藏复杂布局，模仿Google Play,微信）](http://blog.csdn.net/xy_nyle/article/details/18894755)\n\n[Android在EditText中开启软键盘的＂Done＂按钮](http://www.fengfly.com/plus/view-206564-1.html)\n\n[输入法软键盘显示/隐藏的监听和控制](http://glblong.blog.51cto.com/3058613/1543172)\n\n[修改Android EditText光标颜色](http://blog.csdn.net/cw2004100021124/article/details/12649671)\n\n[Android:自定义输入框光标颜色](http://my.oschina.net/xsjayz/blog/104344)\n","slug":"SearchView","published":1,"updated":"2016-03-17T00:44:06.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbh009uzspkdwsm1fnm","thumbnailImageUrl":null},{"title":"Saving Data-Saving Files","date":"2015-07-12T16:00:00.000Z","_content":">微言App中有个阅读量的功能，是直接将用户的阅读量保存在SD卡上，我封装成了工具类。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppScreenshots.gif)\n\n<!--more-->\n\n## 实例APK\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 需要权限\n\n```js\n <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n## ReadUtil.java\n\n```java\n public class ReadUtil {\n    public static final File SDCardDir = Environment.getExternalStorageDirectory(); //获取SDCard目录\n    public static final String SD_ROOT_NAME = \"WeiYan/\";\n    public static final String SD_FILE_NAME = \"reading\";\n\n    public static void saveToFile(int readTotal) {\n        try {\n            // 判断SD卡是否存在，并且是否具有读写权限\n            if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n                File saveFile = new File(SDCardDir + File.separator + SD_ROOT_NAME, SD_FILE_NAME);\n                if (!saveFile.getParentFile().exists()) {\n                    saveFile.getParentFile().mkdirs();\n                }\n                int nowReadingTotal = getReadedTotal() + readTotal;\n                String readedTotal = nowReadingTotal + \"\";\n                FileOutputStream outStream = new FileOutputStream(saveFile);\n                outStream.write(readedTotal.getBytes());\n                outStream.close();\n            } else {\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static int getReadedTotal() {\n        int readedTotal = 0;\n        File file = new File(SDCardDir + File.separator + SD_ROOT_NAME, SD_FILE_NAME);\n        if (file.exists() && file.isFile()) {\n            StringBuffer stringBuffer = new StringBuffer();\n            try {\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"));\n                int c;\n                while ((c = bufferedReader.read()) != -1) {\n                    stringBuffer.append((char) c);\n                }\n                bufferedReader.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            String result = stringBuffer.toString();\n            readedTotal = Integer.parseInt(result);\n        }\n        return readedTotal;\n    }\n}\n```\n\n## 如何调用\n### 读取数据\n```java\n ReadUtil.getReadedTotal()\n```\n\n### 保存阅读量\n```java\nReadUtil.saveToFile(readTotal);\n```","source":"_posts/SavingFiles.md","raw":"title: Saving Data-Saving Files\ndate: 2015-07-13\ncategories: [Android]\ntags: [Android,SQLite,WeiYan]\n---\n>微言App中有个阅读量的功能，是直接将用户的阅读量保存在SD卡上，我封装成了工具类。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppScreenshots.gif)\n\n<!--more-->\n\n## 实例APK\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 需要权限\n\n```js\n <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n## ReadUtil.java\n\n```java\n public class ReadUtil {\n    public static final File SDCardDir = Environment.getExternalStorageDirectory(); //获取SDCard目录\n    public static final String SD_ROOT_NAME = \"WeiYan/\";\n    public static final String SD_FILE_NAME = \"reading\";\n\n    public static void saveToFile(int readTotal) {\n        try {\n            // 判断SD卡是否存在，并且是否具有读写权限\n            if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n                File saveFile = new File(SDCardDir + File.separator + SD_ROOT_NAME, SD_FILE_NAME);\n                if (!saveFile.getParentFile().exists()) {\n                    saveFile.getParentFile().mkdirs();\n                }\n                int nowReadingTotal = getReadedTotal() + readTotal;\n                String readedTotal = nowReadingTotal + \"\";\n                FileOutputStream outStream = new FileOutputStream(saveFile);\n                outStream.write(readedTotal.getBytes());\n                outStream.close();\n            } else {\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static int getReadedTotal() {\n        int readedTotal = 0;\n        File file = new File(SDCardDir + File.separator + SD_ROOT_NAME, SD_FILE_NAME);\n        if (file.exists() && file.isFile()) {\n            StringBuffer stringBuffer = new StringBuffer();\n            try {\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream(file), \"UTF-8\"));\n                int c;\n                while ((c = bufferedReader.read()) != -1) {\n                    stringBuffer.append((char) c);\n                }\n                bufferedReader.close();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            String result = stringBuffer.toString();\n            readedTotal = Integer.parseInt(result);\n        }\n        return readedTotal;\n    }\n}\n```\n\n## 如何调用\n### 读取数据\n```java\n ReadUtil.getReadedTotal()\n```\n\n### 保存阅读量\n```java\nReadUtil.saveToFile(readTotal);\n```","slug":"SavingFiles","published":1,"updated":"2016-03-17T00:44:06.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbj00a1zspkhk1exkg4","thumbnailImageUrl":null},{"title":"Android保存图片并显示系统图库","date":"2015-07-26T16:00:00.000Z","_content":"```java\n  /**\n     * 0 保存失败；\n     * 1 保存成功；\n     * 2 已经存在\n     */\n\n    class SaveImageToGalleryTask extends AsyncTask<Objects, Objects, Integer> {\n        @Override\n        protected Integer doInBackground(Objects... params) {\n            Bitmap bitmap = null;\n          \n            try {\n              \n                bitmap = Picasso.with(GirlImageDetailActivity.this).load(\"图片URL\").get();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (bitmap == null) {\n                return 0;\n            }\n            File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n            if (!appDir.exists()) {\n                appDir.mkdir();\n            }\n            final String fileName = \"图片名字\"+ \".png\";\n            File file = new File(appDir, fileName);\n            if (file.exists()) {\n                return 2;\n            } else {\n                try {\n                    FileOutputStream fileOutputStream = new FileOutputStream(file);\n                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\n                    fileOutputStream.flush();\n                    fileOutputStream.close();\n\n                    // 其次把文件插入到系统图库\n                    MediaStore.Images.Media.insertImage(GirlImageDetailActivity.this.getContentResolver(), file.getAbsolutePath(), fileName, null);\n\n                    // 最后通知图库更新\n                    Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + file.getAbsolutePath()));\n                    sendBroadcast(intent);\n                    return 1;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    return 0;\n                }\n\n            }\n        }\n\n        @Override\n        protected void onPostExecute(Integer integer) {\n            super.onPostExecute(integer);\n            switch (integer) {\n                case 0:\n                    Snackbar.make(detailLayout, \"保存失败\", Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 1:\n                    File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n                    Snackbar.make(detailLayout, \"成功保存至\" + appDir.getAbsolutePath(), Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 2:\n                    Snackbar.make(detailLayout, \"图片已经存在\", Snackbar.LENGTH_SHORT).show();\n                    break;\n            }\n        }\n    }\n```\n","source":"_posts/SaveImageToGallery.md","raw":"title: Android保存图片并显示系统图库\ndate: 2015-07-27 #发表日期，一般不改动\ncategory: Android\ntags: [Android]\n---\n```java\n  /**\n     * 0 保存失败；\n     * 1 保存成功；\n     * 2 已经存在\n     */\n\n    class SaveImageToGalleryTask extends AsyncTask<Objects, Objects, Integer> {\n        @Override\n        protected Integer doInBackground(Objects... params) {\n            Bitmap bitmap = null;\n          \n            try {\n              \n                bitmap = Picasso.with(GirlImageDetailActivity.this).load(\"图片URL\").get();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (bitmap == null) {\n                return 0;\n            }\n            File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n            if (!appDir.exists()) {\n                appDir.mkdir();\n            }\n            final String fileName = \"图片名字\"+ \".png\";\n            File file = new File(appDir, fileName);\n            if (file.exists()) {\n                return 2;\n            } else {\n                try {\n                    FileOutputStream fileOutputStream = new FileOutputStream(file);\n                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\n                    fileOutputStream.flush();\n                    fileOutputStream.close();\n\n                    // 其次把文件插入到系统图库\n                    MediaStore.Images.Media.insertImage(GirlImageDetailActivity.this.getContentResolver(), file.getAbsolutePath(), fileName, null);\n\n                    // 最后通知图库更新\n                    Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + file.getAbsolutePath()));\n                    sendBroadcast(intent);\n                    return 1;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    return 0;\n                }\n\n            }\n        }\n\n        @Override\n        protected void onPostExecute(Integer integer) {\n            super.onPostExecute(integer);\n            switch (integer) {\n                case 0:\n                    Snackbar.make(detailLayout, \"保存失败\", Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 1:\n                    File appDir = new File(Environment.getExternalStorageDirectory(), \"hua\");\n                    Snackbar.make(detailLayout, \"成功保存至\" + appDir.getAbsolutePath(), Snackbar.LENGTH_SHORT).show();\n                    break;\n                case 2:\n                    Snackbar.make(detailLayout, \"图片已经存在\", Snackbar.LENGTH_SHORT).show();\n                    break;\n            }\n        }\n    }\n```\n","slug":"SaveImageToGallery","published":1,"updated":"2016-03-17T00:44:06.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbm00a6zspkspoyryq6","thumbnailImageUrl":null},{"title":"Android 6.0 RuntimePermission","date":"2016-02-04T03:40:57.000Z","_content":"> android6.0棉花糖，app将不会在安装的时候授予权限。取而代之的是，app不得不在运行时一个一个询问用户授予权限。\n\n```\nandroid {\n    compileSdkVersion 23\n    ...\n  \n    defaultConfig {\n        ...\n        targetSdkVersion 23\n        ...\n    }\n}\n```\n<!--more-->\n如何app/build.gradle是23的话，在6.0上运行一些权限，没有做处理，会直接崩溃：\n```xml\n...\nCaused by: java.lang.SecurityException: Permission Denial: \nopening provider com.android.providers.contacts.ContactsProvider2 from ProcessRecord\n{c3b3c66 16712:com.wuxiaolong.apksample/u0a62} (pid=16712, uid=10062)\nrequires android.permission.READ_CONTACTS or android.permission.WRITE_CONTACTS\n...\n```\n如果targetSdkVersion 22，就不会发生这样的错误，下面就来实践下这个6.0运行的权限。\n\n# 效果预览\n按照惯例，先上效果图:\n![](http://7q5c2h.com1.z0.glb.clouddn.com/RuntimePermission1.png)\n说明：第一次请求授权，是没有“不再询问”，拒绝后，再次请求授权，就会出现“不再询问”。\n\n# 实践\n## AndroidManifest.xml\n```xml\n<uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n```\n## 代码调用\n在需要使用到权限之前调用以下代码：\n```java\nprivate void mayRequestContacts() {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            switch (checkSelfPermission(Manifest.permission.READ_CONTACTS)) {\n                case PackageManager.PERMISSION_GRANTED:\n                    // 已有授权\n                    Log.i(\"wxl\", \"已有授权\");\n                    break;\n                case PackageManager.PERMISSION_DENIED:\n                    // 没有权限：尚未请求过权限，\n                    // 或者请求授权被拒绝，\n                    // 或者曾经授权过，但被用户在设置中禁用权限\n                    Log.i(\"wxl\", \"没有权限：尚未请求过权限，或者请求授权被拒绝，\" +\n                            \"或者曾经授权过， 但被用户在设置中禁用权限\");\n                    /**\n                     * 如果用户勾上了“不再询问”，这时候就不应弹请求权限的对话框，\n                     * 可以在请求权限之前用\n\t\t\t\t\t * shouldShowRequestPermissionRationale判断用户是否拒绝过，\n                     * 如果返回true，表示用户拒绝过。\n                     */\n                    Log.i(\"wxl\", \"shouldShowRequestPermissionRationale==\" \n\t\t\t\t\t+ shouldShowRequestPermissionRationale(READ_CONTACTS));\n                    if (shouldShowRequestPermissionRationale(READ_CONTACTS)) {\n                        Snackbar.make(mEmailView, \n\t\t\t\t\t\tR.string.permission_rationale, Snackbar.LENGTH_INDEFINITE)\n                                .setAction(android.R.string.ok, new View.OnClickListener() {\n                                    @Override\n                                    @TargetApi(Build.VERSION_CODES.M)\n                                    public void onClick(View v) {\n                                        requestPermissions(new String[]{READ_CONTACTS}, \n\t\t\t\t\t\t\t\t\t\tREQUEST_READ_CONTACTS);\n                                    }\n                                }).show();\n                    } else {\n                        requestPermissions(new String[]{READ_CONTACTS}, \n\t\t\t\t\t\tREQUEST_READ_CONTACTS);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n```\ncheckSelfPermission：检查权限\nrequestPermissions：请求权限\nshouldShowRequestPermissionRationale：判断用户是否拒绝过\n\n## 授权回调\n不管是允许或拒绝，都会回调：\n```java\n @Override\n    public void onRequestPermissionsResult(int requestCode,\n     @NonNull  String[] permissions,@NonNull  int[] grantResults) {\n        if (requestCode == REQUEST_READ_CONTACTS) {\n            if (grantResults.length == 1 &&\n                    grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                // 授权请求被通过，读取通讯录\n                Log.i(\"wxl\", \"授权请求被通过，读取通讯录\");\n            } else {\n                Log.i(\"wxl\", \"授权请求不被通过\");\n            }\n        }\n    }\n```\n# 多个权限\n```java\n @TargetApi(Build.VERSION_CODES.M)\n    private void checkPermissions() {\n        List<String> permissionsNeeded = new ArrayList<>();\n        final List<String> permissionsList = new ArrayList<>();\n        if (deniedPermission(permissionsList, Manifest.permission.ACCESS_FINE_LOCATION))\n            permissionsNeeded.add(\"GPS\");\n        if (deniedPermission(permissionsList, Manifest.permission.READ_CONTACTS))\n            permissionsNeeded.add(\"Read Contacts\");\n        if (permissionsList.size() > 0) {\n            if (permissionsNeeded.size() > 0) {\n                // Need Rationale\n                String message = \"You need to grant access to \" + permissionsNeeded.get(0);\n                for (int i = 1; i < permissionsNeeded.size(); i++)\n                    message = message + \", \" + permissionsNeeded.get(i);\n                requestPermissions(permissionsList.toArray(new String[permissionsList.size()]), REQUEST_PERMISSIONS);\n            }\n        }\n    }\n\n    @TargetApi(Build.VERSION_CODES.M)\n    private boolean deniedPermission(List<String> permissionsList, String permission) {\n        if (checkSelfPermission(permission) == PackageManager.PERMISSION_DENIED) {\n            permissionsList.add(permission);\n            // true，表示用户拒绝过\n            if (shouldShowRequestPermissionRationale(permission)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Callback received when a permissions request has been completed.\n     */\n    @Override\n    public void onRequestPermissionsResult(int requestCode,\n                                           String[] permissions, int[] grantResults) {       \n        if (requestCode == REQUEST_PERMISSIONS) {\n            Map<String, Integer> perms = new HashMap<String, Integer>();\n            // Initial\n            perms.put(Manifest.permission.ACCESS_FINE_LOCATION, PackageManager.PERMISSION_GRANTED);\n            perms.put(Manifest.permission.READ_CONTACTS, PackageManager.PERMISSION_GRANTED);\n            // Fill with results\n            for (int i = 0; i < permissions.length; i++)\n                perms.put(permissions[i], grantResults[i]);\n            // Check for ACCESS_FINE_LOCATION\n            if (perms.get(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED\n                    && perms.get(Manifest.permission.READ_CONTACTS) == PackageManager.PERMISSION_GRANTED) {\n                // All Permissions Granted\n                Log.i(\"wxl\", \"授权请求被通过\");\n            } else {\n                // Permission Denied\n                Log.i(\"wxl\", \"授权请求不被通过\");\n            }\n        }\n    }\n```\n# 权限分组\n权限那么多，如果一个个判断，岂不是会疯掉，如图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/RuntimePermission2.png)\n同一组的任何一个权限被授权了，其他权限也自动被授权。例如，一旦WRITE_CONTACTS被授权了，app也有READ_CONTACTS和GET_ACCOUNTS了。\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Android M 新的运行时权限开发者需要知道的一切](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0830/3387.html)\n[Android Runtime Permission测试](http://blog.piasy.com/Android-Runtime-Permission-Test/)\n\n","source":"_posts/RuntimePermission.md","raw":"title: Android 6.0 RuntimePermission\ndate: 2016-02-04 11:40:57\ntags: RuntimePermission\ncategory: Android \n---\n> android6.0棉花糖，app将不会在安装的时候授予权限。取而代之的是，app不得不在运行时一个一个询问用户授予权限。\n\n```\nandroid {\n    compileSdkVersion 23\n    ...\n  \n    defaultConfig {\n        ...\n        targetSdkVersion 23\n        ...\n    }\n}\n```\n<!--more-->\n如何app/build.gradle是23的话，在6.0上运行一些权限，没有做处理，会直接崩溃：\n```xml\n...\nCaused by: java.lang.SecurityException: Permission Denial: \nopening provider com.android.providers.contacts.ContactsProvider2 from ProcessRecord\n{c3b3c66 16712:com.wuxiaolong.apksample/u0a62} (pid=16712, uid=10062)\nrequires android.permission.READ_CONTACTS or android.permission.WRITE_CONTACTS\n...\n```\n如果targetSdkVersion 22，就不会发生这样的错误，下面就来实践下这个6.0运行的权限。\n\n# 效果预览\n按照惯例，先上效果图:\n![](http://7q5c2h.com1.z0.glb.clouddn.com/RuntimePermission1.png)\n说明：第一次请求授权，是没有“不再询问”，拒绝后，再次请求授权，就会出现“不再询问”。\n\n# 实践\n## AndroidManifest.xml\n```xml\n<uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n```\n## 代码调用\n在需要使用到权限之前调用以下代码：\n```java\nprivate void mayRequestContacts() {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            switch (checkSelfPermission(Manifest.permission.READ_CONTACTS)) {\n                case PackageManager.PERMISSION_GRANTED:\n                    // 已有授权\n                    Log.i(\"wxl\", \"已有授权\");\n                    break;\n                case PackageManager.PERMISSION_DENIED:\n                    // 没有权限：尚未请求过权限，\n                    // 或者请求授权被拒绝，\n                    // 或者曾经授权过，但被用户在设置中禁用权限\n                    Log.i(\"wxl\", \"没有权限：尚未请求过权限，或者请求授权被拒绝，\" +\n                            \"或者曾经授权过， 但被用户在设置中禁用权限\");\n                    /**\n                     * 如果用户勾上了“不再询问”，这时候就不应弹请求权限的对话框，\n                     * 可以在请求权限之前用\n\t\t\t\t\t * shouldShowRequestPermissionRationale判断用户是否拒绝过，\n                     * 如果返回true，表示用户拒绝过。\n                     */\n                    Log.i(\"wxl\", \"shouldShowRequestPermissionRationale==\" \n\t\t\t\t\t+ shouldShowRequestPermissionRationale(READ_CONTACTS));\n                    if (shouldShowRequestPermissionRationale(READ_CONTACTS)) {\n                        Snackbar.make(mEmailView, \n\t\t\t\t\t\tR.string.permission_rationale, Snackbar.LENGTH_INDEFINITE)\n                                .setAction(android.R.string.ok, new View.OnClickListener() {\n                                    @Override\n                                    @TargetApi(Build.VERSION_CODES.M)\n                                    public void onClick(View v) {\n                                        requestPermissions(new String[]{READ_CONTACTS}, \n\t\t\t\t\t\t\t\t\t\tREQUEST_READ_CONTACTS);\n                                    }\n                                }).show();\n                    } else {\n                        requestPermissions(new String[]{READ_CONTACTS}, \n\t\t\t\t\t\tREQUEST_READ_CONTACTS);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n```\ncheckSelfPermission：检查权限\nrequestPermissions：请求权限\nshouldShowRequestPermissionRationale：判断用户是否拒绝过\n\n## 授权回调\n不管是允许或拒绝，都会回调：\n```java\n @Override\n    public void onRequestPermissionsResult(int requestCode,\n     @NonNull  String[] permissions,@NonNull  int[] grantResults) {\n        if (requestCode == REQUEST_READ_CONTACTS) {\n            if (grantResults.length == 1 &&\n                    grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                // 授权请求被通过，读取通讯录\n                Log.i(\"wxl\", \"授权请求被通过，读取通讯录\");\n            } else {\n                Log.i(\"wxl\", \"授权请求不被通过\");\n            }\n        }\n    }\n```\n# 多个权限\n```java\n @TargetApi(Build.VERSION_CODES.M)\n    private void checkPermissions() {\n        List<String> permissionsNeeded = new ArrayList<>();\n        final List<String> permissionsList = new ArrayList<>();\n        if (deniedPermission(permissionsList, Manifest.permission.ACCESS_FINE_LOCATION))\n            permissionsNeeded.add(\"GPS\");\n        if (deniedPermission(permissionsList, Manifest.permission.READ_CONTACTS))\n            permissionsNeeded.add(\"Read Contacts\");\n        if (permissionsList.size() > 0) {\n            if (permissionsNeeded.size() > 0) {\n                // Need Rationale\n                String message = \"You need to grant access to \" + permissionsNeeded.get(0);\n                for (int i = 1; i < permissionsNeeded.size(); i++)\n                    message = message + \", \" + permissionsNeeded.get(i);\n                requestPermissions(permissionsList.toArray(new String[permissionsList.size()]), REQUEST_PERMISSIONS);\n            }\n        }\n    }\n\n    @TargetApi(Build.VERSION_CODES.M)\n    private boolean deniedPermission(List<String> permissionsList, String permission) {\n        if (checkSelfPermission(permission) == PackageManager.PERMISSION_DENIED) {\n            permissionsList.add(permission);\n            // true，表示用户拒绝过\n            if (shouldShowRequestPermissionRationale(permission)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Callback received when a permissions request has been completed.\n     */\n    @Override\n    public void onRequestPermissionsResult(int requestCode,\n                                           String[] permissions, int[] grantResults) {       \n        if (requestCode == REQUEST_PERMISSIONS) {\n            Map<String, Integer> perms = new HashMap<String, Integer>();\n            // Initial\n            perms.put(Manifest.permission.ACCESS_FINE_LOCATION, PackageManager.PERMISSION_GRANTED);\n            perms.put(Manifest.permission.READ_CONTACTS, PackageManager.PERMISSION_GRANTED);\n            // Fill with results\n            for (int i = 0; i < permissions.length; i++)\n                perms.put(permissions[i], grantResults[i]);\n            // Check for ACCESS_FINE_LOCATION\n            if (perms.get(Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED\n                    && perms.get(Manifest.permission.READ_CONTACTS) == PackageManager.PERMISSION_GRANTED) {\n                // All Permissions Granted\n                Log.i(\"wxl\", \"授权请求被通过\");\n            } else {\n                // Permission Denied\n                Log.i(\"wxl\", \"授权请求不被通过\");\n            }\n        }\n    }\n```\n# 权限分组\n权限那么多，如果一个个判断，岂不是会疯掉，如图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/RuntimePermission2.png)\n同一组的任何一个权限被授权了，其他权限也自动被授权。例如，一旦WRITE_CONTACTS被授权了，app也有READ_CONTACTS和GET_ACCOUNTS了。\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 附录\n[Android M 新的运行时权限开发者需要知道的一切](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0830/3387.html)\n[Android Runtime Permission测试](http://blog.piasy.com/Android-Runtime-Permission-Test/)\n\n","slug":"RuntimePermission","published":1,"updated":"2016-03-17T00:44:06.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbo00a9zspk56gz2ngb","thumbnailImageUrl":null},{"title":"android获取 res 中的资源","date":"2015-04-29T16:00:00.000Z","_content":"\n### 如何获取 res 中的资源\n\n数据包package：android.content.res\n\n### 主要类：Resources\n\n其主要接口按照功能，划分为以下三部分：\n\ngetXXXX()\n\n<!-- more -->\n\n例如：\n\nint getColor(int id)\n\nDrawable getDrawable(int id)\n\nString getString(int id)  直接获取res中存放的资源\n\nInputStream openRawResource(int id)  获取资源的数据流，读取资源数据\n\nvoid parseBundleExtras(XmlResourceParser parser, Bundle outBundle)  从XML文件中获取数据\n\nResource为每种资源提供了相应的接口来获取这种资源，除了可以直接获取资源外，还额外提供了以数据流的方式获取资源，这在以后的应用程序开发中会经常使用，那么如何获取Resources了，如下：Resources r = this.getContext().getResources();\n\nInputStream in = getResources().getAssets().open(\"wangfei.jpg\");//Assets下文件\n","source":"_posts/ResResources.md","raw":"title: android获取 res 中的资源\ndate: 2015-04-30 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n### 如何获取 res 中的资源\n\n数据包package：android.content.res\n\n### 主要类：Resources\n\n其主要接口按照功能，划分为以下三部分：\n\ngetXXXX()\n\n<!-- more -->\n\n例如：\n\nint getColor(int id)\n\nDrawable getDrawable(int id)\n\nString getString(int id)  直接获取res中存放的资源\n\nInputStream openRawResource(int id)  获取资源的数据流，读取资源数据\n\nvoid parseBundleExtras(XmlResourceParser parser, Bundle outBundle)  从XML文件中获取数据\n\nResource为每种资源提供了相应的接口来获取这种资源，除了可以直接获取资源外，还额外提供了以数据流的方式获取资源，这在以后的应用程序开发中会经常使用，那么如何获取Resources了，如下：Resources r = this.getContext().getResources();\n\nInputStream in = getResources().getAssets().open(\"wangfei.jpg\");//Assets下文件\n","slug":"ResResources","published":1,"updated":"2016-03-17T00:44:06.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbq00adzspkms592jlq","thumbnailImageUrl":null},{"title":"RecyclerView+CardView使用","date":"2015-09-15T05:21:15.000Z","_content":"> RecyclerView和CardView使用\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n\n<!--more-->\n\n## gradle文件\n```js\n compile 'com.android.support:recyclerview-v7:22.2.0'\n compile 'com.android.support:cardview-v7:22.2.0'\n```\n## XML文件\n```js\n <android.support.v7.widget.RecyclerView\n  android:id=\"@+id/mRecyclerView\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\" />\n```\n## Activity中\n```java\n mRecyclerView = (RecyclerView) view.findViewById(R.id.mRecyclerView);\n  mRecyclerView.setLayoutManager(new LinearLayoutManager(this));//这里用线性显示 类似于listview\n//mRecyclerView.setLayoutManager(new GridLayoutManager(this, 2));//这里用线性宫格显示 类似于grid view\n//mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL));//这里用线性宫格显示 类似于瀑布流\n  mRecyclerView.setAdapter(new DayTextAdapter(getActivity(), parselist));\n```\n## DayTextAdapter\n```java\npublic class DayTextAdapter extends RecyclerView.Adapter<DayTextAdapter.ViewHolder> {\n    List<Map<String, String>> parselist;\n    private Activity activity;\n\n    public List<Map<String, String>> getParselist() {\n        return parselist;\n    }\n\n    public DayTextAdapter(Activity activity, List<Map<String, String>> parselist) {\n        this.activity = activity;\n        this.parselist = parselist;\n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.day_text_item, parent, false);\n        return new ViewHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        holder.title.setText(Html.fromHtml(\"<b>\" + parselist.get(position).get(\"title\") + \"</b>\"));\n        holder.content.setText(Html.fromHtml(\"发布时间：\"\n                + parselist.get(position).get(\"date\") + \"<br>\"\n                + parselist.get(position).get(\"postContent\")));\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return parselist.size();\n    }\n\n    public class ViewHolder extends RecyclerView.ViewHolder {\n        TextView title, content;\n\n        public ViewHolder(View itemView) {\n            super(itemView);\n            title = (TextView) itemView.findViewById(R.id.title);\n            content = (TextView) itemView.findViewById(R.id.content);\n\n\n            itemView.setOnClickListener(new View.OnClickListener() {\n\n                public void onClick(View v) {\n                   //点击事件\n                }\n            });\n        }\n    }\n}\n```\n## day_text_item.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n<android.support.v7.widget.CardView \n    android:id=\"@+id/card_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginBottom=\"@dimen/card_view_margin_bottom\"\n    android:layout_marginLeft=\"10dp\"\n    android:layout_marginRight=\"10dp\"\n    android:layout_marginTop=\"10dp\"\n\tandroid:foreground=\"?attr/selectableItemBackground\"\n    card_view:cardBackgroundColor=\"?attr/itemBackgroundColor\"\n    card_view:cardCornerRadius=\"10dp\"\n    card_view:cardElevation=\"5dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:padding=\"15dip\">\n\n        <TextView\n            android:id=\"@+id/title\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"?attr/titleColor\"\n            android:textSize=\"@dimen/title\" />\n\n        <TextView\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"1dip\"\n            android:layout_marginTop=\"10dip\"\n            android:background=\"?attr/lineColor\" />\n\n        <TextView\n            android:id=\"@+id/content\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"10dip\"\n            android:ellipsize=\"end\"\n            android:lines=\"7\"\n            android:textColor=\"?attr/contentColor\"\n            android:textSize=\"@dimen/content\" />\n\n    </LinearLayout>\n</android.support.v7.widget.CardView>\n\n</LinearLayout>\n```\n说明：\nCardView中android:layout_marginBottom发现在5.0以上和以下效果不一样的。\nres文件下values文件dimens.xml\n```js\n<resources>\n    <dimen name=\"card_view_margin_bottom\">0dp</dimen>\n</resources>\n```\n再在res文件下建values-v21文件，并在dimens.xml\n```js\n<resources>\n    <dimen name=\"card_view_margin_bottom\">10dp</dimen>\n</resources>\n```\nCardView参数：\n```js\n<resources>\n    <declare-styleable name=\"CardView\">\n        <!-- Background color for CardView. -->\n        <!-- 背景色 -->\n        <attr name=\"cardBackgroundColor\" format=\"color\" />\n        <!-- Corner radius for CardView. -->\n        <!-- 边缘弧度数 -->\n        <attr name=\"cardCornerRadius\" format=\"dimension\" />\n        <!-- Elevation for CardView. -->\n        <!-- 高度 -->\n        <attr name=\"cardElevation\" format=\"dimension\" />\n        <!-- Maximum Elevation for CardView. -->\n        <!-- 最大高度 -->\n        <attr name=\"cardMaxElevation\" format=\"dimension\" />\n        <!-- Add padding in API v21+ as well to have the same measurements with previous versions. -->\n        <!-- 设置内边距，v21+的版本和之前的版本仍旧具有一样的计算方式 -->\n        <attr name=\"cardUseCompatPadding\" format=\"boolean\" />\n        <!-- Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners. -->\n        <!-- 在v20和之前的版本中添加内边距，这个属性是为了防止卡片内容和边角的重叠 -->\n        <attr name=\"cardPreventCornerOverlap\" format=\"boolean\" />\n        <!-- 下面是卡片边界距离内部的距离-->\n        <!-- Inner padding between the edges of the Card and children of the CardView. -->\n        <attr name=\"contentPadding\" format=\"dimension\" />\n        <!-- Inner padding between the left edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingLeft\" format=\"dimension\" />\n        <!-- Inner padding between the right edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingRight\" format=\"dimension\" />\n        <!-- Inner padding between the top edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingTop\" format=\"dimension\" />\n        <!-- Inner padding between the bottom edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingBottom\" format=\"dimension\" />\n    </declare-styleable>\n</resources>\n```\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/RecyclerViewCardView.md","raw":"title: RecyclerView+CardView使用\ndate: 2015-09-15 13:21:15\ntags: [Android,RecyclerView,CardView]\ncategory: Android\n---\n> RecyclerView和CardView使用\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n\n<!--more-->\n\n## gradle文件\n```js\n compile 'com.android.support:recyclerview-v7:22.2.0'\n compile 'com.android.support:cardview-v7:22.2.0'\n```\n## XML文件\n```js\n <android.support.v7.widget.RecyclerView\n  android:id=\"@+id/mRecyclerView\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\" />\n```\n## Activity中\n```java\n mRecyclerView = (RecyclerView) view.findViewById(R.id.mRecyclerView);\n  mRecyclerView.setLayoutManager(new LinearLayoutManager(this));//这里用线性显示 类似于listview\n//mRecyclerView.setLayoutManager(new GridLayoutManager(this, 2));//这里用线性宫格显示 类似于grid view\n//mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL));//这里用线性宫格显示 类似于瀑布流\n  mRecyclerView.setAdapter(new DayTextAdapter(getActivity(), parselist));\n```\n## DayTextAdapter\n```java\npublic class DayTextAdapter extends RecyclerView.Adapter<DayTextAdapter.ViewHolder> {\n    List<Map<String, String>> parselist;\n    private Activity activity;\n\n    public List<Map<String, String>> getParselist() {\n        return parselist;\n    }\n\n    public DayTextAdapter(Activity activity, List<Map<String, String>> parselist) {\n        this.activity = activity;\n        this.parselist = parselist;\n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.day_text_item, parent, false);\n        return new ViewHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        holder.title.setText(Html.fromHtml(\"<b>\" + parselist.get(position).get(\"title\") + \"</b>\"));\n        holder.content.setText(Html.fromHtml(\"发布时间：\"\n                + parselist.get(position).get(\"date\") + \"<br>\"\n                + parselist.get(position).get(\"postContent\")));\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return parselist.size();\n    }\n\n    public class ViewHolder extends RecyclerView.ViewHolder {\n        TextView title, content;\n\n        public ViewHolder(View itemView) {\n            super(itemView);\n            title = (TextView) itemView.findViewById(R.id.title);\n            content = (TextView) itemView.findViewById(R.id.content);\n\n\n            itemView.setOnClickListener(new View.OnClickListener() {\n\n                public void onClick(View v) {\n                   //点击事件\n                }\n            });\n        }\n    }\n}\n```\n## day_text_item.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n<android.support.v7.widget.CardView \n    android:id=\"@+id/card_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:layout_marginBottom=\"@dimen/card_view_margin_bottom\"\n    android:layout_marginLeft=\"10dp\"\n    android:layout_marginRight=\"10dp\"\n    android:layout_marginTop=\"10dp\"\n\tandroid:foreground=\"?attr/selectableItemBackground\"\n    card_view:cardBackgroundColor=\"?attr/itemBackgroundColor\"\n    card_view:cardCornerRadius=\"10dp\"\n    card_view:cardElevation=\"5dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:padding=\"15dip\">\n\n        <TextView\n            android:id=\"@+id/title\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"?attr/titleColor\"\n            android:textSize=\"@dimen/title\" />\n\n        <TextView\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"1dip\"\n            android:layout_marginTop=\"10dip\"\n            android:background=\"?attr/lineColor\" />\n\n        <TextView\n            android:id=\"@+id/content\"\n            android:layout_width=\"fill_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"10dip\"\n            android:ellipsize=\"end\"\n            android:lines=\"7\"\n            android:textColor=\"?attr/contentColor\"\n            android:textSize=\"@dimen/content\" />\n\n    </LinearLayout>\n</android.support.v7.widget.CardView>\n\n</LinearLayout>\n```\n说明：\nCardView中android:layout_marginBottom发现在5.0以上和以下效果不一样的。\nres文件下values文件dimens.xml\n```js\n<resources>\n    <dimen name=\"card_view_margin_bottom\">0dp</dimen>\n</resources>\n```\n再在res文件下建values-v21文件，并在dimens.xml\n```js\n<resources>\n    <dimen name=\"card_view_margin_bottom\">10dp</dimen>\n</resources>\n```\nCardView参数：\n```js\n<resources>\n    <declare-styleable name=\"CardView\">\n        <!-- Background color for CardView. -->\n        <!-- 背景色 -->\n        <attr name=\"cardBackgroundColor\" format=\"color\" />\n        <!-- Corner radius for CardView. -->\n        <!-- 边缘弧度数 -->\n        <attr name=\"cardCornerRadius\" format=\"dimension\" />\n        <!-- Elevation for CardView. -->\n        <!-- 高度 -->\n        <attr name=\"cardElevation\" format=\"dimension\" />\n        <!-- Maximum Elevation for CardView. -->\n        <!-- 最大高度 -->\n        <attr name=\"cardMaxElevation\" format=\"dimension\" />\n        <!-- Add padding in API v21+ as well to have the same measurements with previous versions. -->\n        <!-- 设置内边距，v21+的版本和之前的版本仍旧具有一样的计算方式 -->\n        <attr name=\"cardUseCompatPadding\" format=\"boolean\" />\n        <!-- Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners. -->\n        <!-- 在v20和之前的版本中添加内边距，这个属性是为了防止卡片内容和边角的重叠 -->\n        <attr name=\"cardPreventCornerOverlap\" format=\"boolean\" />\n        <!-- 下面是卡片边界距离内部的距离-->\n        <!-- Inner padding between the edges of the Card and children of the CardView. -->\n        <attr name=\"contentPadding\" format=\"dimension\" />\n        <!-- Inner padding between the left edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingLeft\" format=\"dimension\" />\n        <!-- Inner padding between the right edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingRight\" format=\"dimension\" />\n        <!-- Inner padding between the top edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingTop\" format=\"dimension\" />\n        <!-- Inner padding between the bottom edge of the Card and children of the CardView. -->\n        <attr name=\"contentPaddingBottom\" format=\"dimension\" />\n    </declare-styleable>\n</resources>\n```\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"RecyclerViewCardView","published":1,"updated":"2016-03-17T00:44:06.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbs00ahzspk57dntc7d","thumbnailImageUrl":null},{"title":"PullLoadMoreRecyclerView","date":"2015-07-23T23:56:29.000Z","_content":"实现RecyclerView下拉刷新和上拉加载更多以及RecyclerView线性、网格、瀑布流效果演示\n\n# 效果预览\n![](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/raw/master/screenshots/screenshots.gif)\n<!--more-->\n# 实例APP\n[魅族应用商店](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n\n# 使用方法\n## build.gradle文件\n```java\ndependencies {\n  compile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.3'\n}\n```\n## xml引用\n```js\n <com.wuxiaolong.pullloadmorerecyclerview.PullLoadMoreRecyclerView\n        android:id=\"@+id/pullLoadMoreRecyclerView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_margin=\"10dp\" />\n```\n## 设置线性布局\n```java\n mPullLoadMoreRecyclerView = (PullLoadMoreRecyclerView) view.findViewById(R.id.pullLoadMoreRecyclerView);\n mPullLoadMoreRecyclerView.setLinearLayout();\n```\n## 设置网格布局\n```java\n mPullLoadMoreRecyclerView.setGridLayout(2);//参数为列数\n```\n## 设置交错网格布局，即瀑布流效果\n```java\n mPullLoadMoreRecyclerView.setStaggeredGridLayout(2);//参数为列数\n```\n## 绑定适配器\n```java\n  mRecyclerViewAdapter = new RecyclerViewAdapter();\n  mPullLoadMoreRecyclerView.setAdapter(mRecyclerViewAdapter);\n\npublic class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.ViewHolder> {\n \n    public RecyclerViewAdapter() {\n       \n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_view_item, parent, false);\n        return new ViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n      \n    }\n\n    @Override\n    public int getItemCount() {\n        return 0;\n    }\n\n    public class ViewHolder extends RecyclerView.ViewHolder {     \n\n        public ViewHolder(View itemView) {\n            super(itemView);\n           \n        }\n    }\n}\n```\n## 调用下拉刷新和加载更多\n```java\n mPullLoadMoreRecyclerView.setOnPullLoadMoreListener(new PullLoadMoreRecyclerView.PullLoadMoreListener() {\n            @Override\n            public void onRefresh() {\n                \n            }\n\n            @Override\n            public void onLoadMore() {               \n\n            }\n        });\n```\n## 刷新结束\n```java\nmPullLoadMoreRecyclerView.setPullLoadMoreCompleted();\n```\n## 其他方法\n### 不需要下拉刷新\n```java\nmPullLoadMoreRecyclerView.setPullRefreshEnable(false);\n```\n### 设置下拉刷新颜色\n```java\n mPullLoadMoreRecyclerView.setColorSchemeResources(android.R.color.holo_red_dark,android.R.color.holo_blue_dark);\n```\n### 快速Top\n```java\n  mPullLoadMoreRecyclerView.scrollToTop();\n```\n# 源码地址\n[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)\n\n# 更多交流\nAndroid技术交流群\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n# 个人博客\n[http://wuxiaolong.me/](http://wuxiaolong.me/)\n\n# 作者微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n# License\nApache 2.0\n\n\n\n\n","source":"_posts/PullLoadMoreRecyclerView.md","raw":"title: PullLoadMoreRecyclerView\ndate: 2015-07-24 07:56:29 #发表日期，一般不改动\ncategories: Android\ntags: [Android,RecyclerView]\n---\n实现RecyclerView下拉刷新和上拉加载更多以及RecyclerView线性、网格、瀑布流效果演示\n\n# 效果预览\n![](https://github.com/WuXiaolong/PullLoadMoreRecyclerView/raw/master/screenshots/screenshots.gif)\n<!--more-->\n# 实例APP\n[魅族应用商店](http://app.meizu.com/apps/public/detail?package_name=com.xiaomolong.ufosay)\n\n# 使用方法\n## build.gradle文件\n```java\ndependencies {\n  compile 'com.wuxiaolong.pullloadmorerecyclerview:library:1.0.3'\n}\n```\n## xml引用\n```js\n <com.wuxiaolong.pullloadmorerecyclerview.PullLoadMoreRecyclerView\n        android:id=\"@+id/pullLoadMoreRecyclerView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_margin=\"10dp\" />\n```\n## 设置线性布局\n```java\n mPullLoadMoreRecyclerView = (PullLoadMoreRecyclerView) view.findViewById(R.id.pullLoadMoreRecyclerView);\n mPullLoadMoreRecyclerView.setLinearLayout();\n```\n## 设置网格布局\n```java\n mPullLoadMoreRecyclerView.setGridLayout(2);//参数为列数\n```\n## 设置交错网格布局，即瀑布流效果\n```java\n mPullLoadMoreRecyclerView.setStaggeredGridLayout(2);//参数为列数\n```\n## 绑定适配器\n```java\n  mRecyclerViewAdapter = new RecyclerViewAdapter();\n  mPullLoadMoreRecyclerView.setAdapter(mRecyclerViewAdapter);\n\npublic class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.ViewHolder> {\n \n    public RecyclerViewAdapter() {\n       \n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_view_item, parent, false);\n        return new ViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n      \n    }\n\n    @Override\n    public int getItemCount() {\n        return 0;\n    }\n\n    public class ViewHolder extends RecyclerView.ViewHolder {     \n\n        public ViewHolder(View itemView) {\n            super(itemView);\n           \n        }\n    }\n}\n```\n## 调用下拉刷新和加载更多\n```java\n mPullLoadMoreRecyclerView.setOnPullLoadMoreListener(new PullLoadMoreRecyclerView.PullLoadMoreListener() {\n            @Override\n            public void onRefresh() {\n                \n            }\n\n            @Override\n            public void onLoadMore() {               \n\n            }\n        });\n```\n## 刷新结束\n```java\nmPullLoadMoreRecyclerView.setPullLoadMoreCompleted();\n```\n## 其他方法\n### 不需要下拉刷新\n```java\nmPullLoadMoreRecyclerView.setPullRefreshEnable(false);\n```\n### 设置下拉刷新颜色\n```java\n mPullLoadMoreRecyclerView.setColorSchemeResources(android.R.color.holo_red_dark,android.R.color.holo_blue_dark);\n```\n### 快速Top\n```java\n  mPullLoadMoreRecyclerView.scrollToTop();\n```\n# 源码地址\n[PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView)\n\n# 更多交流\nAndroid技术交流群\n③群：370527306<a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n# 个人博客\n[http://wuxiaolong.me/](http://wuxiaolong.me/)\n\n# 作者微博\n[吴小龙同學](http://weibo.com/u/2175011601)\n\n# License\nApache 2.0\n\n\n\n\n","slug":"PullLoadMoreRecyclerView","published":1,"updated":"2016-03-17T00:44:06.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbu00anzspk8i5p44z2","thumbnailImageUrl":null},{"title":"SharedPreferencesUtil","date":"2015-08-19T01:28:49.000Z","_content":"\n>封装了SharedPreferences ，方便调用。\n\n<!--more-->\n```java\npublic class SharedPreferencesUtil {\n    public static String getString(Context context, String key,\n                                             final String defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getString(key, defaultValue);\n    }\n\n    public static void setString(Context context, final String key,\n                                           final String value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putString(key, value).apply();\n    }\n\n    public static boolean getBoolean(Context context, final String key,\n                                               final boolean defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getBoolean(key, defaultValue);\n    }\n\n    public static boolean hasKey(Context context, final String key) {\n        return PreferenceManager.getDefaultSharedPreferences(context).contains(\n                key);\n    }\n\n    public static void setBoolean(Context context, final String key,\n                                            final boolean value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putBoolean(key, value).apply();\n    }\n\n    public static void setInt(Context context, final String key,\n                                        final int value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putInt(key, value).apply();\n    }\n\n    public static int getInt(Context context, final String key,\n                                       final int defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getInt(key, defaultValue);\n    }\n\n    public static void setFloat(Context context, final String key,\n                                          final float value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putFloat(key, value).apply();\n    }\n\n    public static float getFloat(Context context, final String key,\n                                           final float defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getFloat(key, defaultValue);\n    }\n\n    public static void setLong(Context context, final String key,\n                                         final long value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putLong(key, value).apply();\n    }\n\n    public static long getLong(Context context, final String key,\n                                         final long defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getLong(key, defaultValue);\n    }\n\n    public static void clear(Context context,\n                                       final SharedPreferences p) {\n        final SharedPreferences.Editor editor = p.edit();\n        editor.clear();\n        editor.apply();\n    }\n}\n\n```","source":"_posts/PreferenceUtils.md","raw":"title: SharedPreferencesUtil\ndate: 2015-08-19 09:28:49\ntags: SharedPreferences\ncategory: Android\n---\n\n>封装了SharedPreferences ，方便调用。\n\n<!--more-->\n```java\npublic class SharedPreferencesUtil {\n    public static String getString(Context context, String key,\n                                             final String defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getString(key, defaultValue);\n    }\n\n    public static void setString(Context context, final String key,\n                                           final String value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putString(key, value).apply();\n    }\n\n    public static boolean getBoolean(Context context, final String key,\n                                               final boolean defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getBoolean(key, defaultValue);\n    }\n\n    public static boolean hasKey(Context context, final String key) {\n        return PreferenceManager.getDefaultSharedPreferences(context).contains(\n                key);\n    }\n\n    public static void setBoolean(Context context, final String key,\n                                            final boolean value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putBoolean(key, value).apply();\n    }\n\n    public static void setInt(Context context, final String key,\n                                        final int value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putInt(key, value).apply();\n    }\n\n    public static int getInt(Context context, final String key,\n                                       final int defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getInt(key, defaultValue);\n    }\n\n    public static void setFloat(Context context, final String key,\n                                          final float value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putFloat(key, value).apply();\n    }\n\n    public static float getFloat(Context context, final String key,\n                                           final float defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getFloat(key, defaultValue);\n    }\n\n    public static void setLong(Context context, final String key,\n                                         final long value) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        settings.edit().putLong(key, value).apply();\n    }\n\n    public static long getLong(Context context, final String key,\n                                         final long defaultValue) {\n        final SharedPreferences settings = PreferenceManager\n                .getDefaultSharedPreferences(context);\n        return settings.getLong(key, defaultValue);\n    }\n\n    public static void clear(Context context,\n                                       final SharedPreferences p) {\n        final SharedPreferences.Editor editor = p.edit();\n        editor.clear();\n        editor.apply();\n    }\n}\n\n```","slug":"PreferenceUtils","published":1,"updated":"2016-03-17T00:44:06.346Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbx00arzspkr6bagnt5","thumbnailImageUrl":null},{"title":"PioneeringRoad","date":"2015-08-28T04:24:42.000Z","_content":"\n* 好的产品，必须是产品设计、技术、运营的完美结合。\n* 有些初级的没细致研究，有些资深的东西又懂，或许就是一个原因：不够系统。\n","source":"_posts/PioneeringRoad.md","raw":"title: PioneeringRoad\ndate: 2015-08-28 12:24:42\ntags: PioneeringRoad\ncategory: Life\n---\n\n* 好的产品，必须是产品设计、技术、运营的完美结合。\n* 有些初级的没细致研究，有些资深的东西又懂，或许就是一个原因：不够系统。\n","slug":"PioneeringRoad","published":1,"updated":"2016-03-17T00:44:06.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrbz00avzspkfq9js8lf","thumbnailImageUrl":null},{"title":"github之Picasso使用","date":"2015-09-14T03:32:12.000Z","_content":">github地址：[https://github.com/square/picasso](https://github.com/square/picasso)\n\n## Gradle:\n```java\ncompile 'com.squareup.picasso:picasso:2.5.2'\n```\n## 加载网络图片\n```java\nPicasso.with(context).load(\"http://i.imgur.com/DvpvklR.png\").into(imageView);\n```\n<!--more-->\n## 加载图片，设置回调\n```java\nPicasso.with(context).load(imageUrl)\n                    .into(imageView, new Callback() {\n                        @Override\n                        public void onSuccess() {\n                           \n                        }\n\n                        @Override\n                        public void onError() {\n                            \n                        }\n                    });\n```\n## 设置图片尺寸\n```java\nPicasso.with(context)\n  .load(url)\n  .resize(50, 50)\n  .centerCrop()\n  .into(imageView)\n```\n\n## 设置预加载和错误图片\n```java\nPicasso.with(context)\n    .load(url)\n    .placeholder(R.drawable.user_placeholder)\n    .error(R.drawable.user_placeholder_error)\n    .into(imageView);\n```\n## 加载本地图片\n```java\nPicasso.with(context).load(R.drawable.landing_screen).into(imageView1);\nPicasso.with(context).load(\"file:///android_asset/DvpvklR.png\").into(imageView2);\nPicasso.with(context).load(new File(...)).into(imageView3);\n```","source":"_posts/Picasso.md","raw":"title: github之Picasso使用\ndate: 2015-09-14 11:32:12\ntags: [Android,Picasso,github]\ncategory: github\n---\n>github地址：[https://github.com/square/picasso](https://github.com/square/picasso)\n\n## Gradle:\n```java\ncompile 'com.squareup.picasso:picasso:2.5.2'\n```\n## 加载网络图片\n```java\nPicasso.with(context).load(\"http://i.imgur.com/DvpvklR.png\").into(imageView);\n```\n<!--more-->\n## 加载图片，设置回调\n```java\nPicasso.with(context).load(imageUrl)\n                    .into(imageView, new Callback() {\n                        @Override\n                        public void onSuccess() {\n                           \n                        }\n\n                        @Override\n                        public void onError() {\n                            \n                        }\n                    });\n```\n## 设置图片尺寸\n```java\nPicasso.with(context)\n  .load(url)\n  .resize(50, 50)\n  .centerCrop()\n  .into(imageView)\n```\n\n## 设置预加载和错误图片\n```java\nPicasso.with(context)\n    .load(url)\n    .placeholder(R.drawable.user_placeholder)\n    .error(R.drawable.user_placeholder_error)\n    .into(imageView);\n```\n## 加载本地图片\n```java\nPicasso.with(context).load(R.drawable.landing_screen).into(imageView1);\nPicasso.with(context).load(\"file:///android_asset/DvpvklR.png\").into(imageView2);\nPicasso.with(context).load(new File(...)).into(imageView3);\n```","slug":"Picasso","published":1,"updated":"2016-03-17T00:44:06.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrc100azzspkt0sa54n0","thumbnailImageUrl":null},{"title":"github之PhotoView使用","date":"2015-09-14T03:12:47.000Z","_content":">PhotoView使用在ViewPager中,github地址：[https://github.com/chrisbanes/PhotoView](https://github.com/chrisbanes/PhotoView)\n```js\n <com.android.xiaomolongstudio.danhuaer.view.HackyViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@id/ad_layout\" />\n```\n<!--more-->\nHackyViewPager.java\n```java\npublic class HackyViewPager extends ViewPager {\n\n\tprivate boolean isLocked;\n\t\n    public HackyViewPager(Context context) {\n        super(context);\n        isLocked = false;\n    }\n\n    public HackyViewPager(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        isLocked = false;\n    }\n\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n    \tif (!isLocked) {\n\t        try {\n\t            return super.onInterceptTouchEvent(ev);\n\t        } catch (IllegalArgumentException e) {\n\t            e.printStackTrace();\n\t            return false;\n\t        }\n    \t}\n    \treturn false;\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        return !isLocked && super.onTouchEvent(event);\n    }\n    \n\tpublic void toggleLock() {\n\t\tisLocked = !isLocked;\n\t}\n\n\tpublic void setLocked(boolean isLocked) {\n\t\tthis.isLocked = isLocked;\n\t}\n\n\tpublic boolean isLocked() {\n\t\treturn isLocked;\n\t}\n\t\n}\n```\n```java\n ViewPager mViewPager;\n mViewPager.setPageTransformer(true, new CardTransformer(0.8f));\n        mViewPager.setOffscreenPageLimit(2);\n        mViewPager.setAdapter(new ImageAdapter());\n        mViewPager.setCurrentItem(position);\n  \n```\nCardTransformer\n```java\n  /**\n     * Awesome Launcher-inspired page transformer\n     */\n    private static class CardTransformer implements ViewPager.PageTransformer {\n\n        private final float scaleAmount;\n\n        public CardTransformer(float scalingStart) {\n            scaleAmount = 1 - scalingStart;\n        }\n\n        @Override\n        public void transformPage(View page, float position) {\n            if (position >= 0f) {\n                final int w = page.getWidth();\n                float scaleFactor = 1 - scaleAmount * position;\n\n                page.setAlpha(1f - position);\n                page.setScaleX(scaleFactor);\n                page.setScaleY(scaleFactor);\n                page.setTranslationX(w * (1 - position) - w);\n            }\n        }\n\n    }\n```\n ImageAdapter\n```java\n private class ImageAdapter extends PagerAdapter {\n\n        @Override\n        public Object instantiateItem(ViewGroup container, int position) {\n            final String imageUrl = mHrefData.get(position);\n\n            final View view = LayoutInflater.from(EmotionImageDetailActivity.this).inflate(R.layout.emotion_image_detail_item, container, false);\n\n            final ProgressBar progressBar = (ProgressBar) view.findViewById(R.id.progressBar);\n            final TextView introduction = (TextView) view.findViewById(R.id.introduction);\n            introduction.setText(mIntroductionDataData.get(position));\n            final PhotoView imageView = (PhotoView) view.findViewById(R.id.imageView);                \n            Picasso.with(EmotionImageDetailActivity.this).load(imageUrl)\n                    .into(imageView, new Callback() {\n                        @Override\n                        public void onSuccess() {\n                            progressBar.setVisibility(View.GONE);\n                        }\n\n                        @Override\n                        public void onError() {\n                            progressBar.setVisibility(View.GONE);\n                        }\n                    });\n\n            container.addView(view, ViewGroup.LayoutParams.MATCH_PARENT,\n                    ViewGroup.LayoutParams.MATCH_PARENT);\n\n            return view;\n        }\n\n        @Override\n        public void destroyItem(ViewGroup container, int position, Object object) {\n            container.removeView((View) object);\n        }\n\n        @Override\n        public int getCount() {\n            return mHrefData != null ? mHrefData.size() : 0;\n        }\n\n        @Override\n        public boolean isViewFromObject(View view, Object object) {\n            return view == object;\n        }\n    }\n```\nemotion_image_detail_item.xml\n```js\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\">\n\n\n    <uk.co.senab.photoview.PhotoView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_centerInParent=\"true\" />\n\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_alignParentBottom=\"true\">\n\n        <TextView\n            android:id=\"@+id/introduction\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"top\"\n            android:padding=\"10dp\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"@dimen/text_content\" />\n    </ScrollView>\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\" />\n</RelativeLayout>\n\n```\n","source":"_posts/PhotoView.md","raw":"title: github之PhotoView使用\ndate: 2015-09-14 11:12:47\ntags: [Android,PhotoView,github]\ncategory: github\n---\n>PhotoView使用在ViewPager中,github地址：[https://github.com/chrisbanes/PhotoView](https://github.com/chrisbanes/PhotoView)\n```js\n <com.android.xiaomolongstudio.danhuaer.view.HackyViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_above=\"@id/ad_layout\" />\n```\n<!--more-->\nHackyViewPager.java\n```java\npublic class HackyViewPager extends ViewPager {\n\n\tprivate boolean isLocked;\n\t\n    public HackyViewPager(Context context) {\n        super(context);\n        isLocked = false;\n    }\n\n    public HackyViewPager(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        isLocked = false;\n    }\n\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n    \tif (!isLocked) {\n\t        try {\n\t            return super.onInterceptTouchEvent(ev);\n\t        } catch (IllegalArgumentException e) {\n\t            e.printStackTrace();\n\t            return false;\n\t        }\n    \t}\n    \treturn false;\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        return !isLocked && super.onTouchEvent(event);\n    }\n    \n\tpublic void toggleLock() {\n\t\tisLocked = !isLocked;\n\t}\n\n\tpublic void setLocked(boolean isLocked) {\n\t\tthis.isLocked = isLocked;\n\t}\n\n\tpublic boolean isLocked() {\n\t\treturn isLocked;\n\t}\n\t\n}\n```\n```java\n ViewPager mViewPager;\n mViewPager.setPageTransformer(true, new CardTransformer(0.8f));\n        mViewPager.setOffscreenPageLimit(2);\n        mViewPager.setAdapter(new ImageAdapter());\n        mViewPager.setCurrentItem(position);\n  \n```\nCardTransformer\n```java\n  /**\n     * Awesome Launcher-inspired page transformer\n     */\n    private static class CardTransformer implements ViewPager.PageTransformer {\n\n        private final float scaleAmount;\n\n        public CardTransformer(float scalingStart) {\n            scaleAmount = 1 - scalingStart;\n        }\n\n        @Override\n        public void transformPage(View page, float position) {\n            if (position >= 0f) {\n                final int w = page.getWidth();\n                float scaleFactor = 1 - scaleAmount * position;\n\n                page.setAlpha(1f - position);\n                page.setScaleX(scaleFactor);\n                page.setScaleY(scaleFactor);\n                page.setTranslationX(w * (1 - position) - w);\n            }\n        }\n\n    }\n```\n ImageAdapter\n```java\n private class ImageAdapter extends PagerAdapter {\n\n        @Override\n        public Object instantiateItem(ViewGroup container, int position) {\n            final String imageUrl = mHrefData.get(position);\n\n            final View view = LayoutInflater.from(EmotionImageDetailActivity.this).inflate(R.layout.emotion_image_detail_item, container, false);\n\n            final ProgressBar progressBar = (ProgressBar) view.findViewById(R.id.progressBar);\n            final TextView introduction = (TextView) view.findViewById(R.id.introduction);\n            introduction.setText(mIntroductionDataData.get(position));\n            final PhotoView imageView = (PhotoView) view.findViewById(R.id.imageView);                \n            Picasso.with(EmotionImageDetailActivity.this).load(imageUrl)\n                    .into(imageView, new Callback() {\n                        @Override\n                        public void onSuccess() {\n                            progressBar.setVisibility(View.GONE);\n                        }\n\n                        @Override\n                        public void onError() {\n                            progressBar.setVisibility(View.GONE);\n                        }\n                    });\n\n            container.addView(view, ViewGroup.LayoutParams.MATCH_PARENT,\n                    ViewGroup.LayoutParams.MATCH_PARENT);\n\n            return view;\n        }\n\n        @Override\n        public void destroyItem(ViewGroup container, int position, Object object) {\n            container.removeView((View) object);\n        }\n\n        @Override\n        public int getCount() {\n            return mHrefData != null ? mHrefData.size() : 0;\n        }\n\n        @Override\n        public boolean isViewFromObject(View view, Object object) {\n            return view == object;\n        }\n    }\n```\nemotion_image_detail_item.xml\n```js\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\">\n\n\n    <uk.co.senab.photoview.PhotoView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_centerInParent=\"true\" />\n\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:layout_alignParentBottom=\"true\">\n\n        <TextView\n            android:id=\"@+id/introduction\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"top\"\n            android:padding=\"10dp\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"@dimen/text_content\" />\n    </ScrollView>\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\" />\n</RelativeLayout>\n\n```\n","slug":"PhotoView","published":1,"updated":"2016-03-17T00:44:06.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrc300b5zspkudbi4sgg","thumbnailImageUrl":null},{"title":"Android Lollipop新特性-Palette","date":"2015-08-03T03:19:09.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/paletteScreenshots.gif)\n<!-- more -->\n## 使用方法\nPalette可以提取的颜色如下\n* Vibrant （有活力的）\n* Vibrant dark（有活力的 暗色）\n* Vibrant light（有活力的 亮色）\n* Muted （柔和的）\n* Muted dark（柔和的 暗色）\n* Muted light（柔和的 亮色）\n\n我们要想使用Palette，需要导入Palette的兼容库，Gradle 中添加下面依赖。\n```js\ncompile 'com.android.support:palette-v7:21.0.+'\n```\n\n## 实例代码\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <ImageView\n        android:id=\"@+id/image\"\n        android:layout_width=\"72dp\"\n        android:layout_height=\"72dp\" />\n\n    <Button\n        android:id=\"@+id/vibrant\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrant\" />\n\n    <Button\n        android:id=\"@+id/vibrantLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantLight\" />\n\n    <Button\n        android:id=\"@+id/vibrantDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantDark\" />\n\n    <Button\n        android:id=\"@+id/muted\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"muted\" />\n\n    <Button\n        android:id=\"@+id/mutedLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedLight\" />\n\n    <Button\n        android:id=\"@+id/mutedDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedDark\" />\n\n\n</LinearLayout>\n\n```\n\njava\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.graphics.Palette;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.ImageView;\n\n\npublic class MainActivity extends AppCompatActivity {\n    ImageView image;\n    ActionBar mActionBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        image = (ImageView) findViewById(R.id.image);\n        image.setImageResource(R.mipmap.dog);\n        final Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        mActionBar = getSupportActionBar();\n\n\n    }\n\n    public void onClick(View view) {\n        Palette.from(drawableToBitmap(image.getDrawable())).generate(new LPaletteAsyncListener(view));\n    }\n\n    /**\n     * 参考博客https://www.bignerdranch.com/blog/extracting-colors-to-a-palette-with-android-lollipop/\n     */\n    class LPaletteAsyncListener implements Palette.PaletteAsyncListener {\n        View view;\n\n        LPaletteAsyncListener(View view) {\n            this.view = view;\n        }\n\n        @Override\n        public void onGenerated(Palette palette) {\n            int paletteColor = 0;\n            switch (view.getId()) {\n                case R.id.vibrant:\n                    Palette.Swatch swatch = palette.getVibrantSwatch();\n                    paletteColor = palette.getVibrantColor(0x000000);\n//                    paletteColor = swatch.getRgb();\n                    break;\n                case R.id.vibrantLight:\n                    paletteColor = palette.getLightVibrantColor(0x000000);\n                    break;\n                case R.id.vibrantDark:\n                    paletteColor = palette.getDarkVibrantColor(0x000000);\n                    break;\n                case R.id.muted:\n                    paletteColor = palette.getMutedColor(0x000000);\n                    break;\n                case R.id.mutedLight:\n                    paletteColor = palette.getLightMutedColor(0x000000);\n                    break;\n                case R.id.mutedDark:\n                    paletteColor = palette.getDarkMutedColor(0x000000);\n                    break;\n\n\n            }\n            if (mActionBar != null) {\n                mActionBar.setBackgroundDrawable(new ColorDrawable(paletteColor));\n            }\n\n        }\n    }\n\n    public static Bitmap drawableToBitmap(Drawable drawable) {\n        if (drawable instanceof BitmapDrawable) {\n            return ((BitmapDrawable) drawable).getBitmap();\n        }\n\n        int width = drawable.getIntrinsicWidth();\n        width = width > 0 ? width : 1;\n        int height = drawable.getIntrinsicHeight();\n        height = height > 0 ? height : 1;\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n\n        return bitmap;\n    }\n\n}\n\n```\n\n或者\n```java\npublic static int getPaletteColor(Bitmap bitmap) {\n        int color = -12417291;\n        Palette palette = Palette.from(bitmap).generate();\n        Palette.Swatch vibrant = palette.getVibrantSwatch();\n        Palette.Swatch vibrantdark = palette.getDarkVibrantSwatch();\n        Palette.Swatch vibrantlight = palette.getLightVibrantSwatch();\n        Palette.Swatch Muted = palette.getMutedSwatch();\n        Palette.Swatch Muteddark = palette.getDarkMutedSwatch();\n        Palette.Swatch Mutedlight = palette.getLightMutedSwatch();\n\n        if (vibrant != null) {\n            color = vibrant.getRgb();\n        } else if (vibrantdark != null) {\n            color = vibrantdark.getRgb();\n        } else if (vibrantlight != null) {\n            color = vibrantlight.getRgb();\n        } else if (Muted != null) {\n            color = Muted.getRgb();\n        } else if (Muteddark != null) {\n            color = Muteddark.getRgb();\n        } else if (Mutedlight != null) {\n            color = Mutedlight.getRgb();\n        }\n        return color;\n    }\n```\n","source":"_posts/Palette.md","raw":"title: Android Lollipop新特性-Palette\ndate: 2015-08-03 11:19:09\ntags: [Android,Palette]\ncategory: Android\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/paletteScreenshots.gif)\n<!-- more -->\n## 使用方法\nPalette可以提取的颜色如下\n* Vibrant （有活力的）\n* Vibrant dark（有活力的 暗色）\n* Vibrant light（有活力的 亮色）\n* Muted （柔和的）\n* Muted dark（柔和的 暗色）\n* Muted light（柔和的 亮色）\n\n我们要想使用Palette，需要导入Palette的兼容库，Gradle 中添加下面依赖。\n```js\ncompile 'com.android.support:palette-v7:21.0.+'\n```\n\n## 实例代码\nxml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <ImageView\n        android:id=\"@+id/image\"\n        android:layout_width=\"72dp\"\n        android:layout_height=\"72dp\" />\n\n    <Button\n        android:id=\"@+id/vibrant\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrant\" />\n\n    <Button\n        android:id=\"@+id/vibrantLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantLight\" />\n\n    <Button\n        android:id=\"@+id/vibrantDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"vibrantDark\" />\n\n    <Button\n        android:id=\"@+id/muted\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"muted\" />\n\n    <Button\n        android:id=\"@+id/mutedLight\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedLight\" />\n\n    <Button\n        android:id=\"@+id/mutedDark\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"onClick\"\n        android:text=\"mutedDark\" />\n\n\n</LinearLayout>\n\n```\n\njava\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.os.Bundle;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.graphics.Palette;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.ImageView;\n\n\npublic class MainActivity extends AppCompatActivity {\n    ImageView image;\n    ActionBar mActionBar;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        image = (ImageView) findViewById(R.id.image);\n        image.setImageResource(R.mipmap.dog);\n        final Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        mActionBar = getSupportActionBar();\n\n\n    }\n\n    public void onClick(View view) {\n        Palette.from(drawableToBitmap(image.getDrawable())).generate(new LPaletteAsyncListener(view));\n    }\n\n    /**\n     * 参考博客https://www.bignerdranch.com/blog/extracting-colors-to-a-palette-with-android-lollipop/\n     */\n    class LPaletteAsyncListener implements Palette.PaletteAsyncListener {\n        View view;\n\n        LPaletteAsyncListener(View view) {\n            this.view = view;\n        }\n\n        @Override\n        public void onGenerated(Palette palette) {\n            int paletteColor = 0;\n            switch (view.getId()) {\n                case R.id.vibrant:\n                    Palette.Swatch swatch = palette.getVibrantSwatch();\n                    paletteColor = palette.getVibrantColor(0x000000);\n//                    paletteColor = swatch.getRgb();\n                    break;\n                case R.id.vibrantLight:\n                    paletteColor = palette.getLightVibrantColor(0x000000);\n                    break;\n                case R.id.vibrantDark:\n                    paletteColor = palette.getDarkVibrantColor(0x000000);\n                    break;\n                case R.id.muted:\n                    paletteColor = palette.getMutedColor(0x000000);\n                    break;\n                case R.id.mutedLight:\n                    paletteColor = palette.getLightMutedColor(0x000000);\n                    break;\n                case R.id.mutedDark:\n                    paletteColor = palette.getDarkMutedColor(0x000000);\n                    break;\n\n\n            }\n            if (mActionBar != null) {\n                mActionBar.setBackgroundDrawable(new ColorDrawable(paletteColor));\n            }\n\n        }\n    }\n\n    public static Bitmap drawableToBitmap(Drawable drawable) {\n        if (drawable instanceof BitmapDrawable) {\n            return ((BitmapDrawable) drawable).getBitmap();\n        }\n\n        int width = drawable.getIntrinsicWidth();\n        width = width > 0 ? width : 1;\n        int height = drawable.getIntrinsicHeight();\n        height = height > 0 ? height : 1;\n\n        Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());\n        drawable.draw(canvas);\n\n        return bitmap;\n    }\n\n}\n\n```\n\n或者\n```java\npublic static int getPaletteColor(Bitmap bitmap) {\n        int color = -12417291;\n        Palette palette = Palette.from(bitmap).generate();\n        Palette.Swatch vibrant = palette.getVibrantSwatch();\n        Palette.Swatch vibrantdark = palette.getDarkVibrantSwatch();\n        Palette.Swatch vibrantlight = palette.getLightVibrantSwatch();\n        Palette.Swatch Muted = palette.getMutedSwatch();\n        Palette.Swatch Muteddark = palette.getDarkMutedSwatch();\n        Palette.Swatch Mutedlight = palette.getLightMutedSwatch();\n\n        if (vibrant != null) {\n            color = vibrant.getRgb();\n        } else if (vibrantdark != null) {\n            color = vibrantdark.getRgb();\n        } else if (vibrantlight != null) {\n            color = vibrantlight.getRgb();\n        } else if (Muted != null) {\n            color = Muted.getRgb();\n        } else if (Muteddark != null) {\n            color = Muteddark.getRgb();\n        } else if (Mutedlight != null) {\n            color = Mutedlight.getRgb();\n        }\n        return color;\n    }\n```\n","slug":"Palette","published":1,"updated":"2016-03-17T00:44:06.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrc500bbzspkluscwlco","thumbnailImageUrl":null},{"title":"Android之画笔Paint和画布Canvas及实例练习圆角、刮刮卡、圆形头像、倒影效果","date":"2015-12-06T02:45:38.000Z","_content":"> 先了解画笔Paint和画布Canvas一些基本方法，然后学习画笔特效处理的高级属性PorterDuffXfermode、Shader、PathEffect，并实现圆角、刮刮卡、圆形头像、倒影效果\n\n<!--more-->\n\n# Paint\n\n* void  setARGB(int a, int r, int g, int b)  \n设置Paint对象颜色，参数一为alpha透明通道\n\n* void  setAlpha(int a)  \n设置alpha不透明度，范围为0~255\n\n* void  setAntiAlias(boolean aa)  \n是否抗锯齿\n\n* void  setColor(int color)  \n设置颜色，这里Android内部定义的有Color类包含了一些常见颜色定义\n\n* void  setFakeBoldText(boolean fakeBoldText)  \n设置伪粗体文本\n\n* void  setLinearText(boolean linearText)  \n设置线性文本\n\n* PathEffect  setPathEffect(PathEffect effect)  \n设置路径效果\n\n* Rasterizer  setRasterizer(Rasterizer rasterizer) \n设置光栅化\n\n* Shader  setShader(Shader shader)  \n设置阴影\n\n* void  setTextAlign(Paint.Align align) \n设置文本对齐\n\n* void  setTextScaleX(float scaleX) \n设置文本缩放倍数，1.0f为原始\n\n* void  setTextSize(float textSize)\n设置字体大小\n\n* Typeface  setTypeface(Typeface typeface)\n设置字体，Typeface包含了字体的类型，粗细，还有倾斜、颜色等。\n\n* void  setUnderlineText(boolean underlineText)  \n设置下划线\n\n# Canvas\n\n* void drawRect(RectF rect, Paint paint) \n绘制矩形，参数一为RectF一个区域\n\n* void drawRoundRect(@NonNull RectF rect, float rx, float ry, @NonNull Paint paint)\n绘制圆角矩形\n\n* void drawPath(Path path, Paint paint) \n绘制一个路径，参数一为Path路径对象\n\n* void  drawBitmap(Bitmap bitmap, Rect src, Rect dst, Paint paint)  \n贴图，参数一就是我们常规的Bitmap对象，参数二是源区域(这里是bitmap)，参数三是目标区域(应该在 canvas的位置和大小)，参数四是Paint画刷对象，因为用到了缩放和拉伸的可能，当原始Rect不等于目标Rect时性能将会有大幅损失。\n\n* void  drawLine(float startX, float startY, float stopX, float stopY, Paint paint) \n画线，参数一起始点的x轴位置，参数二起始点的y轴位置，参数三终点的x轴水平位置，参数四y轴垂直位置，最后一个参数为Paint画刷对象。\n\n* void  drawPoint(float x, float y, Paint paint) \n画点，参数一水平x轴，参数二垂直y轴，第三个参数为Paint对象。\n\n* void drawText(String text, float x, float y, Paint paint)  \n渲染文本，Canvas类除了上面的还可以描绘文字，参数一是String类型的文本，参数二x轴，参数三y轴，参数四是Paint对象。\n\n* void  drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint) \n在路径上绘制文本，相对于上面第二个参数是Path路径对象\n\n* void drawOval(@NonNull RectF oval, @NonNull Paint paint) \n绘制椭圆\n\n* drawCircle(float cx, float cy, float radius, @NonNull Paint paint) \n绘制圆\n\n* void drawArc(@NonNull RectF oval, float startAngle, float sweepAngle, boolean useCenter,\n            @NonNull Paint paint)\n绘制弧形、扇形\n\n# 实例练习\n\n## PorterDuffXfermode\nPorterDuffXfermode设置的是两个图层交集区域的显示方式（如下图），dst是先画的图形，而src是后画的图形。 \n当然，这些模式也不是经常使用的，用的最多的是，使用一张图片作为另一张图片的遮罩层，通过控制遮罩层的图形，来控制下面被遮罩图形的显示效果。其中最常用的就是通过SRC_IN（两层混合，保留重合部分的上面一层）、DST_IN（两层混合，保留重合部分的下面一层）模式来实现。其他模式如下图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas1.png)\n\n### 圆角\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas2.png)\n\n完整代码\n```java\npublic class PaintCanvas extends View {\n    public PaintCanvas(Context context) {\n        super(context);\n        initRoundRectImage();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initRoundRectImage();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initRoundRectImage();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        initRoundRectImage();\n    }\n\n    Bitmap mBitmap, mNewBitmap;\n\n    private void initRoundRectImage() {\n        mBitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n\n        mNewBitmap = Bitmap.createBitmap(mBitmap.getWidth(), mBitmap.getHeight(), Bitmap.Config.ARGB_8888);\n\n        Canvas canvas = new Canvas(mNewBitmap);\n        Paint paint = new Paint();\n        paint.setAntiAlias(true);\n        RectF rectF = new RectF(0, 0, mBitmap.getWidth(), mBitmap.getHeight());\n        canvas.drawRoundRect(rectF, 80, 80, paint);\n        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));\n        canvas.drawBitmap(mBitmap, 0, 0, paint);\n\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mNewBitmap, 0, 0, null);\n    }\n}\n```\n### 刮刮卡\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas3.gif)\n\n完整代码\n```java\npublic class PaintCanvas extends View {\n    public PaintCanvas(Context context) {\n        super(context);\n        init();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init();\n    }\n\n    private Bitmap mBgBitmap, mNewBitmap;\n    private Path mPath;\n    private Paint mPaint;\n    private Canvas mCanvas;\n\n    private void init() {\n        mPaint = new Paint();\n        mPaint.setAlpha(0);\n        mPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));//设置混合模式为DST_IN\n        mPaint.setStyle(Paint.Style.STROKE);\n        mPaint.setStrokeWidth(50);\n        mPaint.setStrokeJoin(Paint.Join.ROUND);//Paint.Join.ROUND和Paint.Cap.ROUND设置Paint笔触和连接处更加圆滑一点\n        mPaint.setStrokeCap(Paint.Cap.ROUND);\n\n        mBgBitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);//设置背景图\n        mNewBitmap = Bitmap.createBitmap(mBgBitmap.getWidth(), mBgBitmap.getHeight(), Bitmap.Config.ARGB_8888); //设置遮罩图\n\n        mCanvas = new Canvas(mNewBitmap);\n        mCanvas.drawColor(Color.GRAY);\n\n        mPath = new Path();\n\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                mPath.reset();\n                mPath.moveTo(event.getX(), event.getY());\n                break;\n            case MotionEvent.ACTION_MOVE:\n                mPath.lineTo(event.getX(), event.getY());\n                break;\n        }\n        mCanvas.drawPath(mPath, mPaint);\n        invalidate();\n        return true;\n\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mBgBitmap, 0, 0, null); //画背景\n        canvas.drawBitmap(mNewBitmap, 0, 0, null);//画灰色\n    }\n}\n```\n\n## Shader\nShader又被称为着色器、渲染器，主要用来实现一些列的渐变、渲染效果。Android中的Shader包括以下几种： \nBitmapShader——位图 \nLinearGradient——线性 \nRadialGrdient——光束 \nSweepGradient——梯度 \nComposeShader——混合\n\n除了第一个shader意外，其他的Shader都比较正常。而与其他的Shader所产生的渐变不同，BitmapShader产生的是一个图像，这个有点像Photoshop中的图像填充渐变。他的作用就是通过Paint对画布进行指定的Bitmap的填充，填充有以下几个模式可以选择。 \nCLAMP 重复最后一个颜色至最后 \nMIRROR 重复着色的图像水平或垂直方向已镜像方式填充会有翻转效果 \nREPEAT 重复着色的图像水平或垂直方向\n\n### 圆形头像\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas4.png)\n\n完整代码\n```java\n @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        BitmapShader bitmapShader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);\n        Paint paint = new Paint();\n        paint.setShader(bitmapShader);\n        canvas.drawCircle(300, 250, 200, paint);\n    }\n```\n\n### 倒影\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas5.png)\n完整代码\n```java\npublic class PaintCanvas extends View {\n    private Bitmap mSrcBitmap, mRefBitmap;\n    private Paint mPaint;\n    private PorterDuffXfermode mXfermode;\n\n    public PaintCanvas(Context context) {\n        super(context);\n        initXfermodeShader();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initXfermodeShader();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initXfermodeShader();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        initXfermodeShader();\n    }\n\n     private void initXfermodeShader() {\n        mSrcBitmap = BitmapFactory.decodeResource(getResources(),\n                R.mipmap.dog);\n\n        Matrix matrix = new Matrix();\n        matrix.setScale(1F, -1F);//实现图片垂直翻转\n\n        mRefBitmap = Bitmap.createBitmap(mSrcBitmap, 0, 0,\n                mSrcBitmap.getWidth(), mSrcBitmap.getHeight(), matrix, true);\n\n        mPaint = new Paint();\n        mPaint.setShader(new LinearGradient(0, mSrcBitmap.getHeight(), 0,\n                mSrcBitmap.getHeight() + mSrcBitmap.getHeight() / 2,\n                0x70ffffff, 0x00ffffff, Shader.TileMode.CLAMP));\n\n        mXfermode = new PorterDuffXfermode(PorterDuff.Mode.DST_IN);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n//        canvas.drawColor(Color.BLACK);\n        canvas.drawBitmap(mSrcBitmap, 0, 0, null);\n        canvas.drawBitmap(mRefBitmap, 0, mSrcBitmap.getHeight(), null);\n        mPaint.setXfermode(mXfermode);\n        // 绘制渐变效果矩形\n        canvas.drawRect(0, mSrcBitmap.getHeight(),\n                mRefBitmap.getWidth(), mSrcBitmap.getHeight() * 2, mPaint);\n        mPaint.setXfermode(null);\n    }\n}\n```\n### LinearGradient实现文字一闪一闪\n[http://wuxiaolong.me/2015/12/06/PaintCanvas/](http://wuxiaolong.me/2015/12/06/PaintCanvas/)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/PaintCanvas.md","raw":"title: Android之画笔Paint和画布Canvas及实例练习圆角、刮刮卡、圆形头像、倒影效果\ndate: 2015-12-06 10:45:38\ntags: [Paint,Canvas,PorterDuffXfermode,Shader]\ncategory: Android\n---\n> 先了解画笔Paint和画布Canvas一些基本方法，然后学习画笔特效处理的高级属性PorterDuffXfermode、Shader、PathEffect，并实现圆角、刮刮卡、圆形头像、倒影效果\n\n<!--more-->\n\n# Paint\n\n* void  setARGB(int a, int r, int g, int b)  \n设置Paint对象颜色，参数一为alpha透明通道\n\n* void  setAlpha(int a)  \n设置alpha不透明度，范围为0~255\n\n* void  setAntiAlias(boolean aa)  \n是否抗锯齿\n\n* void  setColor(int color)  \n设置颜色，这里Android内部定义的有Color类包含了一些常见颜色定义\n\n* void  setFakeBoldText(boolean fakeBoldText)  \n设置伪粗体文本\n\n* void  setLinearText(boolean linearText)  \n设置线性文本\n\n* PathEffect  setPathEffect(PathEffect effect)  \n设置路径效果\n\n* Rasterizer  setRasterizer(Rasterizer rasterizer) \n设置光栅化\n\n* Shader  setShader(Shader shader)  \n设置阴影\n\n* void  setTextAlign(Paint.Align align) \n设置文本对齐\n\n* void  setTextScaleX(float scaleX) \n设置文本缩放倍数，1.0f为原始\n\n* void  setTextSize(float textSize)\n设置字体大小\n\n* Typeface  setTypeface(Typeface typeface)\n设置字体，Typeface包含了字体的类型，粗细，还有倾斜、颜色等。\n\n* void  setUnderlineText(boolean underlineText)  \n设置下划线\n\n# Canvas\n\n* void drawRect(RectF rect, Paint paint) \n绘制矩形，参数一为RectF一个区域\n\n* void drawRoundRect(@NonNull RectF rect, float rx, float ry, @NonNull Paint paint)\n绘制圆角矩形\n\n* void drawPath(Path path, Paint paint) \n绘制一个路径，参数一为Path路径对象\n\n* void  drawBitmap(Bitmap bitmap, Rect src, Rect dst, Paint paint)  \n贴图，参数一就是我们常规的Bitmap对象，参数二是源区域(这里是bitmap)，参数三是目标区域(应该在 canvas的位置和大小)，参数四是Paint画刷对象，因为用到了缩放和拉伸的可能，当原始Rect不等于目标Rect时性能将会有大幅损失。\n\n* void  drawLine(float startX, float startY, float stopX, float stopY, Paint paint) \n画线，参数一起始点的x轴位置，参数二起始点的y轴位置，参数三终点的x轴水平位置，参数四y轴垂直位置，最后一个参数为Paint画刷对象。\n\n* void  drawPoint(float x, float y, Paint paint) \n画点，参数一水平x轴，参数二垂直y轴，第三个参数为Paint对象。\n\n* void drawText(String text, float x, float y, Paint paint)  \n渲染文本，Canvas类除了上面的还可以描绘文字，参数一是String类型的文本，参数二x轴，参数三y轴，参数四是Paint对象。\n\n* void  drawTextOnPath(String text, Path path, float hOffset, float vOffset, Paint paint) \n在路径上绘制文本，相对于上面第二个参数是Path路径对象\n\n* void drawOval(@NonNull RectF oval, @NonNull Paint paint) \n绘制椭圆\n\n* drawCircle(float cx, float cy, float radius, @NonNull Paint paint) \n绘制圆\n\n* void drawArc(@NonNull RectF oval, float startAngle, float sweepAngle, boolean useCenter,\n            @NonNull Paint paint)\n绘制弧形、扇形\n\n# 实例练习\n\n## PorterDuffXfermode\nPorterDuffXfermode设置的是两个图层交集区域的显示方式（如下图），dst是先画的图形，而src是后画的图形。 \n当然，这些模式也不是经常使用的，用的最多的是，使用一张图片作为另一张图片的遮罩层，通过控制遮罩层的图形，来控制下面被遮罩图形的显示效果。其中最常用的就是通过SRC_IN（两层混合，保留重合部分的上面一层）、DST_IN（两层混合，保留重合部分的下面一层）模式来实现。其他模式如下图：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas1.png)\n\n### 圆角\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas2.png)\n\n完整代码\n```java\npublic class PaintCanvas extends View {\n    public PaintCanvas(Context context) {\n        super(context);\n        initRoundRectImage();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initRoundRectImage();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initRoundRectImage();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        initRoundRectImage();\n    }\n\n    Bitmap mBitmap, mNewBitmap;\n\n    private void initRoundRectImage() {\n        mBitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n\n        mNewBitmap = Bitmap.createBitmap(mBitmap.getWidth(), mBitmap.getHeight(), Bitmap.Config.ARGB_8888);\n\n        Canvas canvas = new Canvas(mNewBitmap);\n        Paint paint = new Paint();\n        paint.setAntiAlias(true);\n        RectF rectF = new RectF(0, 0, mBitmap.getWidth(), mBitmap.getHeight());\n        canvas.drawRoundRect(rectF, 80, 80, paint);\n        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));\n        canvas.drawBitmap(mBitmap, 0, 0, paint);\n\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mNewBitmap, 0, 0, null);\n    }\n}\n```\n### 刮刮卡\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas3.gif)\n\n完整代码\n```java\npublic class PaintCanvas extends View {\n    public PaintCanvas(Context context) {\n        super(context);\n        init();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        init();\n    }\n\n    private Bitmap mBgBitmap, mNewBitmap;\n    private Path mPath;\n    private Paint mPaint;\n    private Canvas mCanvas;\n\n    private void init() {\n        mPaint = new Paint();\n        mPaint.setAlpha(0);\n        mPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));//设置混合模式为DST_IN\n        mPaint.setStyle(Paint.Style.STROKE);\n        mPaint.setStrokeWidth(50);\n        mPaint.setStrokeJoin(Paint.Join.ROUND);//Paint.Join.ROUND和Paint.Cap.ROUND设置Paint笔触和连接处更加圆滑一点\n        mPaint.setStrokeCap(Paint.Cap.ROUND);\n\n        mBgBitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);//设置背景图\n        mNewBitmap = Bitmap.createBitmap(mBgBitmap.getWidth(), mBgBitmap.getHeight(), Bitmap.Config.ARGB_8888); //设置遮罩图\n\n        mCanvas = new Canvas(mNewBitmap);\n        mCanvas.drawColor(Color.GRAY);\n\n        mPath = new Path();\n\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                mPath.reset();\n                mPath.moveTo(event.getX(), event.getY());\n                break;\n            case MotionEvent.ACTION_MOVE:\n                mPath.lineTo(event.getX(), event.getY());\n                break;\n        }\n        mCanvas.drawPath(mPath, mPaint);\n        invalidate();\n        return true;\n\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mBgBitmap, 0, 0, null); //画背景\n        canvas.drawBitmap(mNewBitmap, 0, 0, null);//画灰色\n    }\n}\n```\n\n## Shader\nShader又被称为着色器、渲染器，主要用来实现一些列的渐变、渲染效果。Android中的Shader包括以下几种： \nBitmapShader——位图 \nLinearGradient——线性 \nRadialGrdient——光束 \nSweepGradient——梯度 \nComposeShader——混合\n\n除了第一个shader意外，其他的Shader都比较正常。而与其他的Shader所产生的渐变不同，BitmapShader产生的是一个图像，这个有点像Photoshop中的图像填充渐变。他的作用就是通过Paint对画布进行指定的Bitmap的填充，填充有以下几个模式可以选择。 \nCLAMP 重复最后一个颜色至最后 \nMIRROR 重复着色的图像水平或垂直方向已镜像方式填充会有翻转效果 \nREPEAT 重复着色的图像水平或垂直方向\n\n### 圆形头像\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas4.png)\n\n完整代码\n```java\n @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.dog);\n        BitmapShader bitmapShader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);\n        Paint paint = new Paint();\n        paint.setShader(bitmapShader);\n        canvas.drawCircle(300, 250, 200, paint);\n    }\n```\n\n### 倒影\n效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas5.png)\n完整代码\n```java\npublic class PaintCanvas extends View {\n    private Bitmap mSrcBitmap, mRefBitmap;\n    private Paint mPaint;\n    private PorterDuffXfermode mXfermode;\n\n    public PaintCanvas(Context context) {\n        super(context);\n        initXfermodeShader();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initXfermodeShader();\n    }\n\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initXfermodeShader();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public PaintCanvas(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        initXfermodeShader();\n    }\n\n     private void initXfermodeShader() {\n        mSrcBitmap = BitmapFactory.decodeResource(getResources(),\n                R.mipmap.dog);\n\n        Matrix matrix = new Matrix();\n        matrix.setScale(1F, -1F);//实现图片垂直翻转\n\n        mRefBitmap = Bitmap.createBitmap(mSrcBitmap, 0, 0,\n                mSrcBitmap.getWidth(), mSrcBitmap.getHeight(), matrix, true);\n\n        mPaint = new Paint();\n        mPaint.setShader(new LinearGradient(0, mSrcBitmap.getHeight(), 0,\n                mSrcBitmap.getHeight() + mSrcBitmap.getHeight() / 2,\n                0x70ffffff, 0x00ffffff, Shader.TileMode.CLAMP));\n\n        mXfermode = new PorterDuffXfermode(PorterDuff.Mode.DST_IN);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n//        canvas.drawColor(Color.BLACK);\n        canvas.drawBitmap(mSrcBitmap, 0, 0, null);\n        canvas.drawBitmap(mRefBitmap, 0, mSrcBitmap.getHeight(), null);\n        mPaint.setXfermode(mXfermode);\n        // 绘制渐变效果矩形\n        canvas.drawRect(0, mSrcBitmap.getHeight(),\n                mRefBitmap.getWidth(), mSrcBitmap.getHeight() * 2, mPaint);\n        mPaint.setXfermode(null);\n    }\n}\n```\n### LinearGradient实现文字一闪一闪\n[http://wuxiaolong.me/2015/12/06/PaintCanvas/](http://wuxiaolong.me/2015/12/06/PaintCanvas/)\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"PaintCanvas","published":1,"updated":"2016-03-17T00:44:06.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrc800bgzspkju74ycr9","thumbnailImageUrl":null},{"title":"Android Design Support Library之NavigationView","date":"2015-11-17T05:31:07.000Z","_content":"# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n# 使用方法\nGradle 中添加下面依赖\n```xml\ncompile 'com.android.support:design:23.1.0'\n```\n\n# NavigationView\n之前Google也提出了使用DrawerLayout来实现导航抽屉。这次，在support library中，Google提供了NavigationView来实现导航菜单界面。\n```xml\n<android.support.v4.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     android:id=\"@+id/drawer_layout\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:fitsSystemWindows=\"true\">\n\n     <!-- Your contents -->\n\n     <android.support.design.widget.NavigationView\n         android:id=\"@+id/navigation\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"match_parent\"\n         android:layout_gravity=\"start\"\n         app:headerLayout=\"@layout/drawer_header\"\n         app:itemTextColor=\"@color/item_text_color\"\n         app:menu=\"@menu/drawer\" />\n </android.support.v4.widget.DrawerLayout>\n```\n app:itemTextColor、 app:itemBackground分别设置item字体和背景颜色\n \nmenu/drawer\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\t<!--group 可设置单选效果-->\n    <group android:checkableBehavior=\"single\">\n\n        <item\n            android:id=\"@+id/navigation_item_1\"\n            android:checked=\"true\"\n            android:icon=\"@drawable/abc_btn_radio_material\"\n            android:title=\"微言-晨读励志\" />\n\n        <item\n            android:id=\"@+id/navigation_item_2\"\n            android:icon=\"@drawable/abc_btn_radio_material\"\n            android:title=\"AndroidProgrammer\" />\n\n    </group>\n\n    <item android:title=\"其他\">\n\n        <menu>\n\n            <item\n                android:icon=\"@drawable/abc_btn_radio_material\"\n                android:title=\"Android\" />\n\n            <item\n                android:icon=\"@drawable/abc_btn_radio_material\"\n                android:title=\"IOS\" />\n        </menu>\n    </item>\n\n</menu>\n```\ndrawer_header.xml\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"200dp\"\n    android:background=\"?attr/colorPrimaryDark\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\">\n\n    <ImageView\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"@mipmap/ic_launcher\" />\n\n    <TextView\n        android:id=\"@+id/userName\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:gravity=\"center\"\n        android:text=\"@string/author\"\n        android:textColor=\"@color/white\"\n        android:textSize=\"20sp\" />\n\n</LinearLayout>\n```\ncolor/ item_text_color\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:color=\"@color/primary\" android:state_checked=\"true\" />\n    <item android:color=\"@color/black\" />\n</selector>\n```\n其中最重要的就是这两个属性：\n\napp:headerLayout \napp:menu\n\n通过这两个属性，我们可以非常方便的指定导航界面的头布局和菜单布局。\n```java\nprivate NavigationView navigationView;\nprivate void initNavigationViewHeader() {\n    navigationView = (NavigationView) findViewById(R.id.navigation);\n    //设置头像，布局app:headerLayout=\"@layout/drawer_header\"所指定的头布局\n    View view = navigationView.inflateHeaderView(R.layout.drawer_header);\n    TextView userName = (TextView) view.findViewById(R.id.userName);\n    userName.setText(R.string.author);\n    //View mNavigationViewHeader = View.inflate(MainActivity.this, R.layout.drawer_header, null);\n    //navigationView.addHeaderView(mNavigationViewHeader);//此方法在魅族note 1，头像显示不全\n    //菜单点击事件\n    navigationView.setNavigationItemSelectedListener(new NavigationItemSelected());\n}\n```\nNavigationItemSelected\n```java\nclass NavigationItemSelected implements NavigationView.OnNavigationItemSelectedListener {\n    @Override\n    public boolean onNavigationItemSelected(MenuItem menuItem) {\n        //mToolbar.setTitle(menuItem.getTitle());\n        mDrawerLayout.closeDrawers();\n        switch (menuItem.getItemId()) {\n            case R.id.navigation_item_1:\n                menuItem.setChecked(true);\n                return true;\n            case R.id.navigation_item_2:\n                menuItem.setChecked(true);\n                return true;\n            default:\n                return true;\n        }\n    }\n}\n```\n\n设置DrawerLayout\n```java\nprivate DrawerLayout mDrawerLayout;\nprivate void initDrawer() {\n    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n    mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, mToolbar, R.string.open, R.string.close) {\n        @Override\n        public void onDrawerOpened(View drawerView) {\n            super.onDrawerOpened(drawerView);\n        }\n        @Override\n        public void onDrawerClosed(View drawerView) {\n            super.onDrawerClosed(drawerView);\n        }\n    };\n    mDrawerToggle.syncState();\n    mDrawerLayout.addDrawerListener(mDrawerToggle);\n}\n```\n\n\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[https://developer.android.com/reference/android/support/design/widget/NavigationView.html](https://developer.android.com/reference/android/support/design/widget/NavigationView.html)","source":"_posts/NavigationView.md","raw":"title: Android Design Support Library之NavigationView\ndate: 2015-11-17 13:31:07\ntags: NavigationView\ncategory: SupportLibrary\n---\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n# 使用方法\nGradle 中添加下面依赖\n```xml\ncompile 'com.android.support:design:23.1.0'\n```\n\n# NavigationView\n之前Google也提出了使用DrawerLayout来实现导航抽屉。这次，在support library中，Google提供了NavigationView来实现导航菜单界面。\n```xml\n<android.support.v4.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     android:id=\"@+id/drawer_layout\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:fitsSystemWindows=\"true\">\n\n     <!-- Your contents -->\n\n     <android.support.design.widget.NavigationView\n         android:id=\"@+id/navigation\"\n         android:layout_width=\"wrap_content\"\n         android:layout_height=\"match_parent\"\n         android:layout_gravity=\"start\"\n         app:headerLayout=\"@layout/drawer_header\"\n         app:itemTextColor=\"@color/item_text_color\"\n         app:menu=\"@menu/drawer\" />\n </android.support.v4.widget.DrawerLayout>\n```\n app:itemTextColor、 app:itemBackground分别设置item字体和背景颜色\n \nmenu/drawer\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\t<!--group 可设置单选效果-->\n    <group android:checkableBehavior=\"single\">\n\n        <item\n            android:id=\"@+id/navigation_item_1\"\n            android:checked=\"true\"\n            android:icon=\"@drawable/abc_btn_radio_material\"\n            android:title=\"微言-晨读励志\" />\n\n        <item\n            android:id=\"@+id/navigation_item_2\"\n            android:icon=\"@drawable/abc_btn_radio_material\"\n            android:title=\"AndroidProgrammer\" />\n\n    </group>\n\n    <item android:title=\"其他\">\n\n        <menu>\n\n            <item\n                android:icon=\"@drawable/abc_btn_radio_material\"\n                android:title=\"Android\" />\n\n            <item\n                android:icon=\"@drawable/abc_btn_radio_material\"\n                android:title=\"IOS\" />\n        </menu>\n    </item>\n\n</menu>\n```\ndrawer_header.xml\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"200dp\"\n    android:background=\"?attr/colorPrimaryDark\"\n    android:gravity=\"center\"\n    android:orientation=\"vertical\">\n\n    <ImageView\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\"\n        android:layout_marginTop=\"10dp\"\n        android:background=\"@mipmap/ic_launcher\" />\n\n    <TextView\n        android:id=\"@+id/userName\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"10dp\"\n        android:gravity=\"center\"\n        android:text=\"@string/author\"\n        android:textColor=\"@color/white\"\n        android:textSize=\"20sp\" />\n\n</LinearLayout>\n```\ncolor/ item_text_color\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:color=\"@color/primary\" android:state_checked=\"true\" />\n    <item android:color=\"@color/black\" />\n</selector>\n```\n其中最重要的就是这两个属性：\n\napp:headerLayout \napp:menu\n\n通过这两个属性，我们可以非常方便的指定导航界面的头布局和菜单布局。\n```java\nprivate NavigationView navigationView;\nprivate void initNavigationViewHeader() {\n    navigationView = (NavigationView) findViewById(R.id.navigation);\n    //设置头像，布局app:headerLayout=\"@layout/drawer_header\"所指定的头布局\n    View view = navigationView.inflateHeaderView(R.layout.drawer_header);\n    TextView userName = (TextView) view.findViewById(R.id.userName);\n    userName.setText(R.string.author);\n    //View mNavigationViewHeader = View.inflate(MainActivity.this, R.layout.drawer_header, null);\n    //navigationView.addHeaderView(mNavigationViewHeader);//此方法在魅族note 1，头像显示不全\n    //菜单点击事件\n    navigationView.setNavigationItemSelectedListener(new NavigationItemSelected());\n}\n```\nNavigationItemSelected\n```java\nclass NavigationItemSelected implements NavigationView.OnNavigationItemSelectedListener {\n    @Override\n    public boolean onNavigationItemSelected(MenuItem menuItem) {\n        //mToolbar.setTitle(menuItem.getTitle());\n        mDrawerLayout.closeDrawers();\n        switch (menuItem.getItemId()) {\n            case R.id.navigation_item_1:\n                menuItem.setChecked(true);\n                return true;\n            case R.id.navigation_item_2:\n                menuItem.setChecked(true);\n                return true;\n            default:\n                return true;\n        }\n    }\n}\n```\n\n设置DrawerLayout\n```java\nprivate DrawerLayout mDrawerLayout;\nprivate void initDrawer() {\n    mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n    mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, mToolbar, R.string.open, R.string.close) {\n        @Override\n        public void onDrawerOpened(View drawerView) {\n            super.onDrawerOpened(drawerView);\n        }\n        @Override\n        public void onDrawerClosed(View drawerView) {\n            super.onDrawerClosed(drawerView);\n        }\n    };\n    mDrawerToggle.syncState();\n    mDrawerLayout.addDrawerListener(mDrawerToggle);\n}\n```\n\n\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidProgrammerLogo.jpg)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[https://developer.android.com/reference/android/support/design/widget/NavigationView.html](https://developer.android.com/reference/android/support/design/widget/NavigationView.html)","slug":"NavigationView","published":1,"updated":"2016-08-05T06:39:20.075Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcb00bpzspk4p8e8bfo","thumbnailImageUrl":null},{"title":"我的编码嗜好","date":"2016-03-13T02:06:00.000Z","_content":"> 如果有个好的工具或习惯，会让你编码效率事半功倍。我的个人编码嗜好，内容包括Chrome插件、Android studio插件和快捷键使用、手机录屏软件等。\n\n# Chrome插件\n## AdBlock/广告终结者\n作用：当你浏览网页时，被满屏的广告所扰，这个插件让你的网页更干净更清爽。\n<!--more-->\n下载地址：\n[AdBlock](https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom?utm_source=chrome-app-launcher-info-dialog)\n[广告终结者](https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?utm_source=chrome-app-launcher-info-dialog)\n\n## JSONView\n作用：调试接口，我一般会在浏览器打开看看数据，但是打开却是一堆密密麻麻的，那这个插件，你必不可少，支持get请求方式。\n下载地址：[JSONView](https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby0.png)\n\n## Postman\n作用：你如果调试接口，这个插件，你必不可少，可以支持get、post、put等调试。\n下载地址：[Postman](https://chrome.google.com/webstore/detail/fhbjgbiflinjbdggehcddcbncdddomop?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby1.png)\n\n## Vysor \n作用：PC上直接同步你的手机，配合LICEcap（下文介绍）使用，效果更佳。\n下载地址：[Vysor](https://chrome.google.com/webstore/detail/gidgenkbbabolejbgbpnhbimgjbffefm?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby2.png)\n# Android studio插件\n## Genymotion\n作用：Android模拟器，运行速度堪比手机，Android自带的模拟器卡成翔。\n安装步骤：Android studio-Settings-Plugins-搜Genymotion-Install Plugin\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby3.png)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby4.png)\n\n## ButterKnife\n作用：ButterKnife注解想必都用过，安装ButterKnife插件，快速生成findViewById。\n安装步骤：Android studio-Settings-Plugins-搜ButterKnife-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby5.gif)\n\n## Gsonformat\n作用：一般接口返回数据后要建立自己的bean，Gsonformat帮助你快速生成，不用一条一条去写。\n安装步骤：Android studio-Settings-Plugins-搜Gsonformat-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby6.gif)\n\n# Android studio快捷键使用\nAndroid studio出beta版，我就开始尝鲜，但快捷键还一时难以适应，于是就把Android studio的快捷键设置成eclipse（[Android Studio快捷键设置成跟Eclipse一样](http://wuxiaolong.me/2014/10/21/Android-Studio-shortcut-keys-arranged-like-Eclipse/)）。\n1. 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n2. Alt+insert\n快捷设置set和get方法或实现某个方法\n3. Ctrl+alt+方向键下\n快速复制一行\n4. alt+方向键下\n内容下移一行\n5. ctrl+shift+t \n找某个类\n6. alt+选择代码块进行复制\n7. ctrl+f\n可以选中代码块替换\n8. Ctrl+h\n全文搜索\n9. Shift+Alt+r\n更改变量名字\n10. Alt+Shift+M\n选择代码块，生成一个方法\n11. Editor标签-other选择勾选“show quick doc on mouse move”选项，像eclipse通过鼠标显示悬浮提示\n12. Editor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示\n13. Ctrl+G/Ctrl+鼠标\n查看某个方法或变量哪里使用到了，Ctrl+鼠标功能类似\n\n# 手机录屏软件\n## LICEcap\n作用：PC端动态截屏，小巧功能强大。\n下载地址：[LICEcap](http://www.cockos.com/licecap/)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby7.png)\n\n# 其他\n## Notepad++\n文本编辑器，我很喜欢。\n\n## SourceTree\n版本控制器，如果不喜欢命令行，这个还是不错的选择。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/MyCodeHobby.md","raw":"title: 我的编码嗜好\ndate: 2016-03-13 10:06:00\ntags: code\ncategory: Life\n---\n> 如果有个好的工具或习惯，会让你编码效率事半功倍。我的个人编码嗜好，内容包括Chrome插件、Android studio插件和快捷键使用、手机录屏软件等。\n\n# Chrome插件\n## AdBlock/广告终结者\n作用：当你浏览网页时，被满屏的广告所扰，这个插件让你的网页更干净更清爽。\n<!--more-->\n下载地址：\n[AdBlock](https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom?utm_source=chrome-app-launcher-info-dialog)\n[广告终结者](https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?utm_source=chrome-app-launcher-info-dialog)\n\n## JSONView\n作用：调试接口，我一般会在浏览器打开看看数据，但是打开却是一堆密密麻麻的，那这个插件，你必不可少，支持get请求方式。\n下载地址：[JSONView](https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby0.png)\n\n## Postman\n作用：你如果调试接口，这个插件，你必不可少，可以支持get、post、put等调试。\n下载地址：[Postman](https://chrome.google.com/webstore/detail/fhbjgbiflinjbdggehcddcbncdddomop?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby1.png)\n\n## Vysor \n作用：PC上直接同步你的手机，配合LICEcap（下文介绍）使用，效果更佳。\n下载地址：[Vysor](https://chrome.google.com/webstore/detail/gidgenkbbabolejbgbpnhbimgjbffefm?utm_source=chrome-app-launcher-info-dialog)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby2.png)\n# Android studio插件\n## Genymotion\n作用：Android模拟器，运行速度堪比手机，Android自带的模拟器卡成翔。\n安装步骤：Android studio-Settings-Plugins-搜Genymotion-Install Plugin\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby3.png)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby4.png)\n\n## ButterKnife\n作用：ButterKnife注解想必都用过，安装ButterKnife插件，快速生成findViewById。\n安装步骤：Android studio-Settings-Plugins-搜ButterKnife-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby5.gif)\n\n## Gsonformat\n作用：一般接口返回数据后要建立自己的bean，Gsonformat帮助你快速生成，不用一条一条去写。\n安装步骤：Android studio-Settings-Plugins-搜Gsonformat-Install Plugin\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby6.gif)\n\n# Android studio快捷键使用\nAndroid studio出beta版，我就开始尝鲜，但快捷键还一时难以适应，于是就把Android studio的快捷键设置成eclipse（[Android Studio快捷键设置成跟Eclipse一样](http://wuxiaolong.me/2014/10/21/Android-Studio-shortcut-keys-arranged-like-Eclipse/)）。\n1. 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n2. Alt+insert\n快捷设置set和get方法或实现某个方法\n3. Ctrl+alt+方向键下\n快速复制一行\n4. alt+方向键下\n内容下移一行\n5. ctrl+shift+t \n找某个类\n6. alt+选择代码块进行复制\n7. ctrl+f\n可以选中代码块替换\n8. Ctrl+h\n全文搜索\n9. Shift+Alt+r\n更改变量名字\n10. Alt+Shift+M\n选择代码块，生成一个方法\n11. Editor标签-other选择勾选“show quick doc on mouse move”选项，像eclipse通过鼠标显示悬浮提示\n12. Editor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示\n13. Ctrl+G/Ctrl+鼠标\n查看某个方法或变量哪里使用到了，Ctrl+鼠标功能类似\n\n# 手机录屏软件\n## LICEcap\n作用：PC端动态截屏，小巧功能强大。\n下载地址：[LICEcap](http://www.cockos.com/licecap/)\n效果预览：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MyCodeHobby7.png)\n\n# 其他\n## Notepad++\n文本编辑器，我很喜欢。\n\n## SourceTree\n版本控制器，如果不喜欢命令行，这个还是不错的选择。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"MyCodeHobby","published":1,"updated":"2016-04-15T02:22:49.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcc00btzspk0qj92pgk","thumbnailImageUrl":null},{"title":"Android事件传递机制分析","date":"2015-12-19T08:17:02.000Z","_content":"# 准备阶段\n为了方便了解整个事件传递的机制，我们设计一个场景：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MotionEvent.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n角色：\n一个经理：MotionEventViewGroupA，最外层的ViewGroupA；\n一个组长：MotionEventViewGroupB，中间的ViewGroupB；\n一个你：MotionEventViewC，最底层的码农。\n模拟：\n经理分派任务，下属处理这个任务的过程。\n<!--more-->\nMotionEventViewGroupA\n```java\npublic class MotionEventViewGroupA extends LinearLayout {\n    public MotionEventViewGroupA(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewGroupA(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewGroupA(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA dispatchTouchEventA\");\n        return super.dispatchTouchEvent(ev);\n    }\n    \n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA onInterceptTouchEventA\");\n        return super.onInterceptTouchEvent(ev);\n    }   \n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA onTouchEventA\");\n        return super.onTouchEvent(event);\n    }\n\n}\n```\nMotionEventViewGroupB \n```java\npublic class MotionEventViewGroupB extends LinearLayout {\n\n    public MotionEventViewGroupB(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewGroupB(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewGroupB(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB dispatchTouchEventB\");\n        return super.dispatchTouchEvent(ev);\n    }\n    \n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB onInterceptTouchEventB\");\n        return super.onInterceptTouchEvent(ev);\n    } \n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB onTouchEventB\");\n        return super.onTouchEvent(event);\n    }\n}\n```\nMotionEventViewC \n```java\npublic class MotionEventViewC extends View {\n    public MotionEventViewC(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewC(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewC(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewC dispatchTouchEventC\");\n        return super.dispatchTouchEvent(ev);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewC onTouchEventC\");\n        return super.onTouchEvent(event);\n    }\n}\n\n```\nxml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.wuxiaolong.apksample.MotionEventActivity\">\n\n    <com.wuxiaolong.apksample.MotionEventViewGroupA\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"center\"\n        android:background=\"@android:color/holo_orange_dark\"\n        android:gravity=\"center\">\n\n        <com.wuxiaolong.apksample.MotionEventViewGroupB\n            android:layout_width=\"300dp\"\n            android:layout_height=\"300dp\"\n            android:background=\"@android:color/holo_purple\"\n            android:gravity=\"center\">\n\n            <com.wuxiaolong.apksample.MotionEventViewC\n                android:layout_width=\"200dp\"\n                android:layout_height=\"200dp\"\n                android:background=\"@android:color/holo_green_dark\"\n                android:gravity=\"center\" />\n        </com.wuxiaolong.apksample.MotionEventViewGroupB>\n    </com.wuxiaolong.apksample.MotionEventViewGroupA>\n</FrameLayout>\n\n```\nViewGroup级别比较高，比View多一个onInterceptTouchEvent（拦截）。\n\n# 情景分析\n## 不做任何修改，点击MotionEventViewC \n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewC dispatchTouchEventC\n MotionEventViewC onTouchEventC\n MotionEventViewGroupB onTouchEventB\n MotionEventViewGroupA onTouchEventA\n```\nlog信息看出，正常情况，事件传递顺序：\n经理  -->  组长  -->  你，先执行dispatchTouchEvent（分发），再执行onInterceptTouchEvent（拦截）\n\n事件处理顺序：\n你  -->  组长  -->  经理，事件处理都是执行onTouchEvent（处理）。\n\n事件传递返回值：true，拦截，交给自己的onTouchEvent处理；false，不拦截，传给下属。\n\n事件处理返回值：true，自己搞定，不用上报上司；false，上报上司处理。\n\n初始返回都是false。\n\n事件传递，dispatchTouchEvent一般不太会改写，只关心onInterceptTouchEvent。\n\n## 经理觉得这个任务太简单，自己处理\n即MotionEventViewGroupA里onInterceptTouchEvent返回true，我们看下log信息：\n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupA onTouchEventA\n```\n经理一个人干完了，没下面的人什么事了。\n\n## 组长觉得这个任务太简单，自己处理\n即MotionEventViewGroupB里onInterceptTouchEvent返回true，我们看下log信息：\n```js \n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewGroupB onTouchEventB\n MotionEventViewGroupA onTouchEventA\n```\n组长干完了活，没你啥事了。以上对事件的分发、拦截的分析。\n\n## 你迫于压力，辞职不干了，任务闲置\n即MotionEventViewC里onTouchEvent返回true，我们看下log信息：\n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewC dispatchTouchEventC\n MotionEventViewC onTouchEventC\n```\n事件处理到你这里就结束了。\n\n## 组长觉得你任务完成太烂，不敢上报\n即MotionEventViewB里onTouchEvent返回true，我们看下log信息：\n```js\nMotionEventViewGroupA dispatchTouchEventA\nMotionEventViewGroupA onInterceptTouchEventA\nMotionEventViewGroupB dispatchTouchEventB\nMotionEventViewGroupB onInterceptTouchEventB\nMotionEventViewC dispatchTouchEventC\nMotionEventViewC onTouchEventC\nMotionEventViewGroupB onTouchEventB\n```\n事件处理经过你和组长，到组长那里就结束了。\n\n`是不是这样的分析让你对事件的传递不再是一头雾水了，大赞医生《Android群英传》。`\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/MotionEvent.md","raw":"title: Android事件传递机制分析\ndate: 2015-12-19 16:17:02\ntags: MotionEvent\ncategory: CustomView\n---\n# 准备阶段\n为了方便了解整个事件传递的机制，我们设计一个场景：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/MotionEvent.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n角色：\n一个经理：MotionEventViewGroupA，最外层的ViewGroupA；\n一个组长：MotionEventViewGroupB，中间的ViewGroupB；\n一个你：MotionEventViewC，最底层的码农。\n模拟：\n经理分派任务，下属处理这个任务的过程。\n<!--more-->\nMotionEventViewGroupA\n```java\npublic class MotionEventViewGroupA extends LinearLayout {\n    public MotionEventViewGroupA(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewGroupA(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewGroupA(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA dispatchTouchEventA\");\n        return super.dispatchTouchEvent(ev);\n    }\n    \n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA onInterceptTouchEventA\");\n        return super.onInterceptTouchEvent(ev);\n    }   \n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewGroupA onTouchEventA\");\n        return super.onTouchEvent(event);\n    }\n\n}\n```\nMotionEventViewGroupB \n```java\npublic class MotionEventViewGroupB extends LinearLayout {\n\n    public MotionEventViewGroupB(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewGroupB(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewGroupB(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB dispatchTouchEventB\");\n        return super.dispatchTouchEvent(ev);\n    }\n    \n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB onInterceptTouchEventB\");\n        return super.onInterceptTouchEvent(ev);\n    } \n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewGroupB onTouchEventB\");\n        return super.onTouchEvent(event);\n    }\n}\n```\nMotionEventViewC \n```java\npublic class MotionEventViewC extends View {\n    public MotionEventViewC(Context context) {\n        super(context);\n    }\n\n    public MotionEventViewC(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public MotionEventViewC(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override\n    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"wxl\", \"MotionEventViewC dispatchTouchEventC\");\n        return super.dispatchTouchEvent(ev);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        Log.e(\"wxl\", \"MotionEventViewC onTouchEventC\");\n        return super.onTouchEvent(event);\n    }\n}\n\n```\nxml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.wuxiaolong.apksample.MotionEventActivity\">\n\n    <com.wuxiaolong.apksample.MotionEventViewGroupA\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"center\"\n        android:background=\"@android:color/holo_orange_dark\"\n        android:gravity=\"center\">\n\n        <com.wuxiaolong.apksample.MotionEventViewGroupB\n            android:layout_width=\"300dp\"\n            android:layout_height=\"300dp\"\n            android:background=\"@android:color/holo_purple\"\n            android:gravity=\"center\">\n\n            <com.wuxiaolong.apksample.MotionEventViewC\n                android:layout_width=\"200dp\"\n                android:layout_height=\"200dp\"\n                android:background=\"@android:color/holo_green_dark\"\n                android:gravity=\"center\" />\n        </com.wuxiaolong.apksample.MotionEventViewGroupB>\n    </com.wuxiaolong.apksample.MotionEventViewGroupA>\n</FrameLayout>\n\n```\nViewGroup级别比较高，比View多一个onInterceptTouchEvent（拦截）。\n\n# 情景分析\n## 不做任何修改，点击MotionEventViewC \n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewC dispatchTouchEventC\n MotionEventViewC onTouchEventC\n MotionEventViewGroupB onTouchEventB\n MotionEventViewGroupA onTouchEventA\n```\nlog信息看出，正常情况，事件传递顺序：\n经理  -->  组长  -->  你，先执行dispatchTouchEvent（分发），再执行onInterceptTouchEvent（拦截）\n\n事件处理顺序：\n你  -->  组长  -->  经理，事件处理都是执行onTouchEvent（处理）。\n\n事件传递返回值：true，拦截，交给自己的onTouchEvent处理；false，不拦截，传给下属。\n\n事件处理返回值：true，自己搞定，不用上报上司；false，上报上司处理。\n\n初始返回都是false。\n\n事件传递，dispatchTouchEvent一般不太会改写，只关心onInterceptTouchEvent。\n\n## 经理觉得这个任务太简单，自己处理\n即MotionEventViewGroupA里onInterceptTouchEvent返回true，我们看下log信息：\n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupA onTouchEventA\n```\n经理一个人干完了，没下面的人什么事了。\n\n## 组长觉得这个任务太简单，自己处理\n即MotionEventViewGroupB里onInterceptTouchEvent返回true，我们看下log信息：\n```js \n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewGroupB onTouchEventB\n MotionEventViewGroupA onTouchEventA\n```\n组长干完了活，没你啥事了。以上对事件的分发、拦截的分析。\n\n## 你迫于压力，辞职不干了，任务闲置\n即MotionEventViewC里onTouchEvent返回true，我们看下log信息：\n```js\n MotionEventViewGroupA dispatchTouchEventA\n MotionEventViewGroupA onInterceptTouchEventA\n MotionEventViewGroupB dispatchTouchEventB\n MotionEventViewGroupB onInterceptTouchEventB\n MotionEventViewC dispatchTouchEventC\n MotionEventViewC onTouchEventC\n```\n事件处理到你这里就结束了。\n\n## 组长觉得你任务完成太烂，不敢上报\n即MotionEventViewB里onTouchEvent返回true，我们看下log信息：\n```js\nMotionEventViewGroupA dispatchTouchEventA\nMotionEventViewGroupA onInterceptTouchEventA\nMotionEventViewGroupB dispatchTouchEventB\nMotionEventViewGroupB onInterceptTouchEventB\nMotionEventViewC dispatchTouchEventC\nMotionEventViewC onTouchEventC\nMotionEventViewGroupB onTouchEventB\n```\n事件处理经过你和组长，到组长那里就结束了。\n\n`是不是这样的分析让你对事件的传递不再是一头雾水了，大赞医生《Android群英传》。`\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"MotionEvent","published":1,"updated":"2016-08-05T06:39:20.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcf00bxzspkezdarpzo","thumbnailImageUrl":null},{"title":"Android之LoadMoreListView","date":"2015-04-27T16:00:00.000Z","_content":"\njava\n\n```java\n/**\n * Android load more ListView when scroll down.\n * \n * @author Charon Chui\n */\npublic class LoadMoreListView extends ListView {\n\tprotected static final String TAG = \"LoadMoreListView\";\n\tprivate View mFooterView;\n\tprivate OnScrollListener mOnScrollListener;\n\tprivate OnLoadMoreListener mOnLoadMoreListener;\n\n\t/**\n\t * If is loading now.\n\t */\n\tprivate boolean mIsLoading;\n\n\tprivate int mCurrentScrollState;\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs, int defStyle) {\n\t\tsuper(context, attrs, defStyle);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context) {\n\t\tsuper(context);\n\t\tinit(context);\n\t}\n\n\tprivate void init(Context context) {\n\t\tmFooterView = View.inflate(context, R.layout.load_more_footer, null);\n\t\taddFooterView(mFooterView);\n\t\thideFooterView();\n\t\t/*\n\t\t * Must use super.setOnScrollListener() here to avoid override when call\n\t\t * this view's setOnScrollListener method\n\t\t */\n\t\tsuper.setOnScrollListener(superOnScrollListener);\n\t}\n\n\t/**\n\t * Hide the load more view(footer view)\n\t */\n\tprivate void hideFooterView() {\n\t\tmFooterView.setVisibility(View.GONE);\n\t}\n\n\t/**\n\t * Show load more view\n\t */\n\tprivate void showFooterView() {\n\t\tmFooterView.setVisibility(View.VISIBLE);\n\t}\n\n\t@Override\n\tpublic void setOnScrollListener(OnScrollListener l) {\n\t\tmOnScrollListener = l;\n\t}\n\n\t/**\n\t * Set load more listener, usually you should get more data here.\n\t * \n\t * @param listener\n\t *            OnLoadMoreListener\n\t * @see OnLoadMoreListener\n\t */\n\tpublic void setOnLoadMoreListener(OnLoadMoreListener listener) {\n\t\tmOnLoadMoreListener = listener;\n\t}\n\n\t/**\n\t * When complete load more data, you must use this method to hide the footer\n\t * view, if not the footer view will be shown all the time.\n\t */\n\tpublic void onLoadMoreComplete() {\n\t\tmIsLoading = false;\n\t\thideFooterView();\n\t}\n\n\tprivate OnScrollListener superOnScrollListener = new OnScrollListener() {\n\n\t\t@Override\n\t\tpublic void onScrollStateChanged(AbsListView view, int scrollState) {\n\t\t\tmCurrentScrollState = scrollState;\n\t\t\t// Avoid override when use setOnScrollListener\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScrollStateChanged(view, scrollState);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void onScroll(AbsListView view, int firstVisibleItem,\n\t\t\t\tint visibleItemCount, int totalItemCount) {\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScroll(view, firstVisibleItem,\n\t\t\t\t\t\tvisibleItemCount, totalItemCount);\n\t\t\t}\n\t\t\t// The count of footer view will be add to visibleItemCount also are\n\t\t\t// added to totalItemCount\n\t\t\tif (visibleItemCount == totalItemCount) {\n\t\t\t\t// If all the item can not fill screen, we should make the\n\t\t\t\t// footer view invisible.\n\t\t\t\thideFooterView();\n\t\t\t} else if (!mIsLoading\n\t\t\t\t\t&& (firstVisibleItem + visibleItemCount >= totalItemCount)\n\t\t\t\t\t&& mCurrentScrollState != SCROLL_STATE_IDLE) {\n\t\t\t\tshowFooterView();\n\t\t\t\tmIsLoading = true;\n\t\t\t\tif (mOnLoadMoreListener != null) {\n\t\t\t\t\tmOnLoadMoreListener.onLoadMore();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Interface for load more\n\t */\n\tpublic interface OnLoadMoreListener {\n\t\t/**\n\t\t * Load more data.\n\t\t */\n\t\tvoid onLoadMore();\n\t}\n\n````\n<!-- more -->\nload_more_footer.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:gravity=\"center\"\n    android:orientation=\"horizontal\" >\n\n    <ProgressBar\n        android:id=\"@+id/load_more_pb\"\n        style=\"@android:style/Widget.ProgressBar.Small\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginRight=\"10dp\" />\n\n    <TextView\n        android:id=\"@+id/load_more_tv\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:paddingBottom=\"5dp\"\n        android:paddingTop=\"5dp\"\n        android:text=\"正在加载...\"\n        tools:ignore=\"HardcodedText\" />\n\n</LinearLayout>\n```\n\n调用\n\n```java\nmListView.setOnLoadMoreListener(new OnLoadMoreListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onLoadMore() {\n\t\t\t\t\n\t\t\t}\n\t\t});\n```\n","source":"_posts/LoadMoreListView.md","raw":"title: Android之LoadMoreListView\ndate: 2015-04-28 \ncategories: [Android]\ntags: [Android,ListView]\n---\n\njava\n\n```java\n/**\n * Android load more ListView when scroll down.\n * \n * @author Charon Chui\n */\npublic class LoadMoreListView extends ListView {\n\tprotected static final String TAG = \"LoadMoreListView\";\n\tprivate View mFooterView;\n\tprivate OnScrollListener mOnScrollListener;\n\tprivate OnLoadMoreListener mOnLoadMoreListener;\n\n\t/**\n\t * If is loading now.\n\t */\n\tprivate boolean mIsLoading;\n\n\tprivate int mCurrentScrollState;\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs, int defStyle) {\n\t\tsuper(context, attrs, defStyle);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context, AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\tinit(context);\n\t}\n\n\tpublic LoadMoreListView(Context context) {\n\t\tsuper(context);\n\t\tinit(context);\n\t}\n\n\tprivate void init(Context context) {\n\t\tmFooterView = View.inflate(context, R.layout.load_more_footer, null);\n\t\taddFooterView(mFooterView);\n\t\thideFooterView();\n\t\t/*\n\t\t * Must use super.setOnScrollListener() here to avoid override when call\n\t\t * this view's setOnScrollListener method\n\t\t */\n\t\tsuper.setOnScrollListener(superOnScrollListener);\n\t}\n\n\t/**\n\t * Hide the load more view(footer view)\n\t */\n\tprivate void hideFooterView() {\n\t\tmFooterView.setVisibility(View.GONE);\n\t}\n\n\t/**\n\t * Show load more view\n\t */\n\tprivate void showFooterView() {\n\t\tmFooterView.setVisibility(View.VISIBLE);\n\t}\n\n\t@Override\n\tpublic void setOnScrollListener(OnScrollListener l) {\n\t\tmOnScrollListener = l;\n\t}\n\n\t/**\n\t * Set load more listener, usually you should get more data here.\n\t * \n\t * @param listener\n\t *            OnLoadMoreListener\n\t * @see OnLoadMoreListener\n\t */\n\tpublic void setOnLoadMoreListener(OnLoadMoreListener listener) {\n\t\tmOnLoadMoreListener = listener;\n\t}\n\n\t/**\n\t * When complete load more data, you must use this method to hide the footer\n\t * view, if not the footer view will be shown all the time.\n\t */\n\tpublic void onLoadMoreComplete() {\n\t\tmIsLoading = false;\n\t\thideFooterView();\n\t}\n\n\tprivate OnScrollListener superOnScrollListener = new OnScrollListener() {\n\n\t\t@Override\n\t\tpublic void onScrollStateChanged(AbsListView view, int scrollState) {\n\t\t\tmCurrentScrollState = scrollState;\n\t\t\t// Avoid override when use setOnScrollListener\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScrollStateChanged(view, scrollState);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void onScroll(AbsListView view, int firstVisibleItem,\n\t\t\t\tint visibleItemCount, int totalItemCount) {\n\t\t\tif (mOnScrollListener != null) {\n\t\t\t\tmOnScrollListener.onScroll(view, firstVisibleItem,\n\t\t\t\t\t\tvisibleItemCount, totalItemCount);\n\t\t\t}\n\t\t\t// The count of footer view will be add to visibleItemCount also are\n\t\t\t// added to totalItemCount\n\t\t\tif (visibleItemCount == totalItemCount) {\n\t\t\t\t// If all the item can not fill screen, we should make the\n\t\t\t\t// footer view invisible.\n\t\t\t\thideFooterView();\n\t\t\t} else if (!mIsLoading\n\t\t\t\t\t&& (firstVisibleItem + visibleItemCount >= totalItemCount)\n\t\t\t\t\t&& mCurrentScrollState != SCROLL_STATE_IDLE) {\n\t\t\t\tshowFooterView();\n\t\t\t\tmIsLoading = true;\n\t\t\t\tif (mOnLoadMoreListener != null) {\n\t\t\t\t\tmOnLoadMoreListener.onLoadMore();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Interface for load more\n\t */\n\tpublic interface OnLoadMoreListener {\n\t\t/**\n\t\t * Load more data.\n\t\t */\n\t\tvoid onLoadMore();\n\t}\n\n````\n<!-- more -->\nload_more_footer.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:gravity=\"center\"\n    android:orientation=\"horizontal\" >\n\n    <ProgressBar\n        android:id=\"@+id/load_more_pb\"\n        style=\"@android:style/Widget.ProgressBar.Small\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginRight=\"10dp\" />\n\n    <TextView\n        android:id=\"@+id/load_more_tv\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:paddingBottom=\"5dp\"\n        android:paddingTop=\"5dp\"\n        android:text=\"正在加载...\"\n        tools:ignore=\"HardcodedText\" />\n\n</LinearLayout>\n```\n\n调用\n\n```java\nmListView.setOnLoadMoreListener(new OnLoadMoreListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onLoadMore() {\n\t\t\t\t\n\t\t\t}\n\t\t});\n```\n","slug":"LoadMoreListView","published":1,"updated":"2016-03-17T00:44:06.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrci00c2zspkqtxaw13o","thumbnailImageUrl":null},{"title":"LinearGradient实现文字一闪一闪","date":"2015-11-16T03:14:43.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/LinearGradientTextView.gif)\n<!--more-->\n## 实现方法\n新建LinearGradientTextView，继承TextView，重写onSizeChanged和onDraw。\n```java\npublic class LinearGradientTextView extends TextView {\n    private int mViewWidth;\n    private Paint mPaint;\n    private LinearGradient mLinearGradient;\n    private Matrix mMatrix;\n    private int mTranslate;\n\n    public LinearGradientTextView(Context context) {\n        super(context);\n    }\n\n    public LinearGradientTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public LinearGradientTextView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        if (mViewWidth == 0) {\n            mViewWidth = getMeasuredWidth();\n            if (mViewWidth > 0) {\n                mPaint = getPaint();\n                mLinearGradient = new LinearGradient(0, 0, mViewWidth, 0,\n                        new int[]{Color.BLUE, Color.GRAY, Color.RED, Color.GREEN}, null, Shader.TileMode.MIRROR);\n                mPaint.setShader(mLinearGradient);\n                mMatrix = new Matrix();\n            }\n        }\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        if (mMatrix != null) {\n            mTranslate += mViewWidth / 5;\n            if (mTranslate > 2 * mViewWidth) {\n                mTranslate = -mViewWidth;\n            }\n            mMatrix.setTranslate(mTranslate, 0);\n            mLinearGradient.setLocalMatrix(mMatrix);\n            postInvalidateDelayed(100);\n        }\n    }\n}\n```\nLinearGradient有两个构造函数：\npublic LinearGradient(float x0, float y0, float x1, float y1, int[] colors, float[] positions,Shader.TileMode tile) \n参数:\nfloat x0: 渐变起始点x坐标\nfloat y0:渐变起始点y坐标\nfloat x1:渐变结束点x坐标\nfloat y1:渐变结束点y坐标\nint[] colors:颜色 的int 数组\nfloat[] positions: 相对位置的颜色数组,可为null,  若为null,可为null,颜色沿渐变线均匀分布\nShader.TileMode tile: 渲染器平铺模式\n\n## xml调用\n```js\n<com.wuxiaolong.apksample.LinearGradientTextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:gravity=\"center\"\n        android:text=\"测试文字一闪一闪\"\n        android:textSize=\"30sp\" />\n```\n## Shimmer-android\n[Shimmer-android](https://github.com/RomainPiel/Shimmer-android)，github上，TextView一闪一闪动画效果\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/LinearGradientTextView.md","raw":"title: LinearGradient实现文字一闪一闪\ndate: 2015-11-16 11:14:43\ntags: [LinearGradient,TextView] \ncategory: Android\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/LinearGradientTextView.gif)\n<!--more-->\n## 实现方法\n新建LinearGradientTextView，继承TextView，重写onSizeChanged和onDraw。\n```java\npublic class LinearGradientTextView extends TextView {\n    private int mViewWidth;\n    private Paint mPaint;\n    private LinearGradient mLinearGradient;\n    private Matrix mMatrix;\n    private int mTranslate;\n\n    public LinearGradientTextView(Context context) {\n        super(context);\n    }\n\n    public LinearGradientTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public LinearGradientTextView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        if (mViewWidth == 0) {\n            mViewWidth = getMeasuredWidth();\n            if (mViewWidth > 0) {\n                mPaint = getPaint();\n                mLinearGradient = new LinearGradient(0, 0, mViewWidth, 0,\n                        new int[]{Color.BLUE, Color.GRAY, Color.RED, Color.GREEN}, null, Shader.TileMode.MIRROR);\n                mPaint.setShader(mLinearGradient);\n                mMatrix = new Matrix();\n            }\n        }\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        if (mMatrix != null) {\n            mTranslate += mViewWidth / 5;\n            if (mTranslate > 2 * mViewWidth) {\n                mTranslate = -mViewWidth;\n            }\n            mMatrix.setTranslate(mTranslate, 0);\n            mLinearGradient.setLocalMatrix(mMatrix);\n            postInvalidateDelayed(100);\n        }\n    }\n}\n```\nLinearGradient有两个构造函数：\npublic LinearGradient(float x0, float y0, float x1, float y1, int[] colors, float[] positions,Shader.TileMode tile) \n参数:\nfloat x0: 渐变起始点x坐标\nfloat y0:渐变起始点y坐标\nfloat x1:渐变结束点x坐标\nfloat y1:渐变结束点y坐标\nint[] colors:颜色 的int 数组\nfloat[] positions: 相对位置的颜色数组,可为null,  若为null,可为null,颜色沿渐变线均匀分布\nShader.TileMode tile: 渲染器平铺模式\n\n## xml调用\n```js\n<com.wuxiaolong.apksample.LinearGradientTextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:gravity=\"center\"\n        android:text=\"测试文字一闪一闪\"\n        android:textSize=\"30sp\" />\n```\n## Shimmer-android\n[Shimmer-android](https://github.com/RomainPiel/Shimmer-android)，github上，TextView一闪一闪动画效果\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"LinearGradientTextView","published":1,"updated":"2016-03-17T00:44:06.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrck00c6zspkpv74qg35","thumbnailImageUrl":null},{"title":"Android之LayoutParams","date":"2015-05-27T16:00:00.000Z","_content":"\n LayoutParams相当于一个Layout的信息包，它封装了Layout的位置、高、宽等信息。假设在屏幕上一块区域是由一个Layout占领的，如果将一个View添加到一个Layout中，最好告诉Layout用户期望的布局方式，也就是将一个认可的layoutParams传递进去。\n       可以这样去形容LayoutParams，在象棋的棋盘上，每个棋子都占据一个位置，也就是每个棋子都有一个位置的信息，如这个棋子在4行4列，这里的“4行4列”就是棋子的LayoutParams。\n\n但LayoutParams类也只是简单的描述了宽高，宽和高都可以设置成三种值：\n       \n1，一个确定的值；\n       \n2，FILL_PARENT，即填满（和父容器一样大小）；\n       \n3，WRAP_CONTENT，即包裹住组件就好。\n\n<!-- more -->\n\n在JAVA中动态构建的布局，常常这样写：\n\n```java\nsetLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n```\n\n上面这一句话其实是子对父的，也就是说，父布局下的子控件要设置这句话。\n\n因为布局很多，虽然都继承至ViewGroup但是各个布局还是有很大的不同。\n\n很显然上面这句应该这样写才算准确：\n\n```java\nsetLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.FILL_PARENT,TableRow.LayoutParams.FILL_PARENT));\n```\n\n这表示这个子控件的父布局是一个TableRow , 这样的LayoutParams 太多，所以应明确指明。\n\n \n\n下面分别说下两个常用到布局:\n\n1. FrameLayout下动态设置子控件居中，动态用JAVA代码要这样实现:\n\n```java\nFrameLayout.LayoutParams lytp = new FrameLayout.LayoutParams(80,LayoutParams.WRAP_CONTENT);\nlytp .gravity = Gravity.CENTER;\nbtn.setLayoutParams(lytp);\n```\n\n2. RelativeLayout下动态设置子控件居中：\n\n```java\nRelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT); \nlp.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE); \nlp.addRule(RelativeLayout.ALIGN_PARENT_TOP, RelativeLayout.TRUE); \nbtn1.setLayoutParams(lp);\n```\n","source":"_posts/LayoutParams.md","raw":"title: Android之LayoutParams\ndate: 2015-05-28 \ncategories: [Android]\ntags: [Android,LayoutParams]\n---\n\n LayoutParams相当于一个Layout的信息包，它封装了Layout的位置、高、宽等信息。假设在屏幕上一块区域是由一个Layout占领的，如果将一个View添加到一个Layout中，最好告诉Layout用户期望的布局方式，也就是将一个认可的layoutParams传递进去。\n       可以这样去形容LayoutParams，在象棋的棋盘上，每个棋子都占据一个位置，也就是每个棋子都有一个位置的信息，如这个棋子在4行4列，这里的“4行4列”就是棋子的LayoutParams。\n\n但LayoutParams类也只是简单的描述了宽高，宽和高都可以设置成三种值：\n       \n1，一个确定的值；\n       \n2，FILL_PARENT，即填满（和父容器一样大小）；\n       \n3，WRAP_CONTENT，即包裹住组件就好。\n\n<!-- more -->\n\n在JAVA中动态构建的布局，常常这样写：\n\n```java\nsetLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n```\n\n上面这一句话其实是子对父的，也就是说，父布局下的子控件要设置这句话。\n\n因为布局很多，虽然都继承至ViewGroup但是各个布局还是有很大的不同。\n\n很显然上面这句应该这样写才算准确：\n\n```java\nsetLayoutParams(new TableRow.LayoutParams(TableRow.LayoutParams.FILL_PARENT,TableRow.LayoutParams.FILL_PARENT));\n```\n\n这表示这个子控件的父布局是一个TableRow , 这样的LayoutParams 太多，所以应明确指明。\n\n \n\n下面分别说下两个常用到布局:\n\n1. FrameLayout下动态设置子控件居中，动态用JAVA代码要这样实现:\n\n```java\nFrameLayout.LayoutParams lytp = new FrameLayout.LayoutParams(80,LayoutParams.WRAP_CONTENT);\nlytp .gravity = Gravity.CENTER;\nbtn.setLayoutParams(lytp);\n```\n\n2. RelativeLayout下动态设置子控件居中：\n\n```java\nRelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT); \nlp.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE); \nlp.addRule(RelativeLayout.ALIGN_PARENT_TOP, RelativeLayout.TRUE); \nbtn1.setLayoutParams(lp);\n```\n","slug":"LayoutParams","published":1,"updated":"2016-03-17T00:44:06.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcn00cczspky6wil5ho","thumbnailImageUrl":null},{"title":"Android之LayoutInflate","date":"2015-04-22T16:00:00.000Z","_content":"【转载】[Android获取LayoutInflater对象的方法总结](http://blog.csdn.net/bigconvience/article/details/26582497)\n\n在写Android程序时，有时候会编写自定义的View，使用Inflater对象来将布局文件解析成一个View。本文主要目的是总结获取LayoutInflater对象的方法。\n\n1、若能获取context对象，可以有以下几种方法：\n\n```java \nLayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n<!-- more -->\n\nor\n\n```java\nLayoutInflater inflater = LayoutInflater.from(context);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n\ninflate实现源码如下：\n\n```java\npublic static View inflate(Context context, int resource, ViewGroup root) {  \n    LayoutInflater factory = LayoutInflater.from(context);  \n    return factory.inflate(resource, root);  \n}  \n```\n\nLayoutInflater.from(context)实际上是对方法1的包装，可参考以下源码：\n\n```java\npublic static LayoutInflater from(Context context) {  \n    LayoutInflater LayoutInflater =  \n            (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \n    if (LayoutInflater == null) {  \n        throw new AssertionError(\"LayoutInflater not found.\");  \n    }  \n    return LayoutInflater;  \n}  \n```\n\n2、在一个Activity中，可以有以下方法：\n\n```java\nView child = getLayoutInflater().inflate(R.layout.child, item, false); \n```\n\nor\n\n```java\nView view;   \nLayoutInflater inflater = (LayoutInflater)   getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);   \nview = inflater.inflate(R.layout.mylayout, null);  \n```\n方法1和方法2其实都是对context().getSystemService()的使用。\n\n3、使用View的静态方法：\n\n```java\nView view=View.inflate(context, R.layout.child, null)  \n```\n\n","source":"_posts/LayoutInflater.md","raw":"title: Android之LayoutInflate\ndate: 2015-04-23 \ncategories: [Android]\ntags: [Android,LayoutInflate]\n---\n【转载】[Android获取LayoutInflater对象的方法总结](http://blog.csdn.net/bigconvience/article/details/26582497)\n\n在写Android程序时，有时候会编写自定义的View，使用Inflater对象来将布局文件解析成一个View。本文主要目的是总结获取LayoutInflater对象的方法。\n\n1、若能获取context对象，可以有以下几种方法：\n\n```java \nLayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n<!-- more -->\n\nor\n\n```java\nLayoutInflater inflater = LayoutInflater.from(context);  \nView child = inflater.inflate(R.layout.child, null);  \n```\n\ninflate实现源码如下：\n\n```java\npublic static View inflate(Context context, int resource, ViewGroup root) {  \n    LayoutInflater factory = LayoutInflater.from(context);  \n    return factory.inflate(resource, root);  \n}  \n```\n\nLayoutInflater.from(context)实际上是对方法1的包装，可参考以下源码：\n\n```java\npublic static LayoutInflater from(Context context) {  \n    LayoutInflater LayoutInflater =  \n            (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);  \n    if (LayoutInflater == null) {  \n        throw new AssertionError(\"LayoutInflater not found.\");  \n    }  \n    return LayoutInflater;  \n}  \n```\n\n2、在一个Activity中，可以有以下方法：\n\n```java\nView child = getLayoutInflater().inflate(R.layout.child, item, false); \n```\n\nor\n\n```java\nView view;   \nLayoutInflater inflater = (LayoutInflater)   getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);   \nview = inflater.inflate(R.layout.mylayout, null);  \n```\n方法1和方法2其实都是对context().getSystemService()的使用。\n\n3、使用View的静态方法：\n\n```java\nView view=View.inflate(context, R.layout.child, null)  \n```\n\n","slug":"LayoutInflater","published":1,"updated":"2016-03-17T00:44:06.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcp00chzspkyn3kw1l6","thumbnailImageUrl":null},{"title":"Android之Intent和Intent过滤器","date":"2015-11-03T01:40:54.000Z","_content":"Intent 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个：\n* 启动 Activity\n Activity 表示应用中的一个屏幕。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。\n如果您希望在 Activity 完成后收到结果，请调用 startActivityForResult()。在 Activity 的 onActivityResult() 回调中，您的 Activity 将结果作为单独的 Intent 对象接收。\n* 启动服务\n[Android之Service](http://wuxiaolong.github.io/2015/11/02/service/)\n* 传递广播\n[Android之BroadcastReceiver](http://wuxiaolong.github.io/2015/11/03/BroadcastReceiver/)\n<!--more-->\n\n## Intent 类型\nIntent 分为两种类型：\n\n* 显式 Intent \n按名称（完全限定类名）指定要启动的组件。通常，您会在自己的应用中使用显式 Intent 来启动组件，这是因为您知道要启动的 Activity 或服务的类名。例如，启动新 Activity 以响应用户操作，或者启动服务以在后台下载文件。\n* 隐式 Intent\n不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理它。例如，如需在地图上向用户显示位置，则可以使用隐式 Intent，请求另一具有此功能的应用在地图上显示指定的位置。\n\n## 显式 Intent 示例\n要创建显式 Intent，请为 Intent 对象定义组件名称。Intent 的所有其他属性均为可选属性。\n```java\nIntent intent = new Intent(this, DownloadActivity.class);\nstartActivity(intent);\n```\n\n## 隐式 Intent 示例\n隐式 Intent 指定能够在可以执行相应操作的设备上调用任何应用的操作。如果您的应用无法执行该操作而其他应用可以，且您希望用户选取要使用的应用，则使用隐式 Intent 非常有用。\n例如，如果您希望用户与他人共享您的内容，请使用 ACTION_SEND 操作创建 Intent，并添加指定共享内容的 Extra。使用该 Intent 调用 startActivity() 时，用户可以选取共享内容所使用的应用。\n```java\n// Create the text message with a string\nIntent sendIntent = new Intent();\nsendIntent.setAction(Intent.ACTION_SEND);\nsendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);\nsendIntent.setType(\"text/plain\");\n\n// Verify that the intent will resolve to an activity\nif (sendIntent.resolveActivity(getPackageManager()) != null) {\n    startActivity(sendIntent);\n}\n```\n查看地图:\n```java\n// Map point based on address\nUri location = Uri.parse(\"geo:0,0?q=1600+Amphitheatre+Parkway,+Mountain+View,+California\");\n// Or map point based on latitude/longitude\n// Uri location = Uri.parse(\"geo:37.422219,-122.08364?z=14\"); // z param is zoom level\nIntent mapIntent = new Intent(Intent.ACTION_VIEW, location);\n```\n查看网页:\n```java\nUri webpage = Uri.parse(\"http://www.android.com\");\nIntent webIntent = new Intent(Intent.ACTION_VIEW, webpage);\n```\n如果多个 Activity 接受 Intent，则系统将显示一个对话框，使用户能够选取要使用的应用。\n\n## Intent 传值示例\n\n* 简单传值\n\nA页面\n```java\nIntent intent = new Intent(A.this, B.class);\nintent.putExtras(\"realname \", realname);\nstartActivity(intent );\n```\n\nB页面\n```java\nrealname = this.getIntent().getStringExtra(\"realname\");\n```\n\n* 传值接受返回结果\n\nA页面\n```java\nprivate static final int REQUEST_CODE_A = 0;\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\nBundle bundle = new Bundle();\nintent.setClass(MainActivity.this, TestBActivity.class);\nbundle.putString(\"msg\", textView.getText().toString());\nintent.putExtras(bundle);\nstartActivityForResult(intent, REQUEST_CODE_A);\n\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (requestCode == REQUEST_CODE_A && resultCode == RESULT_OK) {\n\t\t\tString str=data.getExtras().getString(\"result\");\n\t\t}\n\t}\n```\n\nB页面\n```java\n//返回设置\nIntent intent = new Intent();\nintent.putExtra(\"result\", textView.getText().toString());\nsetResult(RESULT_OK, intent);\nfinish();\n```\n\n* 传List\n\n第一种\n```java\nIntent intent = new Intent();\nintent.setClass(A.this, B.class);\nintent.putExtra(\"list\", list);\nstartActivity(intent);\n```\nB.class:\n```java\nArrayList<String>  mList = (ArrayList<String>) getIntent().getSerializableExtra(\"list\");\n```\n第二种\n```\nIntent intent = new Intent(A.this, B.class);\nintent.putStringArrayListExtra(\"mSelectedPhotos\",mSelectedPhotos);\nstartActivity(intent);\n\t\t\t\t\t\n//接受结果\t\t\t\t\t\nArrayList<String> mSelectedPhotos = (ArrayList<String>) intent\n\t\t\t\t\t\t.getStringArrayListExtra(\"mSelectedPhotos\");\n\n```\n## 构建 Intent\n若activity中的intent filter满足以下intent对象的标准，系统就能够把特定的intent发送给activity：\n\nAction:一个想要执行的动作的名称。通常是系统已经定义好的值，如ACTION_SEND或ACTION_VIEW。 在intent filter中通过<action>指定它的值，值的类型必须为字符串，而不是API中的常量(看下面的例子)\n\nData:Intent附带数据的描述。在intent filter中通过<data>指定它的值，可以使用一个或者多个属性，我们可以只定义MIME type或者是只指定URI prefix，也可以只定义一个URI scheme，或者是他们综合使用。\n\nNote: 如果不想handle Uri 类型的数据，那么应该指定 android:mimeType 属性。例如 text/plain or image/jpeg.\nCategory:提供一个附加的方法来标识这个activity能够handle的intent。通常与用户的手势或者是启动位置有关。系统有支持几种不同的categories,但是大多数都很少用到。而且，所有的implicit intents都默认是 CATEGORY_DEFAULT 类型的。在intent filter中用<category>指定它的值。\n```js\n<activity android:name=\"ShareActivity\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.SEND\"/>\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <data android:mimeType=\"text/plain\"/>\n        <data android:mimeType=\"image/*\"/>\n    </intent-filter>\n</activity>\n```\n## 强制使用应用选择器\n## 接收隐式 Intent\n## 过滤器示例\n## 使用待定 Intent\n## Intent 解析\n## Intent 匹配\n## 附录\n[Intent and Intent Filters](https://developer.android.com/intl/zh-cn/guide/components/intents-filters.html)\n[Intent](http://hukai.me/android-training-course-in-chinese/basics/intents/sending.html)","source":"_posts/Intent.md","raw":"title: Android之Intent和Intent过滤器\ndate: 2015-11-03 09:40:54\ntags: Intent\ncategory: Android\n---\nIntent 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个：\n* 启动 Activity\n Activity 表示应用中的一个屏幕。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。\n如果您希望在 Activity 完成后收到结果，请调用 startActivityForResult()。在 Activity 的 onActivityResult() 回调中，您的 Activity 将结果作为单独的 Intent 对象接收。\n* 启动服务\n[Android之Service](http://wuxiaolong.github.io/2015/11/02/service/)\n* 传递广播\n[Android之BroadcastReceiver](http://wuxiaolong.github.io/2015/11/03/BroadcastReceiver/)\n<!--more-->\n\n## Intent 类型\nIntent 分为两种类型：\n\n* 显式 Intent \n按名称（完全限定类名）指定要启动的组件。通常，您会在自己的应用中使用显式 Intent 来启动组件，这是因为您知道要启动的 Activity 或服务的类名。例如，启动新 Activity 以响应用户操作，或者启动服务以在后台下载文件。\n* 隐式 Intent\n不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理它。例如，如需在地图上向用户显示位置，则可以使用隐式 Intent，请求另一具有此功能的应用在地图上显示指定的位置。\n\n## 显式 Intent 示例\n要创建显式 Intent，请为 Intent 对象定义组件名称。Intent 的所有其他属性均为可选属性。\n```java\nIntent intent = new Intent(this, DownloadActivity.class);\nstartActivity(intent);\n```\n\n## 隐式 Intent 示例\n隐式 Intent 指定能够在可以执行相应操作的设备上调用任何应用的操作。如果您的应用无法执行该操作而其他应用可以，且您希望用户选取要使用的应用，则使用隐式 Intent 非常有用。\n例如，如果您希望用户与他人共享您的内容，请使用 ACTION_SEND 操作创建 Intent，并添加指定共享内容的 Extra。使用该 Intent 调用 startActivity() 时，用户可以选取共享内容所使用的应用。\n```java\n// Create the text message with a string\nIntent sendIntent = new Intent();\nsendIntent.setAction(Intent.ACTION_SEND);\nsendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);\nsendIntent.setType(\"text/plain\");\n\n// Verify that the intent will resolve to an activity\nif (sendIntent.resolveActivity(getPackageManager()) != null) {\n    startActivity(sendIntent);\n}\n```\n查看地图:\n```java\n// Map point based on address\nUri location = Uri.parse(\"geo:0,0?q=1600+Amphitheatre+Parkway,+Mountain+View,+California\");\n// Or map point based on latitude/longitude\n// Uri location = Uri.parse(\"geo:37.422219,-122.08364?z=14\"); // z param is zoom level\nIntent mapIntent = new Intent(Intent.ACTION_VIEW, location);\n```\n查看网页:\n```java\nUri webpage = Uri.parse(\"http://www.android.com\");\nIntent webIntent = new Intent(Intent.ACTION_VIEW, webpage);\n```\n如果多个 Activity 接受 Intent，则系统将显示一个对话框，使用户能够选取要使用的应用。\n\n## Intent 传值示例\n\n* 简单传值\n\nA页面\n```java\nIntent intent = new Intent(A.this, B.class);\nintent.putExtras(\"realname \", realname);\nstartActivity(intent );\n```\n\nB页面\n```java\nrealname = this.getIntent().getStringExtra(\"realname\");\n```\n\n* 传值接受返回结果\n\nA页面\n```java\nprivate static final int REQUEST_CODE_A = 0;\nprivate static final int RESULT_CODE_B = 0;\nIntent intent = new Intent();\nBundle bundle = new Bundle();\nintent.setClass(MainActivity.this, TestBActivity.class);\nbundle.putString(\"msg\", textView.getText().toString());\nintent.putExtras(bundle);\nstartActivityForResult(intent, REQUEST_CODE_A);\n\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tif (requestCode == REQUEST_CODE_A && resultCode == RESULT_OK) {\n\t\t\tString str=data.getExtras().getString(\"result\");\n\t\t}\n\t}\n```\n\nB页面\n```java\n//返回设置\nIntent intent = new Intent();\nintent.putExtra(\"result\", textView.getText().toString());\nsetResult(RESULT_OK, intent);\nfinish();\n```\n\n* 传List\n\n第一种\n```java\nIntent intent = new Intent();\nintent.setClass(A.this, B.class);\nintent.putExtra(\"list\", list);\nstartActivity(intent);\n```\nB.class:\n```java\nArrayList<String>  mList = (ArrayList<String>) getIntent().getSerializableExtra(\"list\");\n```\n第二种\n```\nIntent intent = new Intent(A.this, B.class);\nintent.putStringArrayListExtra(\"mSelectedPhotos\",mSelectedPhotos);\nstartActivity(intent);\n\t\t\t\t\t\n//接受结果\t\t\t\t\t\nArrayList<String> mSelectedPhotos = (ArrayList<String>) intent\n\t\t\t\t\t\t.getStringArrayListExtra(\"mSelectedPhotos\");\n\n```\n## 构建 Intent\n若activity中的intent filter满足以下intent对象的标准，系统就能够把特定的intent发送给activity：\n\nAction:一个想要执行的动作的名称。通常是系统已经定义好的值，如ACTION_SEND或ACTION_VIEW。 在intent filter中通过<action>指定它的值，值的类型必须为字符串，而不是API中的常量(看下面的例子)\n\nData:Intent附带数据的描述。在intent filter中通过<data>指定它的值，可以使用一个或者多个属性，我们可以只定义MIME type或者是只指定URI prefix，也可以只定义一个URI scheme，或者是他们综合使用。\n\nNote: 如果不想handle Uri 类型的数据，那么应该指定 android:mimeType 属性。例如 text/plain or image/jpeg.\nCategory:提供一个附加的方法来标识这个activity能够handle的intent。通常与用户的手势或者是启动位置有关。系统有支持几种不同的categories,但是大多数都很少用到。而且，所有的implicit intents都默认是 CATEGORY_DEFAULT 类型的。在intent filter中用<category>指定它的值。\n```js\n<activity android:name=\"ShareActivity\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.SEND\"/>\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <data android:mimeType=\"text/plain\"/>\n        <data android:mimeType=\"image/*\"/>\n    </intent-filter>\n</activity>\n```\n## 强制使用应用选择器\n## 接收隐式 Intent\n## 过滤器示例\n## 使用待定 Intent\n## Intent 解析\n## Intent 匹配\n## 附录\n[Intent and Intent Filters](https://developer.android.com/intl/zh-cn/guide/components/intents-filters.html)\n[Intent](http://hukai.me/android-training-course-in-chinese/basics/intents/sending.html)","slug":"Intent","published":1,"updated":"2016-03-17T00:44:06.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcr00cmzspkgmp1zvn8","thumbnailImageUrl":null},{"title":"Android Studio和Genymotion安装常见错误","date":"2016-03-17T11:47:04.000Z","_content":"> 整装出发，新的环境，新的开始，加油，骚年。新公司，首先需要安装Android的开发环境，由于被墙，Android Studio首次启动就被卡，Genymotion也遇到了些问题。\n\n# Android Studio初次启动卡在download Components\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors3.jpg)\n<!--more-->\n解决方案:\n\n详见：[http://blog.csdn.net/u010302764/article/details/42889731](http://blog.csdn.net/u010302764/article/details/42889731)\n\n# Genymotion下载虚拟镜像Connection timeout\nAdd new device出现的问题：\n```\nFailed to deploy virtual device.\nUnable to create virtual device.Connection timeout occurred.\n```\n\n解决方案：\n\n1. 当选择Google Nexus 5 - 6.0.0 - API 23 - 1080x1920下载device失败后，到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova下看到genymotion_vbox86p_6.0_160114_090449.ova，大小却是0KB，在C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\genymotion.log，打开该文件，找到类似“http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160114_090449.ova”路径，即您想要下载的镜像文件URL；\n\n2. 用迅雷去下载，下载完成后放到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova；\n\n3. 重新点击Google Nexus 5 - 6.0.0 - API 23 - 1080x1920去下载，验证安装后即会显示在设备列表中。\n\n# virtualbox cannot start the virtual device\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors1.jpg)\n\n然后去vbox运行虚拟机，报如下错误：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors2.jpg)\n点击复制看具体错误信息：\n```\n不能为虚拟电脑 Google Nexus 5 - 6.0.0 - API 23 - 1080x1920 打开一个新任务.\n\nUnable to load R3 module D:\\Program Files\\Oracle\\VirtualBox/VBoxDD.DLL (VBoxDD): GetLastError=1790 (VERR_UNRESOLVED_ERROR).\n\n返回 代码:E_FAIL (0x80004005)\n组件:ConsoleWrap\n界面:IConsole {872da645-4a9b-1727-bee2-5585105b9eed}\n```\n原因:\n宿主机win7用的ghost系统，会破解uxtheme.dll文件，导致virtualbox启动失败\n\n解决方案:\n去网上下载Windows7 64bit uxtheme.dll，使用原版的uxtheme.dll替换c:\\windows\\system32\\uxtheme.dll即可。\n\n# x86 emulation currently requires hardware acceleration\nemulator: ERROR: x86 emulation currently requires hardware acceleration!\nPlease ensure Intel HAXM is properly installed and usable.\nCPU acceleration status: HAX kernel module is not installed!\n解决方案\n详见我的博客：[Android之emulator ERROR x86 emulation currently requires hardware acceleration](http://wuxiaolong.me/2015/12/03/emulatorError/)\n\n# 其他常用的软件\n安装自己平时常用的软件，将公司电脑环境变成自己的风格，详见我的博客：[我的编码嗜好](http://wuxiaolong.me/2016/03/13/MyCodeHobby/)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\t\n\n","source":"_posts/GenymotionErrors.md","raw":"title: Android Studio和Genymotion安装常见错误\ndate: 2016-03-17 19:47:04\ntags: [Android, Android Studio,Genymotion]\ncategory: Android \n---\n> 整装出发，新的环境，新的开始，加油，骚年。新公司，首先需要安装Android的开发环境，由于被墙，Android Studio首次启动就被卡，Genymotion也遇到了些问题。\n\n# Android Studio初次启动卡在download Components\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors3.jpg)\n<!--more-->\n解决方案:\n\n详见：[http://blog.csdn.net/u010302764/article/details/42889731](http://blog.csdn.net/u010302764/article/details/42889731)\n\n# Genymotion下载虚拟镜像Connection timeout\nAdd new device出现的问题：\n```\nFailed to deploy virtual device.\nUnable to create virtual device.Connection timeout occurred.\n```\n\n解决方案：\n\n1. 当选择Google Nexus 5 - 6.0.0 - API 23 - 1080x1920下载device失败后，到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova下看到genymotion_vbox86p_6.0_160114_090449.ova，大小却是0KB，在C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\genymotion.log，打开该文件，找到类似“http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160114_090449.ova”路径，即您想要下载的镜像文件URL；\n\n2. 用迅雷去下载，下载完成后放到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova；\n\n3. 重新点击Google Nexus 5 - 6.0.0 - API 23 - 1080x1920去下载，验证安装后即会显示在设备列表中。\n\n# virtualbox cannot start the virtual device\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors1.jpg)\n\n然后去vbox运行虚拟机，报如下错误：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/GenymotionErrors2.jpg)\n点击复制看具体错误信息：\n```\n不能为虚拟电脑 Google Nexus 5 - 6.0.0 - API 23 - 1080x1920 打开一个新任务.\n\nUnable to load R3 module D:\\Program Files\\Oracle\\VirtualBox/VBoxDD.DLL (VBoxDD): GetLastError=1790 (VERR_UNRESOLVED_ERROR).\n\n返回 代码:E_FAIL (0x80004005)\n组件:ConsoleWrap\n界面:IConsole {872da645-4a9b-1727-bee2-5585105b9eed}\n```\n原因:\n宿主机win7用的ghost系统，会破解uxtheme.dll文件，导致virtualbox启动失败\n\n解决方案:\n去网上下载Windows7 64bit uxtheme.dll，使用原版的uxtheme.dll替换c:\\windows\\system32\\uxtheme.dll即可。\n\n# x86 emulation currently requires hardware acceleration\nemulator: ERROR: x86 emulation currently requires hardware acceleration!\nPlease ensure Intel HAXM is properly installed and usable.\nCPU acceleration status: HAX kernel module is not installed!\n解决方案\n详见我的博客：[Android之emulator ERROR x86 emulation currently requires hardware acceleration](http://wuxiaolong.me/2015/12/03/emulatorError/)\n\n# 其他常用的软件\n安装自己平时常用的软件，将公司电脑环境变成自己的风格，详见我的博客：[我的编码嗜好](http://wuxiaolong.me/2016/03/13/MyCodeHobby/)\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\t\n\n","slug":"GenymotionErrors","published":1,"updated":"2016-03-24T08:32:10.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrct00cqzspkhzqsnali","thumbnailImageUrl":null},{"title":"github之Font-Awesome使用","date":"2015-10-08T07:31:38.000Z","_content":">github地址：[https://github.com/FortAwesome/Font-Awesome](https://github.com/FortAwesome/Font-Awesome)，一直知道这个项目，但是却不知道如何使用它，现在有个[博客](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0925/3518.html)介绍，感谢博主。我这里做个记录。\n\n## 导入字体文件\n在安卓项目中，导航到 app > src > main。 main 目录应该包含了一个叫 assets的文件夹。在assets 文件夹中创建另一个fonts文件夹，并把fontawesome-webfont.ttf 添加到这个文件夹。\nfonts 文件夹并不是必须的。你可以直接把FontAwesome 的字体文件放在 assets 目录，但是把相同类型的文件放在专门的目录里面比较方便。只要FontAwesome 字体在assets 或者子目录之下就行。\n<!--more-->\n## 创建一个帮助类\n```java\npublic class FontManager {\n    public static final String ROOT = \"\",\n            FONTAWESOME = ROOT + \"fontawesome-webfont.ttf\";\n\n    public static Typeface getTypeface(Context context, String font) {\n        return Typeface.createFromAsset(context.getAssets(), font);\n    }\n  /**\n     * 图标一般都是包含在一个ViewGroup，\n     * 比如一个RelativeLayout或者LinearLayout中。\n     * 我们可以写一个方法，爬遍指定xml parent 并且递归的覆盖每个TextView的字体。\n     *\n     */\n    public static void markAsIconContainer(View v, Typeface typeface) {\n        if (v instanceof ViewGroup) {\n            ViewGroup vg = (ViewGroup) v;\n            for (int i = 0; i < vg.getChildCount(); i++) {\n                View child = vg.getChildAt(i);\n                markAsIconContainer(child,typeface);\n            }\n        } else if (v instanceof TextView) {\n            ((TextView) v).setTypeface(typeface);\n        }\n    }\n\n\n}\n```\n## 使用图标\n访问 FontAwesome的GitHub页面 并浏览所给的图标。选择三个你喜欢的。\n\n进入 values 文件夹并创建一个新的文件：icons.xml。这个文件将被作为字典使用，它将把Unicode 字符和相应的图标用可读的名字匹配起来。这意味着我们需要为每个图标创建一个入口。\n```js\n<resources>\n    <string name=\"fa_icon_areachart\">&#xf1fe;</string>\n    <string name=\"fa_icon_piechart\">&#xf200;</string>\n    <string name=\"fa_icon_linechart\">&#xf201;</string>\n</resources>\n```\nonCreate方法\n```java\n @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_font_awesome);\n        Typeface iconFont = FontManager.getTypeface(FontAwesomeActivity.this, FontManager.FONTAWESOME);\n        FontManager.markAsIconContainer(findViewById(R.id.icons_container), iconFont);\n    }\n```\n对应的activity_font_awesome.xml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/icons_container\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_areachart\" />\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_piechart\"\n        android:textColor=\"#9b59b6\"\n        android:textSize=\"45sp\" />\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_linechart\" />\n\n</LinearLayout>\n```","source":"_posts/Font-Awesome.md","raw":"title: github之Font-Awesome使用\ndate: 2015-10-08 15:31:38\ntags: [github,Font-Awesome]\ncategory: github\n---\n>github地址：[https://github.com/FortAwesome/Font-Awesome](https://github.com/FortAwesome/Font-Awesome)，一直知道这个项目，但是却不知道如何使用它，现在有个[博客](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0925/3518.html)介绍，感谢博主。我这里做个记录。\n\n## 导入字体文件\n在安卓项目中，导航到 app > src > main。 main 目录应该包含了一个叫 assets的文件夹。在assets 文件夹中创建另一个fonts文件夹，并把fontawesome-webfont.ttf 添加到这个文件夹。\nfonts 文件夹并不是必须的。你可以直接把FontAwesome 的字体文件放在 assets 目录，但是把相同类型的文件放在专门的目录里面比较方便。只要FontAwesome 字体在assets 或者子目录之下就行。\n<!--more-->\n## 创建一个帮助类\n```java\npublic class FontManager {\n    public static final String ROOT = \"\",\n            FONTAWESOME = ROOT + \"fontawesome-webfont.ttf\";\n\n    public static Typeface getTypeface(Context context, String font) {\n        return Typeface.createFromAsset(context.getAssets(), font);\n    }\n  /**\n     * 图标一般都是包含在一个ViewGroup，\n     * 比如一个RelativeLayout或者LinearLayout中。\n     * 我们可以写一个方法，爬遍指定xml parent 并且递归的覆盖每个TextView的字体。\n     *\n     */\n    public static void markAsIconContainer(View v, Typeface typeface) {\n        if (v instanceof ViewGroup) {\n            ViewGroup vg = (ViewGroup) v;\n            for (int i = 0; i < vg.getChildCount(); i++) {\n                View child = vg.getChildAt(i);\n                markAsIconContainer(child,typeface);\n            }\n        } else if (v instanceof TextView) {\n            ((TextView) v).setTypeface(typeface);\n        }\n    }\n\n\n}\n```\n## 使用图标\n访问 FontAwesome的GitHub页面 并浏览所给的图标。选择三个你喜欢的。\n\n进入 values 文件夹并创建一个新的文件：icons.xml。这个文件将被作为字典使用，它将把Unicode 字符和相应的图标用可读的名字匹配起来。这意味着我们需要为每个图标创建一个入口。\n```js\n<resources>\n    <string name=\"fa_icon_areachart\">&#xf1fe;</string>\n    <string name=\"fa_icon_piechart\">&#xf200;</string>\n    <string name=\"fa_icon_linechart\">&#xf201;</string>\n</resources>\n```\nonCreate方法\n```java\n @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_font_awesome);\n        Typeface iconFont = FontManager.getTypeface(FontAwesomeActivity.this, FontManager.FONTAWESOME);\n        FontManager.markAsIconContainer(findViewById(R.id.icons_container), iconFont);\n    }\n```\n对应的activity_font_awesome.xml\n```js\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/icons_container\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\".MainActivity\">\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_areachart\" />\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_piechart\"\n        android:textColor=\"#9b59b6\"\n        android:textSize=\"45sp\" />\n\n    <TextView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:gravity=\"center\"\n        android:text=\"@string/fa_icon_linechart\" />\n\n</LinearLayout>\n```","slug":"Font-Awesome","published":1,"updated":"2016-03-17T00:44:06.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrcv00cwzspkkqrw1nqz","thumbnailImageUrl":null},{"title":"Android打包错误Export aborted because fatal lint errors were found","date":"2013-11-21T16:00:00.000Z","_content":"打包时报如下错误：\n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-1.jpg)\n\n<!-- more -->\n\nExport aborted because fatal lint errors were found. These are listed in the Lint View. Either fix these before running Export again,or turn off\"Run full error check when exporting app\" in the Android > Lint Error Checking preference page.\n\n解决方法如下： \n\n1、选择Project->Properties，弹出“Properties for 你的项目名称” \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-3.jpg)\n2、选择Adnroid Lint Preferences->Configure Workspace Settings...,弹出Preferences(Filtered)对话框，将\"Run full error check when exporting app and abort if fatal errors are found \"前的勾去掉，点击Apply再点击OK. \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-2.jpg)\n3、回到项目右击选择Android Tools->Clean Lint Markers,待项目自己更新完成即可。 \n这时就可以打包了。\n","source":"_posts/Export-aborted-because-fatal-lint-errors-were-found.md","raw":"title: Android打包错误Export aborted because fatal lint errors were found\ndate: 2013-11-22 \ncategories: [Android]\ntags: [Android]\n---\n打包时报如下错误：\n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-1.jpg)\n\n<!-- more -->\n\nExport aborted because fatal lint errors were found. These are listed in the Lint View. Either fix these before running Export again,or turn off\"Run full error check when exporting app\" in the Android > Lint Error Checking preference page.\n\n解决方法如下： \n\n1、选择Project->Properties，弹出“Properties for 你的项目名称” \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-3.jpg)\n2、选择Adnroid Lint Preferences->Configure Workspace Settings...,弹出Preferences(Filtered)对话框，将\"Run full error check when exporting app and abort if fatal errors are found \"前的勾去掉，点击Apply再点击OK. \n![](http://wuxiaolong.qiniudn.com/2013-11-22-Export-aborted-because-fatal-lint-errors-were-found-2.jpg)\n3、回到项目右击选择Android Tools->Clean Lint Markers,待项目自己更新完成即可。 \n这时就可以打包了。\n","slug":"Export-aborted-because-fatal-lint-errors-were-found","published":1,"updated":"2016-03-17T00:44:06.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrd200d1zspko1v3rvgy","thumbnailImageUrl":null},{"title":"Drawable /Bitmap、String/InputStream、Bitmap/byte[]互转","date":"2015-08-10T08:26:25.000Z","_content":"\n## Drawable互转Bitmap\n### Drawable转Bitmap\n```java\nResources res = getResources();\nDrawable drawable = res.getDrawable(R.drawable.myimage);\nBitmapDrawable bd = (BitmapDrawable) d;\nBitmap bm = bd.getBitmap();\n```\n<!--more-->\n\n```java\npublic static Bitmap drawableToBitmap(Drawable drawable) {       \n        Bitmap bitmap = Bitmap.createBitmap(\n                                        drawable.getIntrinsicWidth(),\n                                        drawable.getIntrinsicHeight(),\n                                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888\n                                                        : Bitmap.Config.RGB_565);\n        Canvas canvas = new Canvas(bitmap);\n        //canvas.setBitmap(bitmap);\n        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());\n        drawable.draw(canvas);\n        return bitmap;\n}\n```\n\n### Bitmap转Drawable\n```java\nBitmap bm=xxx; //xxx根据你的情况获取\nBitmapDrawable bd=BitmapDrawable(bm);\nBtimapDrawable是Drawable的子类，最终直接使用bd对象即可。\n\nmPicPath//本地图片路径转成Bitmap格式\nBitmap pic = BitmapFactory.decodeFile(this.mPicPath);\n\t\timage.setImageBitmap(pic);\n转成Bitmap格式\n```\n\n## String与InputStream相互转换\n\n### String to InputStream\n```java\nString str = \"String与InputStream相互转换\";\nInputStream   in_nocode   =   new   ByteArrayInputStream(str.getBytes());   \nInputStream   in_withcode   =   new   ByteArrayInputStream(str.getBytes(\"UTF-8\"));  \n```\n \n### InputStream to String\n    这里提供几个方法。\n方法1：\n```java\n  public String convertStreamToString(InputStream is) {   \n   BufferedReader reader = new BufferedReader(new InputStreamReader(is));   \n        StringBuilder sb = new StringBuilder();   \n    \n        String line = null;   \n        try {   \n            while ((line = reader.readLine()) != null) {   \n                sb.append(line + \"/n\");   \n            }   \n        } catch (IOException e) {   \n            e.printStackTrace();   \n        } finally {   \n            try {   \n                is.close();   \n            } catch (IOException e) {   \n                e.printStackTrace();   \n            }   \n        }   \n    \n        return sb.toString();   \n    }   \n```\n方法2：\n```java\npublic   String   inputStream2String   (InputStream   in)   throws   IOException   { \n        StringBuffer   out   =   new   StringBuffer(); \n        byte[]   b   =   new   byte[4096]; \n        for   (int   n;   (n   =   in.read(b))   !=   -1;)   { \n                out.append(new   String(b,   0,   n)); \n        } \n        return   out.toString(); \n} \n```\n方法3：\n```java\npublic   static   String   inputStream2String(InputStream   is)   throws   IOException{ \n        ByteArrayOutputStream   baos   =   new   ByteArrayOutputStream(); \n        int   i=-1; \n        while((i=is.read())!=-1){ \n        baos.write(i); \n        } \n       return   baos.toString(); \n}\n```\n\n\n## Bitmap 和 byte[]互转\n### Bitmap → byte[]\n```java\nprivate byte[] Bitmap2Bytes(Bitmap bm){\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    bm.compress(Bitmap.CompressFormat.PNG, 100, baos);\n    return baos.toByteArray();   }\n```\n    \n### byte[] → Bitmap\n```java\n   private Bitmap Bytes2Bimap(byte[] b){\n                    if(b.length!=0){\n                            return BitmapFactory.decodeByteArray(b, 0, b.length);\n                    }\n                    else {\n                            return null;\n                    }\n          }\n```","source":"_posts/Drawable-to-Bitmap.md","raw":"title: Drawable /Bitmap、String/InputStream、Bitmap/byte[]互转\ndate: 2015-08-10 16:26:25\ntags: [Drawable,Bitmap,String,InputStream,byte]\ncategory: Android\n---\n\n## Drawable互转Bitmap\n### Drawable转Bitmap\n```java\nResources res = getResources();\nDrawable drawable = res.getDrawable(R.drawable.myimage);\nBitmapDrawable bd = (BitmapDrawable) d;\nBitmap bm = bd.getBitmap();\n```\n<!--more-->\n\n```java\npublic static Bitmap drawableToBitmap(Drawable drawable) {       \n        Bitmap bitmap = Bitmap.createBitmap(\n                                        drawable.getIntrinsicWidth(),\n                                        drawable.getIntrinsicHeight(),\n                                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888\n                                                        : Bitmap.Config.RGB_565);\n        Canvas canvas = new Canvas(bitmap);\n        //canvas.setBitmap(bitmap);\n        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());\n        drawable.draw(canvas);\n        return bitmap;\n}\n```\n\n### Bitmap转Drawable\n```java\nBitmap bm=xxx; //xxx根据你的情况获取\nBitmapDrawable bd=BitmapDrawable(bm);\nBtimapDrawable是Drawable的子类，最终直接使用bd对象即可。\n\nmPicPath//本地图片路径转成Bitmap格式\nBitmap pic = BitmapFactory.decodeFile(this.mPicPath);\n\t\timage.setImageBitmap(pic);\n转成Bitmap格式\n```\n\n## String与InputStream相互转换\n\n### String to InputStream\n```java\nString str = \"String与InputStream相互转换\";\nInputStream   in_nocode   =   new   ByteArrayInputStream(str.getBytes());   \nInputStream   in_withcode   =   new   ByteArrayInputStream(str.getBytes(\"UTF-8\"));  \n```\n \n### InputStream to String\n    这里提供几个方法。\n方法1：\n```java\n  public String convertStreamToString(InputStream is) {   \n   BufferedReader reader = new BufferedReader(new InputStreamReader(is));   \n        StringBuilder sb = new StringBuilder();   \n    \n        String line = null;   \n        try {   \n            while ((line = reader.readLine()) != null) {   \n                sb.append(line + \"/n\");   \n            }   \n        } catch (IOException e) {   \n            e.printStackTrace();   \n        } finally {   \n            try {   \n                is.close();   \n            } catch (IOException e) {   \n                e.printStackTrace();   \n            }   \n        }   \n    \n        return sb.toString();   \n    }   \n```\n方法2：\n```java\npublic   String   inputStream2String   (InputStream   in)   throws   IOException   { \n        StringBuffer   out   =   new   StringBuffer(); \n        byte[]   b   =   new   byte[4096]; \n        for   (int   n;   (n   =   in.read(b))   !=   -1;)   { \n                out.append(new   String(b,   0,   n)); \n        } \n        return   out.toString(); \n} \n```\n方法3：\n```java\npublic   static   String   inputStream2String(InputStream   is)   throws   IOException{ \n        ByteArrayOutputStream   baos   =   new   ByteArrayOutputStream(); \n        int   i=-1; \n        while((i=is.read())!=-1){ \n        baos.write(i); \n        } \n       return   baos.toString(); \n}\n```\n\n\n## Bitmap 和 byte[]互转\n### Bitmap → byte[]\n```java\nprivate byte[] Bitmap2Bytes(Bitmap bm){\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    bm.compress(Bitmap.CompressFormat.PNG, 100, baos);\n    return baos.toByteArray();   }\n```\n    \n### byte[] → Bitmap\n```java\n   private Bitmap Bytes2Bimap(byte[] b){\n                    if(b.length!=0){\n                            return BitmapFactory.decodeByteArray(b, 0, b.length);\n                    }\n                    else {\n                            return null;\n                    }\n          }\n```","slug":"Drawable-to-Bitmap","published":1,"updated":"2016-03-17T00:44:06.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrd300d4zspkk4o9qbve","thumbnailImageUrl":null},{"title":"Android之滑动view","date":"2015-11-20T05:11:53.000Z","_content":"# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/DragView.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n<!--more-->\n# 获取坐标值方法\n![](http://7q5c2h.com1.z0.glb.clouddn.com/DragView.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n如图，要实现滑动效果，需要先了解以下方法。\n* View提供获取坐标方法\ngetTop():获取View自身顶边到其父布局顶边的距离\ngetLeft():获取View自身左边到其父布局左边的距离\ngetRight():获取View自身右边到其父布局右边的距离\ngetBottom():获取View自身底边到其父布局底边的距离\n\n* MotionEvent提供的方法\ngetX():获取点击点距离自身控件左边距离，即视图坐标\ngetY():获取点击点距离自身控件顶边距离，即视图坐标\ngetRawX():获取点击点距离整个屏幕左边距离，即绝对坐标\ngetRawY():获取点击点距离整个屏幕顶边距离，即绝对坐标\n\n# 实现DragView\n## 方法一\n```java\npublic class DragView extends View {\n    private int x, y;\n\n    public DragView(Context context) {\n        super(context);\n\n    }\n\n    public DragView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public DragView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                //在当前left、top、right、bottom的基础上加上偏移量\n                layout(getLeft() + offsetX,\n                        getTop() + offsetY,\n                        getRight() + offsetX,\n                        getBottom() + offsetY);\n\n                break;\n        }\n        return true;\n    }\n\n}\n```\n## 方法二\n```java\npublic class DragView extends View {\n    private int x, y;\n    //这里省略构造方法\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                offsetLeftAndRight(offsetX);//同时对left和right偏移\n                offsetTopAndBottom(offsetY);//同时对top和bottom偏移\n                break;\n        }\n        return true;\n    }\n}\n```\n## 方法三\n```java\n```java\npublic class DragView extends View {\n    private int x, y;\n    //这里省略构造方法\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                ViewGroup.MarginLayoutParams marginLayoutParams = \n                (ViewGroup.MarginLayoutParams) getLayoutParams();\n                marginLayoutParams.leftMargin = getLeft() + offsetX;\n                marginLayoutParams.topMargin = getTop() + offsetY;\n                setLayoutParams(marginLayoutParams);\n                break;\n        }\n        return true;\n    }\n}\n```\n## 方法四\n```java\npublic class DragView extends View {\n    private int x, y;\n    private Scroller mScroller;\n\n    public DragView(Context context) {\n        super(context);\n        initScroller(context);\n    }\n\n    public DragView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initScroller(context);\n    }\n\n    public DragView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initScroller(context);\n    }\n\n    private void initScroller(Context context) {\n        setBackgroundColor(Color.RED);\n        mScroller = new Scroller(context);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getRawX = (int) event.getRawX();\n        int getRawY = (int) event.getRawY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getRawX();\n                y = (int) event.getRawY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getRawX - x;\n                int offsetY = getRawY - y;\n                ((View) getParent()).scrollBy(-offsetX, -offsetY);\n                //重新设置初始坐标\n                x = getRawX;\n                y = getRawY;\n                break;\n            case MotionEvent.ACTION_UP:\n                /**\n                 * 实现拖动回弹回去，需配合方法一、二、四中任一方法\n                 */\n                View viewGroup = (View) getParent();\n                mScroller.startScroll(viewGroup.getScrollX(),\n                        viewGroup.getScrollY(),\n                        -viewGroup.getScrollX(),\n                        -viewGroup.getScrollY()\n                );\n                invalidate();\n                break;\n        }\n        return true;\n    }\n\n    @Override\n    public void computeScroll() {\n        super.computeScroll();\n        //判断Scroller是否执行完毕\n        if (mScroller.computeScrollOffset()) {\n            ((View) getParent()).scrollTo(\n                    mScroller.getCurrX(),\n                    mScroller.getCurrY());\n            invalidate();\n        }\n    }\n}\n```\nxml调用\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <com.wuxiaolong.apksample.DragView\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\" \n        android:background=\"@android:color/holo_red_light\"/>\n</LinearLayout>\n\n```\n## 方法五\n[属性动画](http://wuxiaolong.me/2015/11/23/Animator/)\n\n## 方法六\n[ViewDragHelper](http://wuxiaolong.me/2015/12/04/ViewDragHelper/)\n\n以上内容来自《Android群英传》\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","source":"_posts/DragView.md","raw":"title: Android之滑动view\ndate: 2015-11-20 13:11:53\ntags: DragView\ncategory: CustomView\n---\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/DragView.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n\n<!--more-->\n# 获取坐标值方法\n![](http://7q5c2h.com1.z0.glb.clouddn.com/DragView.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10)\n如图，要实现滑动效果，需要先了解以下方法。\n* View提供获取坐标方法\ngetTop():获取View自身顶边到其父布局顶边的距离\ngetLeft():获取View自身左边到其父布局左边的距离\ngetRight():获取View自身右边到其父布局右边的距离\ngetBottom():获取View自身底边到其父布局底边的距离\n\n* MotionEvent提供的方法\ngetX():获取点击点距离自身控件左边距离，即视图坐标\ngetY():获取点击点距离自身控件顶边距离，即视图坐标\ngetRawX():获取点击点距离整个屏幕左边距离，即绝对坐标\ngetRawY():获取点击点距离整个屏幕顶边距离，即绝对坐标\n\n# 实现DragView\n## 方法一\n```java\npublic class DragView extends View {\n    private int x, y;\n\n    public DragView(Context context) {\n        super(context);\n\n    }\n\n    public DragView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public DragView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                //在当前left、top、right、bottom的基础上加上偏移量\n                layout(getLeft() + offsetX,\n                        getTop() + offsetY,\n                        getRight() + offsetX,\n                        getBottom() + offsetY);\n\n                break;\n        }\n        return true;\n    }\n\n}\n```\n## 方法二\n```java\npublic class DragView extends View {\n    private int x, y;\n    //这里省略构造方法\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                offsetLeftAndRight(offsetX);//同时对left和right偏移\n                offsetTopAndBottom(offsetY);//同时对top和bottom偏移\n                break;\n        }\n        return true;\n    }\n}\n```\n## 方法三\n```java\n```java\npublic class DragView extends View {\n    private int x, y;\n    //这里省略构造方法\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getX = (int) event.getX();\n        int getY = (int) event.getY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getX();\n                y = (int) event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getX - x;\n                int offsetY = getY - y;\n                ViewGroup.MarginLayoutParams marginLayoutParams = \n                (ViewGroup.MarginLayoutParams) getLayoutParams();\n                marginLayoutParams.leftMargin = getLeft() + offsetX;\n                marginLayoutParams.topMargin = getTop() + offsetY;\n                setLayoutParams(marginLayoutParams);\n                break;\n        }\n        return true;\n    }\n}\n```\n## 方法四\n```java\npublic class DragView extends View {\n    private int x, y;\n    private Scroller mScroller;\n\n    public DragView(Context context) {\n        super(context);\n        initScroller(context);\n    }\n\n    public DragView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initScroller(context);\n    }\n\n    public DragView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initScroller(context);\n    }\n\n    private void initScroller(Context context) {\n        setBackgroundColor(Color.RED);\n        mScroller = new Scroller(context);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        int getRawX = (int) event.getRawX();\n        int getRawY = (int) event.getRawY();\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                // 记录触摸点坐标\n                x = (int) event.getRawX();\n                y = (int) event.getRawY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                //计算偏移量\n                int offsetX = getRawX - x;\n                int offsetY = getRawY - y;\n                ((View) getParent()).scrollBy(-offsetX, -offsetY);\n                //重新设置初始坐标\n                x = getRawX;\n                y = getRawY;\n                break;\n            case MotionEvent.ACTION_UP:\n                /**\n                 * 实现拖动回弹回去，需配合方法一、二、四中任一方法\n                 */\n                View viewGroup = (View) getParent();\n                mScroller.startScroll(viewGroup.getScrollX(),\n                        viewGroup.getScrollY(),\n                        -viewGroup.getScrollX(),\n                        -viewGroup.getScrollY()\n                );\n                invalidate();\n                break;\n        }\n        return true;\n    }\n\n    @Override\n    public void computeScroll() {\n        super.computeScroll();\n        //判断Scroller是否执行完毕\n        if (mScroller.computeScrollOffset()) {\n            ((View) getParent()).scrollTo(\n                    mScroller.getCurrX(),\n                    mScroller.getCurrY());\n            invalidate();\n        }\n    }\n}\n```\nxml调用\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <com.wuxiaolong.apksample.DragView\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\" \n        android:background=\"@android:color/holo_red_light\"/>\n</LinearLayout>\n\n```\n## 方法五\n[属性动画](http://wuxiaolong.me/2015/11/23/Animator/)\n\n## 方法六\n[ViewDragHelper](http://wuxiaolong.me/2015/12/04/ViewDragHelper/)\n\n以上内容来自《Android群英传》\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n","slug":"DragView","published":1,"updated":"2016-08-05T06:39:20.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrd600dgzspkxpx49kav","thumbnailImageUrl":null},{"title":"Android Design Support Library使用","date":"2015-11-06T05:08:01.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 相关博客\n[Android Design Support Library之NavigationView](http://wuxiaolong.me/2015/11/17/NavigationView/)\n[Android Design Support Library之CoordinatorLayout](http://wuxiaolong.me/2015/11/17/CoordinatorLayout/)\n[Android Design Support Library之CollapsingToolbarLayout](http://wuxiaolong.me/2015/11/17/CollapsingToolbarLayout/)\n[Android Design Support Library之TabLayout](http://wuxiaolong.me/2015/08/03/TabLayout/)\n[RecyclerView+CardView使用](http://wuxiaolong.me/2015/09/15/RecyclerViewCardView/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n## 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n","source":"_posts/DesignSupportLibrary.md","raw":"title: Android Design Support Library使用\ndate: 2015-11-06 13:08:01\ntags: DesignSupportLibrary\ncategory: DesignSupportLibrary\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n## 相关博客\n[Android Design Support Library之NavigationView](http://wuxiaolong.me/2015/11/17/NavigationView/)\n[Android Design Support Library之CoordinatorLayout](http://wuxiaolong.me/2015/11/17/CoordinatorLayout/)\n[Android Design Support Library之CollapsingToolbarLayout](http://wuxiaolong.me/2015/11/17/CollapsingToolbarLayout/)\n[Android Design Support Library之TabLayout](http://wuxiaolong.me/2015/08/03/TabLayout/)\n[RecyclerView+CardView使用](http://wuxiaolong.me/2015/09/15/RecyclerViewCardView/)\n\n## 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n## 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n","slug":"DesignSupportLibrary","published":1,"updated":"2016-03-22T05:44:15.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrd800dkzspka4ffw1b6","thumbnailImageUrl":null},{"title":"Android Defining Custom Animations","date":"2015-05-05T16:00:00.000Z","_content":"\n[官网Defining Custom Animations](https://developer.android.com/training/material/animations.html#Transitions)\n","source":"_posts/Defining_Custom_Animations.md","raw":"title: Android Defining Custom Animations\ndate: 2015-05-06 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n[官网Defining Custom Animations](https://developer.android.com/training/material/animations.html#Transitions)\n","slug":"Defining_Custom_Animations","published":1,"updated":"2016-03-17T00:44:06.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrda00dpzspky6imz5xm","thumbnailImageUrl":null},{"title":"Android CustomView","date":"2016-01-01T07:40:16.000Z","_content":"# View工作流程\nView工作流程主要指measure、layout、draw这三个流程，即测量、布局和绘制，其中measure确定View的测量的宽/高，layout确定View的最终宽/高和四个顶点的位置，draw将View绘制到屏幕上。\n<!--more-->\n## measure\n为了更好理解measure过程，先了解MeasureSpec，MeasureSpec代表一个32位int值，高2位代表SpecMode，低30位代表SpecSize（这句话不知道几个意思）。SpecMode指的测量模式，SpecSize指在某种测量模式下规格大小。\n\nSpecMode有三种：\n* EXACTLY\n精确值模式，父容器已经检测出View所需要的精确大小，这时候View的最终大小就是SpecSize所指定的值。它对应代码LayoutParams（控件layout_width属性和layout_height属性）中match_parent和具体数值。\n* AT_MOST\n最大值模式，父容器指定了一个可用大小值，只要不超过父容器允许最大尺寸即可。它对应代码LayoutParams（控件layout_width属性和layout_height属性）中wrap_content。\n\n* UNSPECIFIED\n父容器不对View有任何限制，要多大给多大，这种情况一般用于系统内部，表示一种测量的状态。\n\n自定义控件不重写onMeasure()，View类默认只支持EXACTLY模式，如果让View支持wrap_content属性，必须重写onMeasure()来指定wrap_content大小。代码如下：\n```java\n int mWidth = 400, mHeight = 200;\n @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), Math.min(mHeight, heightSpecSize));\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, Math.min(mHeight, heightSpecSize));\n        }\n    }\n```\nsetMeasuredDimension方法会设置View宽/高的测量值\n## layout\nlayout的作用是ViewGroup用来确定子元素的位置，当ViewGroup的位置被确定后，他在onLayout会遍历所有子元素并调用其layout方法。\nlayout方法大致流程：首先通过setFrame设定View四个顶点位置，View四个顶点一旦确定，那么它在父容器中位置也就确定了。\n## draw\n重写onDraw()方法，并在Canvas对象上绘制所需要的图形，关于Canvas详见博客：[Android之画笔Paint和画布Canvas及实例练习圆角、刮刮卡、圆形头像、倒影效果](http://wuxiaolong.me/2015/12/06/PaintCanvas/)\n\n# 自定义attrs属性\n## attrs.xml\nvalues目录下创建attrs.xml\n```js \n<resources>\n    <!--<declare-styleable>声明自定义属性-->\n    <declare-styleable name=\"CircleView\">\n\t    <!--<attr>声明具体自定义属性-->\n        <attr name=\"circle_color\" format=\"color\" />\n    </declare-styleable>\n</resources>\n```\n这里format的color指的颜色。其他：reference指资源ID；dimension指尺寸；string、integer、boolean指基本数据类型。也可以用“|”来分隔不同的属性。\n## 完整代码\n```java\npublic class CustomView extends View {\n    int mWidth = 500, mHeight = 450;\n    int mCircleColor;\n    Paint mPaint;\n\n    public CustomView(Context context) {\n        super(context);\n    }\n\n    public CustomView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context, attrs);\n    }\n\n    public CustomView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context, attrs);\n    }\n\n    private void init(Context context, AttributeSet attrs) {\n        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.CircleView);\n        mCircleColor = typedArray.getColor(R.styleable.CircleView_circle_color, Color.RED);//如果没有指定颜色，默认红色\n        typedArray.recycle();\n        mPaint = new Paint();\n        mPaint.setColor(mCircleColor);\n        mPaint.setAntiAlias(true);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n        //view支持wrap_content\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), Math.min(mHeight, heightSpecSize));\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, Math.min(mHeight, heightSpecSize));\n        }\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        //支持padding，不然padding属性无效\n        int paddingLeft = getPaddingLeft();\n        int paddingTop = getPaddingTop();\n        int paddingRight = getPaddingRight();\n        int paddingBottom = getPaddingBottom();\n        int width = getWidth() - paddingLeft - paddingRight;\n        int height = getHeight() - paddingTop - paddingBottom;\n        int radius = Math.min(width, height) / 2;\n        canvas.drawCircle(paddingLeft + width / 2, paddingTop + height / 2, radius, mPaint);\n    }\n}\n```\n## xml引用\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:circle=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.wuxiaolong.apksample.CustomViewActivity\">\n\n    <com.wuxiaolong.apksample.CustomView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:paddingTop=\"10dp\"\n        android:background=\"@android:color/darker_gray\"\n        circle:circle_color=\"@android:color/holo_blue_light\" />\n</RelativeLayout>\n```\n布局文件添加schemas声明： xmlns:circle=\"http://schemas.android.com/apk/res-auto\" ，这里circle是自定义前缀，名字随便取。但与下面CustomView中自定义属性circle:circle_color=\"\"前缀一致。另外也可以声明 xmlns:circle=\"http://schemas.android.com/apk/res/包名\" ，效果是一样的。\n\n感谢《Android群英传》《Android开发艺术探索》。\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/CustomView.md","raw":"title: Android CustomView\ndate: 2016-01-01 15:40:16\ntags: CustomView\ncategory: CustomView \n---\n# View工作流程\nView工作流程主要指measure、layout、draw这三个流程，即测量、布局和绘制，其中measure确定View的测量的宽/高，layout确定View的最终宽/高和四个顶点的位置，draw将View绘制到屏幕上。\n<!--more-->\n## measure\n为了更好理解measure过程，先了解MeasureSpec，MeasureSpec代表一个32位int值，高2位代表SpecMode，低30位代表SpecSize（这句话不知道几个意思）。SpecMode指的测量模式，SpecSize指在某种测量模式下规格大小。\n\nSpecMode有三种：\n* EXACTLY\n精确值模式，父容器已经检测出View所需要的精确大小，这时候View的最终大小就是SpecSize所指定的值。它对应代码LayoutParams（控件layout_width属性和layout_height属性）中match_parent和具体数值。\n* AT_MOST\n最大值模式，父容器指定了一个可用大小值，只要不超过父容器允许最大尺寸即可。它对应代码LayoutParams（控件layout_width属性和layout_height属性）中wrap_content。\n\n* UNSPECIFIED\n父容器不对View有任何限制，要多大给多大，这种情况一般用于系统内部，表示一种测量的状态。\n\n自定义控件不重写onMeasure()，View类默认只支持EXACTLY模式，如果让View支持wrap_content属性，必须重写onMeasure()来指定wrap_content大小。代码如下：\n```java\n int mWidth = 400, mHeight = 200;\n @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), Math.min(mHeight, heightSpecSize));\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, Math.min(mHeight, heightSpecSize));\n        }\n    }\n```\nsetMeasuredDimension方法会设置View宽/高的测量值\n## layout\nlayout的作用是ViewGroup用来确定子元素的位置，当ViewGroup的位置被确定后，他在onLayout会遍历所有子元素并调用其layout方法。\nlayout方法大致流程：首先通过setFrame设定View四个顶点位置，View四个顶点一旦确定，那么它在父容器中位置也就确定了。\n## draw\n重写onDraw()方法，并在Canvas对象上绘制所需要的图形，关于Canvas详见博客：[Android之画笔Paint和画布Canvas及实例练习圆角、刮刮卡、圆形头像、倒影效果](http://wuxiaolong.me/2015/12/06/PaintCanvas/)\n\n# 自定义attrs属性\n## attrs.xml\nvalues目录下创建attrs.xml\n```js \n<resources>\n    <!--<declare-styleable>声明自定义属性-->\n    <declare-styleable name=\"CircleView\">\n\t    <!--<attr>声明具体自定义属性-->\n        <attr name=\"circle_color\" format=\"color\" />\n    </declare-styleable>\n</resources>\n```\n这里format的color指的颜色。其他：reference指资源ID；dimension指尺寸；string、integer、boolean指基本数据类型。也可以用“|”来分隔不同的属性。\n## 完整代码\n```java\npublic class CustomView extends View {\n    int mWidth = 500, mHeight = 450;\n    int mCircleColor;\n    Paint mPaint;\n\n    public CustomView(Context context) {\n        super(context);\n    }\n\n    public CustomView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context, attrs);\n    }\n\n    public CustomView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context, attrs);\n    }\n\n    private void init(Context context, AttributeSet attrs) {\n        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.CircleView);\n        mCircleColor = typedArray.getColor(R.styleable.CircleView_circle_color, Color.RED);//如果没有指定颜色，默认红色\n        typedArray.recycle();\n        mPaint = new Paint();\n        mPaint.setColor(mCircleColor);\n        mPaint.setAntiAlias(true);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n        //view支持wrap_content\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), Math.min(mHeight, heightSpecSize));\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(Math.min(mWidth, widthSpecSize), heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, Math.min(mHeight, heightSpecSize));\n        }\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        //支持padding，不然padding属性无效\n        int paddingLeft = getPaddingLeft();\n        int paddingTop = getPaddingTop();\n        int paddingRight = getPaddingRight();\n        int paddingBottom = getPaddingBottom();\n        int width = getWidth() - paddingLeft - paddingRight;\n        int height = getHeight() - paddingTop - paddingBottom;\n        int radius = Math.min(width, height) / 2;\n        canvas.drawCircle(paddingLeft + width / 2, paddingTop + height / 2, radius, mPaint);\n    }\n}\n```\n## xml引用\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:circle=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\"com.wuxiaolong.apksample.CustomViewActivity\">\n\n    <com.wuxiaolong.apksample.CustomView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:paddingTop=\"10dp\"\n        android:background=\"@android:color/darker_gray\"\n        circle:circle_color=\"@android:color/holo_blue_light\" />\n</RelativeLayout>\n```\n布局文件添加schemas声明： xmlns:circle=\"http://schemas.android.com/apk/res-auto\" ，这里circle是自定义前缀，名字随便取。但与下面CustomView中自定义属性circle:circle_color=\"\"前缀一致。另外也可以声明 xmlns:circle=\"http://schemas.android.com/apk/res/包名\" ，效果是一样的。\n\n感谢《Android群英传》《Android开发艺术探索》。\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"CustomView","published":1,"updated":"2016-08-05T06:39:20.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdc00dtzspk0u88mo9k","thumbnailImageUrl":null},{"title":"Android之CustomToast","date":"2015-04-16T16:00:00.000Z","_content":"\n一、简单的CustomToast\n\nJava\n\n```java\npublic class CustomToast {\n\tprivate String tip = \"\";\n\tprivate Activity activity;\n\tprivate int duration;\n\n\tpublic CustomToast(Activity activity, String tip, int duration) {\n\t\tthis.tip = tip;\n\t\tthis.activity = activity;\n\t\tthis.duration = duration;\n\t}\n\n\t@SuppressLint(\"InflateParams\")\n\tpublic void show() {\n\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\tView view = inflater.inflate(R.layout.custom_toast, null);\n\t\tTextView txt = (TextView) view.findViewById(R.id.txt);\n\t\ttxt.setText(tip);\n\t\tToast toast = new Toast(activity);\n\t\t// toast.setGravity(Gravity.CENTER | Gravity.TOP, 12, 40);\n\t\ttoast.setDuration(duration);\n\t\ttoast.setView(view);\n\t\ttoast.show();\n\t}\n}\n```\n\n<!-- more -->\n\ncustom_toast.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/shape_toast\"\n        android:orientation=\"vertical\" >\n\n        <TextView\n            android:id=\"@+id/txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"5dp\"\n            android:textColor=\"@android:color/white\"\n            android:textSize=\"@dimen/text_size_medium\" />\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n调用\n\n```java\nnew CustomToast(WelcomeActivity.this,\"番茄-视频专辑app，下载地址：http://app.mi.com/detail/65621\",Toast.LENGTH_SHORT).show();\n```\n\n二、重写继承Toast\n\nJava\n\n```java\npublic class TipsToast extends Toast {\n\n    public TipsToast(Context context) {\n        super(context);\n    }\n\n    @SuppressLint(\"InflateParams\")\n\tpublic static TipsToast makeText(Context context, CharSequence text, int duration) {\n        TipsToast result = new TipsToast(context);\n\n        LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(R.layout.view_tips, null);\n        TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n        TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n        msgTxt.setVisibility(View.GONE);\n        tv.setText(text);\n\n        result.setView(v);\n        // setGravity方法用于设置位置，此处为垂直居中\n        result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n        result.setDuration(duration);\n\n        return result;\n    }\n\n    @SuppressLint(\"InflateParams\")\n   \tpublic static TipsToast makeText(Context context, CharSequence text, CharSequence msg, int duration) {\n           TipsToast result = new TipsToast(context);\n\n           LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n           View v = inflate.inflate(R.layout.view_tips, null);\n           TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n           TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n           tv.setText(text);\n           msgTxt.setVisibility(View.VISIBLE);\n           msgTxt.setText(msg);\n\n           result.setView(v);\n           // setGravity方法用于设置位置，此处为垂直居中\n           result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n           result.setDuration(duration);\n\n           return result;\n       }\n    \n    \n    public static TipsToast makeText(Context context, int resId, int duration) throws Resources.NotFoundException {\n        return makeText(context, context.getResources().getText(resId), duration);\n    }\n\n    public void setIcon(int iconResId) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        ImageView iv = (ImageView) getView().findViewById(R.id.tips_icon);\n        if (iv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        iv.setImageResource(iconResId);\n    }\n    @Override\n    public void setText(CharSequence s) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        TextView tv = (TextView) getView().findViewById(R.id.tips_msg);\n        if (tv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        tv.setText(s);\n    }\n}\n```\n\nview_tips.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@drawable/tips_bg\" >\n\n    <!-- 撑开布局 -->\n    <View\n        android:layout_width=\"170dp\"\n        android:layout_height=\"150dp\"\n        \n        android:layout_centerInParent=\"true\" />\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\" >\n\n        <ImageView\n            android:id=\"@+id/tips_icon\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"10.0dip\"\n            android:gravity=\"center\" />\n\n        <TextView\n            android:id=\"@+id/tips_msg\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:maxWidth=\"180dip\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\" />\n        \n        <TextView\n            android:id=\"@+id/tips_msg_txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\"\n            android:visibility=\"gone\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n调用\n\n```java\nTipsToast tipsToast = TipsToast.makeText(context.getApplication().getBaseContext(),\"今日情感app，下载地址：http://app.mi.com/detail/30499\",TipsToast.LENGTH_SHORT);\ntipsToast.setIcon(R.drawable.warn);\ntipsToast.show();\n\t\n```\n","source":"_posts/CustomToast.md","raw":"title: Android之CustomToast\ndate: 2015-04-17 \ncategories: [Android]\ntags: [Android]\n---\n\n一、简单的CustomToast\n\nJava\n\n```java\npublic class CustomToast {\n\tprivate String tip = \"\";\n\tprivate Activity activity;\n\tprivate int duration;\n\n\tpublic CustomToast(Activity activity, String tip, int duration) {\n\t\tthis.tip = tip;\n\t\tthis.activity = activity;\n\t\tthis.duration = duration;\n\t}\n\n\t@SuppressLint(\"InflateParams\")\n\tpublic void show() {\n\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\tView view = inflater.inflate(R.layout.custom_toast, null);\n\t\tTextView txt = (TextView) view.findViewById(R.id.txt);\n\t\ttxt.setText(tip);\n\t\tToast toast = new Toast(activity);\n\t\t// toast.setGravity(Gravity.CENTER | Gravity.TOP, 12, 40);\n\t\ttoast.setDuration(duration);\n\t\ttoast.setView(view);\n\t\ttoast.show();\n\t}\n}\n```\n\n<!-- more -->\n\ncustom_toast.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/shape_toast\"\n        android:orientation=\"vertical\" >\n\n        <TextView\n            android:id=\"@+id/txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"5dp\"\n            android:textColor=\"@android:color/white\"\n            android:textSize=\"@dimen/text_size_medium\" />\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n调用\n\n```java\nnew CustomToast(WelcomeActivity.this,\"番茄-视频专辑app，下载地址：http://app.mi.com/detail/65621\",Toast.LENGTH_SHORT).show();\n```\n\n二、重写继承Toast\n\nJava\n\n```java\npublic class TipsToast extends Toast {\n\n    public TipsToast(Context context) {\n        super(context);\n    }\n\n    @SuppressLint(\"InflateParams\")\n\tpublic static TipsToast makeText(Context context, CharSequence text, int duration) {\n        TipsToast result = new TipsToast(context);\n\n        LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(R.layout.view_tips, null);\n        TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n        TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n        msgTxt.setVisibility(View.GONE);\n        tv.setText(text);\n\n        result.setView(v);\n        // setGravity方法用于设置位置，此处为垂直居中\n        result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n        result.setDuration(duration);\n\n        return result;\n    }\n\n    @SuppressLint(\"InflateParams\")\n   \tpublic static TipsToast makeText(Context context, CharSequence text, CharSequence msg, int duration) {\n           TipsToast result = new TipsToast(context);\n\n           LayoutInflater inflate = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n           View v = inflate.inflate(R.layout.view_tips, null);\n           TextView tv = (TextView) v.findViewById(R.id.tips_msg);\n           TextView msgTxt = (TextView) v.findViewById(R.id.tips_msg_txt);\n           tv.setText(text);\n           msgTxt.setVisibility(View.VISIBLE);\n           msgTxt.setText(msg);\n\n           result.setView(v);\n           // setGravity方法用于设置位置，此处为垂直居中\n           result.setGravity(Gravity.CENTER_VERTICAL, 0, 0);\n           result.setDuration(duration);\n\n           return result;\n       }\n    \n    \n    public static TipsToast makeText(Context context, int resId, int duration) throws Resources.NotFoundException {\n        return makeText(context, context.getResources().getText(resId), duration);\n    }\n\n    public void setIcon(int iconResId) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        ImageView iv = (ImageView) getView().findViewById(R.id.tips_icon);\n        if (iv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        iv.setImageResource(iconResId);\n    }\n    @Override\n    public void setText(CharSequence s) {\n        if (getView() == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        TextView tv = (TextView) getView().findViewById(R.id.tips_msg);\n        if (tv == null) {\n            throw new RuntimeException(\"This Toast was not created with Toast.makeText()\");\n        }\n        tv.setText(s);\n    }\n}\n```\n\nview_tips.xml\n\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center\"\n    android:background=\"@drawable/tips_bg\" >\n\n    <!-- 撑开布局 -->\n    <View\n        android:layout_width=\"170dp\"\n        android:layout_height=\"150dp\"\n        \n        android:layout_centerInParent=\"true\" />\n\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:orientation=\"vertical\" >\n\n        <ImageView\n            android:id=\"@+id/tips_icon\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:layout_marginBottom=\"10.0dip\"\n            android:gravity=\"center\" />\n\n        <TextView\n            android:id=\"@+id/tips_msg\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:maxWidth=\"180dip\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\" />\n        \n        <TextView\n            android:id=\"@+id/tips_msg_txt\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            android:gravity=\"center\"\n            android:lineSpacingExtra=\"3.0dip\"\n            android:textColor=\"#ffffffff\"\n            android:textSize=\"17.0sp\"\n            android:visibility=\"gone\" />\n    </LinearLayout>\n\n</RelativeLayout>\n```\n\n调用\n\n```java\nTipsToast tipsToast = TipsToast.makeText(context.getApplication().getBaseContext(),\"今日情感app，下载地址：http://app.mi.com/detail/30499\",TipsToast.LENGTH_SHORT);\ntipsToast.setIcon(R.drawable.warn);\ntipsToast.show();\n\t\n```\n","slug":"CustomToast","published":1,"updated":"2016-03-17T00:44:06.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrde00dxzspktzjbjxr1","thumbnailImageUrl":null},{"title":"Android Creating Custom Views","date":"2015-04-27T16:00:00.000Z","_content":"\n>最近好烦，发现代码是写过不少，也做过十来个大大小小的项目，不过只是实现功能罢了，没有停下来多看看代码，我这样写再多都是妄劳，只不过复制粘贴代码。行吧，停止写代码，抓抓基础，整装待发。\n\n\n## 一、自定义View\n\n1、[【官网】Creating Custom Views](http://developer.android.com/training/custom-views/index.html)\n\n2、[Creating custom and compound Views in Android](http://www.vogella.com/tutorials/AndroidCustomViews/article.html)\n\n3、[Android LayoutInflater原理分析，带你一步步深入了解View(一)](http://blog.csdn.net/guolin_blog/article/details/12921889)\n\n4、[Android视图绘制流程完全解析，带你一步步深入了解View(二)](http://blog.csdn.net/guolin_blog/article/details/16330267)\n\n5、[Android视图状态及重绘流程分析，带你一步步深入了解View(三)](http://blog.csdn.net/guolin_blog/article/details/17045157)\n\n6、[Android自定义View的实现方法，带你一步步深入了解View(四)](http://blog.csdn.net/guolin_blog/article/details/17357967)\n\n<!-- more -->\n\n## 二、必看开源库\n\n1、[android-async-http](https://github.com/loopj/android-async-http)\n\n2、[Android-Universal-Image-Loader](https://github.com/nostra13/Android-Universal-Image-Loader)\n\n3、[PhotoView](https://github.com/chrisbanes/PhotoView)\n\n4、[android-volley](https://github.com/mcxiaoke/android-volley)\n\n5、[picasso](https://github.com/square/picasso)\n\nPS：循序渐进，慢慢看，一天进步一点点。\n","source":"_posts/CreatingCustomViews.md","raw":"title: Android Creating Custom Views\ndate: 2015-04-28 \ncategories: CustomView\ntags: CustomView\n---\n\n>最近好烦，发现代码是写过不少，也做过十来个大大小小的项目，不过只是实现功能罢了，没有停下来多看看代码，我这样写再多都是妄劳，只不过复制粘贴代码。行吧，停止写代码，抓抓基础，整装待发。\n\n\n## 一、自定义View\n\n1、[【官网】Creating Custom Views](http://developer.android.com/training/custom-views/index.html)\n\n2、[Creating custom and compound Views in Android](http://www.vogella.com/tutorials/AndroidCustomViews/article.html)\n\n3、[Android LayoutInflater原理分析，带你一步步深入了解View(一)](http://blog.csdn.net/guolin_blog/article/details/12921889)\n\n4、[Android视图绘制流程完全解析，带你一步步深入了解View(二)](http://blog.csdn.net/guolin_blog/article/details/16330267)\n\n5、[Android视图状态及重绘流程分析，带你一步步深入了解View(三)](http://blog.csdn.net/guolin_blog/article/details/17045157)\n\n6、[Android自定义View的实现方法，带你一步步深入了解View(四)](http://blog.csdn.net/guolin_blog/article/details/17357967)\n\n<!-- more -->\n\n## 二、必看开源库\n\n1、[android-async-http](https://github.com/loopj/android-async-http)\n\n2、[Android-Universal-Image-Loader](https://github.com/nostra13/Android-Universal-Image-Loader)\n\n3、[PhotoView](https://github.com/chrisbanes/PhotoView)\n\n4、[android-volley](https://github.com/mcxiaoke/android-volley)\n\n5、[picasso](https://github.com/square/picasso)\n\nPS：循序渐进，慢慢看，一天进步一点点。\n","slug":"CreatingCustomViews","published":1,"updated":"2016-08-05T06:39:20.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdh00e0zspkr9z6d6ig","thumbnailImageUrl":null},{"title":"Android Design Support Library之CoordinatorLayout","date":"2015-11-17T06:18:00.000Z","_content":"# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n# 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n# 使用方法\nGradle 中添加下面依赖\n```java\ncompile 'com.android.support:design:23.1.0'\n```\n\n# CoordinatorLayout\n```java\n<android.support.design.widget.CoordinatorLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n     <! --Your Scrollable View 只支持RecyclerView和NestedScrollView-->\n    <android.support.v7.widget.RecyclerView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" />\n\n    <android.support.design.widget.AppBarLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n            <android.support.v7.widget.Toolbar\n                  android:id=\"@+id/toolbar\"\n                  android:layout_width=\"match_parent\"\n                  android:layout_height=\"?attr/actionBarSize\"\n                  android:background=\"@color/primary\"\n                  app:layout_scrollFlags=\"scroll|enterAlways\">\n\n            <android.support.design.widget.TabLayout\n                  android:layout_width=\"match_parent\"\n                  android:layout_height=\"wrap_content\"\n                  app:layout_scrollFlags=\"scroll|enterAlways\">\n     </android.support.design.widget.AppBarLayout>\n\t \n\t<android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"bottom|end\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@android:drawable/ic_dialog_email\" />\n</android.support.design.widget.CoordinatorLayout>\n```\n说明：\n1、 给这个可滚动组件设置了layout_behavior \n2、 给另一个控件设置了layout_scrollFlags \n3、当设置了layout_behavior的控件滑动时，就会触发设置了layout_scrollFlags的控件发生状态的改变。\n\n设置的layout_scrollFlags有如下几种选项：\n（1） scroll: 所有想滚动出屏幕的view都需要设置这个flag，没有设置这个flag的view将被固定在屏幕顶部。\n（2） enterAlways: 这个flag让任意向下的滚动都会导致该view变为可见，启用快速“返回模式”。\n（3） enterAlwaysCollapsed: 当你的视图已经设置minHeight属性又使用此标志时，你的视图只能已最小高度进入，只有当滚动 视图到达顶部时才扩大到完整高度。\n（4）exitUntilCollapsed：滚动退出屏幕，最后折叠在顶端。\n\nFloatingActionButton\nandroid:layout_gravity=”bottom|end”来确定 FAB的位置在底端的最右边的位置\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[http://developer.android.com/intl/zh-cn/reference/android/support/design/widget/CoordinatorLayout.html](http://developer.android.com/intl/zh-cn/reference/android/support/design/widget/CoordinatorLayout.html)\n\n","source":"_posts/CoordinatorLayout.md","raw":"title: Android Design Support Library之CoordinatorLayout\ndate: 2015-11-17 14:18:00\ntags: CoordinatorLayout\ncategory: SupportLibrary \n---\n# 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n# 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n\n# 使用方法\nGradle 中添加下面依赖\n```java\ncompile 'com.android.support:design:23.1.0'\n```\n\n# CoordinatorLayout\n```java\n<android.support.design.widget.CoordinatorLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n     <! --Your Scrollable View 只支持RecyclerView和NestedScrollView-->\n    <android.support.v7.widget.RecyclerView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" />\n\n    <android.support.design.widget.AppBarLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n            <android.support.v7.widget.Toolbar\n                  android:id=\"@+id/toolbar\"\n                  android:layout_width=\"match_parent\"\n                  android:layout_height=\"?attr/actionBarSize\"\n                  android:background=\"@color/primary\"\n                  app:layout_scrollFlags=\"scroll|enterAlways\">\n\n            <android.support.design.widget.TabLayout\n                  android:layout_width=\"match_parent\"\n                  android:layout_height=\"wrap_content\"\n                  app:layout_scrollFlags=\"scroll|enterAlways\">\n     </android.support.design.widget.AppBarLayout>\n\t \n\t<android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"bottom|end\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@android:drawable/ic_dialog_email\" />\n</android.support.design.widget.CoordinatorLayout>\n```\n说明：\n1、 给这个可滚动组件设置了layout_behavior \n2、 给另一个控件设置了layout_scrollFlags \n3、当设置了layout_behavior的控件滑动时，就会触发设置了layout_scrollFlags的控件发生状态的改变。\n\n设置的layout_scrollFlags有如下几种选项：\n（1） scroll: 所有想滚动出屏幕的view都需要设置这个flag，没有设置这个flag的view将被固定在屏幕顶部。\n（2） enterAlways: 这个flag让任意向下的滚动都会导致该view变为可见，启用快速“返回模式”。\n（3） enterAlwaysCollapsed: 当你的视图已经设置minHeight属性又使用此标志时，你的视图只能已最小高度进入，只有当滚动 视图到达顶部时才扩大到完整高度。\n（4）exitUntilCollapsed：滚动退出屏幕，最后折叠在顶端。\n\nFloatingActionButton\nandroid:layout_gravity=”bottom|end”来确定 FAB的位置在底端的最右边的位置\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[http://developer.android.com/intl/zh-cn/reference/android/support/design/widget/CoordinatorLayout.html](http://developer.android.com/intl/zh-cn/reference/android/support/design/widget/CoordinatorLayout.html)\n\n","slug":"CoordinatorLayout","published":1,"updated":"2016-08-05T06:39:20.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdj00e3zspk2t7s26jq","thumbnailImageUrl":null},{"title":"Android下Context、Activity、Application之间有什么区别","date":"2015-01-12T16:00:00.000Z","_content":"\n在开发Android程序的时候，我们经常要跟Context、Activity、Application这三个类打交道，那么这个三个类之间有什么联系和区别呢？\n\n首先Activity和Application都是Context的子类。Context从字面上理解就是上下文的意思，在实际应用中它也确实是起到了管理上下文环境中各个参数和变量的总用，方便我们可以简单的访问到各种资源。虽然Activity和Application都是Context的子类，但是他们维护的生命周期不一样。前者维护一个Acitivity的生命周期，所以其对应的Context也只能访问该activity内的各种资源。后者则是维护一个Application的证明周期。\n","source":"_posts/Context-Activity.md","raw":"title: Android下Context、Activity、Application之间有什么区别\ndate: 2015-01-13 \ncategories: [Android]\ntags: [Android]\n---\n\n在开发Android程序的时候，我们经常要跟Context、Activity、Application这三个类打交道，那么这个三个类之间有什么联系和区别呢？\n\n首先Activity和Application都是Context的子类。Context从字面上理解就是上下文的意思，在实际应用中它也确实是起到了管理上下文环境中各个参数和变量的总用，方便我们可以简单的访问到各种资源。虽然Activity和Application都是Context的子类，但是他们维护的生命周期不一样。前者维护一个Acitivity的生命周期，所以其对应的Context也只能访问该activity内的各种资源。后者则是维护一个Application的证明周期。\n","slug":"Context-Activity","published":1,"updated":"2016-03-17T00:44:06.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdl00e7zspk9fpk0ded","thumbnailImageUrl":null},{"title":"Android Design Support Library之CollapsingToolbarLayout","date":"2015-11-17T06:18:22.000Z","_content":"## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n## 使用方法\nGradle 中添加下面依赖\n```java\ncompile 'com.android.support:design:23.1.0'\n```\n## CollapsingToolbarLayout\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\"com.wuxiaolong.designsupportlibrarysample.DetailActivity\">\n\n    <android.support.design.widget.AppBarLayout\n        android:id=\"@+id/appbar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"350dp\"\n        android:fitsSystemWindows=\"true\"\n        android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\n\n        <android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/collapsing_toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:contentScrim=\"?attr/colorPrimary\"\n            app:expandedTitleMarginEnd=\"64dp\"\n            app:expandedTitleMarginStart=\"48dp\"\n            app:layout_scrollFlags=\"scroll|exitUntilCollapsed\">\n\n            <ImageView\n                android:id=\"@+id/backdrop\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:fitsSystemWindows=\"true\"\n                android:scaleType=\"centerCrop\"\n                android:src=\"@mipmap/show_img\"\n                app:layout_collapseMode=\"parallax\" />\n\n            <android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:layout_collapseMode=\"pin\" />\n\n\n        </android.support.design.widget.CollapsingToolbarLayout>\n    </android.support.design.widget.AppBarLayout>\n\n\n    <android.support.v4.widget.NestedScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:paddingTop=\"24dp\"\n            android:text=\"@string/show_text\" />\n    </android.support.v4.widget.NestedScrollView>\n\n    <android.support.design.widget.FloatingActionButton\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        android:src=\"@android:drawable/ic_dialog_dialer\"\n        app:layout_anchor=\"@id/appbar\"\n        app:layout_anchorGravity=\"bottom|right|end\" />\n\n    <android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|end\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        android:src=\"@android:drawable/ic_dialog_email\" />\n\n</android.support.design.widget.CoordinatorLayout>\n\n```\n说明\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n这是两个Flag控制滚动时候CollapsingToolbarLayout的表现。 \nScroll，表示向下滚动列表时候\nCollapsingToolbarLayout会滚出屏幕并且消失\nexitUntilCollapsed，表示这个layout会一直滚动离开屏幕范围，直到它收折成它的最小高度\n\n设置折叠后Toolbar的颜色\napp:contentScrim=\"?attr/colorPrimary\"\n\n\napp:layout_collapseMode=\"parallax\"\n设置视差模式。parallax，表示滚动过程中,会一直保持可见区域在正中间；pin，表示不会被滚出屏幕范围。\n也可以设置视差的系数app:layout_collapseParallaxMultiplier=\"0.7\"，介于 0.0-1.0之间\n\n设置展开状态改变标题文字的位置\napp:expandedTitleMargin、 app:expandedTitleMarginBottom、app:expandedTitleMarginEnd 、 app:expandedTitleMarginStart\n\n设置在折叠和展开状态时改变文本的显示\napp:collapsedTitleTextAppearance 和 app:expandedTitleTextAppearance \n\n\nFloatingActionButton\n\n设置锚点属性\napp:layout_anchor=\"@id/appbar\"\n意思是FAB浮动按钮显示在哪个布局区域。 \n\n设置当前锚点的位置\napp:layout_anchorGravity=”bottom|end|right”\n意思FAB浮动按钮在这个布局区域的具体位置。 \n两个属性共同作用才是的FAB 浮动按钮也能折叠消失，出现。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html](https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html)","source":"_posts/CollapsingToolbarLayout.md","raw":"title: Android Design Support Library之CollapsingToolbarLayout\ndate: 2015-11-17 14:18:22\ntags: CollapsingToolbarLayout\ncategory: SupportLibrary\n---\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/designsupportlibrarysample.gif)\n\n<!--more-->\n\n## 实例App\n![](http://7q5c2h.com1.z0.glb.clouddn.com/dashishuoDownload.png)\n## 使用方法\nGradle 中添加下面依赖\n```java\ncompile 'com.android.support:design:23.1.0'\n```\n## CollapsingToolbarLayout\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\"com.wuxiaolong.designsupportlibrarysample.DetailActivity\">\n\n    <android.support.design.widget.AppBarLayout\n        android:id=\"@+id/appbar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"350dp\"\n        android:fitsSystemWindows=\"true\"\n        android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\n\n        <android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/collapsing_toolbar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            app:contentScrim=\"?attr/colorPrimary\"\n            app:expandedTitleMarginEnd=\"64dp\"\n            app:expandedTitleMarginStart=\"48dp\"\n            app:layout_scrollFlags=\"scroll|exitUntilCollapsed\">\n\n            <ImageView\n                android:id=\"@+id/backdrop\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:fitsSystemWindows=\"true\"\n                android:scaleType=\"centerCrop\"\n                android:src=\"@mipmap/show_img\"\n                app:layout_collapseMode=\"parallax\" />\n\n            <android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:layout_collapseMode=\"pin\" />\n\n\n        </android.support.design.widget.CollapsingToolbarLayout>\n    </android.support.design.widget.AppBarLayout>\n\n\n    <android.support.v4.widget.NestedScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:paddingTop=\"24dp\"\n            android:text=\"@string/show_text\" />\n    </android.support.v4.widget.NestedScrollView>\n\n    <android.support.design.widget.FloatingActionButton\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        android:src=\"@android:drawable/ic_dialog_dialer\"\n        app:layout_anchor=\"@id/appbar\"\n        app:layout_anchorGravity=\"bottom|right|end\" />\n\n    <android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"bottom|end\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        android:src=\"@android:drawable/ic_dialog_email\" />\n\n</android.support.design.widget.CoordinatorLayout>\n\n```\n说明\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n这是两个Flag控制滚动时候CollapsingToolbarLayout的表现。 \nScroll，表示向下滚动列表时候\nCollapsingToolbarLayout会滚出屏幕并且消失\nexitUntilCollapsed，表示这个layout会一直滚动离开屏幕范围，直到它收折成它的最小高度\n\n设置折叠后Toolbar的颜色\napp:contentScrim=\"?attr/colorPrimary\"\n\n\napp:layout_collapseMode=\"parallax\"\n设置视差模式。parallax，表示滚动过程中,会一直保持可见区域在正中间；pin，表示不会被滚出屏幕范围。\n也可以设置视差的系数app:layout_collapseParallaxMultiplier=\"0.7\"，介于 0.0-1.0之间\n\n设置展开状态改变标题文字的位置\napp:expandedTitleMargin、 app:expandedTitleMarginBottom、app:expandedTitleMarginEnd 、 app:expandedTitleMarginStart\n\n设置在折叠和展开状态时改变文本的显示\napp:collapsedTitleTextAppearance 和 app:expandedTitleTextAppearance \n\n\nFloatingActionButton\n\n设置锚点属性\napp:layout_anchor=\"@id/appbar\"\n意思是FAB浮动按钮显示在哪个布局区域。 \n\n设置当前锚点的位置\napp:layout_anchorGravity=”bottom|end|right”\n意思FAB浮动按钮在这个布局区域的具体位置。 \n两个属性共同作用才是的FAB 浮动按钮也能折叠消失，出现。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n\n# 源码地址\n[https://github.com/WuXiaolong/DesignSupportLibrarySample](https://github.com/WuXiaolong/DesignSupportLibrarySample)\n\n# 官网API\n[https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html](https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html)","slug":"CollapsingToolbarLayout","published":1,"updated":"2016-08-05T06:39:20.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdn00eazspkr04d6gep","thumbnailImageUrl":null},{"title":"Android更换主题","date":"2015-08-19T03:05:53.000Z","_content":">来自开源项目：[https://github.com/lguipeng/Notes](https://github.com/lguipeng/Notes)，其中有改变主题的功能，我做了部分修改，并应用到我的APP中。感谢lguipeng的开源。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n<!--more-->\n\n## 实例APK\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 颜色定义\ncolor.xml\n```js\n <color name=\"red_primary\">#F44336</color>\n    <color name=\"red_primary_dark\">#D32F2F</color>\n    <color name=\"red_accent\">#F44336</color>\n\n    <color name=\"pink_primary\">#E91E63</color>\n    <color name=\"pink_primary_dark\">#C2185B</color>\n    <color name=\"pink_accent\">#E91E63</color>\n\n    <color name=\"brown_primary\">#795548</color>\n    <color name=\"brown_primary_dark\">#5D4037</color>\n    <color name=\"brown_accent\">#795548</color>\n\n\n    <color name=\"blue_primary\">#2196F3</color>\n    <color name=\"blue_primary_dark\">#1976D2</color>\n    <color name=\"blue_accent\">#2196F3</color>\n\n    <color name=\"blue_grey_primary\">#607D8B</color>\n    <color name=\"blue_grey_primary_dark\">#455A64</color>\n    <color name=\"blue_grey_accent\">#607D8B</color>\n\n    <color name=\"yellow_primary\">#FFEB3B</color>\n    <color name=\"yellow_primary_dark\">#FBC02D</color>\n    <color name=\"yellow_accent\">#FFEB3B</color>\n\n    <color name=\"deep_purple_primary\">#673AB7</color>\n    <color name=\"deep_purple_primary_dark\">#512DA8</color>\n    <color name=\"deep_purple_accent\">#673AB7</color>\n\n\n    <color name=\"green_primary\">#4CAF50</color>\n    <color name=\"green_primary_dark\">#388E3C</color>\n    <color name=\"green_accent\">#4CAF50</color>\n\n    <color name=\"deep_orange_primary\">#FF5722</color>\n    <color name=\"deep_orange_primary_dark\">#E64A19</color>\n    <color name=\"deep_orange_accent\">#FF5722</color>\n\n    <color name=\"grey_primary\">#9E9E9E</color>\n    <color name=\"grey_primary_dark\">#616161</color>\n    <color name=\"grey_accent\">#9E9E9E</color>\n\n    <color name=\"cyan_primary\">#00BCD4</color>\n    <color name=\"cyan_primary_dark\">#0097A7</color>\n    <color name=\"cyan_accent\">#00BCD4</color>\n\n    <color name=\"amber_primary\">#FFC107</color>\n    <color name=\"amber_primary_dark\">#FFA000</color>\n    <color name=\"amber_accent\">#FFC107</color>\n\n    <color name=\"primary\">#2196F3</color>\n    <color name=\"primary_dark\">#1E88E5</color>\n    <color name=\"accent\">@color/primary</color>\n```\n\n## 样式定义\nstyle.xml\n```js\n <style name=\"RedTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/red_primary</item>\n        <item name=\"colorPrimaryDark\">@color/red_primary_dark</item>\n        <item name=\"colorAccent\">@color/red_accent</item>\n    </style>\n\n    <style name=\"PinkTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/pink_primary</item>\n        <item name=\"colorPrimaryDark\">@color/pink_primary_dark</item>\n        <item name=\"colorAccent\">@color/pink_accent</item>\n    </style>\n\n    <style name=\"BrownTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/brown_primary</item>\n        <item name=\"colorPrimaryDark\">@color/brown_primary_dark</item>\n        <item name=\"colorAccent\">@color/brown_accent</item>\n    </style>\n\n\n    <style name=\"BlueTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/blue_primary</item>\n        <item name=\"colorPrimaryDark\">@color/blue_primary_dark</item>\n        <item name=\"colorAccent\">@color/blue_accent</item>\n    </style>\n\n\n    <style name=\"BlueGreyTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/blue_grey_primary</item>\n        <item name=\"colorPrimaryDark\">@color/blue_grey_primary_dark</item>\n        <item name=\"colorAccent\">@color/blue_grey_accent</item>\n    </style>\n\n\n    <style name=\"YellowTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/yellow_primary</item>\n        <item name=\"colorPrimaryDark\">@color/yellow_primary_dark</item>\n        <item name=\"colorAccent\">@color/yellow_accent</item>\n    </style>\n\n\n    <style name=\"DeepPurpleTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/deep_purple_primary</item>\n        <item name=\"colorPrimaryDark\">@color/deep_purple_primary_dark</item>\n        <item name=\"colorAccent\">@color/deep_purple_accent</item>\n    </style>\n\n\n    <style name=\"GreenTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/green_primary</item>\n        <item name=\"colorPrimaryDark\">@color/green_primary_dark</item>\n        <item name=\"colorAccent\">@color/green_accent</item>\n    </style>\n\n    <style name=\"DeepOrangeTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/deep_orange_primary</item>\n        <item name=\"colorPrimaryDark\">@color/deep_orange_primary_dark</item>\n        <item name=\"colorAccent\">@color/deep_orange_accent</item>\n    </style>\n\n    <style name=\"GreyTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/grey_primary</item>\n        <item name=\"colorPrimaryDark\">@color/grey_primary_dark</item>\n        <item name=\"colorAccent\">@color/grey_accent</item>\n    </style>\n\n    <style name=\"CyanTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/cyan_primary</item>\n        <item name=\"colorPrimaryDark\">@color/cyan_primary_dark</item>\n        <item name=\"colorAccent\">@color/cyan_accent</item>\n    </style>\n\n    <style name=\"AmberTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/amber_primary</item>\n        <item name=\"colorPrimaryDark\">@color/amber_primary_dark</item>\n        <item name=\"colorAccent\">@color/amber_accent</item>\n    </style>\n```\n\n## 主题选择对话框\n### 在对话框里加入了GridView\n```java\n private void showThemeChooseDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.ChangeThemeDialog);\n        builder.setTitle(\"更换主题\");\n        Integer[] res = new Integer[]{R.drawable.red_round, R.drawable.brown_round, R.drawable.blue_round,\n                R.drawable.blue_grey_round, R.drawable.yellow_round, R.drawable.deep_purple_round,\n                R.drawable.pink_round, R.drawable.green_round, R.drawable.deep_orange_round,\n                R.drawable.grey_round, R.drawable.cyan_round,R.drawable.amber_round};\n        List<Integer> list = Arrays.asList(res);\n        ColorsListAdapter adapter = new ColorsListAdapter(getActivity(), list);\n        adapter.setCheckItem(ThemeUtils.getCurrentTheme(getActivity()).getIntValue());\n        GridView gridView = (GridView) LayoutInflater.from(getActivity()).inflate(R.layout.colors_panel_layout, null);\n        gridView.setStretchMode(GridView.STRETCH_COLUMN_WIDTH);\n        gridView.setCacheColorHint(0);\n        gridView.setAdapter(adapter);\n        builder.setView(gridView);\n        final AlertDialog dialog = builder.show();\n        gridView.setOnItemClickListener(\n                new AdapterView.OnItemClickListener() {\n                    @Override\n                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                        dialog.dismiss();\n                        int value = ThemeUtils.getCurrentTheme(getActivity()).getIntValue();\n                        Log.d(\"wxl\", \"value==\" + value);\n                        if (value != position) {\n                            preferenceUtils.saveParam(getString(R.string.change_theme_key), position);\n                            changeTheme(ThemeUtils.Theme.mapValueToTheme(position));\n                        }\n                    }\n                }\n\n        );\n    }\n```\n### 对话框圆形颜色\ndrawable下建red_round.xml，代码如下：\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"oval\">\n    <solid android:color=\"@color/red_primary\"/>\n</shape>\n```\n### ColorsListAdapter \nGridView 的适配器和它的xml\n```java\npublic class ColorsListAdapter extends BaseAdapter {\n\n    private int checkItem;\n    Context context;\n    List<Integer> list;\n\n    public ColorsListAdapter(Context context, List<Integer> list) {\n        this.context = context;\n        this.list = list;\n    }\n\n\n    @Override\n    public int getCount() {\n        return list.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return list.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        Holder holder;\n        if (convertView == null) {\n            convertView = LayoutInflater.from(context).inflate(R.layout.colors_image_layout, null);\n            holder = new Holder();\n            holder.imageView1 = (ImageView) convertView.findViewById(R.id.img_1);\n            holder.imageView2 = (ImageView) convertView.findViewById(R.id.img_2);\n            convertView.setTag(holder);\n        } else {\n            holder = (Holder) convertView.getTag();\n        }\n        holder.imageView1.setImageResource(list.get(position));\n        if (checkItem == position) {\n            holder.imageView2.setImageResource(R.drawable.ic_done_white);\n        }\n        return convertView;\n    }\n    public void setCheckItem(int checkItem) {\n        this.checkItem = checkItem;\n    }\n    static class Holder {\n        ImageView imageView1;\n        ImageView imageView2;\n    }\n}\n```\n\ncolors_image_layout.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:background=\"@android:color/transparent\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\">\n    <ImageView\n        android:id=\"@+id/img_1\"\n        android:layout_gravity=\"center\"\n        android:layout_width=\"@dimen/md_simplelist_icon\"\n        android:layout_height=\"@dimen/md_simplelist_icon\" />\n    <ImageView\n        android:id=\"@+id/img_2\"\n        android:layout_gravity=\"center\"\n        android:layout_width=\"20dp\"\n        android:layout_height=\"20dp\" />\n</FrameLayout>\n```\n### changeTheme方法\n这里用的EventBus发布事件\n```java\nprivate void changeTheme(ThemeUtils.Theme theme) {\n        if (getActivity() == null)\n            return;              \n       finish();         EventBus.getDefault().post(Constants.MainEvent.CHANGE_THEME);\n       \n    }\n\n```\n需要立即改变主题，调用如下代码：\n```java\n public void onEventMainThread(Constants.MainEvent event) {\n        switch (event) {\n             case CHANGE_THEME:\n                this.recreate();\n               break;\n        }\n    }\n```\n### PreferenceUtils\nSharedPreferences 封装类\n```java\npublic class PreferenceUtils {\n\n    private SharedPreferences sharedPreferences;\n\n    private SharedPreferences.Editor shareEditor;\n\n    private static PreferenceUtils preferenceUtils = null;\n\n    public static final String NOTE_TYPE_KEY = \"NOTE_TYPE_KEY\";\n\n    public static final String EVERNOTE_ACCOUNT_KEY = \"EVERNOTE_ACCOUNT_KEY\";\n\n    public static final String EVERNOTE_NOTEBOOK_GUID_KEY = \"EVERNOTE_NOTEBOOK_GUID_KEY\";\n\n    private PreferenceUtils(Context context){\n        sharedPreferences = context.getSharedPreferences(SetFragment.PREFERENCE_FILE_NAME, Context.MODE_PRIVATE);\n        shareEditor = sharedPreferences.edit();\n    }\n\n    public static PreferenceUtils getInstance(Context context){\n        if (preferenceUtils == null) {\n            synchronized (PreferenceUtils.class) {\n                if (preferenceUtils == null) {\n                    preferenceUtils = new PreferenceUtils(context.getApplicationContext());\n                }\n            }\n        }\n        return preferenceUtils;\n    }\n\n    public String getStringParam(String key){\n        return getStringParam(key, \"\");\n    }\n\n    public String getStringParam(String key, String defaultString){\n        return sharedPreferences.getString(key, defaultString);\n    }\n\n    public void saveParam(String key, String value)\n    {\n        shareEditor.putString(key,value).commit();\n    }\n\n    public boolean getBooleanParam(String key){\n        return getBooleanParam(key, false);\n    }\n\n    public boolean getBooleanParam(String key, boolean defaultBool){\n        return sharedPreferences.getBoolean(key, defaultBool);\n    }\n\n    public void saveParam(String key, boolean value){\n        shareEditor.putBoolean(key, value).commit();\n    }\n\n    public int getIntParam(String key){\n        return getIntParam(key, 0);\n    }\n\n    public int getIntParam(String key, int defaultInt){\n        return sharedPreferences.getInt(key, defaultInt);\n    }\n\n    public void saveParam(String key, int value){\n        shareEditor.putInt(key, value).commit();\n    }\n\n    public long getLongParam(String key){\n        return getLongParam(key, 0);\n    }\n\n    public long getLongParam(String key, long defaultInt){\n        return sharedPreferences.getLong(key, defaultInt);\n    }\n\n    public void saveParam(String key, long value){\n        shareEditor.putLong(key, value).commit();\n    }\n\n    public void removeKey(String key){\n        shareEditor.remove(key).commit();\n    }\n}\n\n```\n### ThemeUtils\n```java\npublic class ThemeUtils {\n\n    public static void changTheme(Activity activity, Theme theme) {\n        if (activity == null)\n            return;\n        int style = R.style.RedTheme;\n        switch (theme) {\n            case BROWN:\n                style = R.style.BrownTheme;\n                break;\n            case BLUE:\n                style = R.style.BlueTheme;\n                break;\n            case BLUE_GREY:\n                style = R.style.BlueGreyTheme;\n                break;\n            case YELLOW:\n                style = R.style.YellowTheme;\n                break;\n            case DEEP_PURPLE:\n                style = R.style.DeepPurpleTheme;\n                break;\n            case PINK:\n                style = R.style.PinkTheme;\n                break;\n            case GREEN:\n                style = R.style.GreenTheme;\n                break;\n            case DEEP_ORANGE:\n                style = R.style.DeepOrangeTheme;\n                break;\n            case GREY:\n                style = R.style.GreyTheme;\n                break;\n            case CYAN:\n                style = R.style.CyanTheme;\n                break;\n            case AMBER:\n                style = R.style.AmberTheme;\n                break;\n            default:\n                break;\n        }\n        activity.setTheme(style);\n    }\n\n    public static Theme getCurrentTheme(Context context) {\n        int value = PreferenceUtils.getInstance(context)\n                .getIntParam(context.getString(R.string.change_theme_key), 0);\n        return ThemeUtils.Theme.mapValueToTheme(value);\n    }\n\n    public enum Theme {\n        RED(0),\n        BROWN(1),\n        BLUE(2),\n        BLUE_GREY(3),\n        YELLOW(4),\n        DEEP_PURPLE(5),\n        PINK(6),\n        GREEN(7),\n        DEEP_ORANGE(8),\n        GREY(9),\n        CYAN(10),\n        AMBER(11);\n\n        private int mValue;\n\n        Theme(int value) {\n            this.mValue = value;\n        }\n\n        public static Theme mapValueToTheme(final int value) {\n            for (Theme theme : Theme.values()) {\n                if (value == theme.getIntValue()) {\n                    return theme;\n                }\n            }\n            // If run here, return default\n            return RED;\n        }\n\n        static Theme getDefault() {\n            return RED;\n        }\n\n        public int getIntValue() {\n            return mValue;\n        }\n    }\n}\n```\n\n## 基类BaseActivity\n初始化主题\n```java\npublic class BaseActivity extends AppCompatActivity {\n    protected PreferenceUtils preferenceUtils;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        preferenceUtils = PreferenceUtils.getInstance(this);\n        initTheme();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_base);\n    }\n\n    private void initTheme() {\n        ThemeUtils.Theme theme = ThemeUtils.getCurrentTheme(this);\n        ThemeUtils.changTheme(this, theme);\n    }\n\n   }\n```","source":"_posts/ChangeTheme.md","raw":"title: Android更换主题\ndate: 2015-08-19 11:05:53\ntags: [Android,Theme,WeiYan]\ncategory: Android\n---\n>来自开源项目：[https://github.com/lguipeng/Notes](https://github.com/lguipeng/Notes)，其中有改变主题的功能，我做了部分修改，并应用到我的APP中。感谢lguipeng的开源。\n\n## 效果预览\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanScreenshots.gif)\n<!--more-->\n\n## 实例APK\n![](http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png)\n\n## 颜色定义\ncolor.xml\n```js\n <color name=\"red_primary\">#F44336</color>\n    <color name=\"red_primary_dark\">#D32F2F</color>\n    <color name=\"red_accent\">#F44336</color>\n\n    <color name=\"pink_primary\">#E91E63</color>\n    <color name=\"pink_primary_dark\">#C2185B</color>\n    <color name=\"pink_accent\">#E91E63</color>\n\n    <color name=\"brown_primary\">#795548</color>\n    <color name=\"brown_primary_dark\">#5D4037</color>\n    <color name=\"brown_accent\">#795548</color>\n\n\n    <color name=\"blue_primary\">#2196F3</color>\n    <color name=\"blue_primary_dark\">#1976D2</color>\n    <color name=\"blue_accent\">#2196F3</color>\n\n    <color name=\"blue_grey_primary\">#607D8B</color>\n    <color name=\"blue_grey_primary_dark\">#455A64</color>\n    <color name=\"blue_grey_accent\">#607D8B</color>\n\n    <color name=\"yellow_primary\">#FFEB3B</color>\n    <color name=\"yellow_primary_dark\">#FBC02D</color>\n    <color name=\"yellow_accent\">#FFEB3B</color>\n\n    <color name=\"deep_purple_primary\">#673AB7</color>\n    <color name=\"deep_purple_primary_dark\">#512DA8</color>\n    <color name=\"deep_purple_accent\">#673AB7</color>\n\n\n    <color name=\"green_primary\">#4CAF50</color>\n    <color name=\"green_primary_dark\">#388E3C</color>\n    <color name=\"green_accent\">#4CAF50</color>\n\n    <color name=\"deep_orange_primary\">#FF5722</color>\n    <color name=\"deep_orange_primary_dark\">#E64A19</color>\n    <color name=\"deep_orange_accent\">#FF5722</color>\n\n    <color name=\"grey_primary\">#9E9E9E</color>\n    <color name=\"grey_primary_dark\">#616161</color>\n    <color name=\"grey_accent\">#9E9E9E</color>\n\n    <color name=\"cyan_primary\">#00BCD4</color>\n    <color name=\"cyan_primary_dark\">#0097A7</color>\n    <color name=\"cyan_accent\">#00BCD4</color>\n\n    <color name=\"amber_primary\">#FFC107</color>\n    <color name=\"amber_primary_dark\">#FFA000</color>\n    <color name=\"amber_accent\">#FFC107</color>\n\n    <color name=\"primary\">#2196F3</color>\n    <color name=\"primary_dark\">#1E88E5</color>\n    <color name=\"accent\">@color/primary</color>\n```\n\n## 样式定义\nstyle.xml\n```js\n <style name=\"RedTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/red_primary</item>\n        <item name=\"colorPrimaryDark\">@color/red_primary_dark</item>\n        <item name=\"colorAccent\">@color/red_accent</item>\n    </style>\n\n    <style name=\"PinkTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/pink_primary</item>\n        <item name=\"colorPrimaryDark\">@color/pink_primary_dark</item>\n        <item name=\"colorAccent\">@color/pink_accent</item>\n    </style>\n\n    <style name=\"BrownTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/brown_primary</item>\n        <item name=\"colorPrimaryDark\">@color/brown_primary_dark</item>\n        <item name=\"colorAccent\">@color/brown_accent</item>\n    </style>\n\n\n    <style name=\"BlueTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/blue_primary</item>\n        <item name=\"colorPrimaryDark\">@color/blue_primary_dark</item>\n        <item name=\"colorAccent\">@color/blue_accent</item>\n    </style>\n\n\n    <style name=\"BlueGreyTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/blue_grey_primary</item>\n        <item name=\"colorPrimaryDark\">@color/blue_grey_primary_dark</item>\n        <item name=\"colorAccent\">@color/blue_grey_accent</item>\n    </style>\n\n\n    <style name=\"YellowTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/yellow_primary</item>\n        <item name=\"colorPrimaryDark\">@color/yellow_primary_dark</item>\n        <item name=\"colorAccent\">@color/yellow_accent</item>\n    </style>\n\n\n    <style name=\"DeepPurpleTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/deep_purple_primary</item>\n        <item name=\"colorPrimaryDark\">@color/deep_purple_primary_dark</item>\n        <item name=\"colorAccent\">@color/deep_purple_accent</item>\n    </style>\n\n\n    <style name=\"GreenTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/green_primary</item>\n        <item name=\"colorPrimaryDark\">@color/green_primary_dark</item>\n        <item name=\"colorAccent\">@color/green_accent</item>\n    </style>\n\n    <style name=\"DeepOrangeTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/deep_orange_primary</item>\n        <item name=\"colorPrimaryDark\">@color/deep_orange_primary_dark</item>\n        <item name=\"colorAccent\">@color/deep_orange_accent</item>\n    </style>\n\n    <style name=\"GreyTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/grey_primary</item>\n        <item name=\"colorPrimaryDark\">@color/grey_primary_dark</item>\n        <item name=\"colorAccent\">@color/grey_accent</item>\n    </style>\n\n    <style name=\"CyanTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/cyan_primary</item>\n        <item name=\"colorPrimaryDark\">@color/cyan_primary_dark</item>\n        <item name=\"colorAccent\">@color/cyan_accent</item>\n    </style>\n\n    <style name=\"AmberTheme\" parent=\"AppTheme\">\n        <item name=\"colorPrimary\">@color/amber_primary</item>\n        <item name=\"colorPrimaryDark\">@color/amber_primary_dark</item>\n        <item name=\"colorAccent\">@color/amber_accent</item>\n    </style>\n```\n\n## 主题选择对话框\n### 在对话框里加入了GridView\n```java\n private void showThemeChooseDialog() {\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(), R.style.ChangeThemeDialog);\n        builder.setTitle(\"更换主题\");\n        Integer[] res = new Integer[]{R.drawable.red_round, R.drawable.brown_round, R.drawable.blue_round,\n                R.drawable.blue_grey_round, R.drawable.yellow_round, R.drawable.deep_purple_round,\n                R.drawable.pink_round, R.drawable.green_round, R.drawable.deep_orange_round,\n                R.drawable.grey_round, R.drawable.cyan_round,R.drawable.amber_round};\n        List<Integer> list = Arrays.asList(res);\n        ColorsListAdapter adapter = new ColorsListAdapter(getActivity(), list);\n        adapter.setCheckItem(ThemeUtils.getCurrentTheme(getActivity()).getIntValue());\n        GridView gridView = (GridView) LayoutInflater.from(getActivity()).inflate(R.layout.colors_panel_layout, null);\n        gridView.setStretchMode(GridView.STRETCH_COLUMN_WIDTH);\n        gridView.setCacheColorHint(0);\n        gridView.setAdapter(adapter);\n        builder.setView(gridView);\n        final AlertDialog dialog = builder.show();\n        gridView.setOnItemClickListener(\n                new AdapterView.OnItemClickListener() {\n                    @Override\n                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                        dialog.dismiss();\n                        int value = ThemeUtils.getCurrentTheme(getActivity()).getIntValue();\n                        Log.d(\"wxl\", \"value==\" + value);\n                        if (value != position) {\n                            preferenceUtils.saveParam(getString(R.string.change_theme_key), position);\n                            changeTheme(ThemeUtils.Theme.mapValueToTheme(position));\n                        }\n                    }\n                }\n\n        );\n    }\n```\n### 对话框圆形颜色\ndrawable下建red_round.xml，代码如下：\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"oval\">\n    <solid android:color=\"@color/red_primary\"/>\n</shape>\n```\n### ColorsListAdapter \nGridView 的适配器和它的xml\n```java\npublic class ColorsListAdapter extends BaseAdapter {\n\n    private int checkItem;\n    Context context;\n    List<Integer> list;\n\n    public ColorsListAdapter(Context context, List<Integer> list) {\n        this.context = context;\n        this.list = list;\n    }\n\n\n    @Override\n    public int getCount() {\n        return list.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return list.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        Holder holder;\n        if (convertView == null) {\n            convertView = LayoutInflater.from(context).inflate(R.layout.colors_image_layout, null);\n            holder = new Holder();\n            holder.imageView1 = (ImageView) convertView.findViewById(R.id.img_1);\n            holder.imageView2 = (ImageView) convertView.findViewById(R.id.img_2);\n            convertView.setTag(holder);\n        } else {\n            holder = (Holder) convertView.getTag();\n        }\n        holder.imageView1.setImageResource(list.get(position));\n        if (checkItem == position) {\n            holder.imageView2.setImageResource(R.drawable.ic_done_white);\n        }\n        return convertView;\n    }\n    public void setCheckItem(int checkItem) {\n        this.checkItem = checkItem;\n    }\n    static class Holder {\n        ImageView imageView1;\n        ImageView imageView2;\n    }\n}\n```\n\ncolors_image_layout.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:background=\"@android:color/transparent\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\">\n    <ImageView\n        android:id=\"@+id/img_1\"\n        android:layout_gravity=\"center\"\n        android:layout_width=\"@dimen/md_simplelist_icon\"\n        android:layout_height=\"@dimen/md_simplelist_icon\" />\n    <ImageView\n        android:id=\"@+id/img_2\"\n        android:layout_gravity=\"center\"\n        android:layout_width=\"20dp\"\n        android:layout_height=\"20dp\" />\n</FrameLayout>\n```\n### changeTheme方法\n这里用的EventBus发布事件\n```java\nprivate void changeTheme(ThemeUtils.Theme theme) {\n        if (getActivity() == null)\n            return;              \n       finish();         EventBus.getDefault().post(Constants.MainEvent.CHANGE_THEME);\n       \n    }\n\n```\n需要立即改变主题，调用如下代码：\n```java\n public void onEventMainThread(Constants.MainEvent event) {\n        switch (event) {\n             case CHANGE_THEME:\n                this.recreate();\n               break;\n        }\n    }\n```\n### PreferenceUtils\nSharedPreferences 封装类\n```java\npublic class PreferenceUtils {\n\n    private SharedPreferences sharedPreferences;\n\n    private SharedPreferences.Editor shareEditor;\n\n    private static PreferenceUtils preferenceUtils = null;\n\n    public static final String NOTE_TYPE_KEY = \"NOTE_TYPE_KEY\";\n\n    public static final String EVERNOTE_ACCOUNT_KEY = \"EVERNOTE_ACCOUNT_KEY\";\n\n    public static final String EVERNOTE_NOTEBOOK_GUID_KEY = \"EVERNOTE_NOTEBOOK_GUID_KEY\";\n\n    private PreferenceUtils(Context context){\n        sharedPreferences = context.getSharedPreferences(SetFragment.PREFERENCE_FILE_NAME, Context.MODE_PRIVATE);\n        shareEditor = sharedPreferences.edit();\n    }\n\n    public static PreferenceUtils getInstance(Context context){\n        if (preferenceUtils == null) {\n            synchronized (PreferenceUtils.class) {\n                if (preferenceUtils == null) {\n                    preferenceUtils = new PreferenceUtils(context.getApplicationContext());\n                }\n            }\n        }\n        return preferenceUtils;\n    }\n\n    public String getStringParam(String key){\n        return getStringParam(key, \"\");\n    }\n\n    public String getStringParam(String key, String defaultString){\n        return sharedPreferences.getString(key, defaultString);\n    }\n\n    public void saveParam(String key, String value)\n    {\n        shareEditor.putString(key,value).commit();\n    }\n\n    public boolean getBooleanParam(String key){\n        return getBooleanParam(key, false);\n    }\n\n    public boolean getBooleanParam(String key, boolean defaultBool){\n        return sharedPreferences.getBoolean(key, defaultBool);\n    }\n\n    public void saveParam(String key, boolean value){\n        shareEditor.putBoolean(key, value).commit();\n    }\n\n    public int getIntParam(String key){\n        return getIntParam(key, 0);\n    }\n\n    public int getIntParam(String key, int defaultInt){\n        return sharedPreferences.getInt(key, defaultInt);\n    }\n\n    public void saveParam(String key, int value){\n        shareEditor.putInt(key, value).commit();\n    }\n\n    public long getLongParam(String key){\n        return getLongParam(key, 0);\n    }\n\n    public long getLongParam(String key, long defaultInt){\n        return sharedPreferences.getLong(key, defaultInt);\n    }\n\n    public void saveParam(String key, long value){\n        shareEditor.putLong(key, value).commit();\n    }\n\n    public void removeKey(String key){\n        shareEditor.remove(key).commit();\n    }\n}\n\n```\n### ThemeUtils\n```java\npublic class ThemeUtils {\n\n    public static void changTheme(Activity activity, Theme theme) {\n        if (activity == null)\n            return;\n        int style = R.style.RedTheme;\n        switch (theme) {\n            case BROWN:\n                style = R.style.BrownTheme;\n                break;\n            case BLUE:\n                style = R.style.BlueTheme;\n                break;\n            case BLUE_GREY:\n                style = R.style.BlueGreyTheme;\n                break;\n            case YELLOW:\n                style = R.style.YellowTheme;\n                break;\n            case DEEP_PURPLE:\n                style = R.style.DeepPurpleTheme;\n                break;\n            case PINK:\n                style = R.style.PinkTheme;\n                break;\n            case GREEN:\n                style = R.style.GreenTheme;\n                break;\n            case DEEP_ORANGE:\n                style = R.style.DeepOrangeTheme;\n                break;\n            case GREY:\n                style = R.style.GreyTheme;\n                break;\n            case CYAN:\n                style = R.style.CyanTheme;\n                break;\n            case AMBER:\n                style = R.style.AmberTheme;\n                break;\n            default:\n                break;\n        }\n        activity.setTheme(style);\n    }\n\n    public static Theme getCurrentTheme(Context context) {\n        int value = PreferenceUtils.getInstance(context)\n                .getIntParam(context.getString(R.string.change_theme_key), 0);\n        return ThemeUtils.Theme.mapValueToTheme(value);\n    }\n\n    public enum Theme {\n        RED(0),\n        BROWN(1),\n        BLUE(2),\n        BLUE_GREY(3),\n        YELLOW(4),\n        DEEP_PURPLE(5),\n        PINK(6),\n        GREEN(7),\n        DEEP_ORANGE(8),\n        GREY(9),\n        CYAN(10),\n        AMBER(11);\n\n        private int mValue;\n\n        Theme(int value) {\n            this.mValue = value;\n        }\n\n        public static Theme mapValueToTheme(final int value) {\n            for (Theme theme : Theme.values()) {\n                if (value == theme.getIntValue()) {\n                    return theme;\n                }\n            }\n            // If run here, return default\n            return RED;\n        }\n\n        static Theme getDefault() {\n            return RED;\n        }\n\n        public int getIntValue() {\n            return mValue;\n        }\n    }\n}\n```\n\n## 基类BaseActivity\n初始化主题\n```java\npublic class BaseActivity extends AppCompatActivity {\n    protected PreferenceUtils preferenceUtils;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        preferenceUtils = PreferenceUtils.getInstance(this);\n        initTheme();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_base);\n    }\n\n    private void initTheme() {\n        ThemeUtils.Theme theme = ThemeUtils.getCurrentTheme(this);\n        ThemeUtils.changTheme(this, theme);\n    }\n\n   }\n```","slug":"ChangeTheme","published":1,"updated":"2016-03-17T00:44:06.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdp00eezspkh10l8lfr","thumbnailImageUrl":null},{"title":"Android之Canvas中内容保存为图片","date":"2015-04-22T16:00:00.000Z","_content":"\n```java\nBitmap bm = Bitmap.createBitmap(320, 480, Config.ARGB_8888);  \n        Canvas canvas = new Canvas(bm);  \n        Paint p = new Paint();  \n        canvas.drawRect(50, 50, 200, 200, p);  \n        canvas.save(Canvas.ALL_SAVE_FLAG );  \n        canvas.restore();  \n          \n        File f = new File(\"/sdcard/0.png\");  \n        FileOutputStream fos = null;  \n        try {  \n            fos = new FileOutputStream(f);  \n            bm.compress(Bitmap.CompressFormat.PNG, 50, fos);  \n        } catch (FileNotFoundException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        // 其次把文件插入到系统图库\n    try {\n        MediaStore.Images.Media.insertImage(context.getContentResolver(),\n\t\t\t\tfile.getAbsolutePath(), fileName, null);\n    } catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n    // 最后通知图库更新\n    context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + path)));\n```\n\n这样就把Canvas中的内容保存成了sd卡上的一个png图片。简单说一下原理，自己create一个bitmap，然后让Canvas通过这个bitmap创建一个实例，然后在该canvas上绘制的内容都会画\n在该bitmap上，保存Canvas的图层，然后把bitmap写到sd卡上的文件。注意：要在AndroidManifest.xml中添加在sd卡上读写文件的权限\n\n```js\n<!-- 在SDCard中创建与删除文件权限 -->     \n<uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>     \n<!-- 往SDCard写入数据权限 -->     \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>  \n```\n\nCanvas加入图片\n\n```java\nCanvas canvas;\nBitmap bmp = BitmapFactory.decodeResource(getResources(), R.drawable.pic180);  \n            canvas.drawColor(Color.BLACK);  \n            canvas.drawBitmap(bmp, 10, 10, null);  \n```\n\n","source":"_posts/CanvasToPhoto.md","raw":"title: Android之Canvas中内容保存为图片\ndate: 2015-04-23 \ncategories: [Android]\ntags: [Android,Canvas]\n---\n\n```java\nBitmap bm = Bitmap.createBitmap(320, 480, Config.ARGB_8888);  \n        Canvas canvas = new Canvas(bm);  \n        Paint p = new Paint();  \n        canvas.drawRect(50, 50, 200, 200, p);  \n        canvas.save(Canvas.ALL_SAVE_FLAG );  \n        canvas.restore();  \n          \n        File f = new File(\"/sdcard/0.png\");  \n        FileOutputStream fos = null;  \n        try {  \n            fos = new FileOutputStream(f);  \n            bm.compress(Bitmap.CompressFormat.PNG, 50, fos);  \n        } catch (FileNotFoundException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        // 其次把文件插入到系统图库\n    try {\n        MediaStore.Images.Media.insertImage(context.getContentResolver(),\n\t\t\t\tfile.getAbsolutePath(), fileName, null);\n    } catch (FileNotFoundException e) {\n        e.printStackTrace();\n    }\n    // 最后通知图库更新\n    context.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + path)));\n```\n\n这样就把Canvas中的内容保存成了sd卡上的一个png图片。简单说一下原理，自己create一个bitmap，然后让Canvas通过这个bitmap创建一个实例，然后在该canvas上绘制的内容都会画\n在该bitmap上，保存Canvas的图层，然后把bitmap写到sd卡上的文件。注意：要在AndroidManifest.xml中添加在sd卡上读写文件的权限\n\n```js\n<!-- 在SDCard中创建与删除文件权限 -->     \n<uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>     \n<!-- 往SDCard写入数据权限 -->     \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>  \n```\n\nCanvas加入图片\n\n```java\nCanvas canvas;\nBitmap bmp = BitmapFactory.decodeResource(getResources(), R.drawable.pic180);  \n            canvas.drawColor(Color.BLACK);  \n            canvas.drawBitmap(bmp, 10, 10, null);  \n```\n\n","slug":"CanvasToPhoto","published":1,"updated":"2016-03-17T00:44:06.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdr00ekzspkaoz4r542","thumbnailImageUrl":null},{"title":"Android之BroadcastReceiver","date":"2015-11-03T00:54:41.000Z","_content":"## 什么是BroadcastReceiver？\n\n　　BroadcastReceiver，广播接收者，它是一个系统全局的监听器，用于监听系统全局的Broadcast消息，所以它可以很方便的进行系统组件之间的通信。\n\n　　BroadcastReceiver属于系统级的监听器，它拥有自己的进程，只要存在与之匹配的Broadcast被以Intent的形式发送出来，BroadcastReceiver就会被激活。\n\n　　虽然同属Android的四大组件，BroadcastReceiver也有自己独立的声明周期，但是和Activity、Service又不同。当在系统注册一个BroadcastReceiver之后，每次系统以一个Intent的形式发布Broadcast的时候，系统都会创建与之对应的BroadcastReceiver广播接收者实例，并自动触发它的onReceive()方法，当onReceive()方法被执行完成之后，BroadcastReceiver的实例就会被销毁。虽然它独自享用一个单独的进程，但也不是没有限制的，如果BroadcastReceiver.onReceive()方法不能在10秒内执行完成，Android系统就会认为该BroadcastReceiver对象无响应，然后弹出ANR（Application No Response）对话框，所以不要在BroadcastReceiver.onReceive()方法内执行一些耗时的操作。\n\n　　如果需要根据广播内容完成一些耗时的操作，一般考虑通过Intent启动一个Service来完成该操作，而不应该在BroadcastReceiver中开启一个新线程完成耗时的操作，因为BroadcastReceiver本身的生命周期很短，可能出现的情况是子线程还没有结束，BroadcastReceiver就已经退出的情况，而如果BroadcastReceiver所在的进程结束了，该线程就会被标记为一个空线程，根据Android的内存管理策略，在系统内存紧张的时候，会按照优先级，结束优先级低的线程，而空线程无异是优先级最低的，这样就可能导致BroadcastReceiver启动的子线程不能执行完成。\n<!--more-->\n## BroadcastReceiver的种类\n* sendBroadcast()：发送普通广播。\n* sendOrderedBroadcast()：发送有序广播。\n\n## 如何使用BroadcastReceiver\n清单文件进行注册\n```js\n <receiver android:name=\".HelloBroadcastReceiver\">\n            <intent-filter android:priority=\"100\">\n                <action android:name=\"com.wuxiaolong.apksample.HelloBroadcastReceiver\" />\n            </intent-filter>\n            </receiver>\n```\nHelloBroadcastReceiver\n```java\npublic class HelloBroadcastReceiver extends BroadcastReceiver {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        // 判断当前接收到的Broadcast的action\n        Log.d(\"wxl\", \"intent.getAction()====\" + intent.getAction());\n        if (intent.getAction().equals(\"com.wuxiaolong.apksample.HelloBroadcastReceiver\")) {\n            Toast.makeText(context,\n                    \"接收到Broadcast，消息为：\" + intent.getStringExtra(\"msg\"),\n                    Toast.LENGTH_SHORT).show();\n        }\n\n    }\n}\n```\n发送Broadcast\n```java\nIntent broadcast = new Intent();                \nbroadcast.setAction(\"com.wuxiaolong.apksample.HelloBroadcastReceiver\");       \nsendBroadcast(broadcast);\n```\n## 附录\n[Android--广播BroadcastReceiver](http://www.cnblogs.com/plokmju/p/android_BroadcastReceiver.html)\n[Android--拦截系统BroadcastReceiver](http://www.cnblogs.com/plokmju/p/android_SystemBroadcastReceriver.html)","source":"_posts/BroadcastReceiver.md","raw":"title: Android之BroadcastReceiver\ndate: 2015-11-03 08:54:41\ntags: BroadcastReceiver\ncategory: Android\n---\n## 什么是BroadcastReceiver？\n\n　　BroadcastReceiver，广播接收者，它是一个系统全局的监听器，用于监听系统全局的Broadcast消息，所以它可以很方便的进行系统组件之间的通信。\n\n　　BroadcastReceiver属于系统级的监听器，它拥有自己的进程，只要存在与之匹配的Broadcast被以Intent的形式发送出来，BroadcastReceiver就会被激活。\n\n　　虽然同属Android的四大组件，BroadcastReceiver也有自己独立的声明周期，但是和Activity、Service又不同。当在系统注册一个BroadcastReceiver之后，每次系统以一个Intent的形式发布Broadcast的时候，系统都会创建与之对应的BroadcastReceiver广播接收者实例，并自动触发它的onReceive()方法，当onReceive()方法被执行完成之后，BroadcastReceiver的实例就会被销毁。虽然它独自享用一个单独的进程，但也不是没有限制的，如果BroadcastReceiver.onReceive()方法不能在10秒内执行完成，Android系统就会认为该BroadcastReceiver对象无响应，然后弹出ANR（Application No Response）对话框，所以不要在BroadcastReceiver.onReceive()方法内执行一些耗时的操作。\n\n　　如果需要根据广播内容完成一些耗时的操作，一般考虑通过Intent启动一个Service来完成该操作，而不应该在BroadcastReceiver中开启一个新线程完成耗时的操作，因为BroadcastReceiver本身的生命周期很短，可能出现的情况是子线程还没有结束，BroadcastReceiver就已经退出的情况，而如果BroadcastReceiver所在的进程结束了，该线程就会被标记为一个空线程，根据Android的内存管理策略，在系统内存紧张的时候，会按照优先级，结束优先级低的线程，而空线程无异是优先级最低的，这样就可能导致BroadcastReceiver启动的子线程不能执行完成。\n<!--more-->\n## BroadcastReceiver的种类\n* sendBroadcast()：发送普通广播。\n* sendOrderedBroadcast()：发送有序广播。\n\n## 如何使用BroadcastReceiver\n清单文件进行注册\n```js\n <receiver android:name=\".HelloBroadcastReceiver\">\n            <intent-filter android:priority=\"100\">\n                <action android:name=\"com.wuxiaolong.apksample.HelloBroadcastReceiver\" />\n            </intent-filter>\n            </receiver>\n```\nHelloBroadcastReceiver\n```java\npublic class HelloBroadcastReceiver extends BroadcastReceiver {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        // 判断当前接收到的Broadcast的action\n        Log.d(\"wxl\", \"intent.getAction()====\" + intent.getAction());\n        if (intent.getAction().equals(\"com.wuxiaolong.apksample.HelloBroadcastReceiver\")) {\n            Toast.makeText(context,\n                    \"接收到Broadcast，消息为：\" + intent.getStringExtra(\"msg\"),\n                    Toast.LENGTH_SHORT).show();\n        }\n\n    }\n}\n```\n发送Broadcast\n```java\nIntent broadcast = new Intent();                \nbroadcast.setAction(\"com.wuxiaolong.apksample.HelloBroadcastReceiver\");       \nsendBroadcast(broadcast);\n```\n## 附录\n[Android--广播BroadcastReceiver](http://www.cnblogs.com/plokmju/p/android_BroadcastReceiver.html)\n[Android--拦截系统BroadcastReceiver](http://www.cnblogs.com/plokmju/p/android_SystemBroadcastReceriver.html)","slug":"BroadcastReceiver","published":1,"updated":"2016-03-17T00:44:06.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdt00eozspkzxkp6umy","thumbnailImageUrl":null},{"title":"Android获取手机已安装apk文件信息","date":"2015-07-28T16:00:00.000Z","_content":"\n```java\n  Intent intent = new Intent(Intent.ACTION_MAIN, null);\n  intent.addCategory(Intent.CATEGORY_LAUNCHER);\n  List<AppInfo> applicationList = new ArrayList<>();\n  List<ResolveInfo> resolveInfoList = getPackageManager().queryIntentActivities(intent, 0);\n  for (ResolveInfo resolveInfo : resolveInfoList) {\n  AppInfo appInfo = new AppInfo(MainActivity.this, resolveInfo);\n  PackageInfo packageInfo = appInfo.getPackageInfo();\n  //判断(applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM)的值，\n  // 该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用\n  if ((packageInfo.applicationInfo.flags & packageInfo.applicationInfo.FLAG_SYSTEM) <= 0) {\n  // customs applications\n  applicationList.add(appInfo);\n   }\n  }\n```\n<!-- more -->\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.SuppressLint;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager.NameNotFoundException;\nimport android.content.pm.ResolveInfo;\nimport android.content.res.AssetManager;\nimport android.content.res.Configuration;\nimport android.content.res.Resources;\nimport android.graphics.drawable.Drawable;\nimport android.util.DisplayMetrics;\n\nimport java.util.Locale;\n\npublic class AppInfo implements Comparable<Object> {\n\n    private Context context;\n    private ResolveInfo resolveInfo;\n    private ComponentName componentName = null;\n    private PackageInfo packageInfo = null;\n    private Drawable icon = null;\n    private String name = null;\n\n    public AppInfo(Context context, ResolveInfo ri) {\n        this.context = context;\n        this.resolveInfo = ri;\n        this.componentName = new ComponentName(ri.activityInfo.applicationInfo.packageName, ri.activityInfo.name);\n        try {\n            packageInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n        } catch (NameNotFoundException e) {\n        }\n    }\n\n    public String getName() {\n        if (name != null) {\n            return name;\n        } else {\n            try {\n                return getNameFromResolveInfo(resolveInfo);\n            } catch (NameNotFoundException e) {\n                return getPackageName();\n            }\n        }\n    }\n\n    public String getActivityName() {\n        return resolveInfo.activityInfo.name;\n    }\n\n    public String getPackageName() {\n        return resolveInfo.activityInfo.packageName;\n    }\n\n    public ComponentName getComponentName() {\n        return componentName;\n    }\n\n    public String getComponentInfo() {\n        if (getComponentName() != null) {\n            return getComponentName().toString();\n        } else {\n            return \"\";\n        }\n    }\n\n    public ResolveInfo getResolveInfo() {\n        return resolveInfo;\n    }\n\n    public PackageInfo getPackageInfo() {\n        return packageInfo;\n    }\n\n    public String getVersionName() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionName;\n        } else {\n            return \"\";\n        }\n    }\n\n    public int getVersionCode() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionCode;\n        } else {\n            return 0;\n        }\n    }\n\n    public Drawable getIcon() {\n        if (icon == null) {\n            icon = getResolveInfo().loadIcon(context.getPackageManager());\n            /*\n            Drawable dr = getResolveInfo().loadIcon(ctx.getPackageManager());\n            Bitmap bitmap = ((BitmapDrawable) dr).getBitmap();\n            icon = new BitmapDrawable(ctx.getResources(), AppHelper.getResizedBitmap(bitmap, 144, 144));\n            */\n        }\n        return icon;\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getFirstInstallTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.firstInstallTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getLastUpdateTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.lastUpdateTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        AppInfo f = (AppInfo) o;\n        return getName().compareTo(f.getName());\n    }\n\n    @Override\n    public String toString() {\n        return getName();\n    }\n\n    /**\n     * Helper method to get an applications name!\n     *\n     * @param ri\n     * @return\n     * @throws NameNotFoundException\n     */\n\n    public String getNameFromResolveInfo(ResolveInfo ri) throws NameNotFoundException {\n        String name = ri.resolvePackageName;\n        if (ri.activityInfo != null) {\n            Resources res = context.getPackageManager().getResourcesForApplication(ri.activityInfo.applicationInfo);\n            Resources engRes = getEnglishRessources(res);\n\n            if (ri.activityInfo.labelRes != 0) {\n                name = engRes.getString(ri.activityInfo.labelRes);\n\n                if (name == null || name.equals(\"\")) {\n                    name = res.getString(ri.activityInfo.labelRes);\n                }\n\n            } else {\n                name = ri.activityInfo.applicationInfo.loadLabel(context.getPackageManager()).toString();\n            }\n        }\n        return name;\n    }\n\n    public Resources getEnglishRessources(Resources standardResources) {\n        AssetManager assets = standardResources.getAssets();\n        DisplayMetrics metrics = standardResources.getDisplayMetrics();\n        Configuration config = new Configuration(standardResources.getConfiguration());\n        config.locale = Locale.US;\n        return new Resources(assets, metrics, config);\n    }\n}\n```\n\n参考博客\n\n[【Android】获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)](http://blog.csdn.net/feng88724/article/details/6198446)\n","source":"_posts/AppInfo.md","raw":"title:  Android获取手机已安装apk文件信息\ncategories: [Android]\ntags: [Android]\ndate: 2015-07-29\n---\n\n```java\n  Intent intent = new Intent(Intent.ACTION_MAIN, null);\n  intent.addCategory(Intent.CATEGORY_LAUNCHER);\n  List<AppInfo> applicationList = new ArrayList<>();\n  List<ResolveInfo> resolveInfoList = getPackageManager().queryIntentActivities(intent, 0);\n  for (ResolveInfo resolveInfo : resolveInfoList) {\n  AppInfo appInfo = new AppInfo(MainActivity.this, resolveInfo);\n  PackageInfo packageInfo = appInfo.getPackageInfo();\n  //判断(applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM)的值，\n  // 该值大于0时，表示获取的应用为系统预装的应用，反之则为手动安装的应用\n  if ((packageInfo.applicationInfo.flags & packageInfo.applicationInfo.FLAG_SYSTEM) <= 0) {\n  // customs applications\n  applicationList.add(appInfo);\n   }\n  }\n```\n<!-- more -->\n\n```java\npackage com.wuxiaolong.apksample;\n\nimport android.annotation.SuppressLint;\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.pm.PackageInfo;\nimport android.content.pm.PackageManager.NameNotFoundException;\nimport android.content.pm.ResolveInfo;\nimport android.content.res.AssetManager;\nimport android.content.res.Configuration;\nimport android.content.res.Resources;\nimport android.graphics.drawable.Drawable;\nimport android.util.DisplayMetrics;\n\nimport java.util.Locale;\n\npublic class AppInfo implements Comparable<Object> {\n\n    private Context context;\n    private ResolveInfo resolveInfo;\n    private ComponentName componentName = null;\n    private PackageInfo packageInfo = null;\n    private Drawable icon = null;\n    private String name = null;\n\n    public AppInfo(Context context, ResolveInfo ri) {\n        this.context = context;\n        this.resolveInfo = ri;\n        this.componentName = new ComponentName(ri.activityInfo.applicationInfo.packageName, ri.activityInfo.name);\n        try {\n            packageInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n        } catch (NameNotFoundException e) {\n        }\n    }\n\n    public String getName() {\n        if (name != null) {\n            return name;\n        } else {\n            try {\n                return getNameFromResolveInfo(resolveInfo);\n            } catch (NameNotFoundException e) {\n                return getPackageName();\n            }\n        }\n    }\n\n    public String getActivityName() {\n        return resolveInfo.activityInfo.name;\n    }\n\n    public String getPackageName() {\n        return resolveInfo.activityInfo.packageName;\n    }\n\n    public ComponentName getComponentName() {\n        return componentName;\n    }\n\n    public String getComponentInfo() {\n        if (getComponentName() != null) {\n            return getComponentName().toString();\n        } else {\n            return \"\";\n        }\n    }\n\n    public ResolveInfo getResolveInfo() {\n        return resolveInfo;\n    }\n\n    public PackageInfo getPackageInfo() {\n        return packageInfo;\n    }\n\n    public String getVersionName() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionName;\n        } else {\n            return \"\";\n        }\n    }\n\n    public int getVersionCode() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null) {\n            return pi.versionCode;\n        } else {\n            return 0;\n        }\n    }\n\n    public Drawable getIcon() {\n        if (icon == null) {\n            icon = getResolveInfo().loadIcon(context.getPackageManager());\n            /*\n            Drawable dr = getResolveInfo().loadIcon(ctx.getPackageManager());\n            Bitmap bitmap = ((BitmapDrawable) dr).getBitmap();\n            icon = new BitmapDrawable(ctx.getResources(), AppHelper.getResizedBitmap(bitmap, 144, 144));\n            */\n        }\n        return icon;\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getFirstInstallTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.firstInstallTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @SuppressLint(\"NewApi\")\n    public long getLastUpdateTime() {\n        PackageInfo pi = getPackageInfo();\n        if (pi != null && android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.GINGERBREAD) {\n            return pi.lastUpdateTime;\n        } else {\n            return 0;\n        }\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        AppInfo f = (AppInfo) o;\n        return getName().compareTo(f.getName());\n    }\n\n    @Override\n    public String toString() {\n        return getName();\n    }\n\n    /**\n     * Helper method to get an applications name!\n     *\n     * @param ri\n     * @return\n     * @throws NameNotFoundException\n     */\n\n    public String getNameFromResolveInfo(ResolveInfo ri) throws NameNotFoundException {\n        String name = ri.resolvePackageName;\n        if (ri.activityInfo != null) {\n            Resources res = context.getPackageManager().getResourcesForApplication(ri.activityInfo.applicationInfo);\n            Resources engRes = getEnglishRessources(res);\n\n            if (ri.activityInfo.labelRes != 0) {\n                name = engRes.getString(ri.activityInfo.labelRes);\n\n                if (name == null || name.equals(\"\")) {\n                    name = res.getString(ri.activityInfo.labelRes);\n                }\n\n            } else {\n                name = ri.activityInfo.applicationInfo.loadLabel(context.getPackageManager()).toString();\n            }\n        }\n        return name;\n    }\n\n    public Resources getEnglishRessources(Resources standardResources) {\n        AssetManager assets = standardResources.getAssets();\n        DisplayMetrics metrics = standardResources.getDisplayMetrics();\n        Configuration config = new Configuration(standardResources.getConfiguration());\n        config.locale = Locale.US;\n        return new Resources(assets, metrics, config);\n    }\n}\n```\n\n参考博客\n\n[【Android】获取手机中已安装apk文件信息(PackageInfo、ResolveInfo)(应用图片、应用名、包名等)](http://blog.csdn.net/feng88724/article/details/6198446)\n","slug":"AppInfo","published":1,"updated":"2016-03-17T00:44:06.338Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdv00eszspkcw2y67rb","thumbnailImageUrl":null},{"title":"Android之属性动画Animator","date":"2015-11-23T03:21:35.000Z","_content":"> Android 3.0之前已有动画框架Animation（详见：[Android之视图动画Animation](http://wuxiaolong.me/2015/09/08/ViewAnimation/)），但存在一些局限性，当某个元素发生视图动画后，其响应事件位置还在动画前的地方。于是3.0之后，Google提出了属性动画。\n\n# ObjectAnimator\n```java\nObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"translationX\", 300);\nobjectAnimator1.setInterpolator(new AccelerateInterpolator());\nobjectAnimator1.setDuration(2000);\nobjectAnimator.setRepeatCount(ValueAnimator.INFINITE);//Animation.INFINITE 表示重复多次\nobjectAnimator.setRepeatMode(ValueAnimator.RESTART);//RESTART表示从头开始，REVERSE表示从末尾倒播\nobjectAnimator1.start();\n```\n第一个参数：操纵的view\n第二个参数：操纵的动画属性值\n第三个参数：可变数组参数\n\n<!--more-->\n\n## 动画属性值\ntranslationX和translationY：增量控制view从它布局容器左上角坐标偏移\n```java\nObjectAnimator.ofFloat(imageView, \"translationX\", 300f);\n```\nrotation、rotationX、rotationY：控制view绕支点进行2D或3D旋转\n```java\nObjectAnimator.ofFloat(imageView, \"rotation\", 360);\n```\nscaleX、scaleY：控制view绕支点进行2D缩放\n```java\nObjectAnimator.ofFloat(imageView, \"scaleX\", 1f, 0.5f，1f);\n```\nalpha：控制view透明度，默认是1（不透明），0完全透明（不可见）\n```java\nObjectAnimator.ofFloat(imageView, \"alpha\", 1f, 0.5f);\n```\nx和y：描述view在容器最终位置\n\n## 可变数组参数\n可以有一个到N个，如果是一个值的话默认这个值是动画过渡值的结束值。如果有N个值，动画就在这N个值之间过渡。\n\n## 动画监听\n```java\n ObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 0.5f, 1f);\n                objectAnimator1.addListener(new Animator.AnimatorListener() {\n                    @Override\n                    public void onAnimationStart(Animator animation) {\n                        \n                    }\n\n                    @Override\n                    public void onAnimationEnd(Animator animation) {\n\n                    }\n\n                    @Override\n                    public void onAnimationCancel(Animator animation) {\n\n                    }\n\n                    @Override\n                    public void onAnimationRepeat(Animator animation) {\n\n                    }\n                });\n```\n一般我们只关心onAnimationEnd，所以Android提供了AnimatorListenerAdapter：\n```java\n ObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 0.5f, 1f);\n                objectAnimator1.addListener(new AnimatorListenerAdapter() {\n                    @Override\n                    public void onAnimationEnd(Animator animation) {\n                        super.onAnimationEnd(animation);\n                    }\n                });\n```\n# ValueAnimator \nValueAnimator 本身不提供任何动画效果，像个数值 发生器，用来产生具有一点规律数字。\n```java\nValueAnimator valueAnimator = ValueAnimator.ofInt(0, 100);\n                valueAnimator.setTarget(imageView);\n                valueAnimator.setDuration(2000).start();\n                valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n                    @Override\n                    public void onAnimationUpdate(ValueAnimator animation) {\n                        Int value = (Integer) animation.getAnimatedValue();\n                        //TODO use the value\n                        Toast.makeText(getApplicationContext(), \"value=\" + value, Toast.LENGTH_LONG).show();\n                    }\n                });\n```\n\n# PropertyValuesHolder\n针对同一个对象多个属性，同时作用多种动画\n```java\nPropertyValuesHolder propertyValuesHolder1 = PropertyValuesHolder.ofFloat(\"translationX\", 300f);\n                PropertyValuesHolder propertyValuesHolder2 = PropertyValuesHolder.ofFloat(\"alpha\", 1f, 0.5f);\n                PropertyValuesHolder propertyValuesHolder3 = PropertyValuesHolder.ofFloat(\"scaleX\", 1f, 0, 1f);\n                PropertyValuesHolder propertyValuesHolder4 = PropertyValuesHolder.ofFloat(\"scaleY\", 1f, 0, 1f);\n                ObjectAnimator.ofPropertyValuesHolder(imageView, propertyValuesHolder1, propertyValuesHolder2, propertyValuesHolder3, propertyValuesHolder4)\n                        .setDuration(5000).start();\n```\n\n# AnimatorSet \n与PropertyValuesHolder类似，但AnimatorSet多了playTogether（同时执行）、playSequentially（顺序执行）、play(objectAnimator1).with(objectAnimator2)、before、after这些方法协同工作。\n```java\nObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 1f, 0.5f);\n                ObjectAnimator objectAnimator2 = ObjectAnimator.ofFloat(imageView, \"translationY\", 300);\n                ObjectAnimator objectAnimator3 = ObjectAnimator.ofFloat(imageView, \"scaleX\", 1f, 0, 1f);\nAnimatorSet animatorSet = new AnimatorSet();\nanimatorSet.setDuration(5000);\nanimatorSet.playTogether(objectAnimator1, objectAnimator2,objectAnimator3);\nanimatorSet.start();\n```\n\n# xml使用属性动画\nres下建立animator文件夹，然后建立res/animator/set_animator.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<objectAnimator xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"2000\"\n    android:propertyName=\"alpha\"\n    android:valueFrom=\"0.1\"\n    android:valueTo=\"1.0\"\n    android:valueType=\"floatType\" />\n```\n调用:\n```java\n Animator animator = AnimatorInflater.loadAnimator(getApplicationContext(), R.animator.set_animator);\nanimator.setTarget(imageView);\nanimator.start();\n```\n动画组合\nset标签，有一个orderring属性设置为together，还有另一个值：sequentially（表示一个接一个执行）。\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:ordering=\"together\">\n    <objectAnimator\n        android:duration=\"1000\"\n        android:propertyName=\"scaleX\"\n        android:valueFrom=\"1\"\n        android:valueTo=\"0.5\" />\n    <objectAnimator\n        android:duration=\"1000\"\n        android:propertyName=\"scaleY\"\n        android:valueFrom=\"1\"\n        android:valueTo=\"0.5\" />\n</set>\n```\n# View的animate方法\nAndroid 3.0后，谷歌给View增加animate方法直接驱动属性动画。\n```java\n imageView.animate()\n                .alpha(0.5f)\n                .y(300)\n                .setDuration(2000)\n                //api min is 16\n                .withStartAction(new Runnable() {\n                    @Override\n                    public void run() {\n\n                    }\n                })\n                //api min is 16\n                .withEndAction(new Runnable() {\n                    @Override\n                    public void run() {\n\n                    }\n                })\n                .start();\n```\n# 布局动画\n设置子View过渡动画\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/parentLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"@dimen/activity_vertical_margin\">\n    <ImageView\n        android:id=\"@+id/imageMove\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@mipmap/ic_launcher\" />\n</LinearLayout>\n\n```\n```java\n LinearLayout parentLayout = (LinearLayout) findViewById(R.id.parentLayout);\n        ScaleAnimation scaleAnimation=new ScaleAnimation(0,1,0,1);\n        scaleAnimation.setDuration(2000);\n        LayoutAnimationController layoutAnimationController=new LayoutAnimationController(scaleAnimation,0.5f);\n        layoutAnimationController.setOrder(LayoutAnimationController.ORDER_NORMAL);\n        parentLayout.setLayoutAnimation(layoutAnimationController);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/Animator.md","raw":"title: Android之属性动画Animator\ndate: 2015-11-23 11:21:35\ntags: Animator\ncategory: Android\n---\n> Android 3.0之前已有动画框架Animation（详见：[Android之视图动画Animation](http://wuxiaolong.me/2015/09/08/ViewAnimation/)），但存在一些局限性，当某个元素发生视图动画后，其响应事件位置还在动画前的地方。于是3.0之后，Google提出了属性动画。\n\n# ObjectAnimator\n```java\nObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"translationX\", 300);\nobjectAnimator1.setInterpolator(new AccelerateInterpolator());\nobjectAnimator1.setDuration(2000);\nobjectAnimator.setRepeatCount(ValueAnimator.INFINITE);//Animation.INFINITE 表示重复多次\nobjectAnimator.setRepeatMode(ValueAnimator.RESTART);//RESTART表示从头开始，REVERSE表示从末尾倒播\nobjectAnimator1.start();\n```\n第一个参数：操纵的view\n第二个参数：操纵的动画属性值\n第三个参数：可变数组参数\n\n<!--more-->\n\n## 动画属性值\ntranslationX和translationY：增量控制view从它布局容器左上角坐标偏移\n```java\nObjectAnimator.ofFloat(imageView, \"translationX\", 300f);\n```\nrotation、rotationX、rotationY：控制view绕支点进行2D或3D旋转\n```java\nObjectAnimator.ofFloat(imageView, \"rotation\", 360);\n```\nscaleX、scaleY：控制view绕支点进行2D缩放\n```java\nObjectAnimator.ofFloat(imageView, \"scaleX\", 1f, 0.5f，1f);\n```\nalpha：控制view透明度，默认是1（不透明），0完全透明（不可见）\n```java\nObjectAnimator.ofFloat(imageView, \"alpha\", 1f, 0.5f);\n```\nx和y：描述view在容器最终位置\n\n## 可变数组参数\n可以有一个到N个，如果是一个值的话默认这个值是动画过渡值的结束值。如果有N个值，动画就在这N个值之间过渡。\n\n## 动画监听\n```java\n ObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 0.5f, 1f);\n                objectAnimator1.addListener(new Animator.AnimatorListener() {\n                    @Override\n                    public void onAnimationStart(Animator animation) {\n                        \n                    }\n\n                    @Override\n                    public void onAnimationEnd(Animator animation) {\n\n                    }\n\n                    @Override\n                    public void onAnimationCancel(Animator animation) {\n\n                    }\n\n                    @Override\n                    public void onAnimationRepeat(Animator animation) {\n\n                    }\n                });\n```\n一般我们只关心onAnimationEnd，所以Android提供了AnimatorListenerAdapter：\n```java\n ObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 0.5f, 1f);\n                objectAnimator1.addListener(new AnimatorListenerAdapter() {\n                    @Override\n                    public void onAnimationEnd(Animator animation) {\n                        super.onAnimationEnd(animation);\n                    }\n                });\n```\n# ValueAnimator \nValueAnimator 本身不提供任何动画效果，像个数值 发生器，用来产生具有一点规律数字。\n```java\nValueAnimator valueAnimator = ValueAnimator.ofInt(0, 100);\n                valueAnimator.setTarget(imageView);\n                valueAnimator.setDuration(2000).start();\n                valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n                    @Override\n                    public void onAnimationUpdate(ValueAnimator animation) {\n                        Int value = (Integer) animation.getAnimatedValue();\n                        //TODO use the value\n                        Toast.makeText(getApplicationContext(), \"value=\" + value, Toast.LENGTH_LONG).show();\n                    }\n                });\n```\n\n# PropertyValuesHolder\n针对同一个对象多个属性，同时作用多种动画\n```java\nPropertyValuesHolder propertyValuesHolder1 = PropertyValuesHolder.ofFloat(\"translationX\", 300f);\n                PropertyValuesHolder propertyValuesHolder2 = PropertyValuesHolder.ofFloat(\"alpha\", 1f, 0.5f);\n                PropertyValuesHolder propertyValuesHolder3 = PropertyValuesHolder.ofFloat(\"scaleX\", 1f, 0, 1f);\n                PropertyValuesHolder propertyValuesHolder4 = PropertyValuesHolder.ofFloat(\"scaleY\", 1f, 0, 1f);\n                ObjectAnimator.ofPropertyValuesHolder(imageView, propertyValuesHolder1, propertyValuesHolder2, propertyValuesHolder3, propertyValuesHolder4)\n                        .setDuration(5000).start();\n```\n\n# AnimatorSet \n与PropertyValuesHolder类似，但AnimatorSet多了playTogether（同时执行）、playSequentially（顺序执行）、play(objectAnimator1).with(objectAnimator2)、before、after这些方法协同工作。\n```java\nObjectAnimator objectAnimator1 = ObjectAnimator.ofFloat(imageView, \"alpha\", 1f, 0.5f);\n                ObjectAnimator objectAnimator2 = ObjectAnimator.ofFloat(imageView, \"translationY\", 300);\n                ObjectAnimator objectAnimator3 = ObjectAnimator.ofFloat(imageView, \"scaleX\", 1f, 0, 1f);\nAnimatorSet animatorSet = new AnimatorSet();\nanimatorSet.setDuration(5000);\nanimatorSet.playTogether(objectAnimator1, objectAnimator2,objectAnimator3);\nanimatorSet.start();\n```\n\n# xml使用属性动画\nres下建立animator文件夹，然后建立res/animator/set_animator.xml\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<objectAnimator xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"2000\"\n    android:propertyName=\"alpha\"\n    android:valueFrom=\"0.1\"\n    android:valueTo=\"1.0\"\n    android:valueType=\"floatType\" />\n```\n调用:\n```java\n Animator animator = AnimatorInflater.loadAnimator(getApplicationContext(), R.animator.set_animator);\nanimator.setTarget(imageView);\nanimator.start();\n```\n动画组合\nset标签，有一个orderring属性设置为together，还有另一个值：sequentially（表示一个接一个执行）。\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:ordering=\"together\">\n    <objectAnimator\n        android:duration=\"1000\"\n        android:propertyName=\"scaleX\"\n        android:valueFrom=\"1\"\n        android:valueTo=\"0.5\" />\n    <objectAnimator\n        android:duration=\"1000\"\n        android:propertyName=\"scaleY\"\n        android:valueFrom=\"1\"\n        android:valueTo=\"0.5\" />\n</set>\n```\n# View的animate方法\nAndroid 3.0后，谷歌给View增加animate方法直接驱动属性动画。\n```java\n imageView.animate()\n                .alpha(0.5f)\n                .y(300)\n                .setDuration(2000)\n                //api min is 16\n                .withStartAction(new Runnable() {\n                    @Override\n                    public void run() {\n\n                    }\n                })\n                //api min is 16\n                .withEndAction(new Runnable() {\n                    @Override\n                    public void run() {\n\n                    }\n                })\n                .start();\n```\n# 布局动画\n设置子View过渡动画\n```js\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/parentLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"@dimen/activity_vertical_margin\">\n    <ImageView\n        android:id=\"@+id/imageMove\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@mipmap/ic_launcher\" />\n</LinearLayout>\n\n```\n```java\n LinearLayout parentLayout = (LinearLayout) findViewById(R.id.parentLayout);\n        ScaleAnimation scaleAnimation=new ScaleAnimation(0,1,0,1);\n        scaleAnimation.setDuration(2000);\n        LayoutAnimationController layoutAnimationController=new LayoutAnimationController(scaleAnimation,0.5f);\n        layoutAnimationController.setOrder(LayoutAnimationController.ORDER_NORMAL);\n        parentLayout.setLayoutAnimation(layoutAnimationController);\n```\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"Animator","published":1,"updated":"2016-03-22T05:33:50.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdx00evzspkflfalef8","thumbnailImageUrl":null},{"title":"AndroidStudio常见错误","date":"2015-07-21T01:26:11.000Z","_content":"> Android Studio导入项目，可能会有各种错误，这里记录我开发遇到的错误及解决方案。供参考。\n\n# org.gradle.api.internal.project.ProjectInternal.getPluginManager\n```java\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n\n    // this was apply plugin android-maven\n    apply plugin: 'com.github.dcendents.android-maven'\n}\n```\n<!--more-->\n## 报错：\nError:(2, 1) A problem occurred evaluating project ':library'.\norg.gradle.api.internal.project.ProjectInternal.getPluginManager()Lorg/gradle/api/internal/plugins/PluginManagerInternal;\n## 解决方案：\n工程文件目录gradle\\wrapper里面找到gradle-wrapper.properties修改里面的值：\n将distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip改为distributionUrl=https\\://services.gradle.org/distributions/gradle-2.8-all.zip\n\n# Error:Execution failed for task ':app:transformClassesWithDexForDebug'.\n```xml\ncom.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command 'D:\\Program Files\\Java\\jdk1.8.0_45\\bin\\java.exe'' finished with non-zero exit value 2\n```\n\n## 解决方案：\n```xml\nandroid {\n   ...\n   defaultConfig {\n      ...\n      multiDexEnabled true\n   }\n}\n```\n\n报错的意思，jar包重复了，我依赖了项目，我的app也有这个jar。我增加了这行，但是还是报错，于是我删除我的app的jar引用，还是报错了，折腾了一会，把我的app的jar删掉了，终于解决。","source":"_posts/AndroidStudioError.md","raw":"title: AndroidStudio常见错误\ndate: 2015-07-21 09:26:11\ntags: Android Studio\ncategory: Android Studio\n---\n> Android Studio导入项目，可能会有各种错误，这里记录我开发遇到的错误及解决方案。供参考。\n\n# org.gradle.api.internal.project.ProjectInternal.getPluginManager\n```java\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n\n    // this was apply plugin android-maven\n    apply plugin: 'com.github.dcendents.android-maven'\n}\n```\n<!--more-->\n## 报错：\nError:(2, 1) A problem occurred evaluating project ':library'.\norg.gradle.api.internal.project.ProjectInternal.getPluginManager()Lorg/gradle/api/internal/plugins/PluginManagerInternal;\n## 解决方案：\n工程文件目录gradle\\wrapper里面找到gradle-wrapper.properties修改里面的值：\n将distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip改为distributionUrl=https\\://services.gradle.org/distributions/gradle-2.8-all.zip\n\n# Error:Execution failed for task ':app:transformClassesWithDexForDebug'.\n```xml\ncom.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process 'command 'D:\\Program Files\\Java\\jdk1.8.0_45\\bin\\java.exe'' finished with non-zero exit value 2\n```\n\n## 解决方案：\n```xml\nandroid {\n   ...\n   defaultConfig {\n      ...\n      multiDexEnabled true\n   }\n}\n```\n\n报错的意思，jar包重复了，我依赖了项目，我的app也有这个jar。我增加了这行，但是还是报错，于是我删除我的app的jar引用，还是报错了，折腾了一会，把我的app的jar删掉了，终于解决。","slug":"AndroidStudioError","published":1,"updated":"2016-03-17T00:44:06.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrdz00ezzspkr2y4lfi8","thumbnailImageUrl":null},{"title":"Android实战Samples","date":"2014-11-08T16:00:00.000Z","_content":"工作将近三年，早就应该将自己实际开发中遇到的问题整成一个App，虽然论坛（[eoeAndroid](http://www.eoeandroid.com/space-uid-788456.html)、[安卓巴士](http://www.apkbus.com/home.php?mod=space&uid=104974)）已经分享了不少demo，自己也记录一些Android知识点，但是觉得这些还是不够，再次遇到以前的问题，还是会找以前的帖子去看，太不便，决定花点时间，将以前写的demo整到一块，方便自己，方便大家。\n\n源码地址：[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n","source":"_posts/AndroidSamples.md","raw":"title: Android实战Samples\ndate: 2014-11-09 \ncategories: [Android]\ntags: [Android]\n---\n工作将近三年，早就应该将自己实际开发中遇到的问题整成一个App，虽然论坛（[eoeAndroid](http://www.eoeandroid.com/space-uid-788456.html)、[安卓巴士](http://www.apkbus.com/home.php?mod=space&uid=104974)）已经分享了不少demo，自己也记录一些Android知识点，但是觉得这些还是不够，再次遇到以前的问题，还是会找以前的帖子去看，太不便，决定花点时间，将以前写的demo整到一块，方便自己，方便大家。\n\n源码地址：[https://github.com/WuXiaolong/AndroidSamples](https://github.com/WuXiaolong/AndroidSamples)\n","slug":"AndroidSamples","published":1,"updated":"2016-03-17T00:44:06.337Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekre100f2zspktjr7u8su","thumbnailImageUrl":null},{"title":"Android MVP 实例","date":"2015-09-23T08:28:22.000Z","_content":"# Android MVP 实例\n简单的请求天气功能，演示Android MVP是如何使用的\n\n# 效果预览\n![](https://github.com/WuXiaolong/AndroidMVPSample/raw/master/screenshots.png)\n<!--more-->\n\n# 准备\n## MVP流程\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample2.png)\n说明：\n步骤1：UI实现View方法，引用Presenter\n步骤2：Presenter调用Model，走Model具体逻辑\n步骤3：Model逻辑实现，回调Presenter方法\n步骤4：Presenter回调View，即回到UI，回调View方法\n\n## gradle文件\n```java\n compile 'com.loopj.android:android-async-http:1.4.9'\n```\n说明：请求网络使用async-http\n\n## 目录结构\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample3.png)\n\n# MVP之V\n\nMainView.java\n\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 处理业务需要哪些方法\n */\npublic interface MainView {\n    void showData(MainModelBean mainModelBean);\n\n    void showProgress();\n\n    void hideProgress();\n}\n```\n\nMainActivity\n\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 由Activity/Fragment实现View里方法，包含一个Presenter的引用\n */\npublic class MainActivity extends AppCompatActivity implements MainView {\n    private ProgressBar mProgressBar;\n    private TextView text;\n    private MainPresenter mMainPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n\n    }\n\n    private void initView() {\n        text = (TextView) findViewById(R.id.text);\n        mProgressBar = (ProgressBar) findViewById(R.id.mProgressBar);\n        mMainPresenter = new MainPresenter(this);\n        //制造延迟效果\n        new Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                mMainPresenter.loadData();\n            }\n        }, 2000);\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        mMainPresenter.detachView();\n        super.onDestroy();\n    }\n\n    @Override\n    public void showData(MainModelBean mainModelBean) {\n        String showData = getResources().getString(R.string.city) + mainModelBean.getCity()\n                + getResources().getString(R.string.wd) + mainModelBean.getWd()\n                + getResources().getString(R.string.ws) + mainModelBean.getWs()\n                + getResources().getString(R.string.time) + mainModelBean.getTime();\n        text.setText(showData);\n    }\n\n\n    @Override\n    public void showProgress() {\n        mProgressBar.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void hideProgress() {\n        mProgressBar.setVisibility(View.GONE);\n    }\n\n\n}\n\n```\n\n# MVP之P\n\nMainPresenter.java \n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * View和Model的桥梁，它从Model层检索数据后，返回给View层\n */\npublic class MainPresenter implements Presenter<MainView>, IMainPresenter {\n    private MainView mMainView;\n    private MainModel mMainModel;\n\n    public MainPresenter(MainView view) {\n        attachView(view);\n        mMainModel = new MainModel(this);\n    }\n\n    @Override\n    public void attachView(MainView view) {\n        this.mMainView = view;\n    }\n\n    @Override\n    public void detachView() {\n        this.mMainView = null;\n    }\n\n    public void loadData() {\n        mMainView.showProgress();\n        mMainModel.loadData();\n    }\n\n\n    @Override\n    public void loadDataSuccess(MainModelBean mainModelBean) {\n        mMainView.showData(mainModelBean);\n        mMainView.hideProgress();\n    }\n\n    @Override\n    public void loadDataFailure() {\n        mMainView.hideProgress();\n    }\n}\n\n```\n\nPresenter\n```java\npublic interface Presenter<V> {\n\n    void attachView(V view);\n\n    void detachView();\n\n}\n```\nIMainPresenter\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 此接口作用是连接Model\n */\npublic interface IMainPresenter {\n    void loadDataSuccess(MainModelBean mainModelBean);\n\n    void loadDataFailure();\n}\n\n```\n# MVP之M\nMainModel \n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 业务具体处理，包括负责存储、检索、操纵数据等\n */\npublic class MainModel {\n    IMainPresenter mIMainPresenter;\n\n    public MainModel(IMainPresenter iMainPresenter) {\n        this.mIMainPresenter = iMainPresenter;\n    }\n\n    public void loadData() {\n        AsyncHttpClient asyncHttpClient = new AsyncHttpClient();\n        asyncHttpClient.get(\"http://www.weather.com.cn/adat/sk/101010100.html\", new JsonHttpResponseHandler() {\n            @Override\n            public void onSuccess(int statusCode, Header[] headers, JSONObject response) {\n                super.onSuccess(statusCode, headers, response);\n                try {\n                    MainModelBean mainModelBean = new MainModelBean();\n                    JSONObject weatherinfo = response.getJSONObject(\"weatherinfo\");\n                    mainModelBean.setCity(weatherinfo.getString(\"city\"));\n                    mainModelBean.setWd(weatherinfo.getString(\"WD\"));\n                    mainModelBean.setWs(weatherinfo.getString(\"WS\"));\n                    mainModelBean.setTime(weatherinfo.getString(\"time\"));\n                    mIMainPresenter.loadDataSuccess(mainModelBean);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n\n            }\n\n            @Override\n            public void onFailure(int statusCode, Header[] headers, Throwable throwable, JSONObject errorResponse) {\n                super.onFailure(statusCode, headers, throwable, errorResponse);\n                mIMainPresenter.loadDataFailure();\n            }\n        });\n    }\n\n\n}\n```\nMainModelBean\n```java\npublic class MainModelBean {\n    private String city;\n    private String wd;\n    private String ws;\n    private String time;\n    //此处省略get和set方法    \n}\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)\n\n# 总结\n## MVC模式\n视图（View）：用户界面。\n控制器（Controller）：业务逻辑\n模型（Model）：数据保存\nView 传送指令到 Controller\nController 完成业务逻辑后，要求 Model 改变状态\nModel 将新的数据发送到 View，用户得到反馈\n\n## MVP模式\n使用MVP时，Activity和Fragment变成了MVC模式中View层，Presenter相当于MVC模式中Controller层，处理业务逻辑。每一个Activity都有一个相应的presenter来处理数据进而获取model。\n\n## MVVM模式\n将 Presenter 改名为 ViewModel，基本上与 MVP 模式完全一致。唯一的区别是，它采用双向绑定（data-binding）：View的变动，自动反映在 ViewModel，反之亦然。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","source":"_posts/AndroidMVPSample.md","raw":"title: Android MVP 实例\ndate: 2015-09-23 16:28:22\ntags: [Android,MVP]\ncategory: Android\n---\n# Android MVP 实例\n简单的请求天气功能，演示Android MVP是如何使用的\n\n# 效果预览\n![](https://github.com/WuXiaolong/AndroidMVPSample/raw/master/screenshots.png)\n<!--more-->\n\n# 准备\n## MVP流程\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample2.png)\n说明：\n步骤1：UI实现View方法，引用Presenter\n步骤2：Presenter调用Model，走Model具体逻辑\n步骤3：Model逻辑实现，回调Presenter方法\n步骤4：Presenter回调View，即回到UI，回调View方法\n\n## gradle文件\n```java\n compile 'com.loopj.android:android-async-http:1.4.9'\n```\n说明：请求网络使用async-http\n\n## 目录结构\n![](http://7q5c2h.com1.z0.glb.clouddn.com/androidmvpsample3.png)\n\n# MVP之V\n\nMainView.java\n\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 处理业务需要哪些方法\n */\npublic interface MainView {\n    void showData(MainModelBean mainModelBean);\n\n    void showProgress();\n\n    void hideProgress();\n}\n```\n\nMainActivity\n\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 由Activity/Fragment实现View里方法，包含一个Presenter的引用\n */\npublic class MainActivity extends AppCompatActivity implements MainView {\n    private ProgressBar mProgressBar;\n    private TextView text;\n    private MainPresenter mMainPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n\n    }\n\n    private void initView() {\n        text = (TextView) findViewById(R.id.text);\n        mProgressBar = (ProgressBar) findViewById(R.id.mProgressBar);\n        mMainPresenter = new MainPresenter(this);\n        //制造延迟效果\n        new Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                mMainPresenter.loadData();\n            }\n        }, 2000);\n\n    }\n\n    @Override\n    protected void onDestroy() {\n        mMainPresenter.detachView();\n        super.onDestroy();\n    }\n\n    @Override\n    public void showData(MainModelBean mainModelBean) {\n        String showData = getResources().getString(R.string.city) + mainModelBean.getCity()\n                + getResources().getString(R.string.wd) + mainModelBean.getWd()\n                + getResources().getString(R.string.ws) + mainModelBean.getWs()\n                + getResources().getString(R.string.time) + mainModelBean.getTime();\n        text.setText(showData);\n    }\n\n\n    @Override\n    public void showProgress() {\n        mProgressBar.setVisibility(View.VISIBLE);\n    }\n\n    @Override\n    public void hideProgress() {\n        mProgressBar.setVisibility(View.GONE);\n    }\n\n\n}\n\n```\n\n# MVP之P\n\nMainPresenter.java \n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * View和Model的桥梁，它从Model层检索数据后，返回给View层\n */\npublic class MainPresenter implements Presenter<MainView>, IMainPresenter {\n    private MainView mMainView;\n    private MainModel mMainModel;\n\n    public MainPresenter(MainView view) {\n        attachView(view);\n        mMainModel = new MainModel(this);\n    }\n\n    @Override\n    public void attachView(MainView view) {\n        this.mMainView = view;\n    }\n\n    @Override\n    public void detachView() {\n        this.mMainView = null;\n    }\n\n    public void loadData() {\n        mMainView.showProgress();\n        mMainModel.loadData();\n    }\n\n\n    @Override\n    public void loadDataSuccess(MainModelBean mainModelBean) {\n        mMainView.showData(mainModelBean);\n        mMainView.hideProgress();\n    }\n\n    @Override\n    public void loadDataFailure() {\n        mMainView.hideProgress();\n    }\n}\n\n```\n\nPresenter\n```java\npublic interface Presenter<V> {\n\n    void attachView(V view);\n\n    void detachView();\n\n}\n```\nIMainPresenter\n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 此接口作用是连接Model\n */\npublic interface IMainPresenter {\n    void loadDataSuccess(MainModelBean mainModelBean);\n\n    void loadDataFailure();\n}\n\n```\n# MVP之M\nMainModel \n```java\n/**\n * Created by WuXiaolong on 2015/9/23.\n * 业务具体处理，包括负责存储、检索、操纵数据等\n */\npublic class MainModel {\n    IMainPresenter mIMainPresenter;\n\n    public MainModel(IMainPresenter iMainPresenter) {\n        this.mIMainPresenter = iMainPresenter;\n    }\n\n    public void loadData() {\n        AsyncHttpClient asyncHttpClient = new AsyncHttpClient();\n        asyncHttpClient.get(\"http://www.weather.com.cn/adat/sk/101010100.html\", new JsonHttpResponseHandler() {\n            @Override\n            public void onSuccess(int statusCode, Header[] headers, JSONObject response) {\n                super.onSuccess(statusCode, headers, response);\n                try {\n                    MainModelBean mainModelBean = new MainModelBean();\n                    JSONObject weatherinfo = response.getJSONObject(\"weatherinfo\");\n                    mainModelBean.setCity(weatherinfo.getString(\"city\"));\n                    mainModelBean.setWd(weatherinfo.getString(\"WD\"));\n                    mainModelBean.setWs(weatherinfo.getString(\"WS\"));\n                    mainModelBean.setTime(weatherinfo.getString(\"time\"));\n                    mIMainPresenter.loadDataSuccess(mainModelBean);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n\n            }\n\n            @Override\n            public void onFailure(int statusCode, Header[] headers, Throwable throwable, JSONObject errorResponse) {\n                super.onFailure(statusCode, headers, throwable, errorResponse);\n                mIMainPresenter.loadDataFailure();\n            }\n        });\n    }\n\n\n}\n```\nMainModelBean\n```java\npublic class MainModelBean {\n    private String city;\n    private String wd;\n    private String ws;\n    private String time;\n    //此处省略get和set方法    \n}\n```\n\n# 源码地址\n[https://github.com/WuXiaolong/AndroidMVPSample](https://github.com/WuXiaolong/AndroidMVPSample)\n\n# 总结\n## MVC模式\n视图（View）：用户界面。\n控制器（Controller）：业务逻辑\n模型（Model）：数据保存\nView 传送指令到 Controller\nController 完成业务逻辑后，要求 Model 改变状态\nModel 将新的数据发送到 View，用户得到反馈\n\n## MVP模式\n使用MVP时，Activity和Fragment变成了MVC模式中View层，Presenter相当于MVC模式中Controller层，处理业务逻辑。每一个Activity都有一个相应的presenter来处理数据进而获取model。\n\n## MVVM模式\n将 Presenter 改名为 ViewModel，基本上与 MVP 模式完全一致。唯一的区别是，它采用双向绑定（data-binding）：View的变动，自动反映在 ViewModel，反之亦然。\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)","slug":"AndroidMVPSample","published":1,"updated":"2016-03-22T05:32:51.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekre300f5zspkelf2ohow","thumbnailImageUrl":null},{"title":"Android开发人员调查","date":"2015-07-23T16:00:00.000Z","_content":"\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n截止发文，共收到208份，数据如下：\n\n<!-- more -->\n# 整体统计\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey1.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey2.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey3.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey5.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey6.png)\n# 具体数据\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey7.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey8.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey9.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey10.png)\n\n数据越多越有参考价值，快来填填吧！\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","source":"_posts/AndroidDeveloperSurvey.md","raw":"title: Android开发人员调查\ndate: 2015-07-24\ncategories: Life\ntags: Life\n---\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n截止发文，共收到208份，数据如下：\n\n<!-- more -->\n# 整体统计\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey1.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey2.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey3.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey4.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey5.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey6.png)\n# 具体数据\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey7.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey8.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey9.png)\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AndroidDeveloperSurvey10.png)\n\n数据越多越有参考价值，快来填填吧！\n\nAndroid开发人员调查[http://www.wenjuan.com/s/7Jrm2m/](http://www.wenjuan.com/s/7Jrm2m/)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","slug":"AndroidDeveloperSurvey","published":1,"updated":"2016-03-17T00:44:06.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekre500f9zspkexapos0m","thumbnailImageUrl":null},{"title":"Android Studio快捷键设置成跟Eclipse一样","date":"2014-10-20T16:00:00.000Z","_content":"> 刚刚转AS还是各种不适应，尤其是eclipse那些快捷键，到AS基本不一样了，这点让我很是不爽。但是AS可以设置快捷键转成eclipse，这个很人性化，可以帮助使用eclipse快速过渡AS。\n\n1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-1.png)\n<!-- more -->\n2、Keymap，设置成Eclipse\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-2.png)\n3、设置个别快捷键\n* 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n\n* 快捷设置set和get方法\nAlt+insert\n* 自动导包\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-3.png)\n\n* 联想 \nClass Name Completion，AS快捷键是Ctrl+Alt+Space（空格键），Eclipse的快捷键Alt+/\n\n* 其他\nctrl+shift+t 找某个类\nalt+选择代码块复制\nctrl+f，可以选中代码块替换\nAlt+Shift+M选择代码块，生成一个方法\nEditor标签-other选择勾选“show quick doc on mouse move”选项，像eclipse通过鼠标显示悬浮提示\nEditor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示\n\n","source":"_posts/Android-Studio-shortcut-keys-arranged-like-Eclipse.md","raw":"title: Android Studio快捷键设置成跟Eclipse一样\ndate: 2014-10-21 \ncategories: Android Studio\ntags: Android Studio\n---\n> 刚刚转AS还是各种不适应，尤其是eclipse那些快捷键，到AS基本不一样了，这点让我很是不爽。但是AS可以设置快捷键转成eclipse，这个很人性化，可以帮助使用eclipse快速过渡AS。\n\n1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-1.png)\n<!-- more -->\n2、Keymap，设置成Eclipse\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-2.png)\n3、设置个别快捷键\n* 注释\nComment with Line Comment =>Ctrl+斜杠，改成Ctrl+Shift+c\n\n* 快捷设置set和get方法\nAlt+insert\n* 自动导包\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-shortcut-keys-arranged-like-Eclipse-3.png)\n\n* 联想 \nClass Name Completion，AS快捷键是Ctrl+Alt+Space（空格键），Eclipse的快捷键Alt+/\n\n* 其他\nctrl+shift+t 找某个类\nalt+选择代码块复制\nctrl+f，可以选中代码块替换\nAlt+Shift+M选择代码块，生成一个方法\nEditor标签-other选择勾选“show quick doc on mouse move”选项，像eclipse通过鼠标显示悬浮提示\nEditor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示\n\n","slug":"Android-Studio-shortcut-keys-arranged-like-Eclipse","published":1,"updated":"2016-03-17T00:44:06.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekre700fczspkrasfp2kl","thumbnailImageUrl":null},{"title":"Android Studio安装Genymotion插件","date":"2014-10-20T16:00:00.000Z","_content":"1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-1.png)\n2、搜索Plugins，安装Genymotion插件\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-2.png)\n3、settings->设置Genymotion安装路径\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-3.png)\n4、ok，over\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-4.png)","source":"_posts/Android-Studio-Genymotion.md","raw":"title: Android Studio安装Genymotion插件\ndate: 2014-10-21 \ncategories: [Android Studio]\ntags: [Android Studio,Genymotion]\n---\n1、File->settings\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-1.png)\n2、搜索Plugins，安装Genymotion插件\n<!-- more -->\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-2.png)\n3、settings->设置Genymotion安装路径\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-3.png)\n4、ok，over\n![](http://wuxiaolong.qiniudn.com/2014-10-21-Android-Studio-Genymotion-4.png)","slug":"Android-Studio-Genymotion","published":1,"updated":"2016-03-17T00:44:06.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekre900ffzspkg2u2wekf","thumbnailImageUrl":null},{"title":"Android调用系统相机和相册","date":"2014-11-09T16:00:00.000Z","_content":"\n> 拍照和相册的功能在实际开发中是最常见的功能，这里记录下。\n\n# 准备工作\n权限\n```java\n<!-- 往SDCard写入数据权限 --> \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /> \n<!--请求访问使用照相设备-->\n<uses-permission android:name=\"android.permission.CAMERA\" /> \n```\n常量\n```java\npublic final static int ALBUM_REQUEST_CODE = 1;\npublic final static int CROP_REQUEST = 2;\npublic final static int CAMERA_REQUEST_CODE = 3;\npublic static String SAVED_IMAGE_DIR_PATH = \nEnvironment.getExternalStorageDirectory().getPath() \n+ \"/AppName/camera/\";// 拍照路径\nString cameraPath;\n```\n#  相机\n\n```java\n// 指定相机拍摄照片保存地址\nString state = Environment.getExternalStorageState();\nif (state.equals(Environment.MEDIA_MOUNTED)) {\n    cameraPath = SAVED_IMAGE_DIR_PATH + System.currentTimeMillis() + \".png\";\n    Intent intent = new Intent();\n    // 指定开启系统相机的Action\n    intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\n    String out_file_path = SAVED_IMAGE_DIR_PATH;\n    File dir = new File(out_file_path);\n    if (!dir.exists()) {\n        dir.mkdirs();\n    } // 把文件地址转换成Uri格式\n    Uri uri = Uri.fromFile(new File(cameraPath));\n    // 设置系统相机拍摄照片完成后图片文件的存放地址\n    intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);\n    startActivityForResult(intent, CAMERA_REQUEST_CODE);\n} else {\n    Toast.makeText(getApplicationContext(), \"请确认已经插入SD卡\",\n            Toast.LENGTH_LONG).show();\n}\n```\nonActivityResult\n拿到cameraPath，就随便你搞了。\n```\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if (resultCode == Activity.RESULT_OK) {\n        if (requestCode == CAMERA_REQUEST_CODE) {\n            LogUtil.d(\"path=\" + cameraPath);\n        }\n }\n```\n不需要自定义路径，默认为Environment.DIRECTORY_PICTURES\n```java\n /**\n     * 启动相机\n     */\n    public static String startCamera(Activity activity, int requestCode) {\n        // 指定相机拍摄照片保存地址\n        String state = Environment.getExternalStorageState();\n        if (state.equals(Environment.MEDIA_MOUNTED)) {\n            Intent intent = new Intent();\n            // 指定开启系统相机的Action\n            intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\n            File outDir = Environment\n\t\t\t.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n            if (!outDir.exists()) {\n                outDir.mkdirs();\n            }\n            File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n            // 把文件地址转换成Uri格式\n            Uri uri = Uri.fromFile(outFile);\n            LogUtil.d(\"getAbsolutePath=\" + outFile.getAbsolutePath());\n            // 设置系统相机拍摄照片完成后图片文件的存放地址\n            intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);\n            // 此值在最低质量最小文件尺寸时是0，在最高质量最大文件尺寸时是１\n            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 0);\n            activity.startActivityForResult(intent, requestCode);\n            return outFile.getAbsolutePath();\n        } else {\n            Toast.makeText(activity, \"请确认已经插入SD卡\",\n                    Toast.LENGTH_LONG).show();\n            return null;\n        }\n\n    }\n```\n# 相册\n\n```java\nIntent intent = new Intent(Intent.ACTION_PICK, null);\nintent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, \"image/*\");\nintent.setAction(Intent.ACTION_GET_CONTENT);\nstartActivityForResult(intent, ALBUM_REQUEST_CODE);\n```\nonActivityResult\n调用系统相册，然后通过Uri拿到图片的绝对地址。\n```java\n @Override\n public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == Activity.RESULT_OK) {\n            if (requestCode == AppConstants.ALBUM_REQUEST_CODE) {\n                try {\n                    Uri uri = data.getData();\n                    final String absolutePath= getAbsolutePath(mActivity, uri);\n                    LogUtil.d(\"path=\" + absolutePath);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n\n        }\n    }\n```\ngetAbsolutePath方法\n```java\n public String getAbsolutePath(final Context context, final Uri uri) {\n     if (null == uri) return null;\n     final String scheme = uri.getScheme();\n     String data = null;\n     if (scheme == null)\n         data = uri.getPath();\n     else if (ContentResolver.SCHEME_FILE.equals(scheme)) {\n         data = uri.getPath();\n     } else if (ContentResolver.SCHEME_CONTENT.equals(scheme)) {\n         Cursor cursor = context.getContentResolver().query(uri, \n\t\t new String[]{MediaStore.Images.ImageColumns.DATA}, null, null, null);\n         if (null != cursor) {\n             if (cursor.moveToFirst()) {\n                 int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\n                 if (index > -1) {\n                     data = cursor.getString(index);\n                 }\n             }\n             cursor.close();\n         }\n     }\n     return data;\n }\n```\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","source":"_posts/Android-Photograph_Album.md","raw":"title: Android调用系统相机和相册\ndate: 2014-11-10 \ncategories: [Android]\ntags: [Camera，Album]\n---\n\n> 拍照和相册的功能在实际开发中是最常见的功能，这里记录下。\n\n# 准备工作\n权限\n```java\n<!-- 往SDCard写入数据权限 --> \n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /> \n<!--请求访问使用照相设备-->\n<uses-permission android:name=\"android.permission.CAMERA\" /> \n```\n常量\n```java\npublic final static int ALBUM_REQUEST_CODE = 1;\npublic final static int CROP_REQUEST = 2;\npublic final static int CAMERA_REQUEST_CODE = 3;\npublic static String SAVED_IMAGE_DIR_PATH = \nEnvironment.getExternalStorageDirectory().getPath() \n+ \"/AppName/camera/\";// 拍照路径\nString cameraPath;\n```\n#  相机\n\n```java\n// 指定相机拍摄照片保存地址\nString state = Environment.getExternalStorageState();\nif (state.equals(Environment.MEDIA_MOUNTED)) {\n    cameraPath = SAVED_IMAGE_DIR_PATH + System.currentTimeMillis() + \".png\";\n    Intent intent = new Intent();\n    // 指定开启系统相机的Action\n    intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\n    String out_file_path = SAVED_IMAGE_DIR_PATH;\n    File dir = new File(out_file_path);\n    if (!dir.exists()) {\n        dir.mkdirs();\n    } // 把文件地址转换成Uri格式\n    Uri uri = Uri.fromFile(new File(cameraPath));\n    // 设置系统相机拍摄照片完成后图片文件的存放地址\n    intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);\n    startActivityForResult(intent, CAMERA_REQUEST_CODE);\n} else {\n    Toast.makeText(getApplicationContext(), \"请确认已经插入SD卡\",\n            Toast.LENGTH_LONG).show();\n}\n```\nonActivityResult\n拿到cameraPath，就随便你搞了。\n```\n@Override\npublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if (resultCode == Activity.RESULT_OK) {\n        if (requestCode == CAMERA_REQUEST_CODE) {\n            LogUtil.d(\"path=\" + cameraPath);\n        }\n }\n```\n不需要自定义路径，默认为Environment.DIRECTORY_PICTURES\n```java\n /**\n     * 启动相机\n     */\n    public static String startCamera(Activity activity, int requestCode) {\n        // 指定相机拍摄照片保存地址\n        String state = Environment.getExternalStorageState();\n        if (state.equals(Environment.MEDIA_MOUNTED)) {\n            Intent intent = new Intent();\n            // 指定开启系统相机的Action\n            intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);\n            File outDir = Environment\n\t\t\t.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n            if (!outDir.exists()) {\n                outDir.mkdirs();\n            }\n            File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n            // 把文件地址转换成Uri格式\n            Uri uri = Uri.fromFile(outFile);\n            LogUtil.d(\"getAbsolutePath=\" + outFile.getAbsolutePath());\n            // 设置系统相机拍摄照片完成后图片文件的存放地址\n            intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);\n            // 此值在最低质量最小文件尺寸时是0，在最高质量最大文件尺寸时是１\n            intent.putExtra(MediaStore.EXTRA_VIDEO_QUALITY, 0);\n            activity.startActivityForResult(intent, requestCode);\n            return outFile.getAbsolutePath();\n        } else {\n            Toast.makeText(activity, \"请确认已经插入SD卡\",\n                    Toast.LENGTH_LONG).show();\n            return null;\n        }\n\n    }\n```\n# 相册\n\n```java\nIntent intent = new Intent(Intent.ACTION_PICK, null);\nintent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, \"image/*\");\nintent.setAction(Intent.ACTION_GET_CONTENT);\nstartActivityForResult(intent, ALBUM_REQUEST_CODE);\n```\nonActivityResult\n调用系统相册，然后通过Uri拿到图片的绝对地址。\n```java\n @Override\n public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (resultCode == Activity.RESULT_OK) {\n            if (requestCode == AppConstants.ALBUM_REQUEST_CODE) {\n                try {\n                    Uri uri = data.getData();\n                    final String absolutePath= getAbsolutePath(mActivity, uri);\n                    LogUtil.d(\"path=\" + absolutePath);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n\n        }\n    }\n```\ngetAbsolutePath方法\n```java\n public String getAbsolutePath(final Context context, final Uri uri) {\n     if (null == uri) return null;\n     final String scheme = uri.getScheme();\n     String data = null;\n     if (scheme == null)\n         data = uri.getPath();\n     else if (ContentResolver.SCHEME_FILE.equals(scheme)) {\n         data = uri.getPath();\n     } else if (ContentResolver.SCHEME_CONTENT.equals(scheme)) {\n         Cursor cursor = context.getContentResolver().query(uri, \n\t\t new String[]{MediaStore.Images.ImageColumns.DATA}, null, null, null);\n         if (null != cursor) {\n             if (cursor.moveToFirst()) {\n                 int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\n                 if (index > -1) {\n                     data = cursor.getString(index);\n                 }\n             }\n             cursor.close();\n         }\n     }\n     return data;\n }\n```\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","slug":"Android-Photograph_Album","published":1,"updated":"2016-06-03T09:02:12.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekreb00fjzspk6zs5tgmu","thumbnailImageUrl":null},{"title":"Android调用系统相机和相册-填坑篇","date":"2016-05-24T00:56:59.000Z","_content":"\n> 之前分享了[Android调用系统相机和相册](http://wuxiaolong.me/2014/11/10/Android-Photograph_Album/)，但是由于国内Android机型繁多，各家都自己的rom，调用系统的还是会出现不少问题：\n\n# 拍照后照片被旋转\n这种情况是使用Camera拍照以后，得到的照片会被自动旋转（90°、180°、270°）。解决方案：\n\n1、读取图片的旋转属性\n<!--more-->\n```java \n/**\n * 读取图片的旋转的角度\n *\n * @param path\n *            图片绝对路径\n * @return 图片的旋转角度\n */\nprivate int getBitmapDegree(String path) {\n    int degree = 0;\n    try {\n        // 从指定路径下读取图片，并获取其EXIF信息\n        ExifInterface exifInterface = new ExifInterface(path);\n        // 获取图片的旋转信息\n        int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,\n                ExifInterface.ORIENTATION_NORMAL);\n        switch (orientation) {\n        case ExifInterface.ORIENTATION_ROTATE_90:\n            degree = 90;\n            break;\n        case ExifInterface.ORIENTATION_ROTATE_180:\n            degree = 180;\n            break;\n        case ExifInterface.ORIENTATION_ROTATE_270:\n            degree = 270;\n            break;\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    return degree;\n}\n```\n2、将图片按照某个角度进行旋转\n```java\n/**\n * 将图片按照某个角度进行旋转\n *\n * @param bm\n *            需要旋转的图片\n * @param degree\n *            旋转角度\n * @return 旋转后的图片\n */\n\npublic static Bitmap rotateBitmapByDegree(Bitmap bm, int degree) {\n    Bitmap returnBm = null;\n  \n    // 根据旋转角度，生成旋转矩阵\n    Matrix matrix = new Matrix();\n    matrix.postRotate(degree);\n    try {\n        // 将原始图片按照旋转矩阵进行旋转，并得到新的图片\n        returnBm = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);\n    } catch (OutOfMemoryError e) {\n    }\n    if (returnBm == null) {\n        returnBm = bm;\n    }\n    if (bm != returnBm) {\n        bm.recycle();\n    }\n    return returnBm;\n}\n```\n详见博客：https://www.baidufe.com/item/4bb733d9999c53cb8fed.html\n\n# 调用系统相册，拿不到绝对路径\n上篇的方法，我在大部分手机测试是可行，但是一些机型还是拿不到，解决方案：\n```java\npublic class AbsolutePathUtil {\n    public static String getAbsolutePath(final Context context, final Uri uri) {\n        // DocumentProvider\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && DocumentsContract.isDocumentUri(context, uri)) {\n            // ExternalStorageProvider\n            if (isExternalStorageDocument(uri)) {\n                final String docId = DocumentsContract.getDocumentId(uri);\n                final String[] split = docId.split(\":\");\n                final String type = split[0];\n\n                if (\"primary\".equalsIgnoreCase(type)) {\n                    return Environment.getExternalStorageDirectory() + \"/\" + split[1];\n                }\n\n                // TODO handle non-primary volumes\n            }\n            // DownloadsProvider\n            else if (isDownloadsDocument(uri)) {\n\n                final String id = DocumentsContract.getDocumentId(uri);\n                final Uri contentUri = ContentUris.withAppendedId(\n                        Uri.parse(\"content://downloads/public_downloads\"), Long.valueOf(id));\n\n                return getDataColumn(context, contentUri, null, null);\n            }\n            // MediaProvider\n            else if (isMediaDocument(uri)) {\n                final String docId = DocumentsContract.getDocumentId(uri);\n                final String[] split = docId.split(\":\");\n                final String type = split[0];\n\n                Uri contentUri = null;\n                if (\"image\".equals(type)) {\n                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\n                } else if (\"video\".equals(type)) {\n                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\n                } else if (\"audio\".equals(type)) {\n                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\n                }\n\n                final String selection = \"_id=?\";\n                final String[] selectionArgs = new String[]{\n                        split[1]\n                };\n\n                return getDataColumn(context, contentUri, selection, selectionArgs);\n            }\n        }\n        // MediaStore (and general)\n        else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\n            return getDataColumn(context, uri, null, null);\n        }\n        // File\n        else if (\"file\".equalsIgnoreCase(uri.getScheme())) {\n            return uri.getPath();\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the value of the data column for this Uri. This is useful for\n     * MediaStore Uris, and other file-based ContentProviders.\n     *\n     * @param context       The context.\n     * @param uri           The Uri to query.\n     * @param selection     (Optional) Filter used in the query.\n     * @param selectionArgs (Optional) Selection arguments used in the query.\n     * @return The value of the _data column, which is typically a file path.\n     */\n    public static String getDataColumn(Context context, Uri uri, String selection, String[] selectionArgs) {\n\n        Cursor cursor = null;\n        final String column = \"_data\";\n        final String[] projection = {\n                column\n        };\n\n        try {\n            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,\n                    null);\n            if (cursor != null && cursor.moveToFirst()) {\n                final int column_index = cursor.getColumnIndexOrThrow(column);\n                return cursor.getString(column_index);\n            }\n        } finally {\n            if (cursor != null)\n                cursor.close();\n        }\n        return null;\n    }\n\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is ExternalStorageProvider.\n     */\n    public static boolean isExternalStorageDocument(Uri uri) {\n        return \"com.android.externalstorage.documents\".equals(uri.getAuthority());\n    }\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is DownloadsProvider.\n     */\n    public static boolean isDownloadsDocument(Uri uri) {\n        return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\n    }\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is MediaProvider.\n     */\n    public static boolean isMediaDocument(Uri uri) {\n        return \"com.android.providers.media.documents\".equals(uri.getAuthority());\n    }\n}\n```\n详见stackoverflow：http://stackoverflow.com/questions/13209494/how-to-get-the-full-file-path-from-uri\n\n# 裁剪\n拿到图片的绝对路径，有可能需要对它进行裁剪，这里当然也可以调用系统的裁剪，不过我推荐UCrop，功能好强大，简单的使用方法：\n```java\n/**\n * 启动裁剪\n */\npublic static String startUCrop(Activity activity, String sourceFilePath, int requestCode, float aspectRatioX, float aspectRatioY) {\n    Uri sourceUri = Uri.fromFile(new File(sourceFilePath));\n    File outDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n    if (!outDir.exists()) {\n        outDir.mkdirs();\n    }\n    File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n    String cameraScalePath = outFile.getAbsolutePath();\n    Uri destinationUri = Uri.fromFile(outFile);\n    UCrop uCrop = UCrop.of(sourceUri, destinationUri);\n    UCrop.Options options = new UCrop.Options();\n    options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ROTATE, UCropActivity.ALL);\n    options.setHideBottomControls(true);\n    options.setFreeStyleCropEnabled(true);\n    uCrop.withOptions(options);\n    uCrop.withAspectRatio(aspectRatioX, aspectRatioY);\n    uCrop.start(activity, requestCode);\n    return cameraScalePath;\n}\n```\n详见github：https://github.com/Yalantis/uCrop\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","source":"_posts/Android-Photograph-Album2.md","raw":"title: Android调用系统相机和相册-填坑篇\ndate: 2016-05-24 08:56:59\ncategories: [Android]\ntags: [Camera，Album]\n---\n\n> 之前分享了[Android调用系统相机和相册](http://wuxiaolong.me/2014/11/10/Android-Photograph_Album/)，但是由于国内Android机型繁多，各家都自己的rom，调用系统的还是会出现不少问题：\n\n# 拍照后照片被旋转\n这种情况是使用Camera拍照以后，得到的照片会被自动旋转（90°、180°、270°）。解决方案：\n\n1、读取图片的旋转属性\n<!--more-->\n```java \n/**\n * 读取图片的旋转的角度\n *\n * @param path\n *            图片绝对路径\n * @return 图片的旋转角度\n */\nprivate int getBitmapDegree(String path) {\n    int degree = 0;\n    try {\n        // 从指定路径下读取图片，并获取其EXIF信息\n        ExifInterface exifInterface = new ExifInterface(path);\n        // 获取图片的旋转信息\n        int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,\n                ExifInterface.ORIENTATION_NORMAL);\n        switch (orientation) {\n        case ExifInterface.ORIENTATION_ROTATE_90:\n            degree = 90;\n            break;\n        case ExifInterface.ORIENTATION_ROTATE_180:\n            degree = 180;\n            break;\n        case ExifInterface.ORIENTATION_ROTATE_270:\n            degree = 270;\n            break;\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    return degree;\n}\n```\n2、将图片按照某个角度进行旋转\n```java\n/**\n * 将图片按照某个角度进行旋转\n *\n * @param bm\n *            需要旋转的图片\n * @param degree\n *            旋转角度\n * @return 旋转后的图片\n */\n\npublic static Bitmap rotateBitmapByDegree(Bitmap bm, int degree) {\n    Bitmap returnBm = null;\n  \n    // 根据旋转角度，生成旋转矩阵\n    Matrix matrix = new Matrix();\n    matrix.postRotate(degree);\n    try {\n        // 将原始图片按照旋转矩阵进行旋转，并得到新的图片\n        returnBm = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);\n    } catch (OutOfMemoryError e) {\n    }\n    if (returnBm == null) {\n        returnBm = bm;\n    }\n    if (bm != returnBm) {\n        bm.recycle();\n    }\n    return returnBm;\n}\n```\n详见博客：https://www.baidufe.com/item/4bb733d9999c53cb8fed.html\n\n# 调用系统相册，拿不到绝对路径\n上篇的方法，我在大部分手机测试是可行，但是一些机型还是拿不到，解决方案：\n```java\npublic class AbsolutePathUtil {\n    public static String getAbsolutePath(final Context context, final Uri uri) {\n        // DocumentProvider\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && DocumentsContract.isDocumentUri(context, uri)) {\n            // ExternalStorageProvider\n            if (isExternalStorageDocument(uri)) {\n                final String docId = DocumentsContract.getDocumentId(uri);\n                final String[] split = docId.split(\":\");\n                final String type = split[0];\n\n                if (\"primary\".equalsIgnoreCase(type)) {\n                    return Environment.getExternalStorageDirectory() + \"/\" + split[1];\n                }\n\n                // TODO handle non-primary volumes\n            }\n            // DownloadsProvider\n            else if (isDownloadsDocument(uri)) {\n\n                final String id = DocumentsContract.getDocumentId(uri);\n                final Uri contentUri = ContentUris.withAppendedId(\n                        Uri.parse(\"content://downloads/public_downloads\"), Long.valueOf(id));\n\n                return getDataColumn(context, contentUri, null, null);\n            }\n            // MediaProvider\n            else if (isMediaDocument(uri)) {\n                final String docId = DocumentsContract.getDocumentId(uri);\n                final String[] split = docId.split(\":\");\n                final String type = split[0];\n\n                Uri contentUri = null;\n                if (\"image\".equals(type)) {\n                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\n                } else if (\"video\".equals(type)) {\n                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\n                } else if (\"audio\".equals(type)) {\n                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\n                }\n\n                final String selection = \"_id=?\";\n                final String[] selectionArgs = new String[]{\n                        split[1]\n                };\n\n                return getDataColumn(context, contentUri, selection, selectionArgs);\n            }\n        }\n        // MediaStore (and general)\n        else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\n            return getDataColumn(context, uri, null, null);\n        }\n        // File\n        else if (\"file\".equalsIgnoreCase(uri.getScheme())) {\n            return uri.getPath();\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the value of the data column for this Uri. This is useful for\n     * MediaStore Uris, and other file-based ContentProviders.\n     *\n     * @param context       The context.\n     * @param uri           The Uri to query.\n     * @param selection     (Optional) Filter used in the query.\n     * @param selectionArgs (Optional) Selection arguments used in the query.\n     * @return The value of the _data column, which is typically a file path.\n     */\n    public static String getDataColumn(Context context, Uri uri, String selection, String[] selectionArgs) {\n\n        Cursor cursor = null;\n        final String column = \"_data\";\n        final String[] projection = {\n                column\n        };\n\n        try {\n            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,\n                    null);\n            if (cursor != null && cursor.moveToFirst()) {\n                final int column_index = cursor.getColumnIndexOrThrow(column);\n                return cursor.getString(column_index);\n            }\n        } finally {\n            if (cursor != null)\n                cursor.close();\n        }\n        return null;\n    }\n\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is ExternalStorageProvider.\n     */\n    public static boolean isExternalStorageDocument(Uri uri) {\n        return \"com.android.externalstorage.documents\".equals(uri.getAuthority());\n    }\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is DownloadsProvider.\n     */\n    public static boolean isDownloadsDocument(Uri uri) {\n        return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\n    }\n\n    /**\n     * @param uri The Uri to check.\n     * @return Whether the Uri authority is MediaProvider.\n     */\n    public static boolean isMediaDocument(Uri uri) {\n        return \"com.android.providers.media.documents\".equals(uri.getAuthority());\n    }\n}\n```\n详见stackoverflow：http://stackoverflow.com/questions/13209494/how-to-get-the-full-file-path-from-uri\n\n# 裁剪\n拿到图片的绝对路径，有可能需要对它进行裁剪，这里当然也可以调用系统的裁剪，不过我推荐UCrop，功能好强大，简单的使用方法：\n```java\n/**\n * 启动裁剪\n */\npublic static String startUCrop(Activity activity, String sourceFilePath, int requestCode, float aspectRatioX, float aspectRatioY) {\n    Uri sourceUri = Uri.fromFile(new File(sourceFilePath));\n    File outDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n    if (!outDir.exists()) {\n        outDir.mkdirs();\n    }\n    File outFile = new File(outDir, System.currentTimeMillis() + \".jpg\");\n    String cameraScalePath = outFile.getAbsolutePath();\n    Uri destinationUri = Uri.fromFile(outFile);\n    UCrop uCrop = UCrop.of(sourceUri, destinationUri);\n    UCrop.Options options = new UCrop.Options();\n    options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ROTATE, UCropActivity.ALL);\n    options.setHideBottomControls(true);\n    options.setFreeStyleCropEnabled(true);\n    uCrop.withOptions(options);\n    uCrop.withAspectRatio(aspectRatioX, aspectRatioY);\n    uCrop.start(activity, requestCode);\n    return cameraScalePath;\n}\n```\n详见github：https://github.com/Yalantis/uCrop\n\n# AndroidProgrammer\n我的微信公众号：Android高手进阶之路，让我们共同学习，每天进步一点点。欢迎微信扫一扫关注。\n![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_AndroidProgrammer.jpg)\n\n# 关于作者\n[点击查看](http://wuxiaolong.me/about/)\n","slug":"Android-Photograph-Album2","published":1,"updated":"2016-06-03T09:02:12.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekree00fnzspk6udrqvxu","thumbnailImageUrl":null},{"title":"github之Android-Iconics使用","date":"2015-07-28T16:00:00.000Z","_content":"源码地址：[https://github.com/mikepenz/Android-Iconics](https://github.com/mikepenz/Android-Iconics)\n\n* build.gradle添加\n\n```java\ndependencies {\n    compile 'com.mikepenz:iconics:1.3.0@aar'\n}\n```\n<!-- more -->\n\n* 作为Drawable使用\n\n```java\nImageView image = (ImageView) findViewById(R.id.image);\nimage.setImageDrawable(new IconicsDrawable(this, FontAwesome.Icon.faw_android).color(Color.RED).sizeDp(24));\n```\n\n* 作为MenuItem使用\n\n```java\nMenuItem menuItem = menu.findItem(R.id.action_opensource);\nmenuItem.setIcon(new IconicsDrawable(this, FontAwesome.Icon.faw_github).actionBar().color(Color.WHITE));\n```\n\n* xml使用\n\n```js\n <com.mikepenz.iconics.view.IconicsImageView\n        android:id=\"@+id/icon\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:clickable=\"false\"\n        android:padding=\"8dp\"\n        android:scaleType=\"fitXY\"\n        app:iiv_color=\"@android:color/holo_green_dark\"\n        app:iiv_icon=\"faw_adjust\" />\n```\n\n```java\n IconicsImageView icon = (IconicsImageView) findViewById(R.id.icon);\n  List<String> icons = new ArrayList<String>();\n                        for (ITypeface font : Iconics.getRegisteredFonts()) {\n                            Log.d(\"wxl\", \"FontName=\" + font.getFontName());\n                            if (font.getFontName().equalsIgnoreCase(\"FontAwesome\")) {\n                                for (String icon : font.getIcons()) {\n                                    Log.d(\"wxl\", \"getIcons=\" + icon);\n                                    icons.add(icon);\n                                }\n                            }\n                        }\n  icon.setIcon(icons.get(0));\n  \n```\n","source":"_posts/Android-Iconics.md","raw":"title: github之Android-Iconics使用\ndate: 2015-07-29 \ncategories: [github]\ntags: [Android,Iconics,github]\n---\n源码地址：[https://github.com/mikepenz/Android-Iconics](https://github.com/mikepenz/Android-Iconics)\n\n* build.gradle添加\n\n```java\ndependencies {\n    compile 'com.mikepenz:iconics:1.3.0@aar'\n}\n```\n<!-- more -->\n\n* 作为Drawable使用\n\n```java\nImageView image = (ImageView) findViewById(R.id.image);\nimage.setImageDrawable(new IconicsDrawable(this, FontAwesome.Icon.faw_android).color(Color.RED).sizeDp(24));\n```\n\n* 作为MenuItem使用\n\n```java\nMenuItem menuItem = menu.findItem(R.id.action_opensource);\nmenuItem.setIcon(new IconicsDrawable(this, FontAwesome.Icon.faw_github).actionBar().color(Color.WHITE));\n```\n\n* xml使用\n\n```js\n <com.mikepenz.iconics.view.IconicsImageView\n        android:id=\"@+id/icon\"\n        android:layout_width=\"48dp\"\n        android:layout_height=\"48dp\"\n        android:clickable=\"false\"\n        android:padding=\"8dp\"\n        android:scaleType=\"fitXY\"\n        app:iiv_color=\"@android:color/holo_green_dark\"\n        app:iiv_icon=\"faw_adjust\" />\n```\n\n```java\n IconicsImageView icon = (IconicsImageView) findViewById(R.id.icon);\n  List<String> icons = new ArrayList<String>();\n                        for (ITypeface font : Iconics.getRegisteredFonts()) {\n                            Log.d(\"wxl\", \"FontName=\" + font.getFontName());\n                            if (font.getFontName().equalsIgnoreCase(\"FontAwesome\")) {\n                                for (String icon : font.getIcons()) {\n                                    Log.d(\"wxl\", \"getIcons=\" + icon);\n                                    icons.add(icon);\n                                }\n                            }\n                        }\n  icon.setIcon(icons.get(0));\n  \n```\n","slug":"Android-Iconics","published":1,"updated":"2016-03-17T00:44:06.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekreg00fqzspkzt0mq58w","thumbnailImageUrl":null},{"title":"广告基金","date":"2015-05-11T16:00:00.000Z","_content":"\n> 我很想买mac，但是暂时经济紧张，于是心里想，今年我的广告费什么时候攒够了，就买。求赞助，求包养T_T\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AdFund1.png)\n![收益截图](http://7q5c2h.com1.z0.glb.clouddn.com/AdFund2.png)\n\n广告总收益：22563.65+1933.53=24497.18（另外还有芒果聚合、点乐积分、多盟，都太少了，这里不计）","source":"_posts/AdFund.md","raw":"title: 广告基金\ndate: 2015-05-12\ncategories: [Life]\ntags: AD\n---\n\n> 我很想买mac，但是暂时经济紧张，于是心里想，今年我的广告费什么时候攒够了，就买。求赞助，求包养T_T\n\n![](http://7q5c2h.com1.z0.glb.clouddn.com/AdFund1.png)\n![收益截图](http://7q5c2h.com1.z0.glb.clouddn.com/AdFund2.png)\n\n广告总收益：22563.65+1933.53=24497.18（另外还有芒果聚合、点乐积分、多盟，都太少了，这里不计）","slug":"AdFund","published":1,"updated":"2016-03-17T00:44:06.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrej00fwzspkghq1ymbx","thumbnailImageUrl":null},{"title":"Activity生命周期和启动模式","date":"2015-11-01T11:57:34.000Z","_content":"# Activity生命周期\n```java\npublic class LifeCycleActivity extends AppCompatActivity {\n    static final String TAG = \"wxl\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.d(TAG, \"onCreate\");\n        setContentView(R.layout.activity_life_cycle);\n    }\n    \n  public void click(View view) {\n        startActivity(new Intent(this, StartModeActivity.class));\n    }\n    \n    @Override\n    public void onContentChanged() {\n        super.onContentChanged();\n        Log.d(TAG, \"onContentChanged\");\n    }\n\n    public void onStart() {\n        super.onStart();\n        Log.d(TAG, \"onStart\");\n    }\n\n    public void onRestart() {\n        super.onRestart();\n        Log.d(TAG, \"onRestart\");\n    }\n\n    public void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        Log.d(TAG, \"onPostCreate\");\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        Log.d(TAG, \"onResume\");\n    }\n\n    public void onPostResume() {\n        super.onPostResume();\n        Log.d(TAG, \"onPostResume\");\n    }\n\n    public void onPause() {\n        super.onPause();\n        Log.d(TAG, \"onPause\");\n    }\n\n    public void onStop() {\n        super.onStop();\n        Log.d(TAG, \"onStop\");\n    }\n\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy\");\n    }\n\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        Log.d(TAG, \"onConfigurationChanged\");\n    }\n\n    public void onSaveInstanceState(Bundle outState) {\n        super.onSaveInstanceState(outState);\n        Log.d(TAG, \"onSaveInstanceState\");\n    }\n\n    public void onRestoreInstanceState(Bundle outState) {\n        super.onRestoreInstanceState(outState);\n        Log.d(TAG, \"onRestoreInstanceState\");\n    }\n}\n```\n<!--more-->\n## 正常启动 \nonCreate --> onContentChanged --> onStart --> onPostCreate --> onResume --> onPostResume --> onPause --> onStop --> onDestroy\n\n## onCreate、 onStart\nonCreate方法会在第一次创建的时候执行，紧接着便会执行onStart方法\n\n## onContentChanged\nonContentChanged()是Activity中的一个回调方法\n当Activity的布局改动时，即setContentView()或者addContentView()方法执行完毕时就会调用该方法， 例如，Activity中各种View的findViewById()方法都可以放到该方法中。\n\n## onPostCreate、onPostResume\nonPostCreate方法是指onCreate方法彻底执行完毕的回调，onPostResume类似，这两个方法官方说法是一般不会重写，现在知道的做法也就只有在使用ActionBarDrawerToggle的使用在onPostCreate需要在屏幕旋转时候等同步下状态，Google官方提供的一些实例就是如下做法：\n```java\n@Override\nprotected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\n    // Sync the toggle state after onRestoreInstanceState has occurred.\n    mDrawerToggle.syncState();\n}\n```\n\n## onResume\n此时Activity处于Activity栈顶，处理用户交互。\n\n## onPause、 onStop\nonPause是在整个窗口被半遮盖或者半透明的时候会执行，Activity不会接受用户输入。而onStop则是在整个窗口被完全遮盖才会触发，此时Activity不可见，尽在后台运行。触发onStop的方法之前必定会触发onPause方法。\n\n## onSaveInstanceState、 onRestoreInstanceState\nonSaveInstanceState字面理解就是恢复实例的状态，需要注意的是，onSaveInstanceState方法和onRestoreInstanceState方法“不一定”是成对的被调用的，onRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用。\n\n长时间处于stopped形态，系统可能回收activity，比如旋转屏幕\nonResume --> onSaveInstanceState() --> onDestory\n重新创建\nonCreate --> onRestoreIntanceState() --> onResume \n```java\nprotected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    savedInstanceState.putLong(\"param\", value);\n}\npublic void onCreate(Bundle savedInstanceState) {\n    if (savedInstanceState != null){\n        value = savedInstanceState.getLong(\"param\");\n    }\n}\n```\n\n## 其他场景\n### 转向下一个activity \nonPause --> onSaveInstanceState --> onStop\n\n### 从下一个activity返回当前（按机器返回键）\nonRestart --> onStart --> onResume --> onPostResume\n\n### 转向上一个activity（按机器返回键）\nonPause --> onStop --> onDestory\n\n### 屏幕待机（黑掉）\nonPause\n\n### 屏幕变亮 \nonResume --> onPostResume\n\n### Home键退出 \nonPause --> onSaveInstanceState --> onStop\n\n### Home键导航返回 \nonRestart --> onStart --> onResume --> onPostResume\n\n### 旋转屏幕 \nonPause --> onStop --> onDestory --> onCreate --> onStart --> onPostCreate --> onResume --> onPostResume\n默认屏幕旋转会重新创建，当然可以通过在配置文件里加上如下代码：\n```js\nandroid:configChanges=\"keyboardHidden|orientation|screenSize\"（sdk>13时需加上screenSize）\n```\n这个时候再旋转屏幕便不会销毁Activity，这时候再旋转屏幕可以看到只会执行onConfigurationChanged方法，有什么在屏幕旋转的逻辑可以重写这个方法：\n```java\npublic void onConfigurationChanged(Configuration newConfig) {\n    if (newConfig.orientation == ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE) {\n        // TODO:\n    }\n    super.onConfigurationChanged(newConfig);\n}\n```\n\n# Activity启动模式-AndroidMainifest启动模式\n\nAndroidMainifest有四种启动模式，分别为standard，singleTop，singleTask，singleInstance。如果要使用这四种启动模式，必须在manifest文件中<activity>标签中的launchMode属性中配置，如：\n```js\n  <activity\n            android:name=\".StartModeActivity\"\n            android:launchMode=\"standard\" />\n```\n\n## standard\n标准启动模式，也是activity的默认启动模式。在这种模式下启动的activity可以被多次实例化，即在同一个任务中可以存在多个activity的实例，每个实例都会处理一个Intent对象。如果Activity A的启动模式为standard，并且A已经启动，在A中再次启动Activity A，即调用startActivity（new Intent（this，A.class）），会在A的上面再次启动一个A的实例，即当前的桟中的状态为A-->A。\n\n## singleTop\n如果一个以singleTop模式启动的activity的实例已经存在于任务桟的桟顶，那么再启动这个Activity时，不会创建新的实例，而是重用位于栈顶的那个实例，并且会调用该实例的onNewIntent()方法将Intent对象传递到这个实例中。举例来说，如果A的启动模式为singleTop，并且A的一个实例已经存在于栈顶中，那么再调用startActivity（new Intent（this，A.class））启动A时，不会再次创建A的实例，而是重用原来的实例，并且调用原来实例的onNewIntent()方法。这是任务桟中还是有一个A的实例。\n如果以singleTop模式启动的activity的一个实例已经存在与任务桟中，但是不在桟顶，那么它的行为和standard模式相同，也会创建多个实例。\n\n## singleTask\nsingleTask模式的Activity只允许在系统中有一个实例。如果系统中已经有了一个实例，持有这个实例的任务将移动到顶部，同时intent将被通过onNewIntent()发送。如果没有，则会创建一个新的Activity并置放在合适的任务中。\n\n## singleInstance\n总是在新的任务中开启，并且这个新的任务中有且只有这一个实例，也就是说被该实例启动的其他activity会自动运行于另一个任务中。当再次启动该activity的实例时，会重用已存在的任务和实例。并且会调用这个实例的onNewIntent()方法，将Intent实例传递到该实例中。和singleTask相同，同一时刻在系统中只会存在一个这样的Activity实例。比如MainActivity是singleInstance模式，应用A的任务栈创建了MainActivity，应用B也激活了MainActivity，则不需要再创建，两个应用共享MainActivity实例。\n\n# Activity启动模式-Intent Flag启动模式\n```java\nIntent intent = new Intent(LifeCycleActivity.this, LifeCycleActivity.class);\nintent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);\nstartActivity(intent);\n```\n常用的Flag\n## Intent.FLAG_ACTIVITY_NEW_TASK\n使用一个新的Task来启动一个Activity，启动的每个Activity都将在一个新的Task中。这种通常使用在Service中启动Activity的场景，由于Service中并不存在Activity栈，使用该Flag来创建一个新的Activity栈，并创建新的Activity实例。\n\n## Intent.FLAG_ACTIVITY_SINGLE_TOP\n与 android:launchMode=\"singleTop\"效果相同\n\n## Intent.FLAG_ACTIVITY_CLEAR_TOP\n与 android:launchMode=\"singleTask\"效果相同\n\n## Intent.FLAG_ACTIVITY_NO_HISTORY\n当该Activity启动其他Activity时，该Activity就消失了，不保留Activity栈中。比如A启动B，B启动C，C又启动D，则当前Activity栈为ABD。\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n\n","source":"_posts/Activity.md","raw":"title: Activity生命周期和启动模式\ndate: 2015-11-01 19:57:34\ntags: Activity\ncategory: Android\n---\n# Activity生命周期\n```java\npublic class LifeCycleActivity extends AppCompatActivity {\n    static final String TAG = \"wxl\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.d(TAG, \"onCreate\");\n        setContentView(R.layout.activity_life_cycle);\n    }\n    \n  public void click(View view) {\n        startActivity(new Intent(this, StartModeActivity.class));\n    }\n    \n    @Override\n    public void onContentChanged() {\n        super.onContentChanged();\n        Log.d(TAG, \"onContentChanged\");\n    }\n\n    public void onStart() {\n        super.onStart();\n        Log.d(TAG, \"onStart\");\n    }\n\n    public void onRestart() {\n        super.onRestart();\n        Log.d(TAG, \"onRestart\");\n    }\n\n    public void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        Log.d(TAG, \"onPostCreate\");\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        Log.d(TAG, \"onResume\");\n    }\n\n    public void onPostResume() {\n        super.onPostResume();\n        Log.d(TAG, \"onPostResume\");\n    }\n\n    public void onPause() {\n        super.onPause();\n        Log.d(TAG, \"onPause\");\n    }\n\n    public void onStop() {\n        super.onStop();\n        Log.d(TAG, \"onStop\");\n    }\n\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy\");\n    }\n\n    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        Log.d(TAG, \"onConfigurationChanged\");\n    }\n\n    public void onSaveInstanceState(Bundle outState) {\n        super.onSaveInstanceState(outState);\n        Log.d(TAG, \"onSaveInstanceState\");\n    }\n\n    public void onRestoreInstanceState(Bundle outState) {\n        super.onRestoreInstanceState(outState);\n        Log.d(TAG, \"onRestoreInstanceState\");\n    }\n}\n```\n<!--more-->\n## 正常启动 \nonCreate --> onContentChanged --> onStart --> onPostCreate --> onResume --> onPostResume --> onPause --> onStop --> onDestroy\n\n## onCreate、 onStart\nonCreate方法会在第一次创建的时候执行，紧接着便会执行onStart方法\n\n## onContentChanged\nonContentChanged()是Activity中的一个回调方法\n当Activity的布局改动时，即setContentView()或者addContentView()方法执行完毕时就会调用该方法， 例如，Activity中各种View的findViewById()方法都可以放到该方法中。\n\n## onPostCreate、onPostResume\nonPostCreate方法是指onCreate方法彻底执行完毕的回调，onPostResume类似，这两个方法官方说法是一般不会重写，现在知道的做法也就只有在使用ActionBarDrawerToggle的使用在onPostCreate需要在屏幕旋转时候等同步下状态，Google官方提供的一些实例就是如下做法：\n```java\n@Override\nprotected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\n    // Sync the toggle state after onRestoreInstanceState has occurred.\n    mDrawerToggle.syncState();\n}\n```\n\n## onResume\n此时Activity处于Activity栈顶，处理用户交互。\n\n## onPause、 onStop\nonPause是在整个窗口被半遮盖或者半透明的时候会执行，Activity不会接受用户输入。而onStop则是在整个窗口被完全遮盖才会触发，此时Activity不可见，尽在后台运行。触发onStop的方法之前必定会触发onPause方法。\n\n## onSaveInstanceState、 onRestoreInstanceState\nonSaveInstanceState字面理解就是恢复实例的状态，需要注意的是，onSaveInstanceState方法和onRestoreInstanceState方法“不一定”是成对的被调用的，onRestoreInstanceState被调用的前提是，activity A“确实”被系统销毁了，而如果仅仅是停留在有这种可能性的情况下，则该方法不会被调用。\n\n长时间处于stopped形态，系统可能回收activity，比如旋转屏幕\nonResume --> onSaveInstanceState() --> onDestory\n重新创建\nonCreate --> onRestoreIntanceState() --> onResume \n```java\nprotected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    savedInstanceState.putLong(\"param\", value);\n}\npublic void onCreate(Bundle savedInstanceState) {\n    if (savedInstanceState != null){\n        value = savedInstanceState.getLong(\"param\");\n    }\n}\n```\n\n## 其他场景\n### 转向下一个activity \nonPause --> onSaveInstanceState --> onStop\n\n### 从下一个activity返回当前（按机器返回键）\nonRestart --> onStart --> onResume --> onPostResume\n\n### 转向上一个activity（按机器返回键）\nonPause --> onStop --> onDestory\n\n### 屏幕待机（黑掉）\nonPause\n\n### 屏幕变亮 \nonResume --> onPostResume\n\n### Home键退出 \nonPause --> onSaveInstanceState --> onStop\n\n### Home键导航返回 \nonRestart --> onStart --> onResume --> onPostResume\n\n### 旋转屏幕 \nonPause --> onStop --> onDestory --> onCreate --> onStart --> onPostCreate --> onResume --> onPostResume\n默认屏幕旋转会重新创建，当然可以通过在配置文件里加上如下代码：\n```js\nandroid:configChanges=\"keyboardHidden|orientation|screenSize\"（sdk>13时需加上screenSize）\n```\n这个时候再旋转屏幕便不会销毁Activity，这时候再旋转屏幕可以看到只会执行onConfigurationChanged方法，有什么在屏幕旋转的逻辑可以重写这个方法：\n```java\npublic void onConfigurationChanged(Configuration newConfig) {\n    if (newConfig.orientation == ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE) {\n        // TODO:\n    }\n    super.onConfigurationChanged(newConfig);\n}\n```\n\n# Activity启动模式-AndroidMainifest启动模式\n\nAndroidMainifest有四种启动模式，分别为standard，singleTop，singleTask，singleInstance。如果要使用这四种启动模式，必须在manifest文件中<activity>标签中的launchMode属性中配置，如：\n```js\n  <activity\n            android:name=\".StartModeActivity\"\n            android:launchMode=\"standard\" />\n```\n\n## standard\n标准启动模式，也是activity的默认启动模式。在这种模式下启动的activity可以被多次实例化，即在同一个任务中可以存在多个activity的实例，每个实例都会处理一个Intent对象。如果Activity A的启动模式为standard，并且A已经启动，在A中再次启动Activity A，即调用startActivity（new Intent（this，A.class）），会在A的上面再次启动一个A的实例，即当前的桟中的状态为A-->A。\n\n## singleTop\n如果一个以singleTop模式启动的activity的实例已经存在于任务桟的桟顶，那么再启动这个Activity时，不会创建新的实例，而是重用位于栈顶的那个实例，并且会调用该实例的onNewIntent()方法将Intent对象传递到这个实例中。举例来说，如果A的启动模式为singleTop，并且A的一个实例已经存在于栈顶中，那么再调用startActivity（new Intent（this，A.class））启动A时，不会再次创建A的实例，而是重用原来的实例，并且调用原来实例的onNewIntent()方法。这是任务桟中还是有一个A的实例。\n如果以singleTop模式启动的activity的一个实例已经存在与任务桟中，但是不在桟顶，那么它的行为和standard模式相同，也会创建多个实例。\n\n## singleTask\nsingleTask模式的Activity只允许在系统中有一个实例。如果系统中已经有了一个实例，持有这个实例的任务将移动到顶部，同时intent将被通过onNewIntent()发送。如果没有，则会创建一个新的Activity并置放在合适的任务中。\n\n## singleInstance\n总是在新的任务中开启，并且这个新的任务中有且只有这一个实例，也就是说被该实例启动的其他activity会自动运行于另一个任务中。当再次启动该activity的实例时，会重用已存在的任务和实例。并且会调用这个实例的onNewIntent()方法，将Intent实例传递到该实例中。和singleTask相同，同一时刻在系统中只会存在一个这样的Activity实例。比如MainActivity是singleInstance模式，应用A的任务栈创建了MainActivity，应用B也激活了MainActivity，则不需要再创建，两个应用共享MainActivity实例。\n\n# Activity启动模式-Intent Flag启动模式\n```java\nIntent intent = new Intent(LifeCycleActivity.this, LifeCycleActivity.class);\nintent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);\nstartActivity(intent);\n```\n常用的Flag\n## Intent.FLAG_ACTIVITY_NEW_TASK\n使用一个新的Task来启动一个Activity，启动的每个Activity都将在一个新的Task中。这种通常使用在Service中启动Activity的场景，由于Service中并不存在Activity栈，使用该Flag来创建一个新的Activity栈，并创建新的Activity实例。\n\n## Intent.FLAG_ACTIVITY_SINGLE_TOP\n与 android:launchMode=\"singleTop\"效果相同\n\n## Intent.FLAG_ACTIVITY_CLEAR_TOP\n与 android:launchMode=\"singleTask\"效果相同\n\n## Intent.FLAG_ACTIVITY_NO_HISTORY\n当该Activity启动其他Activity时，该Activity就消失了，不保留Activity栈中。比如A启动B，B启动C，C又启动D，则当前Activity栈为ABD。\n\n# 剩者为王\n我的Android技术交流群，群名寓意很简单，经过时间洗礼，最终剩下的才是王者，欢迎“剩友”。\n剩者为王③群：370527306 <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=0a992ba077da4c8325cbfef1c9e81f0443ffb782a0f2135c1a8f7326baac58ac\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"剩者为王③群\" title=\"剩者为王③群\"></a>\n\n\n","slug":"Activity","published":1,"updated":"2016-03-17T00:44:06.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrel00g0zspkom6sps2p","thumbnailImageUrl":null},{"title":"2016关键字","date":"2015-12-27T09:43:42.000Z","_content":"# 回顾15年\n这一年，大部分时间都在煎熬，对[《2015年关键字》](http://wuxiaolong.me/2015/03/27/2015key/)几个关键字完成的也不是很满意。\n生活方面，顺利结婚，整个过程，只能用两个字形容：虐心，这种心情恐怕只有过来人才知道。工作方面属于迷茫，不知道该干嘛。技术感觉也遇到了瓶颈，是要转IOS？于是swift尝鲜，入门做了个简单的demo就停止了；还是继续加深Android，却不知道该从何入手。直到最近明确了方向，我要向高级程序员进阶。\n这一年，整体是不开心，但还是有收获的，拥有了属于自己的[技术博客](http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/)，第一时间学习了很多Android刚出来的新的东西：[Android studio](http://wuxiaolong.me/2015/11/25/WeWin/)、[RecyclerView](http://wuxiaolong.me/2015/09/15/RecyclerViewCardView/)、[DesignSupportLibrary](https://github.com/WuXiaolong/DesignSupportLibrarySample)、[MVP模式](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)等，下面开始展望16年。\n<!--more-->\n# 展望16年\n\n## 高级程序员\n工作三四年，我的技术顶多中等偏上，哎，时间荒废了。过去一年，我已不追求效果的实现，而是更多关注实现的原理，最近还在拜读《Android群英传》《Android开发艺术探索》。16年，高级进阶之路，加足马达，go。\n\n## Mac\n15年一直想买，计划我的[广告费](http://wuxiaolong.me/2015/05/12/AdFund/)赚够了mac钱就买，却一直未实现，因为现在工资不够每个月的开销的。如果买了Mac，应该还会整整swift，但还是不会深入。\n\n## 英语\n我是英语渣渣，英语还是会贯穿16年甚至更久，15年已经将不会的单词，存在金山词霸里，可惜没有经常去记这些单词，真是惭愧。\n\n## 看书\n15年到后来，我真的很浮躁，我发现我看书能让我这个心静下来。其实我还是比较喜欢看看书，16年，我会没事多看看书来抚慰我那颗骚动的心。\n\n## 个人博客\n很庆幸，我有记录的习惯。现在写写博客，若干年再看到这些，一定会有不一样的心情，或许觉得现在的我好幼稚、好可笑。\n\n<!---换工作可能成行，现在的公司在无锡已经算不错了。无锡软件公司真的不景气，如果有机会，会去上海看看。-->\n\n## 总结\n2016年应该会波澜不惊，主要精力在工作和家庭，16年家庭会多一位新的成员，这意味我肩上又多了一份责任。\n同样年底检测成果。","source":"_posts/2016key.md","raw":"title: 2016关键字\ndate: 2015-12-27 17:43:42\ntags: key word\ncategory: Life\n---\n# 回顾15年\n这一年，大部分时间都在煎熬，对[《2015年关键字》](http://wuxiaolong.me/2015/03/27/2015key/)几个关键字完成的也不是很满意。\n生活方面，顺利结婚，整个过程，只能用两个字形容：虐心，这种心情恐怕只有过来人才知道。工作方面属于迷茫，不知道该干嘛。技术感觉也遇到了瓶颈，是要转IOS？于是swift尝鲜，入门做了个简单的demo就停止了；还是继续加深Android，却不知道该从何入手。直到最近明确了方向，我要向高级程序员进阶。\n这一年，整体是不开心，但还是有收获的，拥有了属于自己的[技术博客](http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/)，第一时间学习了很多Android刚出来的新的东西：[Android studio](http://wuxiaolong.me/2015/11/25/WeWin/)、[RecyclerView](http://wuxiaolong.me/2015/09/15/RecyclerViewCardView/)、[DesignSupportLibrary](https://github.com/WuXiaolong/DesignSupportLibrarySample)、[MVP模式](http://wuxiaolong.me/2015/09/23/AndroidMVPSample/)等，下面开始展望16年。\n<!--more-->\n# 展望16年\n\n## 高级程序员\n工作三四年，我的技术顶多中等偏上，哎，时间荒废了。过去一年，我已不追求效果的实现，而是更多关注实现的原理，最近还在拜读《Android群英传》《Android开发艺术探索》。16年，高级进阶之路，加足马达，go。\n\n## Mac\n15年一直想买，计划我的[广告费](http://wuxiaolong.me/2015/05/12/AdFund/)赚够了mac钱就买，却一直未实现，因为现在工资不够每个月的开销的。如果买了Mac，应该还会整整swift，但还是不会深入。\n\n## 英语\n我是英语渣渣，英语还是会贯穿16年甚至更久，15年已经将不会的单词，存在金山词霸里，可惜没有经常去记这些单词，真是惭愧。\n\n## 看书\n15年到后来，我真的很浮躁，我发现我看书能让我这个心静下来。其实我还是比较喜欢看看书，16年，我会没事多看看书来抚慰我那颗骚动的心。\n\n## 个人博客\n很庆幸，我有记录的习惯。现在写写博客，若干年再看到这些，一定会有不一样的心情，或许觉得现在的我好幼稚、好可笑。\n\n<!---换工作可能成行，现在的公司在无锡已经算不错了。无锡软件公司真的不景气，如果有机会，会去上海看看。-->\n\n## 总结\n2016年应该会波澜不惊，主要精力在工作和家庭，16年家庭会多一位新的成员，这意味我肩上又多了一份责任。\n同样年底检测成果。","slug":"2016key","published":1,"updated":"2016-03-17T00:44:06.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekren00g4zspkq86om11y","thumbnailImageUrl":null},{"title":"2015关键字","date":"2015-03-27T09:37:17.000Z","_content":"# 结婚\n贯穿全年，成家了好好立业。\n\n# 复制\n大大小小的项目也写了不少，感觉只是复制代码而已，对于著名的开源库，之前要求会使用就行，如果不深究，只会是个“码农”。\n\n# 产品\nAndroid项目的创建到发布上线，这个流程已经再熟悉不过，但是打造一款用户喜爱的产品，需要哪些人员、又有哪些流程？知道不？好吧，今年该了解的。\n<!--more-->\n# 英语\n一直很羡慕那些英语好的人，更羡慕那些用英语交流的人，我的英文渣，然而码农进击之路，这关必须过。也为了以后不出现这种尴尬：“爸爸，这个单词怎么读啊”，“啊……去问你妈吧！”\n\n# 口才\n“n”“l”不分，前鼻音后鼻音不分……反正好多不分，生活中因为这些闹出了好多笑话，提升说的能力势在必行。\n\n# 危机\n“生于忧患死于安乐”，安逸的生活往往使人颓废，我尤记得当时去海辉面试的窘迫样，虽然他问得都是我未曾做过的java方面的。如果真是大神，口头还须表达出来，让他相信你就是，现阶段我还不是大神。\n\n# 总结\n2015年是幸福的一年，也是苦逼的一年。玩命努力的人那么多，你凭什么不拼。年底检测成果。","source":"_posts/2015key.md","raw":"title: 2015关键字\ndate: 2015-03-27 17:37:17\ntags: key word\ncategory: Life\n---\n# 结婚\n贯穿全年，成家了好好立业。\n\n# 复制\n大大小小的项目也写了不少，感觉只是复制代码而已，对于著名的开源库，之前要求会使用就行，如果不深究，只会是个“码农”。\n\n# 产品\nAndroid项目的创建到发布上线，这个流程已经再熟悉不过，但是打造一款用户喜爱的产品，需要哪些人员、又有哪些流程？知道不？好吧，今年该了解的。\n<!--more-->\n# 英语\n一直很羡慕那些英语好的人，更羡慕那些用英语交流的人，我的英文渣，然而码农进击之路，这关必须过。也为了以后不出现这种尴尬：“爸爸，这个单词怎么读啊”，“啊……去问你妈吧！”\n\n# 口才\n“n”“l”不分，前鼻音后鼻音不分……反正好多不分，生活中因为这些闹出了好多笑话，提升说的能力势在必行。\n\n# 危机\n“生于忧患死于安乐”，安逸的生活往往使人颓废，我尤记得当时去海辉面试的窘迫样，虽然他问得都是我未曾做过的java方面的。如果真是大神，口头还须表达出来，让他相信你就是，现阶段我还不是大神。\n\n# 总结\n2015年是幸福的一年，也是苦逼的一年。玩命努力的人那么多，你凭什么不拼。年底检测成果。","slug":"2015key","published":1,"updated":"2016-03-17T00:44:06.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrep00g8zspkxvx1ihao","thumbnailImageUrl":null},{"title":"Android Toast源码解析","date":"2016-04-25T00:41:31.000Z","_content":"# 写在前面\n首先推荐下近期小伙伴们一起组织发起的Android SDK源码解析，旨在帮助初学者更好的学习Android！工程很宏大，包括Android SDK中控件、系统工具类、支持库等，如果您也是开源爱好者，欢迎去认领。\n我准备按照What-How-Why，知其然知其所以然，沿着这个3W思路来探探Toast源码，正式进入主题，let's go。\n\n# Toast简介\nToast是一种提供给用户简洁信息的视图，该视图已浮于应用程序之上的形式呈现给用户。\nToast源码位于：[frameworks\\base\\core\\java\\android\\widget\\Toast.java](https://github.com/android/platform_frameworks_base/blob/master/core/java/android/widget/Toast.java)\n\n# Toast使用\n\nToast使用就一行代码：\n```java\n    Toast.makeText(ToastActivity.this,\"Toast源码解析\",Toast.LENGTH_LONG).show();\n```\n\nToast 提供了setView方法，可以自定义View：\n```java\n\n    Toast toast=new Toast(ToastActivity.this);\n    View view=View.inflate(ToastActivity.this,R.layout.toast_view,null);\n    toast.setView(view);\n    toast.setGravity(Gravity.CENTER,0,0);\n    toast.show();\n    \n```\n\ntoast_view.xml\n```xml\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n        \n            <ImageView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"@mipmap/ic_launcher\" />\n    </LinearLayout>\n\n```\n\n# Toast源码分析\nToast源码分析有两个目标，知道Toast源码在哪里体现了Toast显示，又在哪里体现了Toast消失。首先从Toast的基本使用，作为入口。\n\n```java\n    Toast.makeText(ToastActivity.this,\"Toast源码解析\",Toast.LENGTH_LONG).show();\n```\n\n## 1. makeText\n先从makeText方法入手，一步步深入。\n\n```java\n\n    public static Toast makeText(Context context, CharSequence text, @Duration int duration) {\n        Toast result = new Toast(context);\n\n        LayoutInflater inflate = (LayoutInflater)\n                context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(com.android.internal.R.layout.transient_notification, null);\n        TextView tv = (TextView)v.findViewById(com.android.internal.R.id.message);\n        tv.setText(text);\n        \n        result.mNextView = v;//传入下个view\n        result.mDuration = duration;//Toast显示的时间长度\n\n        return result;\n    }\n    \n```\n\n对应的transient_notification.xml，源码位于：[frameworks\\base\\core\\res\\layout\\transient_notification.xml](https://github.com/android/platform_frameworks_base/blob/master/core/res/res/layout/transient_notification.xml)\n\n```xml\n\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:background=\"?android:attr/toastFrameBackground\">\n    \n        <TextView\n            android:id=\"@android:id/message\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_weight=\"1\"\n            android:layout_gravity=\"center_horizontal\"\n            android:textAppearance=\"@style/TextAppearance.Toast\"\n            android:textColor=\"@color/bright_foreground_dark\"\n            android:shadowColor=\"#BB000000\"\n            android:shadowRadius=\"2.75\"\n            />\n    \n    </LinearLayout>\n```\n\n从makeText方法看，就是Toast的自定义view的那部分代码。\n\n# 2. show\n再来看看show方法：\n```java\n\n    public void show() {\n\t\t//解释自定义view，需要先setView\n        if (mNextView == null) {\n            throw new RuntimeException(\"setView must have been called\");\n        }\n\t\t//得到INotificationManager服务\n        INotificationManager service = getService();\n        String pkg = mContext.getOpPackageName();\n\t\t//TN对象\n        TN tn = mTN;\n        tn.mNextView = mNextView;\n\n        try {\n            service.enqueueToast(pkg, tn, mDuration);\n        } catch (RemoteException e) {\n            // Empty\n        }\n    }\n    \n```\n\n看了show方法，发现涉及两个新的类，TN 和INotificationManager 。enqueueToast方法大概就是实现Toast显示和消失吧，让我们一步步探索。\n\n## 2.1. TN \nTN类继承自ITransientNotification.Stub，ITransientNotification.aidl，用于进程间通信，源码位于[frameworks\\base\\core\\java\\android\\app\\ITransientNotification.aidl](https://github.com/android/platform_frameworks_base/blob/master/core/java/android/app/ITransientNotification.aidl)\n```java\n\n    private static class TN extends ITransientNotification.Stub {\n \n        final Runnable mShow = new Runnable() {\n            @Override\n            public void run() {\n                handleShow();//显示处理\n            }\n        };\n\n        final Runnable mHide = new Runnable() {\n            @Override\n            public void run() {\n                handleHide();//消失处理\n                // Don't do this in handleHide() because it is also invoked by handleShow()\n                mNextView = null;\n            }\n        };\n\t\t//应用程序窗口\n        private final WindowManager.LayoutParams mParams = new WindowManager.LayoutParams();\n        final Handler mHandler = new Handler();    \n\n        int mGravity;//出现在屏幕的位置\n        int mX, mY;//分别是出现在屏幕的X、Y方向偏移量\n        float mHorizontalMargin;//横向margin值\n        float mVerticalMargin;//竖向margin值\n\n\n        View mView;//当前view\n        View mNextView;//下个Toast显示的view\n\n        WindowManager mWM;\n\t\t//TN构造函数\n        TN() {\n            // XXX This should be changed to use a Dialog, with a Theme.Toast\n            // defined that sets up the layout params appropriately.\n            final WindowManager.LayoutParams params = mParams;\n            params.height = WindowManager.LayoutParams.WRAP_CONTENT;\n            params.width = WindowManager.LayoutParams.WRAP_CONTENT;\n            // 不设置这个弹出框的透明遮罩显示为黑色\n\t\t\tparams.format = PixelFormat.TRANSLUCENT;\n\t\t    // 动画\n            params.windowAnimations = com.android.internal.R.style.Animation_Toast;\n            // 类型\n\t\t\tparams.type = WindowManager.LayoutParams.TYPE_TOAST;\n            params.setTitle(\"Toast\");\n            // 设置flag\n            params.flags = WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON\n                    | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n                    | WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE;\n        }\n\n        /**\n         * schedule handleShow into the right thread\n         */\n        @Override\n        public void show() {\n            if (localLOGV) Log.v(TAG, \"SHOW: \" + this);\n            mHandler.post(mShow);\n        }\n\n        /**\n         * schedule handleHide into the right thread\n         */\n        @Override\n        public void hide() {\n            if (localLOGV) Log.v(TAG, \"HIDE: \" + this);\n            mHandler.post(mHide);\n        }\n        \n\t\t/**\n\t\t * 显示Toast\n\t\t */\n        public void handleShow() {\n            if (localLOGV) Log.v(TAG, \"HANDLE SHOW: \" + this + \" mView=\" + mView\n                    + \" mNextView=\" + mNextView);\n            if (mView != mNextView) {//判断下个view是否一样\n                // remove the old view if necessary\n                handleHide();//移除当前view\n                mView = mNextView;\n                Context context = mView.getContext().getApplicationContext();//获取当前view上下文\n                String packageName = mView.getContext().getOpPackageName();\n                if (context == null) {\n                    context = mView.getContext();\n                }\n\t\t\t\t//获得 WindowManager对象\n                mWM = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n                // We can resolve the Gravity here by using the Locale for getting\n                // the layout direction\n                final Configuration config = mView.getContext().getResources().getConfiguration();\n\t\t\t\t//获取绝对的Gravity\n                final int gravity = Gravity.getAbsoluteGravity(mGravity, config.getLayoutDirection());\n                mParams.gravity = gravity;\n                if ((gravity & Gravity.HORIZONTAL_GRAVITY_MASK) == Gravity.FILL_HORIZONTAL) {\n                    mParams.horizontalWeight = 1.0f;\n                }\n                if ((gravity & Gravity.VERTICAL_GRAVITY_MASK) == Gravity.FILL_VERTICAL) {\n                    mParams.verticalWeight = 1.0f;\n                }\n                mParams.x = mX;\n                mParams.y = mY;\n                mParams.verticalMargin = mVerticalMargin;\n                mParams.horizontalMargin = mHorizontalMargin;\n                mParams.packageName = packageName;\n                if (mView.getParent() != null) {\n                    if (localLOGV) Log.v(TAG, \"REMOVE! \" + mView + \" in \" + this);\n                    mWM.removeView(mView);//如果当前view存在，先移除\n                }\n                if (localLOGV) Log.v(TAG, \"ADD! \" + mView + \" in \" + this);\n                mWM.addView(mView, mParams);//通过WindowManager调用addView加载\n                trySendAccessibilityEvent();\n            }\n        }\n\t\t\n        private void trySendAccessibilityEvent() {\n            AccessibilityManager accessibilityManager =\n                    AccessibilityManager.getInstance(mView.getContext());\n            if (!accessibilityManager.isEnabled()) {\n                return;\n            }\n            // treat toasts as notifications since they are used to\n            // announce a transient piece of information to the user\n            AccessibilityEvent event = AccessibilityEvent.obtain(\n                    AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED);\n            event.setClassName(getClass().getName());\n            event.setPackageName(mView.getContext().getPackageName());\n            mView.dispatchPopulateAccessibilityEvent(event);\n            accessibilityManager.sendAccessibilityEvent(event);\n        }\n                \n\t\t/** \n\t\t * WindowManager调用removeView方法来将Toast视图移除\n\t\t */\n        public void handleHide() {\n            if (localLOGV) Log.v(TAG, \"HANDLE HIDE: \" + this + \" mView=\" + mView);\n            if (mView != null) {\n                // note: checking parent() just to make sure the view has\n                // been added...  i have seen cases where we get here when\n                // the view isn't yet added, so let's try not to crash.\n                if (mView.getParent() != null) {\n                    if (localLOGV) Log.v(TAG, \"REMOVE! \" + mView + \" in \" + this);\n                    mWM.removeView(mView);\n                }\n\n                mView = null;\n            }\n        }\n    }\n```\n\n来看下ITransientNotification ，就两个方法，如下：\n\n```java\n    /** @hide */\n    oneway interface ITransientNotification {\n        void show();\n        void hide();\n    }\n```\n\n具体实现就在TN类，其他进程回调TN类，来操作Toast的显示和消失：\n\n```java\n\n    @Override\n    public void show() {\n        if (localLOGV) Log.v(TAG, \"SHOW: \" + this);\n            mHandler.post(mShow);//显示\n    }\n\n    /**\n     * schedule handleHide into the right thread\n     */\n    @Override\n    public void hide() {\n        if (localLOGV) Log.v(TAG, \"HIDE: \" + this);\n        mHandler.post(mHide);//消失\n    }\n```\n\n这里可以看出Toast显示和消失用的Handler机制实现的。\n\n## 2.2. INotificationManager\n调用了getService，如下：\n```java\n\n    private static INotificationManager sService;\n\n    static private INotificationManager getService() {\n        if (sService != null) {\n            return sService;\n        }\n        sService = INotificationManager.Stub.asInterface(ServiceManager.getService(\"notification\"));\n        return sService;\n    }\n```\n\n得到INotificationManager服务，再调用enqueueToast方法，参数有三个，包名，TN，时间。INofiticationManager接口的具体实现类是NotificationManagerService类，源码位置：[frameworks\\base\\services\\core\\java\\com\\android\\server\\notification\\NotificationManagerService.java](https://github.com/android/platform_frameworks_base/blob/master/services/core/java/com/android/server/notification/NotificationManagerService.java)\n\n## 2.3. enqueueToast\n加入队列，用来显示Toast\n\n```java\n\n    @Override\n    public void enqueueToast(String pkg, ITransientNotification callback, int duration)\n    {\n        if (DBG) {\n            Slog.i(TAG, \"enqueueToast pkg=\" + pkg + \" callback=\" + callback\n                    + \" duration=\" + duration);\n        }\n        if (pkg == null || callback == null) {\n            Slog.e(TAG, \"Not doing toast. pkg=\" + pkg + \" callback=\" + callback);\n            return ;\n        }\n        //(1)判断是否系统的Toast，如果当前包名是android则为系统\n        final boolean isSystemToast = isCallerSystem() || (\"android\".equals(pkg));\n        //判断当前toast所属的pkg是不是所阻止的\n        if (ENABLE_BLOCKED_TOASTS && !noteNotificationOp(pkg, Binder.getCallingUid())) {\n            if (!isSystemToast) {\n                Slog.e(TAG, \"Suppressing toast from package \" + pkg + \" by user request.\");\n                return;\n            }\n        }\n        //入队列mToastQueue \n        synchronized (mToastQueue) {\n            int callingPid = Binder.getCallingPid();\n            long callingId = Binder.clearCallingIdentity();\n            try {\n                ToastRecord record;\n                //(2)判断Toast是否在队列当中\n                int index = indexOfToastLocked(pkg, callback);\n                // If it's already in the queue, we update it in place, we don't\n                // move it to the end of the queue.\n                if (index >= 0) {\n                    record = mToastQueue.get(index);\n                    record.update(duration);\n                } else {\n                    // Limit the number of toasts that any given package except the android\n                    // package can enqueue.  Prevents DOS attacks and deals with leaks.\n                    if (!isSystemToast) {\n                        int count = 0;\n                        final int N = mToastQueue.size();\n                        for (int i=0; i<N; i++) {\n                            final ToastRecord r = mToastQueue.get(i);\n                            if (r.pkg.equals(pkg)) {\n                                count++;\n                                if (count >= MAX_PACKAGE_NOTIFICATIONS) {//限制toasts数，最大50\n                                    Slog.e(TAG, \"Package has already posted \" + count\n                                            + \" toasts. Not showing more. Package=\" + pkg);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    //获得ToastRecord对象\n                    record = new ToastRecord(callingPid, pkg, callback, duration);\n                    //放入mToastQueue中                       \n                    mToastQueue.add(record);\n                    index = mToastQueue.size() - 1;\n                    keepProcessAliveLocked(callingPid);//(3)设置该Toast为前台进程\n                }\n                // If it's at index 0, it's the current toast.  It doesn't matter if it's\n                // new or just been updated.  Call back and tell it to show itself.\n                // If the callback fails, this will remove it from the list, so don't\n                // assume that it's valid after this.\n                if (index == 0) {\n                    showNextToastLocked();//(4)直接显示Toast\n                }\n            } finally {\n                Binder.restoreCallingIdentity(callingId);\n            }\n        }\n    }\t\n```\n\n(1)判断是否系统的Toast，源码：\n\n```java\n    private static boolean isCallerSystem() {\n        return isUidSystem(Binder.getCallingUid());\n    }\n    \n    private static boolean isUidSystem(int uid) {\n        final int appid = UserHandle.getAppId(uid);\n\t    // 判断pid为系统进程使用的用户id，值为1000，或者为系统进程的手机的用户id，值为1001\n        return (appid == Process.SYSTEM_UID || appid == Process.PHONE_UID || uid == 0);\n    }\n```\n\n(2)判断Toast是否在队列当中，源码：\n\n```java\n    // lock on mToastQueue\n    int indexOfToastLocked(String pkg, ITransientNotification callback)\n    {\n\t    //\n        IBinder cbak = callback.asBinder();\n        ArrayList<ToastRecord> list = mToastQueue;\n        int len = list.size();\n        for (int i=0; i<len; i++) {\n            ToastRecord r = list.get(i);\n            if (r.pkg.equals(pkg) && r.callback.asBinder() == cbak) {\n                return i;\n            }\n        }\n        return -1;\n    }\n```\n\n(3)设置该Toast为前台进程，源码：\n\n```java\n    // lock on mToastQueue\n    void keepProcessAliveLocked(int pid)\n    {\n        int toastCount = 0; // toasts from this pid\n        ArrayList<ToastRecord> list = mToastQueue;\n        int N = list.size();\n        for (int i=0; i<N; i++) {\n            ToastRecord r = list.get(i);\n            if (r.pid == pid) {\n                toastCount++;\n            }\n        }\n        try {\n            // 设置该Toast为前台进程\n            mAm.setProcessForeground(mForegroundToken, pid, toastCount > 0);\n        } catch (RemoteException e) {\n            // Shouldn't happen.\n        }\n    }\n```\n\n(4)直接显示Toast，源码：\n\n```java\n\n    void showNextToastLocked() {\n\t    //直接取第一个\n        ToastRecord record = mToastQueue.get(0);\n        while (record != null) {\n            if (DBG) Slog.d(TAG, \"Show pkg=\" + record.pkg + \" callback=\" + record.callback);\n            try {\n                record.callback.show();//回调TN类，显示Toast\n                scheduleTimeoutLocked(record);//设置消失\n                return;\n            } catch (RemoteException e) {\n                Slog.w(TAG, \"Object died trying to show notification \" + record.callback\n                        + \" in package \" + record.pkg);\n                // remove it from the list and let the process die\n                int index = mToastQueue.indexOf(record);\n                if (index >= 0) {\n                    mToastQueue.remove(index);\n                }\n                keepProcessAliveLocked(record.pid);\n                if (mToastQueue.size() > 0) {\n                    record = mToastQueue.get(0);\n                } else {\n                    record = null;\n                }\n            }\n        }\n    }\n    \n    private void scheduleTimeoutLocked(ToastRecord r)\n    {\n        mHandler.removeCallbacksAndMessages(r);//移除ToastRecord\n        Message m = Message.obtain(mHandler, MESSAGE_TIMEOUT, r);\n        //static final int LONG_DELAY = 3500; // 3.5 seconds\n        //static final int SHORT_DELAY = 2000; // 2 seconds\n        long delay = r.duration == Toast.LENGTH_LONG ? LONG_DELAY : SHORT_DELAY;\n\t\t//发送Toast消失的message\n        mHandler.sendMessageDelayed(m, delay);\n    }\n```\n\n从enqueueToast方法可知，先判断是不是系统和合法的Toast，然后判断是否在ToastQueue（这里解释了很多Toast，是一个个显示的），如果存在，只需要更新Toast显示的时间，如果不在，就直接显示，回调给TN类。`到这里，知道了Toast是如何显示的。`\n还没有结束，继续追踪mHandler，来到WorkerHandler ：\n\n```java\n    private final class WorkerHandler extends Handler\n    {\n        @Override\n        public void handleMessage(Message msg)\n        {\n            switch (msg.what)\n            {\n                case MESSAGE_TIMEOUT:\n                    handleTimeout((ToastRecord)msg.obj);\n                    break;\n               ……\n            }\n        }\n\n    }\n    \n    private void handleTimeout(ToastRecord record)\n    {\n        if (DBG) Slog.d(TAG, \"Timeout pkg=\" + record.pkg + \" callback=\" + record.callback);\n        synchronized (mToastQueue) {\n\t        //还是判断Toast是否在队列当中\n            int index = indexOfToastLocked(record.pkg, record.callback);\n            if (index >= 0) {\n                cancelToastLocked(index);\n            }\n        }\n    }\n    \n    void cancelToastLocked(int index) {\n        ToastRecord record = mToastQueue.get(index);\n        try {\n            record.callback.hide();//回调TN类，Toast消失\n        } catch (RemoteException e) {\n            Slog.w(TAG, \"Object died trying to hide notification \" + record.callback\n                    + \" in package \" + record.pkg);\n            // don't worry about this, we're about to remove it from\n            // the list anyway\n        }\n        mToastQueue.remove(index);//该ToastRecord对象从mToastQueue中移除\n        keepProcessAliveLocked(record.pid);//设置该Toast为前台进程\n        if (mToastQueue.size() > 0) {\n            // Show the next one. If the callback fails, this will remove\n            // it from the list, so don't assume that the list hasn't changed\n            // after this point.\n            showNextToastLocked();//继续show下个Toast\n        }\n    }\n```\n\n到这里，知道了Toast是如何消失的。`Toast核心代码显示和消失源码分析完毕。\n\n# 总结\nToast代码调用只有一行，了解这行代码的背后，有个ToastQueue，进入队列之前，会做一些合法性判断，使用进程间通信进行回调，Handler机制显示和消失。自定义Toast时，需要调用setView，不然show会抛异常，这个从show方法就能得知。至此，Toast源码解析告一段落。\n\n","source":"_drafts/toast.md","raw":"title: Android Toast源码解析\ndate: 2016-04-25 08:41:31\ntags: Toast\ncategory: AndroidSource\n---\n# 写在前面\n首先推荐下近期小伙伴们一起组织发起的Android SDK源码解析，旨在帮助初学者更好的学习Android！工程很宏大，包括Android SDK中控件、系统工具类、支持库等，如果您也是开源爱好者，欢迎去认领。\n我准备按照What-How-Why，知其然知其所以然，沿着这个3W思路来探探Toast源码，正式进入主题，let's go。\n\n# Toast简介\nToast是一种提供给用户简洁信息的视图，该视图已浮于应用程序之上的形式呈现给用户。\nToast源码位于：[frameworks\\base\\core\\java\\android\\widget\\Toast.java](https://github.com/android/platform_frameworks_base/blob/master/core/java/android/widget/Toast.java)\n\n# Toast使用\n\nToast使用就一行代码：\n```java\n    Toast.makeText(ToastActivity.this,\"Toast源码解析\",Toast.LENGTH_LONG).show();\n```\n\nToast 提供了setView方法，可以自定义View：\n```java\n\n    Toast toast=new Toast(ToastActivity.this);\n    View view=View.inflate(ToastActivity.this,R.layout.toast_view,null);\n    toast.setView(view);\n    toast.setGravity(Gravity.CENTER,0,0);\n    toast.show();\n    \n```\n\ntoast_view.xml\n```xml\n\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n        \n            <ImageView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"@mipmap/ic_launcher\" />\n    </LinearLayout>\n\n```\n\n# Toast源码分析\nToast源码分析有两个目标，知道Toast源码在哪里体现了Toast显示，又在哪里体现了Toast消失。首先从Toast的基本使用，作为入口。\n\n```java\n    Toast.makeText(ToastActivity.this,\"Toast源码解析\",Toast.LENGTH_LONG).show();\n```\n\n## 1. makeText\n先从makeText方法入手，一步步深入。\n\n```java\n\n    public static Toast makeText(Context context, CharSequence text, @Duration int duration) {\n        Toast result = new Toast(context);\n\n        LayoutInflater inflate = (LayoutInflater)\n                context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View v = inflate.inflate(com.android.internal.R.layout.transient_notification, null);\n        TextView tv = (TextView)v.findViewById(com.android.internal.R.id.message);\n        tv.setText(text);\n        \n        result.mNextView = v;//传入下个view\n        result.mDuration = duration;//Toast显示的时间长度\n\n        return result;\n    }\n    \n```\n\n对应的transient_notification.xml，源码位于：[frameworks\\base\\core\\res\\layout\\transient_notification.xml](https://github.com/android/platform_frameworks_base/blob/master/core/res/res/layout/transient_notification.xml)\n\n```xml\n\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:background=\"?android:attr/toastFrameBackground\">\n    \n        <TextView\n            android:id=\"@android:id/message\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_weight=\"1\"\n            android:layout_gravity=\"center_horizontal\"\n            android:textAppearance=\"@style/TextAppearance.Toast\"\n            android:textColor=\"@color/bright_foreground_dark\"\n            android:shadowColor=\"#BB000000\"\n            android:shadowRadius=\"2.75\"\n            />\n    \n    </LinearLayout>\n```\n\n从makeText方法看，就是Toast的自定义view的那部分代码。\n\n# 2. show\n再来看看show方法：\n```java\n\n    public void show() {\n\t\t//解释自定义view，需要先setView\n        if (mNextView == null) {\n            throw new RuntimeException(\"setView must have been called\");\n        }\n\t\t//得到INotificationManager服务\n        INotificationManager service = getService();\n        String pkg = mContext.getOpPackageName();\n\t\t//TN对象\n        TN tn = mTN;\n        tn.mNextView = mNextView;\n\n        try {\n            service.enqueueToast(pkg, tn, mDuration);\n        } catch (RemoteException e) {\n            // Empty\n        }\n    }\n    \n```\n\n看了show方法，发现涉及两个新的类，TN 和INotificationManager 。enqueueToast方法大概就是实现Toast显示和消失吧，让我们一步步探索。\n\n## 2.1. TN \nTN类继承自ITransientNotification.Stub，ITransientNotification.aidl，用于进程间通信，源码位于[frameworks\\base\\core\\java\\android\\app\\ITransientNotification.aidl](https://github.com/android/platform_frameworks_base/blob/master/core/java/android/app/ITransientNotification.aidl)\n```java\n\n    private static class TN extends ITransientNotification.Stub {\n \n        final Runnable mShow = new Runnable() {\n            @Override\n            public void run() {\n                handleShow();//显示处理\n            }\n        };\n\n        final Runnable mHide = new Runnable() {\n            @Override\n            public void run() {\n                handleHide();//消失处理\n                // Don't do this in handleHide() because it is also invoked by handleShow()\n                mNextView = null;\n            }\n        };\n\t\t//应用程序窗口\n        private final WindowManager.LayoutParams mParams = new WindowManager.LayoutParams();\n        final Handler mHandler = new Handler();    \n\n        int mGravity;//出现在屏幕的位置\n        int mX, mY;//分别是出现在屏幕的X、Y方向偏移量\n        float mHorizontalMargin;//横向margin值\n        float mVerticalMargin;//竖向margin值\n\n\n        View mView;//当前view\n        View mNextView;//下个Toast显示的view\n\n        WindowManager mWM;\n\t\t//TN构造函数\n        TN() {\n            // XXX This should be changed to use a Dialog, with a Theme.Toast\n            // defined that sets up the layout params appropriately.\n            final WindowManager.LayoutParams params = mParams;\n            params.height = WindowManager.LayoutParams.WRAP_CONTENT;\n            params.width = WindowManager.LayoutParams.WRAP_CONTENT;\n            // 不设置这个弹出框的透明遮罩显示为黑色\n\t\t\tparams.format = PixelFormat.TRANSLUCENT;\n\t\t    // 动画\n            params.windowAnimations = com.android.internal.R.style.Animation_Toast;\n            // 类型\n\t\t\tparams.type = WindowManager.LayoutParams.TYPE_TOAST;\n            params.setTitle(\"Toast\");\n            // 设置flag\n            params.flags = WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON\n                    | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE\n                    | WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE;\n        }\n\n        /**\n         * schedule handleShow into the right thread\n         */\n        @Override\n        public void show() {\n            if (localLOGV) Log.v(TAG, \"SHOW: \" + this);\n            mHandler.post(mShow);\n        }\n\n        /**\n         * schedule handleHide into the right thread\n         */\n        @Override\n        public void hide() {\n            if (localLOGV) Log.v(TAG, \"HIDE: \" + this);\n            mHandler.post(mHide);\n        }\n        \n\t\t/**\n\t\t * 显示Toast\n\t\t */\n        public void handleShow() {\n            if (localLOGV) Log.v(TAG, \"HANDLE SHOW: \" + this + \" mView=\" + mView\n                    + \" mNextView=\" + mNextView);\n            if (mView != mNextView) {//判断下个view是否一样\n                // remove the old view if necessary\n                handleHide();//移除当前view\n                mView = mNextView;\n                Context context = mView.getContext().getApplicationContext();//获取当前view上下文\n                String packageName = mView.getContext().getOpPackageName();\n                if (context == null) {\n                    context = mView.getContext();\n                }\n\t\t\t\t//获得 WindowManager对象\n                mWM = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);\n                // We can resolve the Gravity here by using the Locale for getting\n                // the layout direction\n                final Configuration config = mView.getContext().getResources().getConfiguration();\n\t\t\t\t//获取绝对的Gravity\n                final int gravity = Gravity.getAbsoluteGravity(mGravity, config.getLayoutDirection());\n                mParams.gravity = gravity;\n                if ((gravity & Gravity.HORIZONTAL_GRAVITY_MASK) == Gravity.FILL_HORIZONTAL) {\n                    mParams.horizontalWeight = 1.0f;\n                }\n                if ((gravity & Gravity.VERTICAL_GRAVITY_MASK) == Gravity.FILL_VERTICAL) {\n                    mParams.verticalWeight = 1.0f;\n                }\n                mParams.x = mX;\n                mParams.y = mY;\n                mParams.verticalMargin = mVerticalMargin;\n                mParams.horizontalMargin = mHorizontalMargin;\n                mParams.packageName = packageName;\n                if (mView.getParent() != null) {\n                    if (localLOGV) Log.v(TAG, \"REMOVE! \" + mView + \" in \" + this);\n                    mWM.removeView(mView);//如果当前view存在，先移除\n                }\n                if (localLOGV) Log.v(TAG, \"ADD! \" + mView + \" in \" + this);\n                mWM.addView(mView, mParams);//通过WindowManager调用addView加载\n                trySendAccessibilityEvent();\n            }\n        }\n\t\t\n        private void trySendAccessibilityEvent() {\n            AccessibilityManager accessibilityManager =\n                    AccessibilityManager.getInstance(mView.getContext());\n            if (!accessibilityManager.isEnabled()) {\n                return;\n            }\n            // treat toasts as notifications since they are used to\n            // announce a transient piece of information to the user\n            AccessibilityEvent event = AccessibilityEvent.obtain(\n                    AccessibilityEvent.TYPE_NOTIFICATION_STATE_CHANGED);\n            event.setClassName(getClass().getName());\n            event.setPackageName(mView.getContext().getPackageName());\n            mView.dispatchPopulateAccessibilityEvent(event);\n            accessibilityManager.sendAccessibilityEvent(event);\n        }\n                \n\t\t/** \n\t\t * WindowManager调用removeView方法来将Toast视图移除\n\t\t */\n        public void handleHide() {\n            if (localLOGV) Log.v(TAG, \"HANDLE HIDE: \" + this + \" mView=\" + mView);\n            if (mView != null) {\n                // note: checking parent() just to make sure the view has\n                // been added...  i have seen cases where we get here when\n                // the view isn't yet added, so let's try not to crash.\n                if (mView.getParent() != null) {\n                    if (localLOGV) Log.v(TAG, \"REMOVE! \" + mView + \" in \" + this);\n                    mWM.removeView(mView);\n                }\n\n                mView = null;\n            }\n        }\n    }\n```\n\n来看下ITransientNotification ，就两个方法，如下：\n\n```java\n    /** @hide */\n    oneway interface ITransientNotification {\n        void show();\n        void hide();\n    }\n```\n\n具体实现就在TN类，其他进程回调TN类，来操作Toast的显示和消失：\n\n```java\n\n    @Override\n    public void show() {\n        if (localLOGV) Log.v(TAG, \"SHOW: \" + this);\n            mHandler.post(mShow);//显示\n    }\n\n    /**\n     * schedule handleHide into the right thread\n     */\n    @Override\n    public void hide() {\n        if (localLOGV) Log.v(TAG, \"HIDE: \" + this);\n        mHandler.post(mHide);//消失\n    }\n```\n\n这里可以看出Toast显示和消失用的Handler机制实现的。\n\n## 2.2. INotificationManager\n调用了getService，如下：\n```java\n\n    private static INotificationManager sService;\n\n    static private INotificationManager getService() {\n        if (sService != null) {\n            return sService;\n        }\n        sService = INotificationManager.Stub.asInterface(ServiceManager.getService(\"notification\"));\n        return sService;\n    }\n```\n\n得到INotificationManager服务，再调用enqueueToast方法，参数有三个，包名，TN，时间。INofiticationManager接口的具体实现类是NotificationManagerService类，源码位置：[frameworks\\base\\services\\core\\java\\com\\android\\server\\notification\\NotificationManagerService.java](https://github.com/android/platform_frameworks_base/blob/master/services/core/java/com/android/server/notification/NotificationManagerService.java)\n\n## 2.3. enqueueToast\n加入队列，用来显示Toast\n\n```java\n\n    @Override\n    public void enqueueToast(String pkg, ITransientNotification callback, int duration)\n    {\n        if (DBG) {\n            Slog.i(TAG, \"enqueueToast pkg=\" + pkg + \" callback=\" + callback\n                    + \" duration=\" + duration);\n        }\n        if (pkg == null || callback == null) {\n            Slog.e(TAG, \"Not doing toast. pkg=\" + pkg + \" callback=\" + callback);\n            return ;\n        }\n        //(1)判断是否系统的Toast，如果当前包名是android则为系统\n        final boolean isSystemToast = isCallerSystem() || (\"android\".equals(pkg));\n        //判断当前toast所属的pkg是不是所阻止的\n        if (ENABLE_BLOCKED_TOASTS && !noteNotificationOp(pkg, Binder.getCallingUid())) {\n            if (!isSystemToast) {\n                Slog.e(TAG, \"Suppressing toast from package \" + pkg + \" by user request.\");\n                return;\n            }\n        }\n        //入队列mToastQueue \n        synchronized (mToastQueue) {\n            int callingPid = Binder.getCallingPid();\n            long callingId = Binder.clearCallingIdentity();\n            try {\n                ToastRecord record;\n                //(2)判断Toast是否在队列当中\n                int index = indexOfToastLocked(pkg, callback);\n                // If it's already in the queue, we update it in place, we don't\n                // move it to the end of the queue.\n                if (index >= 0) {\n                    record = mToastQueue.get(index);\n                    record.update(duration);\n                } else {\n                    // Limit the number of toasts that any given package except the android\n                    // package can enqueue.  Prevents DOS attacks and deals with leaks.\n                    if (!isSystemToast) {\n                        int count = 0;\n                        final int N = mToastQueue.size();\n                        for (int i=0; i<N; i++) {\n                            final ToastRecord r = mToastQueue.get(i);\n                            if (r.pkg.equals(pkg)) {\n                                count++;\n                                if (count >= MAX_PACKAGE_NOTIFICATIONS) {//限制toasts数，最大50\n                                    Slog.e(TAG, \"Package has already posted \" + count\n                                            + \" toasts. Not showing more. Package=\" + pkg);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    //获得ToastRecord对象\n                    record = new ToastRecord(callingPid, pkg, callback, duration);\n                    //放入mToastQueue中                       \n                    mToastQueue.add(record);\n                    index = mToastQueue.size() - 1;\n                    keepProcessAliveLocked(callingPid);//(3)设置该Toast为前台进程\n                }\n                // If it's at index 0, it's the current toast.  It doesn't matter if it's\n                // new or just been updated.  Call back and tell it to show itself.\n                // If the callback fails, this will remove it from the list, so don't\n                // assume that it's valid after this.\n                if (index == 0) {\n                    showNextToastLocked();//(4)直接显示Toast\n                }\n            } finally {\n                Binder.restoreCallingIdentity(callingId);\n            }\n        }\n    }\t\n```\n\n(1)判断是否系统的Toast，源码：\n\n```java\n    private static boolean isCallerSystem() {\n        return isUidSystem(Binder.getCallingUid());\n    }\n    \n    private static boolean isUidSystem(int uid) {\n        final int appid = UserHandle.getAppId(uid);\n\t    // 判断pid为系统进程使用的用户id，值为1000，或者为系统进程的手机的用户id，值为1001\n        return (appid == Process.SYSTEM_UID || appid == Process.PHONE_UID || uid == 0);\n    }\n```\n\n(2)判断Toast是否在队列当中，源码：\n\n```java\n    // lock on mToastQueue\n    int indexOfToastLocked(String pkg, ITransientNotification callback)\n    {\n\t    //\n        IBinder cbak = callback.asBinder();\n        ArrayList<ToastRecord> list = mToastQueue;\n        int len = list.size();\n        for (int i=0; i<len; i++) {\n            ToastRecord r = list.get(i);\n            if (r.pkg.equals(pkg) && r.callback.asBinder() == cbak) {\n                return i;\n            }\n        }\n        return -1;\n    }\n```\n\n(3)设置该Toast为前台进程，源码：\n\n```java\n    // lock on mToastQueue\n    void keepProcessAliveLocked(int pid)\n    {\n        int toastCount = 0; // toasts from this pid\n        ArrayList<ToastRecord> list = mToastQueue;\n        int N = list.size();\n        for (int i=0; i<N; i++) {\n            ToastRecord r = list.get(i);\n            if (r.pid == pid) {\n                toastCount++;\n            }\n        }\n        try {\n            // 设置该Toast为前台进程\n            mAm.setProcessForeground(mForegroundToken, pid, toastCount > 0);\n        } catch (RemoteException e) {\n            // Shouldn't happen.\n        }\n    }\n```\n\n(4)直接显示Toast，源码：\n\n```java\n\n    void showNextToastLocked() {\n\t    //直接取第一个\n        ToastRecord record = mToastQueue.get(0);\n        while (record != null) {\n            if (DBG) Slog.d(TAG, \"Show pkg=\" + record.pkg + \" callback=\" + record.callback);\n            try {\n                record.callback.show();//回调TN类，显示Toast\n                scheduleTimeoutLocked(record);//设置消失\n                return;\n            } catch (RemoteException e) {\n                Slog.w(TAG, \"Object died trying to show notification \" + record.callback\n                        + \" in package \" + record.pkg);\n                // remove it from the list and let the process die\n                int index = mToastQueue.indexOf(record);\n                if (index >= 0) {\n                    mToastQueue.remove(index);\n                }\n                keepProcessAliveLocked(record.pid);\n                if (mToastQueue.size() > 0) {\n                    record = mToastQueue.get(0);\n                } else {\n                    record = null;\n                }\n            }\n        }\n    }\n    \n    private void scheduleTimeoutLocked(ToastRecord r)\n    {\n        mHandler.removeCallbacksAndMessages(r);//移除ToastRecord\n        Message m = Message.obtain(mHandler, MESSAGE_TIMEOUT, r);\n        //static final int LONG_DELAY = 3500; // 3.5 seconds\n        //static final int SHORT_DELAY = 2000; // 2 seconds\n        long delay = r.duration == Toast.LENGTH_LONG ? LONG_DELAY : SHORT_DELAY;\n\t\t//发送Toast消失的message\n        mHandler.sendMessageDelayed(m, delay);\n    }\n```\n\n从enqueueToast方法可知，先判断是不是系统和合法的Toast，然后判断是否在ToastQueue（这里解释了很多Toast，是一个个显示的），如果存在，只需要更新Toast显示的时间，如果不在，就直接显示，回调给TN类。`到这里，知道了Toast是如何显示的。`\n还没有结束，继续追踪mHandler，来到WorkerHandler ：\n\n```java\n    private final class WorkerHandler extends Handler\n    {\n        @Override\n        public void handleMessage(Message msg)\n        {\n            switch (msg.what)\n            {\n                case MESSAGE_TIMEOUT:\n                    handleTimeout((ToastRecord)msg.obj);\n                    break;\n               ……\n            }\n        }\n\n    }\n    \n    private void handleTimeout(ToastRecord record)\n    {\n        if (DBG) Slog.d(TAG, \"Timeout pkg=\" + record.pkg + \" callback=\" + record.callback);\n        synchronized (mToastQueue) {\n\t        //还是判断Toast是否在队列当中\n            int index = indexOfToastLocked(record.pkg, record.callback);\n            if (index >= 0) {\n                cancelToastLocked(index);\n            }\n        }\n    }\n    \n    void cancelToastLocked(int index) {\n        ToastRecord record = mToastQueue.get(index);\n        try {\n            record.callback.hide();//回调TN类，Toast消失\n        } catch (RemoteException e) {\n            Slog.w(TAG, \"Object died trying to hide notification \" + record.callback\n                    + \" in package \" + record.pkg);\n            // don't worry about this, we're about to remove it from\n            // the list anyway\n        }\n        mToastQueue.remove(index);//该ToastRecord对象从mToastQueue中移除\n        keepProcessAliveLocked(record.pid);//设置该Toast为前台进程\n        if (mToastQueue.size() > 0) {\n            // Show the next one. If the callback fails, this will remove\n            // it from the list, so don't assume that the list hasn't changed\n            // after this point.\n            showNextToastLocked();//继续show下个Toast\n        }\n    }\n```\n\n到这里，知道了Toast是如何消失的。`Toast核心代码显示和消失源码分析完毕。\n\n# 总结\nToast代码调用只有一行，了解这行代码的背后，有个ToastQueue，进入队列之前，会做一些合法性判断，使用进程间通信进行回调，Handler机制显示和消失。自定义Toast时，需要调用setView，不然show会抛异常，这个从show方法就能得知。至此，Toast源码解析告一段落。\n\n","slug":"toast","published":0,"updated":"2016-05-20T08:36:49.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrer00gbzspk1cm7c7no","thumbnailImageUrl":null},{"title":"做款好的app，还能做什么","date":"2016-05-20T08:34:30.000Z","category":null,"_content":"\n# drawable\nres下面drawable，mipmap-hdpi，mipmap-mdpi这些，了解知道他们之间有什么区别，继而做成APP更加精致。\n[Android drawable微技巧，你所不知道的drawable的那些细节](http://blog.csdn.net/guolin_blog/article/details/50727753)\n[Android样式的开发:drawable汇总篇](http://keeganlee.me/post/android/20150916)\n\n# 边界处理\n\n# APK瘦身\n最后打包，发现APK十多M，哎呀，握草，该压压。\n[APK瘦身实践](http://jayfeng.com/2015/12/29/APK%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5/)\n[如何将apk大小减少6M的](http://blog.csdn.net/UsherFor/article/details/46827587)\n\n Android Context 上下文 你必须知道的一切\nhttp://blog.csdn.net/lmj623565791/article/details/40481055\n\nContext-----Activity,Application之间的交流使者\nhttp://www.cnblogs.com/wenjiang/archive/2012/10/15/2724923.html","source":"_drafts/finalApk.md","raw":"title: 做款好的app，还能做什么\ndate: 2016-05-20 16:34:30\ntags:\ncategory:\n---\n\n# drawable\nres下面drawable，mipmap-hdpi，mipmap-mdpi这些，了解知道他们之间有什么区别，继而做成APP更加精致。\n[Android drawable微技巧，你所不知道的drawable的那些细节](http://blog.csdn.net/guolin_blog/article/details/50727753)\n[Android样式的开发:drawable汇总篇](http://keeganlee.me/post/android/20150916)\n\n# 边界处理\n\n# APK瘦身\n最后打包，发现APK十多M，哎呀，握草，该压压。\n[APK瘦身实践](http://jayfeng.com/2015/12/29/APK%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5/)\n[如何将apk大小减少6M的](http://blog.csdn.net/UsherFor/article/details/46827587)\n\n Android Context 上下文 你必须知道的一切\nhttp://blog.csdn.net/lmj623565791/article/details/40481055\n\nContext-----Activity,Application之间的交流使者\nhttp://www.cnblogs.com/wenjiang/archive/2012/10/15/2724923.html","slug":"finalApk","published":0,"updated":"2016-06-29T06:04:54.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrev00ggzspkc0rtrakk","thumbnailImageUrl":null},{"title":"Android Studio和Android SDK配置红杏公益代理","date":"2015-08-05T05:37:39.000Z","_content":"因为红杏暂时只能在chrome中使用，而且其他客户端的版本也正在开发中。所以目前对于 `开发人员` 来说，要装一些IDE的插件或者要用命令行装些库的时候，还是不太方便。\n\n前不久红杏开放了公益代理，专门为开发人员开放，免费使用。从今以后更新android sdk，使用Android Studio都会顺利很多。一直以来使用Android Studio最大的障碍，现在通过红杏公益代理可以得到解决了。\n\n## 郑重推荐\n我的推广链接: [http://honx.in/_VbT32YkWGniKZ2AO](http://honx.in/_VbT32YkWGniKZ2AO)，你通过这个链接安装购买1个月以上的服务，你我都获得 `10天VIP` 的奖励。对于良心企业，能做的也只有这么多。目前红杏按月付费是10元每月，这个已经是低得不能再低的资费。\n\n## 更新Android SDK\n打开SDK Manager-Tools-Options，设置如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/android-studio-hx-1.png)\n\n## Android Stuido 配置代理\n\n打开Preference页面，找到HTTP Proxy, 选择Manual proxy configuration。\nHost Name: hx.gy\n Port Number: 1080.\n![](http://7q5c2h.com1.z0.glb.clouddn.com/android-studio-hx-2.png)\n","source":"_drafts/android-studio-hx.md","raw":"title: Android Studio和Android SDK配置红杏公益代理\ndate: 2015-08-05 13:37:39\ntags: [Android Studio,红杏]\ncategory: Android Studio\n---\n因为红杏暂时只能在chrome中使用，而且其他客户端的版本也正在开发中。所以目前对于 `开发人员` 来说，要装一些IDE的插件或者要用命令行装些库的时候，还是不太方便。\n\n前不久红杏开放了公益代理，专门为开发人员开放，免费使用。从今以后更新android sdk，使用Android Studio都会顺利很多。一直以来使用Android Studio最大的障碍，现在通过红杏公益代理可以得到解决了。\n\n## 郑重推荐\n我的推广链接: [http://honx.in/_VbT32YkWGniKZ2AO](http://honx.in/_VbT32YkWGniKZ2AO)，你通过这个链接安装购买1个月以上的服务，你我都获得 `10天VIP` 的奖励。对于良心企业，能做的也只有这么多。目前红杏按月付费是10元每月，这个已经是低得不能再低的资费。\n\n## 更新Android SDK\n打开SDK Manager-Tools-Options，设置如下：\n![](http://7q5c2h.com1.z0.glb.clouddn.com/android-studio-hx-1.png)\n\n## Android Stuido 配置代理\n\n打开Preference页面，找到HTTP Proxy, 选择Manual proxy configuration。\nHost Name: hx.gy\n Port Number: 1080.\n![](http://7q5c2h.com1.z0.glb.clouddn.com/android-studio-hx-2.png)\n","slug":"android-studio-hx","published":0,"updated":"2016-03-17T00:44:06.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirhekrez00ghzspki4wwfqsr","thumbnailImageUrl":null}],"PostAsset":[],"PostCategory":[{"post_id":"cirhekr6o0008zspk49izviip","category_id":"cirhekr6s0009zspkfoj5z5c4","_id":"cirhekr6u000czspkgziqjsbl"},{"post_id":"cirhekr6v000dzspkt1so3x3u","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr6x000hzspk1moohik4"},{"post_id":"cirhekr6x000izspkcys1yylf","category_id":"cirhekr6y000jzspkkv98nbbz","_id":"cirhekr6z000mzspknm8bg2h3"},{"post_id":"cirhekr70000rzspkhq0lalun","category_id":"cirhekr6y000jzspkkv98nbbz","_id":"cirhekr71000szspkcl4t36gk"},{"post_id":"cirhekr72000wzspkc7pd3jf8","category_id":"cirhekr6y000jzspkkv98nbbz","_id":"cirhekr73000xzspknyig7k2x"},{"post_id":"cirhekr740011zspkjwrwpp7o","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr750015zspkhnpf33ew"},{"post_id":"cirhekr760018zspkwzsgprlx","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekr78001czspkjsqikfca"},{"post_id":"cirhekr78001ezspktd99li2d","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekr79001fzspktafmcikk"},{"post_id":"cirhekr7a001izspkw9rjlejc","category_id":"cirhekr7b001jzspkv586osi1","_id":"cirhekr7b001mzspkydsr8pbi"},{"post_id":"cirhekr7c001nzspkxats5a23","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr7d001ozspk4a58al9v"},{"post_id":"cirhekr7f001rzspkbzla9cr1","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekr7g001szspkrl4xe8cx"},{"post_id":"cirhekr7i001vzspklwj9zkoi","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr7j001wzspkyag4u39q"},{"post_id":"cirhekr7k001zzspkafvbxq4v","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr7l0020zspk3l69bcji"},{"post_id":"cirhekr7m0023zspkke4p6qie","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr7n0024zspkwi841eax"},{"post_id":"cirhekr7o0028zspkgce4n44s","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr7q0029zspkq9n7y3e0"},{"post_id":"cirhekr7s002bzspkbs2gqllk","category_id":"cirhekr7s002czspk13i2lyeh","_id":"cirhekr7t002fzspkvo28ghj1"},{"post_id":"cirhekr7u002gzspkaplcc4wi","category_id":"cirhekr7s002czspk13i2lyeh","_id":"cirhekr7v002hzspk7vp9wmp6"},{"post_id":"cirhekr7y002mzspkzy7s2u17","category_id":"cirhekr7y002nzspklj133alf","_id":"cirhekr7z002qzspkxehg7a42"},{"post_id":"cirhekr80002rzspkn4f1ifla","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr81002szspkyun2ljcf"},{"post_id":"cirhekr82002uzspkcpbqll8w","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekr82002vzspkz9z541mz"},{"post_id":"cirhekr84002yzspkw45lizry","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekr850032zspkgdtektaf"},{"post_id":"cirhekr860033zspk9ouwh9ux","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr870034zspkdchrmhk6"},{"post_id":"cirhekr880039zspkd59y729l","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr89003azspk9lbg4n6h"},{"post_id":"cirhekr8b003ezspksfk7r8zl","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr8c003fzspkmbf4cemy"},{"post_id":"cirhekr8f003hzspkxfyekp0a","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr8g003izspkp6et3jmv"},{"post_id":"cirhekr8j003lzspk8yqp55yh","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8k003mzspkzf7jm88j"},{"post_id":"cirhekr8m003rzspkj8e6dnny","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr8n003szspk2vv40hf1"},{"post_id":"cirhekr8o003vzspkzwyajzfi","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8p003wzspkzrczxdga"},{"post_id":"cirhekr8q003yzspkli4hh0wg","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8q003zzspku06wsf9q"},{"post_id":"cirhekr8r0042zspkrl3x9nj5","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8s0043zspktnj6dtif"},{"post_id":"cirhekr8t0047zspkr4akaop8","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8u0048zspk1dg8vdkx"},{"post_id":"cirhekr8v004dzspkycu40l7j","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8w004ezspk6q7hcl9w"},{"post_id":"cirhekr8x004hzspknseoa8oh","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr8y004izspk62qduzop"},{"post_id":"cirhekr8z004nzspklbto5lp9","category_id":"cirhekr90004ozspk2jomhanr","_id":"cirhekr91004rzspk9qa11q9i"},{"post_id":"cirhekr91004szspk50p2qx5n","category_id":"cirhekr90004ozspk2jomhanr","_id":"cirhekr92004tzspkx6grhgvd"},{"post_id":"cirhekr93004vzspklpcrbegc","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr94004wzspk74ajl8q4"},{"post_id":"cirhekr950050zspkbbnre529","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr950051zspk4dsu9aub"},{"post_id":"cirhekr970055zspkyomn1cja","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr980056zspkedy2km34"},{"post_id":"cirhekr980058zspkr53bgot7","category_id":"cirhekr990059zspki79l3f92","_id":"cirhekr9a005czspkxak0gb8w"},{"post_id":"cirhekr9b005dzspktmowvocy","category_id":"cirhekr9c005ezspkse3qlzlz","_id":"cirhekr9c005hzspk4725c5cy"},{"post_id":"cirhekr9d005izspkhvu91k7l","category_id":"cirhekr9c005ezspkse3qlzlz","_id":"cirhekr9e005jzspk0l2a0dje"},{"post_id":"cirhekr9f005lzspkorwk7uzb","category_id":"cirhekr9c005ezspkse3qlzlz","_id":"cirhekr9g005mzspktnj5dbrc"},{"post_id":"cirhekr9h005ozspk1gty0ao6","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr9i005pzspkar5gy40r"},{"post_id":"cirhekr9i005szspk9whzo9re","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekr9j005tzspkss7nzj6o"},{"post_id":"cirhekr9o005wzspkudmpi0fk","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr9p005xzspk0cf3wrzm"},{"post_id":"cirhekr9q005zzspks3gpiyqh","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr9r0060zspkbgl3w0lr"},{"post_id":"cirhekr9t0063zspk266qoxnq","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr9u0064zspk2wetizyl"},{"post_id":"cirhekr9v0067zspkxcq9pzxm","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekr9w0068zspkxyliyut2"},{"post_id":"cirhekr9y006bzspk7msmqmbb","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekr9z006czspkwi8tgrs1"},{"post_id":"cirhekra0006gzspkqn697rja","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekra1006hzspkyuaakbs9"},{"post_id":"cirhekra2006mzspks9xrjz4u","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekra2006nzspkt3gk7x7s"},{"post_id":"cirhekra3006pzspk0ndaz7x1","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekra4006qzspk2cgd0iks"},{"post_id":"cirhekra5006tzspk3si5xxcz","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekra6006uzspkgs6llok5"},{"post_id":"cirhekra6006wzspklt2ey81u","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekra7006xzspkfwboe4zc"},{"post_id":"cirhekra80071zspkbwd6g5ba","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekra90074zspkgv6cyqek"},{"post_id":"cirhekraa0075zspkpm1stlyo","category_id":"cirhekraa0076zspkrs3vnz7y","_id":"cirhekrab0079zspkqh98p97x"},{"post_id":"cirhekrac007bzspkgk87j0sd","category_id":"cirhekr990059zspki79l3f92","_id":"cirhekrad007czspkubk8zvgs"},{"post_id":"cirhekrae007fzspkerc7wtcv","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekraf007gzspkznks7av3"},{"post_id":"cirhekrag007jzspk2p6y40wm","category_id":"cirhekrag007kzspksmqxmi8g","_id":"cirhekrah007nzspkzl9dylrs"},{"post_id":"cirhekrai007ozspkh6qq3cax","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekraj007pzspkntnuszao"},{"post_id":"cirhekrak007rzspk6pk0em6c","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekral007szspk283nbxga"},{"post_id":"cirhekram007wzspkuhi1las8","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekram007xzspkkuzzysvw"},{"post_id":"cirhekran007zzspkojx5e48l","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrao0080zspko1puuxzq"},{"post_id":"cirhekrap0082zspk7666wroq","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekraq0083zspktm734ll7"},{"post_id":"cirhekrar0085zspkii3wqm53","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekras0086zspks9i0gx9d"},{"post_id":"cirhekrat0088zspkgb940eqg","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekrau0089zspk33j9nnpm"},{"post_id":"cirhekraw008czspkzzocg0pr","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekraw008dzspkhcno7krj"},{"post_id":"cirhekray008hzspk5juthx4z","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekray008izspk5f79j4vl"},{"post_id":"cirhekraz008mzspk3mtm4wcz","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrb0008nzspkifi6q7xu"},{"post_id":"cirhekrb1008rzspk5zsdsgm2","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrb2008szspkcr4ol214"},{"post_id":"cirhekrb3008vzspkr9rmbn3c","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrb4008wzspkgrwlkw5d"},{"post_id":"cirhekrb5008zzspkvtzcrars","category_id":"cirhekr760019zspk47dfxn5e","_id":"cirhekrb60090zspkemmejoom"},{"post_id":"cirhekrb70094zspkqi7k4s8w","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrb70095zspkgnki9zq9"},{"post_id":"cirhekrb80097zspkwmvm1e0o","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekrb90098zspk0mx6vbk9"},{"post_id":"cirhekrba009azspkgh6weluz","category_id":"cirhekrag007kzspksmqxmi8g","_id":"cirhekrba009bzspkqg1cqsv0"},{"post_id":"cirhekrbb009ezspk9yetaded","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbc009fzspktd8wbuho"},{"post_id":"cirhekrbd009jzspk7vltgjsx","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbe009kzspkr596j5qo"},{"post_id":"cirhekrbf009ozspkjegev55v","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbg009pzspkkmgc6wnd"},{"post_id":"cirhekrbh009uzspkdwsm1fnm","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbi009vzspkpj5l4j9m"},{"post_id":"cirhekrbj00a1zspkhk1exkg4","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbk00a2zspkx56inixp"},{"post_id":"cirhekrbm00a6zspkspoyryq6","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbn00a7zspktmp8yvrj"},{"post_id":"cirhekrbo00a9zspk56gz2ngb","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbp00aazspkqz11riqr"},{"post_id":"cirhekrbq00adzspkms592jlq","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbr00aezspkielt1zbc"},{"post_id":"cirhekrbs00ahzspk57dntc7d","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbs00aizspkzep0ndcp"},{"post_id":"cirhekrbu00anzspk8i5p44z2","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrbw00aozspkihl6ly7a"},{"post_id":"cirhekrbx00arzspkr6bagnt5","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrby00aszspkr03eq77z"},{"post_id":"cirhekrbz00avzspkfq9js8lf","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekrc000awzspk08p7zp9x"},{"post_id":"cirhekrc100azzspkt0sa54n0","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekrc100b0zspkpczhbg68"},{"post_id":"cirhekrc300b5zspkudbi4sgg","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekrc300b6zspk8rci1af0"},{"post_id":"cirhekrc500bbzspkluscwlco","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrc600bczspkmezbwmm5"},{"post_id":"cirhekrc800bgzspkju74ycr9","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrc900bhzspkwjsu9buh"},{"post_id":"cirhekrcb00bpzspk4p8e8bfo","category_id":"cirhekrag007kzspksmqxmi8g","_id":"cirhekrcb00bqzspkkejdyyge"},{"post_id":"cirhekrcc00btzspk0qj92pgk","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekrce00buzspkrz5aegoh"},{"post_id":"cirhekrcf00bxzspkezdarpzo","category_id":"cirhekrcg00byzspk47h5bp9n","_id":"cirhekrch00c1zspknirwgez6"},{"post_id":"cirhekrci00c2zspkqtxaw13o","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrci00c3zspkxwrvffd5"},{"post_id":"cirhekrck00c6zspkpv74qg35","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrcl00c7zspknm1ksbqc"},{"post_id":"cirhekrcn00cczspky6wil5ho","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrcn00cdzspkvk7z8348"},{"post_id":"cirhekrcp00chzspkyn3kw1l6","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrcq00cizspkvnvv7csu"},{"post_id":"cirhekrcr00cmzspkgmp1zvn8","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrcs00cnzspkbr3e3sbm"},{"post_id":"cirhekrct00cqzspkhzqsnali","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrcu00crzspkpdxonuib"},{"post_id":"cirhekrcv00cwzspkkqrw1nqz","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekrd000cxzspka7vuztjt"},{"post_id":"cirhekrd200d1zspko1v3rvgy","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrd200d2zspke5pobrvr"},{"post_id":"cirhekrd300d4zspkk4o9qbve","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrd400d5zspkqjglfg60"},{"post_id":"cirhekrd600dgzspkxpx49kav","category_id":"cirhekrcg00byzspk47h5bp9n","_id":"cirhekrd700dhzspk0ykzz4nf"},{"post_id":"cirhekrd800dkzspka4ffw1b6","category_id":"cirhekrd900dlzspku9c00a6e","_id":"cirhekrda00dozspkh0m7l1w6"},{"post_id":"cirhekrda00dpzspky6imz5xm","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdb00dqzspkt5jb81ex"},{"post_id":"cirhekrdc00dtzspk0u88mo9k","category_id":"cirhekrcg00byzspk47h5bp9n","_id":"cirhekrdd00duzspkoy7exuv0"},{"post_id":"cirhekrde00dxzspktzjbjxr1","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdg00dyzspkk9vg4rob"},{"post_id":"cirhekrdh00e0zspkr9z6d6ig","category_id":"cirhekrcg00byzspk47h5bp9n","_id":"cirhekrdi00e1zspkm6fwwoml"},{"post_id":"cirhekrdj00e3zspk2t7s26jq","category_id":"cirhekrag007kzspksmqxmi8g","_id":"cirhekrdk00e4zspks5m3czev"},{"post_id":"cirhekrdl00e7zspk9fpk0ded","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdm00e8zspkbq0xz6xn"},{"post_id":"cirhekrdn00eazspkr04d6gep","category_id":"cirhekrag007kzspksmqxmi8g","_id":"cirhekrdo00ebzspkdahvr6u8"},{"post_id":"cirhekrdp00eezspkh10l8lfr","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdq00efzspkvb2u0wiy"},{"post_id":"cirhekrdr00ekzspkaoz4r542","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrds00elzspkk7w3efgj"},{"post_id":"cirhekrdt00eozspkzxkp6umy","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdu00epzspk8uln652h"},{"post_id":"cirhekrdv00eszspkcw2y67rb","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdw00etzspk1a8i9o5b"},{"post_id":"cirhekrdx00evzspkflfalef8","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrdy00ewzspk34rqvhq2"},{"post_id":"cirhekrdz00ezzspkr2y4lfi8","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekre000f0zspkb0t8d5vs"},{"post_id":"cirhekre100f2zspktjr7u8su","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekre200f3zspkk6o5n4lr"},{"post_id":"cirhekre300f5zspkelf2ohow","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekre400f6zspk5ncm7d8n"},{"post_id":"cirhekre500f9zspkexapos0m","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekre600fazspkrpvfjh6h"},{"post_id":"cirhekre700fczspkrasfp2kl","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekre700fdzspkryavqqiq"},{"post_id":"cirhekre900ffzspkg2u2wekf","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekre900fgzspk7p0o2lgc"},{"post_id":"cirhekreb00fjzspk6zs5tgmu","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrec00fkzspkmfo8ievb"},{"post_id":"cirhekree00fnzspk6udrqvxu","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekref00fozspkvmfgt102"},{"post_id":"cirhekreg00fqzspkzt0mq58w","category_id":"cirhekr85002zzspkxhkbrj2f","_id":"cirhekreg00frzspkoyde61ny"},{"post_id":"cirhekrej00fwzspkghq1ymbx","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekrek00fxzspk18zx5it5"},{"post_id":"cirhekrel00g0zspkom6sps2p","category_id":"cirhekr740012zspkq77cuorg","_id":"cirhekrem00g1zspkdp25dz8k"},{"post_id":"cirhekren00g4zspkq86om11y","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekren00g5zspk6c5x6ixa"},{"post_id":"cirhekrep00g8zspkxvx1ihao","category_id":"cirhekr6w000ezspk6a2gvp8g","_id":"cirhekreq00g9zspkpkkb2bq4"},{"post_id":"cirhekrer00gbzspk1cm7c7no","category_id":"cirhekres00gczspkdzhmjnez","_id":"cirhekreu00gfzspkhmqsfqvi"},{"post_id":"cirhekrez00ghzspki4wwfqsr","category_id":"cirhekra90072zspk4hpcqvob","_id":"cirhekrf100gizspk8jl1zyn6"}],"PostTag":[{"post_id":"cirhekr6o0008zspk49izviip","tag_id":"cirhekr6s000azspkexsk1pc2","_id":"cirhekr6t000bzspk8yfii4ux"},{"post_id":"cirhekr6v000dzspkt1so3x3u","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr6w000gzspkruq3sgfd"},{"post_id":"cirhekr6x000izspkcys1yylf","tag_id":"cirhekr6y000kzspkwmrqfx1w","_id":"cirhekr6z000ozspk5bm7s1k6"},{"post_id":"cirhekr6x000izspkcys1yylf","tag_id":"cirhekr6y000lzspkk5lbegga","_id":"cirhekr6z000pzspkzhq2qcpq"},{"post_id":"cirhekr6x000izspkcys1yylf","tag_id":"cirhekr6z000nzspkvf2vnlox","_id":"cirhekr6z000qzspkona5tv0b"},{"post_id":"cirhekr70000rzspkhq0lalun","tag_id":"cirhekr6y000kzspkwmrqfx1w","_id":"cirhekr71000tzspkgtrwdk2e"},{"post_id":"cirhekr70000rzspkhq0lalun","tag_id":"cirhekr6y000lzspkk5lbegga","_id":"cirhekr71000uzspkznvyggxu"},{"post_id":"cirhekr70000rzspkhq0lalun","tag_id":"cirhekr6z000nzspkvf2vnlox","_id":"cirhekr71000vzspk2on7m8f3"},{"post_id":"cirhekr72000wzspkc7pd3jf8","tag_id":"cirhekr6y000kzspkwmrqfx1w","_id":"cirhekr73000yzspk888b0pox"},{"post_id":"cirhekr72000wzspkc7pd3jf8","tag_id":"cirhekr6y000lzspkk5lbegga","_id":"cirhekr73000zzspkfsbuk9xo"},{"post_id":"cirhekr72000wzspkc7pd3jf8","tag_id":"cirhekr6z000nzspkvf2vnlox","_id":"cirhekr730010zspkxc7uhr6o"},{"post_id":"cirhekr740011zspkjwrwpp7o","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr750014zspkyyj7r89j"},{"post_id":"cirhekr740011zspkjwrwpp7o","tag_id":"cirhekr6y000kzspkwmrqfx1w","_id":"cirhekr750016zspkv2p2c0pi"},{"post_id":"cirhekr740011zspkjwrwpp7o","tag_id":"cirhekr6z000nzspkvf2vnlox","_id":"cirhekr750017zspk1sqsjo6b"},{"post_id":"cirhekr760018zspkwzsgprlx","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr77001bzspkxrvteris"},{"post_id":"cirhekr760018zspkwzsgprlx","tag_id":"cirhekr77001azspkicbxnk10","_id":"cirhekr78001dzspk2a6e9gry"},{"post_id":"cirhekr78001ezspktd99li2d","tag_id":"cirhekr79001gzspkgrz7eugp","_id":"cirhekr79001hzspkeudhap1w"},{"post_id":"cirhekr7a001izspkw9rjlejc","tag_id":"cirhekr7b001kzspkhvquriol","_id":"cirhekr7b001lzspkcgkrnyuw"},{"post_id":"cirhekr7c001nzspkxats5a23","tag_id":"cirhekr7e001pzspk9o214e1o","_id":"cirhekr7e001qzspkstp2gvjm"},{"post_id":"cirhekr7f001rzspkbzla9cr1","tag_id":"cirhekr7g001tzspkwy85nxq1","_id":"cirhekr7g001uzspkfhd21ujj"},{"post_id":"cirhekr7i001vzspklwj9zkoi","tag_id":"cirhekr7j001xzspkkbk8lf0o","_id":"cirhekr7j001yzspkdk2satwr"},{"post_id":"cirhekr7k001zzspkafvbxq4v","tag_id":"cirhekr7l0021zspknc1iqkaf","_id":"cirhekr7l0022zspkylmf7gxg"},{"post_id":"cirhekr7m0023zspkke4p6qie","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr7n0026zspkqlmsp6vm"},{"post_id":"cirhekr7m0023zspkke4p6qie","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekr7n0027zspkgyscf9uk"},{"post_id":"cirhekr7o0028zspkgce4n44s","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr7q002azspkjqmwjwgd"},{"post_id":"cirhekr7s002bzspkbs2gqllk","tag_id":"cirhekr7t002dzspkucz1jvl1","_id":"cirhekr7t002ezspkax1l2xy9"},{"post_id":"cirhekr7u002gzspkaplcc4wi","tag_id":"cirhekr7t002dzspkucz1jvl1","_id":"cirhekr7w002jzspkuuvelxr5"},{"post_id":"cirhekr7u002gzspkaplcc4wi","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr7w002kzspk9m4h8wie"},{"post_id":"cirhekr7u002gzspkaplcc4wi","tag_id":"cirhekr7w002izspkhyjdw2gj","_id":"cirhekr7w002lzspkvltoeydi"},{"post_id":"cirhekr7y002mzspkzy7s2u17","tag_id":"cirhekr7z002ozspk19c1l9x4","_id":"cirhekr7z002pzspk91bgtj1a"},{"post_id":"cirhekr80002rzspkn4f1ifla","tag_id":"cirhekr7z002ozspk19c1l9x4","_id":"cirhekr81002tzspkqkibz1vp"},{"post_id":"cirhekr82002uzspkcpbqll8w","tag_id":"cirhekr82002wzspk81r012ys","_id":"cirhekr83002xzspk1fswjby8"},{"post_id":"cirhekr84002yzspkw45lizry","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekr850031zspkn6y2vzjn"},{"post_id":"cirhekr860033zspk9ouwh9ux","tag_id":"cirhekr870035zspkivj4pfvl","_id":"cirhekr870037zspkfun4v9p6"},{"post_id":"cirhekr860033zspk9ouwh9ux","tag_id":"cirhekr870036zspkv57hfzx4","_id":"cirhekr880038zspktlvdfte3"},{"post_id":"cirhekr880039zspkd59y729l","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8a003czspk30l9pfn7"},{"post_id":"cirhekr880039zspkd59y729l","tag_id":"cirhekr89003bzspkmmmy5uri","_id":"cirhekr8a003dzspkfxix3vid"},{"post_id":"cirhekr8b003ezspksfk7r8zl","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr8c003gzspknxepvd38"},{"post_id":"cirhekr8f003hzspkxfyekp0a","tag_id":"cirhekr8g003jzspksgz7acsm","_id":"cirhekr8h003kzspkffkiwty6"},{"post_id":"cirhekr8j003lzspk8yqp55yh","tag_id":"cirhekr8k003nzspk42z2txxu","_id":"cirhekr8k003ozspkbscdo0r6"},{"post_id":"cirhekr8j003lzspk8yqp55yh","tag_id":"cirhekr7z002ozspk19c1l9x4","_id":"cirhekr8k003pzspkczy893ht"},{"post_id":"cirhekr8j003lzspk8yqp55yh","tag_id":"cirhekr7t002dzspkucz1jvl1","_id":"cirhekr8l003qzspk0pll2i6v"},{"post_id":"cirhekr8m003rzspkj8e6dnny","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr8n003tzspk4gu3isbx"},{"post_id":"cirhekr8m003rzspkj8e6dnny","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8n003uzspk009dpx8c"},{"post_id":"cirhekr8o003vzspkzwyajzfi","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8p003xzspko2nx7n4k"},{"post_id":"cirhekr8q003yzspkli4hh0wg","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8r0040zspktviyy6ag"},{"post_id":"cirhekr8q003yzspkli4hh0wg","tag_id":"cirhekr89003bzspkmmmy5uri","_id":"cirhekr8r0041zspk0n9fspmf"},{"post_id":"cirhekr8r0042zspkrl3x9nj5","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8t0045zspkgfeajqf4"},{"post_id":"cirhekr8r0042zspkrl3x9nj5","tag_id":"cirhekr8s0044zspkldywquja","_id":"cirhekr8t0046zspke3fdcnes"},{"post_id":"cirhekr8t0047zspkr4akaop8","tag_id":"cirhekr8u0049zspkmubjdxl5","_id":"cirhekr8v004bzspkyz0nepnt"},{"post_id":"cirhekr8t0047zspkr4akaop8","tag_id":"cirhekr8u004azspk7rvcjpr8","_id":"cirhekr8v004czspkp4vmldgn"},{"post_id":"cirhekr8v004dzspkycu40l7j","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr8w004fzspkzfw5ax1f"},{"post_id":"cirhekr8v004dzspkycu40l7j","tag_id":"cirhekr8u004azspk7rvcjpr8","_id":"cirhekr8w004gzspk783aepld"},{"post_id":"cirhekr8x004hzspknseoa8oh","tag_id":"cirhekr8y004jzspk9i1wn4sy","_id":"cirhekr8z004lzspkznzbxc9h"},{"post_id":"cirhekr8x004hzspknseoa8oh","tag_id":"cirhekr8y004kzspk14lfpqc5","_id":"cirhekr8z004mzspk5spytu0e"},{"post_id":"cirhekr8z004nzspklbto5lp9","tag_id":"cirhekr90004pzspkbjr5w840","_id":"cirhekr90004qzspkhor5pe1e"},{"post_id":"cirhekr91004szspk50p2qx5n","tag_id":"cirhekr90004pzspkbjr5w840","_id":"cirhekr92004uzspkxvxmrg1b"},{"post_id":"cirhekr93004vzspklpcrbegc","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr94004yzspkfz161u8b"},{"post_id":"cirhekr93004vzspklpcrbegc","tag_id":"cirhekr94004xzspksecctyve","_id":"cirhekr94004zzspkhh55jx93"},{"post_id":"cirhekr950050zspkbbnre529","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr960053zspkibs7wg4h"},{"post_id":"cirhekr950050zspkbbnre529","tag_id":"cirhekr950052zspkaoz6r4oj","_id":"cirhekr960054zspkyqris6a7"},{"post_id":"cirhekr970055zspkyomn1cja","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr980057zspku484xv2n"},{"post_id":"cirhekr980058zspkr53bgot7","tag_id":"cirhekr99005azspkntpbct7o","_id":"cirhekr9a005bzspkfpwlte2s"},{"post_id":"cirhekr9b005dzspktmowvocy","tag_id":"cirhekr9c005fzspk3xeyisy1","_id":"cirhekr9c005gzspkivzl082f"},{"post_id":"cirhekr9d005izspkhvu91k7l","tag_id":"cirhekr9c005fzspk3xeyisy1","_id":"cirhekr9e005kzspk6m7orw0g"},{"post_id":"cirhekr9f005lzspkorwk7uzb","tag_id":"cirhekr9c005fzspk3xeyisy1","_id":"cirhekr9g005nzspkjft3mp78"},{"post_id":"cirhekr9h005ozspk1gty0ao6","tag_id":"cirhekr9i005qzspk8el5t5w5","_id":"cirhekr9i005rzspkyyaykrey"},{"post_id":"cirhekr9i005szspk9whzo9re","tag_id":"cirhekr9j005uzspk3gs3z7q2","_id":"cirhekr9j005vzspklzer4uy6"},{"post_id":"cirhekr9o005wzspkudmpi0fk","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr9p005yzspkwau8mayd"},{"post_id":"cirhekr9q005zzspks3gpiyqh","tag_id":"cirhekr94004xzspksecctyve","_id":"cirhekr9r0061zspky2rz2aid"},{"post_id":"cirhekr9q005zzspks3gpiyqh","tag_id":"cirhekr7e001pzspk9o214e1o","_id":"cirhekr9s0062zspk1lcgku0g"},{"post_id":"cirhekr9t0063zspk266qoxnq","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekr9u0065zspk6l5wc3a1"},{"post_id":"cirhekr9t0063zspk266qoxnq","tag_id":"cirhekr94004xzspksecctyve","_id":"cirhekr9u0066zspkmlr8u7re"},{"post_id":"cirhekr9v0067zspkxcq9pzxm","tag_id":"cirhekr9w0069zspkx1ja1ifc","_id":"cirhekr9w006azspkddol0eh1"},{"post_id":"cirhekr9y006bzspk7msmqmbb","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekr9z006ezspkkusl6i1w"},{"post_id":"cirhekr9y006bzspk7msmqmbb","tag_id":"cirhekr9z006dzspktaxzgq17","_id":"cirhekr9z006fzspk5na3ysuw"},{"post_id":"cirhekra0006gzspkqn697rja","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekra1006jzspk3irvnz0y"},{"post_id":"cirhekra0006gzspkqn697rja","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekra1006kzspkd27cm5qy"},{"post_id":"cirhekra0006gzspkqn697rja","tag_id":"cirhekra1006izspkno3smkvy","_id":"cirhekra1006lzspka06qutyz"},{"post_id":"cirhekra2006mzspks9xrjz4u","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekra3006ozspky0hy8olj"},{"post_id":"cirhekra3006pzspk0ndaz7x1","tag_id":"cirhekra4006rzspkcnz2cp7k","_id":"cirhekra4006szspks085c1cz"},{"post_id":"cirhekra5006tzspk3si5xxcz","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekra6006vzspk8au8fy86"},{"post_id":"cirhekra6006wzspklt2ey81u","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekra8006zzspkllyz42o1"},{"post_id":"cirhekra6006wzspklt2ey81u","tag_id":"cirhekra7006yzspk20wk6of5","_id":"cirhekra80070zspkfb0kl55s"},{"post_id":"cirhekra80071zspkbwd6g5ba","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekra90073zspka7ywadiy"},{"post_id":"cirhekraa0075zspkpm1stlyo","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekrab0078zspkp8pr1i66"},{"post_id":"cirhekraa0075zspkpm1stlyo","tag_id":"cirhekraa0077zspkarznolp6","_id":"cirhekrab007azspk7j2e7h0r"},{"post_id":"cirhekrac007bzspkgk87j0sd","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekrad007dzspkydq3i9ks"},{"post_id":"cirhekrac007bzspkgk87j0sd","tag_id":"cirhekr99005azspkntpbct7o","_id":"cirhekrad007ezspkf2vacj0g"},{"post_id":"cirhekrae007fzspkerc7wtcv","tag_id":"cirhekraf007hzspk43mwso9m","_id":"cirhekraf007izspkt5cyp46r"},{"post_id":"cirhekrag007jzspk2p6y40wm","tag_id":"cirhekrag007lzspkztm8b55n","_id":"cirhekrah007mzspk01hrpvnn"},{"post_id":"cirhekrai007ozspkh6qq3cax","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekraj007qzspkh3rhi9i8"},{"post_id":"cirhekrak007rzspk6pk0em6c","tag_id":"cirhekral007tzspkfo6y5dzz","_id":"cirhekral007uzspk09loh0a6"},{"post_id":"cirhekrak007rzspk6pk0em6c","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekral007vzspkv898qx5a"},{"post_id":"cirhekram007wzspkuhi1las8","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekran007yzspk4qf1xuk8"},{"post_id":"cirhekran007zzspkojx5e48l","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrao0081zspk0l9wzi2a"},{"post_id":"cirhekrap0082zspk7666wroq","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekraq0084zspkrsxy12mn"},{"post_id":"cirhekrar0085zspkii3wqm53","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekras0087zspk9hwjlxnc"},{"post_id":"cirhekrat0088zspkgb940eqg","tag_id":"cirhekrav008azspkzr94ayjc","_id":"cirhekrav008bzspku4hdfylw"},{"post_id":"cirhekraw008czspkzzocg0pr","tag_id":"cirhekr8u004azspk7rvcjpr8","_id":"cirhekrax008fzspk9s8zj0xc"},{"post_id":"cirhekraw008czspkzzocg0pr","tag_id":"cirhekrax008ezspkt21klbc5","_id":"cirhekrax008gzspkpsaxn0af"},{"post_id":"cirhekray008hzspk5juthx4z","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekraz008kzspklhbrlkgc"},{"post_id":"cirhekray008hzspk5juthx4z","tag_id":"cirhekray008jzspkpf5corf8","_id":"cirhekraz008lzspk1iwjvx8r"},{"post_id":"cirhekraz008mzspk3mtm4wcz","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrb1008pzspkixqwkjnp"},{"post_id":"cirhekraz008mzspk3mtm4wcz","tag_id":"cirhekrb0008ozspk91nwt5xm","_id":"cirhekrb1008qzspk15mc01bd"},{"post_id":"cirhekrb1008rzspk5zsdsgm2","tag_id":"cirhekrb2008tzspkuc4zznka","_id":"cirhekrb3008uzspk6mbhp0pn"},{"post_id":"cirhekrb3008vzspkr9rmbn3c","tag_id":"cirhekrb4008xzspkvzznhn56","_id":"cirhekrb4008yzspk56om89i3"},{"post_id":"cirhekrb5008zzspkvtzcrars","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrb60091zspk616eh2ad"},{"post_id":"cirhekrb5008zzspkvtzcrars","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekrb60092zspkz1hz1wpy"},{"post_id":"cirhekrb5008zzspkvtzcrars","tag_id":"cirhekra1006izspkno3smkvy","_id":"cirhekrb60093zspkanc8v1sj"},{"post_id":"cirhekrb70094zspkqi7k4s8w","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrb70096zspkhis8g7nl"},{"post_id":"cirhekrb80097zspkwmvm1e0o","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekrb90099zspkkews3k70"},{"post_id":"cirhekrba009azspkgh6weluz","tag_id":"cirhekrba009czspkdv9is65g","_id":"cirhekrbb009dzspkvm13bapo"},{"post_id":"cirhekrbb009ezspk9yetaded","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbc009hzspk1phdlf7g"},{"post_id":"cirhekrbb009ezspk9yetaded","tag_id":"cirhekrbc009gzspkdih5xyjj","_id":"cirhekrbc009izspkzh8e2txj"},{"post_id":"cirhekrbd009jzspk7vltgjsx","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbe009mzspkl3k13gue"},{"post_id":"cirhekrbd009jzspk7vltgjsx","tag_id":"cirhekrbe009lzspkp9ytlvh6","_id":"cirhekrbe009nzspkyuz15sh4"},{"post_id":"cirhekrbf009ozspkjegev55v","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbg009rzspkzocx4ncg"},{"post_id":"cirhekrbf009ozspkjegev55v","tag_id":"cirhekrbg009qzspk6v3nmkbb","_id":"cirhekrbg009szspkaxxpcfvo"},{"post_id":"cirhekrbf009ozspkjegev55v","tag_id":"cirhekr77001azspkicbxnk10","_id":"cirhekrbh009tzspkwrel0eod"},{"post_id":"cirhekrbh009uzspkdwsm1fnm","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbi009yzspkbn6iop1t"},{"post_id":"cirhekrbh009uzspkdwsm1fnm","tag_id":"cirhekrbi009wzspkjw389bkx","_id":"cirhekrbj009zzspkh6u1e4wy"},{"post_id":"cirhekrbh009uzspkdwsm1fnm","tag_id":"cirhekrbi009xzspklexl6wy8","_id":"cirhekrbj00a0zspkyri5tlan"},{"post_id":"cirhekrbj00a1zspkhk1exkg4","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbl00a3zspkn7nrr6q9"},{"post_id":"cirhekrbj00a1zspkhk1exkg4","tag_id":"cirhekr89003bzspkmmmy5uri","_id":"cirhekrbl00a4zspk7szwbwdm"},{"post_id":"cirhekrbj00a1zspkhk1exkg4","tag_id":"cirhekr77001azspkicbxnk10","_id":"cirhekrbl00a5zspkmdrdovjb"},{"post_id":"cirhekrbm00a6zspkspoyryq6","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbn00a8zspkd5m00ogg"},{"post_id":"cirhekrbo00a9zspk56gz2ngb","tag_id":"cirhekrbp00abzspk8o9jahoz","_id":"cirhekrbp00aczspki7ymod4o"},{"post_id":"cirhekrbq00adzspkms592jlq","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbr00afzspk7inv92xe"},{"post_id":"cirhekrbq00adzspkms592jlq","tag_id":"cirhekrbe009lzspkp9ytlvh6","_id":"cirhekrbr00agzspk9vwvbxkf"},{"post_id":"cirhekrbs00ahzspk57dntc7d","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbt00akzspkuyekrz2u"},{"post_id":"cirhekrbs00ahzspk57dntc7d","tag_id":"cirhekr8u0049zspkmubjdxl5","_id":"cirhekrbt00alzspkim9kpw4w"},{"post_id":"cirhekrbs00ahzspk57dntc7d","tag_id":"cirhekrbt00ajzspk2uwrluni","_id":"cirhekrbt00amzspk0b005uf6"},{"post_id":"cirhekrbu00anzspk8i5p44z2","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrbw00apzspk83pweis2"},{"post_id":"cirhekrbu00anzspk8i5p44z2","tag_id":"cirhekr8u0049zspkmubjdxl5","_id":"cirhekrbw00aqzspkr38uqa2e"},{"post_id":"cirhekrbx00arzspkr6bagnt5","tag_id":"cirhekrby00atzspk4y749q71","_id":"cirhekrby00auzspkshm4ew6k"},{"post_id":"cirhekrbz00avzspkfq9js8lf","tag_id":"cirhekrc000axzspkm3kp6rvj","_id":"cirhekrc000ayzspkwd36s85l"},{"post_id":"cirhekrc100azzspkt0sa54n0","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrc200b2zspkfc0euvw0"},{"post_id":"cirhekrc100azzspkt0sa54n0","tag_id":"cirhekrc200b1zspk5sdhzftw","_id":"cirhekrc200b3zspkig36wla8"},{"post_id":"cirhekrc100azzspkt0sa54n0","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekrc200b4zspkrrki9dwe"},{"post_id":"cirhekrc300b5zspkudbi4sgg","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrc400b8zspkz3xv195d"},{"post_id":"cirhekrc300b5zspkudbi4sgg","tag_id":"cirhekrc400b7zspkrib7zps7","_id":"cirhekrc400b9zspkcw1uvplj"},{"post_id":"cirhekrc300b5zspkudbi4sgg","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekrc400bazspkzqyyiiks"},{"post_id":"cirhekrc500bbzspkluscwlco","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrc700bezspko6xc45tb"},{"post_id":"cirhekrc500bbzspkluscwlco","tag_id":"cirhekrc600bdzspk8fr413nz","_id":"cirhekrc700bfzspk6s2vigxt"},{"post_id":"cirhekrc800bgzspkju74ycr9","tag_id":"cirhekrc900bizspkjk0776tt","_id":"cirhekrca00blzspk5vz052t8"},{"post_id":"cirhekrc800bgzspkju74ycr9","tag_id":"cirhekrbe009lzspkp9ytlvh6","_id":"cirhekrca00bmzspk7t8ngo0r"},{"post_id":"cirhekrc800bgzspkju74ycr9","tag_id":"cirhekrc900bjzspkv7x3zuk6","_id":"cirhekrca00bnzspkcpsx28cm"},{"post_id":"cirhekrc800bgzspkju74ycr9","tag_id":"cirhekrc900bkzspkb1b7mmzy","_id":"cirhekrca00bozspkw5sp8c3b"},{"post_id":"cirhekrcb00bpzspk4p8e8bfo","tag_id":"cirhekrcb00brzspkpl2h2gnw","_id":"cirhekrcc00bszspkjgdaixka"},{"post_id":"cirhekrcc00btzspk0qj92pgk","tag_id":"cirhekrce00bvzspkqpr7tpmz","_id":"cirhekrce00bwzspky9dvxnhu"},{"post_id":"cirhekrcf00bxzspkezdarpzo","tag_id":"cirhekrcg00bzzspkjw0a7ocz","_id":"cirhekrch00c0zspkmeslyqbn"},{"post_id":"cirhekrci00c2zspkqtxaw13o","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrci00c4zspkc9qgdsol"},{"post_id":"cirhekrci00c2zspkqtxaw13o","tag_id":"cirhekr8u004azspk7rvcjpr8","_id":"cirhekrcj00c5zspkwmoe9old"},{"post_id":"cirhekrck00c6zspkpv74qg35","tag_id":"cirhekrcl00c8zspkj9pq0c9l","_id":"cirhekrcm00cazspk1o3gxrnp"},{"post_id":"cirhekrck00c6zspkpv74qg35","tag_id":"cirhekrcl00c9zspkpw1shr83","_id":"cirhekrcm00cbzspk7sotz8r1"},{"post_id":"cirhekrcn00cczspky6wil5ho","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrco00cfzspkrernzrlz"},{"post_id":"cirhekrcn00cczspky6wil5ho","tag_id":"cirhekrcn00cezspk81gzxmqx","_id":"cirhekrco00cgzspka9l5wyo6"},{"post_id":"cirhekrcp00chzspkyn3kw1l6","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrcq00ckzspkoob102hg"},{"post_id":"cirhekrcp00chzspkyn3kw1l6","tag_id":"cirhekrcq00cjzspk1m168vev","_id":"cirhekrcr00clzspkkt6ihrzh"},{"post_id":"cirhekrcr00cmzspkgmp1zvn8","tag_id":"cirhekrcs00cozspkgpkq21f4","_id":"cirhekrcs00cpzspkcw6st98f"},{"post_id":"cirhekrct00cqzspkhzqsnali","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrcu00ctzspk7nwpihoa"},{"post_id":"cirhekrct00cqzspkhzqsnali","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekrcu00cuzspkqjbffyoo"},{"post_id":"cirhekrct00cqzspkhzqsnali","tag_id":"cirhekrcu00cszspkj0qucimx","_id":"cirhekrcv00cvzspk2mcffb0d"},{"post_id":"cirhekrcv00cwzspkkqrw1nqz","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekrd100czzspk8rsj7jqe"},{"post_id":"cirhekrcv00cwzspkkqrw1nqz","tag_id":"cirhekrd000cyzspk458wknul","_id":"cirhekrd100d0zspk5rwtcnzg"},{"post_id":"cirhekrd200d1zspko1v3rvgy","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrd200d3zspkxz80dyz1"},{"post_id":"cirhekrd300d4zspkk4o9qbve","tag_id":"cirhekrd400d6zspkkbatwmu5","_id":"cirhekrd500dbzspk0kisapzz"},{"post_id":"cirhekrd300d4zspkk4o9qbve","tag_id":"cirhekrd400d7zspkipjhf9nn","_id":"cirhekrd600dczspkzqti5iao"},{"post_id":"cirhekrd300d4zspkk4o9qbve","tag_id":"cirhekrd400d8zspkps5neqo1","_id":"cirhekrd600ddzspkuzt56oa2"},{"post_id":"cirhekrd300d4zspkk4o9qbve","tag_id":"cirhekrd500d9zspknpwombnb","_id":"cirhekrd600dezspkw91rducj"},{"post_id":"cirhekrd300d4zspkk4o9qbve","tag_id":"cirhekrd500dazspkcdq00c54","_id":"cirhekrd600dfzspk62sxzljt"},{"post_id":"cirhekrd600dgzspkxpx49kav","tag_id":"cirhekrd700dizspko8qhopg1","_id":"cirhekrd800djzspk2qmr6x0y"},{"post_id":"cirhekrd800dkzspka4ffw1b6","tag_id":"cirhekrd900dmzspkn2jplik2","_id":"cirhekrda00dnzspkn5te5jne"},{"post_id":"cirhekrda00dpzspky6imz5xm","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrdc00drzspkjmalttc4"},{"post_id":"cirhekrda00dpzspky6imz5xm","tag_id":"cirhekrbe009lzspkp9ytlvh6","_id":"cirhekrdc00dszspkce0ex221"},{"post_id":"cirhekrdc00dtzspk0u88mo9k","tag_id":"cirhekrdd00dvzspkyof01yrf","_id":"cirhekrde00dwzspkmof8whri"},{"post_id":"cirhekrde00dxzspktzjbjxr1","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrdg00dzzspkfpwqr6fb"},{"post_id":"cirhekrdh00e0zspkr9z6d6ig","tag_id":"cirhekrdd00dvzspkyof01yrf","_id":"cirhekrdi00e2zspkaljn28id"},{"post_id":"cirhekrdj00e3zspk2t7s26jq","tag_id":"cirhekrdk00e5zspkutl3kwyw","_id":"cirhekrdl00e6zspkju7r8xj8"},{"post_id":"cirhekrdl00e7zspk9fpk0ded","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrdm00e9zspko3603qwh"},{"post_id":"cirhekrdn00eazspkr04d6gep","tag_id":"cirhekrdo00eczspkilh5zewj","_id":"cirhekrdo00edzspkld0gpdzg"},{"post_id":"cirhekrdp00eezspkh10l8lfr","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrdq00ehzspkmiujdam7"},{"post_id":"cirhekrdp00eezspkh10l8lfr","tag_id":"cirhekrdq00egzspkj2ri8fin","_id":"cirhekrdq00eizspkj19lf4f0"},{"post_id":"cirhekrdp00eezspkh10l8lfr","tag_id":"cirhekr77001azspkicbxnk10","_id":"cirhekrdq00ejzspk363d9cfk"},{"post_id":"cirhekrdr00ekzspkaoz4r542","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrds00emzspkmisjv4x5"},{"post_id":"cirhekrdr00ekzspkaoz4r542","tag_id":"cirhekrbe009lzspkp9ytlvh6","_id":"cirhekrds00enzspkamrq3vb7"},{"post_id":"cirhekrdt00eozspkzxkp6umy","tag_id":"cirhekrdu00eqzspkl7dj2n86","_id":"cirhekrdv00erzspkufou3fpu"},{"post_id":"cirhekrdv00eszspkcw2y67rb","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekrdw00euzspkfcmz6tpq"},{"post_id":"cirhekrdx00evzspkflfalef8","tag_id":"cirhekrdy00exzspkf7bbclt0","_id":"cirhekrdy00eyzspkh6pddhba"},{"post_id":"cirhekrdz00ezzspkr2y4lfi8","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekre000f1zspkoruia3ho"},{"post_id":"cirhekre100f2zspktjr7u8su","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekre200f4zspkd0wbg92d"},{"post_id":"cirhekre300f5zspkelf2ohow","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekre400f7zspkwchb9cyk"},{"post_id":"cirhekre300f5zspkelf2ohow","tag_id":"cirhekr8k003nzspk42z2txxu","_id":"cirhekre400f8zspky4ti86sw"},{"post_id":"cirhekre500f9zspkexapos0m","tag_id":"cirhekr6w000fzspkpr1d4mlh","_id":"cirhekre600fbzspkzy9hxsh1"},{"post_id":"cirhekre700fczspkrasfp2kl","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekre800fezspknop5xgvi"},{"post_id":"cirhekre900ffzspkg2u2wekf","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekrea00fhzspkzccqzbjx"},{"post_id":"cirhekre900ffzspkg2u2wekf","tag_id":"cirhekrcu00cszspkj0qucimx","_id":"cirhekrea00fizspky9be5hdv"},{"post_id":"cirhekreb00fjzspk6zs5tgmu","tag_id":"cirhekrec00flzspks7h7cfwq","_id":"cirhekred00fmzspkbeyra2ve"},{"post_id":"cirhekree00fnzspk6udrqvxu","tag_id":"cirhekrec00flzspks7h7cfwq","_id":"cirhekref00fpzspk70bnfcp3"},{"post_id":"cirhekreg00fqzspkzt0mq58w","tag_id":"cirhekr750013zspkjxled8et","_id":"cirhekreh00ftzspkn5p7e1g5"},{"post_id":"cirhekreg00fqzspkzt0mq58w","tag_id":"cirhekreh00fszspk47ot6omo","_id":"cirhekreh00fuzspkv6awhl9t"},{"post_id":"cirhekreg00fqzspkzt0mq58w","tag_id":"cirhekr850030zspkyu5bsfot","_id":"cirhekreh00fvzspk9ysrka73"},{"post_id":"cirhekrej00fwzspkghq1ymbx","tag_id":"cirhekrek00fyzspkr0h757w1","_id":"cirhekrek00fzzspk2zw4spjx"},{"post_id":"cirhekrel00g0zspkom6sps2p","tag_id":"cirhekrem00g2zspkzay5j97m","_id":"cirhekrem00g3zspk6nmoq6mc"},{"post_id":"cirhekren00g4zspkq86om11y","tag_id":"cirhekreo00g6zspk5fp6licc","_id":"cirhekreo00g7zspkhd45kvsm"},{"post_id":"cirhekrep00g8zspkxvx1ihao","tag_id":"cirhekreo00g6zspk5fp6licc","_id":"cirhekreq00gazspkrenndmsk"},{"post_id":"cirhekrer00gbzspk1cm7c7no","tag_id":"cirhekret00gdzspkjzlh2io6","_id":"cirhekret00gezspkk52h59fh"},{"post_id":"cirhekrez00ghzspki4wwfqsr","tag_id":"cirhekr7n0025zspkv9ckrcss","_id":"cirhekrf100gkzspk62f6ujmo"},{"post_id":"cirhekrez00ghzspki4wwfqsr","tag_id":"cirhekrf100gjzspk2ynap7cs","_id":"cirhekrf100glzspkvb4rqr04"}],"Tag":[{"name":"zxing","_id":"cirhekr6s000azspkexsk1pc2"},{"name":"Life","_id":"cirhekr6w000fzspkpr1d4mlh"},{"name":"XMPP","_id":"cirhekr6y000kzspkwmrqfx1w"},{"name":"Smack","_id":"cirhekr6y000lzspkk5lbegga"},{"name":"openfire","_id":"cirhekr6z000nzspkvf2vnlox"},{"name":"Android","_id":"cirhekr750013zspkjxled8et"},{"name":"WeiYan","_id":"cirhekr77001azspkicbxnk10"},{"name":"weilian","_id":"cirhekr79001gzspkgrz7eugp"},{"name":"uCrop","_id":"cirhekr7b001kzspkhvquriol"},{"name":"Toolbar","_id":"cirhekr7e001pzspk9o214e1o"},{"name":"shengmingzhiyuan","_id":"cirhekr7g001tzspkwy85nxq1"},{"name":"Shape","_id":"cirhekr7j001xzspkkbk8lf0o"},{"name":"Service","_id":"cirhekr7l0021zspknc1iqkaf"},{"name":"Android Studio","_id":"cirhekr7n0025zspkv9ckrcss"},{"name":"RxJava","_id":"cirhekr7t002dzspkucz1jvl1"},{"name":"RxBus","_id":"cirhekr7w002izspkhyjdw2gj"},{"name":"Retrofit","_id":"cirhekr7z002ozspk19c1l9x4"},{"name":"qinziyouwan","_id":"cirhekr82002wzspk81r012ys"},{"name":"github","_id":"cirhekr850030zspkyu5bsfot"},{"name":"Processes","_id":"cirhekr870035zspkivj4pfvl"},{"name":"Threads","_id":"cirhekr870036zspkv57hfzx4"},{"name":"SQLite","_id":"cirhekr89003bzspkmmmy5uri"},{"name":"Happy","_id":"cirhekr8g003jzspksgz7acsm"},{"name":"MVP","_id":"cirhekr8k003nzspk42z2txxu"},{"name":"Video","_id":"cirhekr8s0044zspkldywquja"},{"name":"RecyclerView","_id":"cirhekr8u0049zspkmubjdxl5"},{"name":"ListView","_id":"cirhekr8u004azspk7rvcjpr8"},{"name":"lambda","_id":"cirhekr8y004jzspk9i1wn4sy"},{"name":"retrolambda","_id":"cirhekr8y004kzspk14lfpqc5"},{"name":"jcenter","_id":"cirhekr90004pzspkbjr5w840"},{"name":"Fragment","_id":"cirhekr94004xzspksecctyve"},{"name":"jarsigner","_id":"cirhekr950052zspkaoz6r4oj"},{"name":"hexo","_id":"cirhekr99005azspkntpbct7o"},{"name":"Gradle","_id":"cirhekr9c005fzspk3xeyisy1"},{"name":"gradle","_id":"cirhekr9i005qzspk8el5t5w5"},{"name":"goufangche","_id":"cirhekr9j005uzspk3gs3z7q2"},{"name":"emulator","_id":"cirhekr9w0069zspkx1ja1ifc"},{"name":"git","_id":"cirhekr9z006dzspktaxzgq17"},{"name":"App","_id":"cirhekra1006izspkno3smkvy"},{"name":"contact","_id":"cirhekra4006rzspkcnz2cp7k"},{"name":"Permission","_id":"cirhekra7006yzspk20wk6of5"},{"name":"jekyll","_id":"cirhekraa0077zspkarznolp6"},{"name":"boentang","_id":"cirhekraf007hzspk43mwso9m"},{"name":"NightTheme","_id":"cirhekrag007lzspkztm8b55n"},{"name":"SDK","_id":"cirhekral007tzspkfo6y5dzz"},{"name":"async-http","_id":"cirhekrav008azspkzr94ayjc"},{"name":"addHeaderView","_id":"cirhekrax008ezspkt21klbc5"},{"name":"WeWin","_id":"cirhekray008jzspkpf5corf8"},{"name":"Volley","_id":"cirhekrb0008ozspk91nwt5xm"},{"name":"ViewDragHelper","_id":"cirhekrb2008tzspkuc4zznka"},{"name":"Animation","_id":"cirhekrb4008xzspkvzznhn56"},{"name":"TabLayout","_id":"cirhekrba009czspkdv9is65g"},{"name":"Sqlite","_id":"cirhekrbc009gzspkdih5xyjj"},{"name":"Canvas","_id":"cirhekrbe009lzspkp9ytlvh6"},{"name":"PopupWindow","_id":"cirhekrbg009qzspk6v3nmkbb"},{"name":"Actionbar","_id":"cirhekrbi009wzspkjw389bkx"},{"name":"SearchView","_id":"cirhekrbi009xzspklexl6wy8"},{"name":"RuntimePermission","_id":"cirhekrbp00abzspk8o9jahoz"},{"name":"CardView","_id":"cirhekrbt00ajzspk2uwrluni"},{"name":"SharedPreferences","_id":"cirhekrby00atzspk4y749q71"},{"name":"PioneeringRoad","_id":"cirhekrc000axzspkm3kp6rvj"},{"name":"Picasso","_id":"cirhekrc200b1zspk5sdhzftw"},{"name":"PhotoView","_id":"cirhekrc400b7zspkrib7zps7"},{"name":"Palette","_id":"cirhekrc600bdzspk8fr413nz"},{"name":"Paint","_id":"cirhekrc900bizspkjk0776tt"},{"name":"PorterDuffXfermode","_id":"cirhekrc900bjzspkv7x3zuk6"},{"name":"Shader","_id":"cirhekrc900bkzspkb1b7mmzy"},{"name":"NavigationView","_id":"cirhekrcb00brzspkpl2h2gnw"},{"name":"code","_id":"cirhekrce00bvzspkqpr7tpmz"},{"name":"MotionEvent","_id":"cirhekrcg00bzzspkjw0a7ocz"},{"name":"LinearGradient","_id":"cirhekrcl00c8zspkj9pq0c9l"},{"name":"TextView","_id":"cirhekrcl00c9zspkpw1shr83"},{"name":"LayoutParams","_id":"cirhekrcn00cezspk81gzxmqx"},{"name":"LayoutInflate","_id":"cirhekrcq00cjzspk1m168vev"},{"name":"Intent","_id":"cirhekrcs00cozspkgpkq21f4"},{"name":"Genymotion","_id":"cirhekrcu00cszspkj0qucimx"},{"name":"Font-Awesome","_id":"cirhekrd000cyzspk458wknul"},{"name":"Drawable","_id":"cirhekrd400d6zspkkbatwmu5"},{"name":"Bitmap","_id":"cirhekrd400d7zspkipjhf9nn"},{"name":"String","_id":"cirhekrd400d8zspkps5neqo1"},{"name":"InputStream","_id":"cirhekrd500d9zspknpwombnb"},{"name":"byte","_id":"cirhekrd500dazspkcdq00c54"},{"name":"DragView","_id":"cirhekrd700dizspko8qhopg1"},{"name":"DesignSupportLibrary","_id":"cirhekrd900dmzspkn2jplik2"},{"name":"CustomView","_id":"cirhekrdd00dvzspkyof01yrf"},{"name":"CoordinatorLayout","_id":"cirhekrdk00e5zspkutl3kwyw"},{"name":"CollapsingToolbarLayout","_id":"cirhekrdo00eczspkilh5zewj"},{"name":"Theme","_id":"cirhekrdq00egzspkj2ri8fin"},{"name":"BroadcastReceiver","_id":"cirhekrdu00eqzspkl7dj2n86"},{"name":"Animator","_id":"cirhekrdy00exzspkf7bbclt0"},{"name":"Camera，Album","_id":"cirhekrec00flzspks7h7cfwq"},{"name":"Iconics","_id":"cirhekreh00fszspk47ot6omo"},{"name":"AD","_id":"cirhekrek00fyzspkr0h757w1"},{"name":"Activity","_id":"cirhekrem00g2zspkzay5j97m"},{"name":"key word","_id":"cirhekreo00g6zspk5fp6licc"},{"name":"Toast","_id":"cirhekret00gdzspkjzlh2io6"},{"name":"红杏","_id":"cirhekrf100gjzspk2ynap7cs"}]}}